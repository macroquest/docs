{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Welcome to the MacroQuest Documentation.</p> <p>Note</p> <p>This documentation is a work in progress. Please help us by contributing updates and corrections!</p>"},{"location":"#about-macroquest","title":"About MacroQuest","text":"<p>MacroQuest, also known as MQ, or most recently MQNext, is the next generation in development of the platform for the customization and automation of EverQuest.  MacroQuest is, and has always been, open source software.</p> <p>MacroQuest is as useful as you wish to make it. You can utilize it just for the capabilities of the map and other plugins, or you can further enhance EverQuest through the use of lua scripts, macros, or designing your own plugin.</p> <p>However, there are some issues you need to understand:</p> <ul> <li>First and foremost, the use of MacroQuest is a violation of the EULA of EverQuest.</li> <li>This means that if you use MacroQuest, you risk your account being suspended for a period of time, or in extreme cases, having your account(s) permanently banned.</li> </ul> <p>If you are not prepared for such circumstances, stop here and do not continue.</p> <p>MacroQuest does not run out of the box! It requires you to build it.</p>"},{"location":"#macroquest","title":"MacroQuest","text":"<ul> <li>Getting Started</li> <li>Building MacroQuest</li> <li>Macros/Snippets</li> <li>Lua</li> <li>Plugins</li> </ul>"},{"location":"#getting-help","title":"Getting Help","text":"<ul> <li>Discord</li> <li>MQ Macro/Snippet Problems</li> <li>MQ Plugin Problems</li> </ul>"},{"location":"#references","title":"References","text":"<ul> <li>Macro Reference</li> <li>Hacker Stuff</li> <li>Text Editors and Syntax Files</li> </ul>"},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#tag:command","title":"command","text":"<ul> <li>            /aa          </li> <li>            /advloot          </li> <li>            /alert          </li> <li>            /alias          </li> <li>            /altkey          </li> <li>            /banklist          </li> <li>            /beep          </li> <li>            /beepontells          </li> <li>            /benchmark          </li> <li>            /bind          </li> <li>            /break          </li> <li>            /buyitem          </li> <li>            /cachedbuffs          </li> <li>            /call          </li> <li>            /caption          </li> <li>            /captioncolor          </li> <li>            /cast          </li> <li>            /cecho          </li> <li>            /char          </li> <li>            /classhud          </li> <li>            /cleanup          </li> <li>            /clearerrors          </li> <li>            /click          </li> <li>            /combine          </li> <li>            /continue          </li> <li>            /convertitem          </li> <li>            /crash          </li> <li>            /ctrlkey          </li> <li>            /custombind          </li> <li>            /declare          </li> <li>            /defaulthud          </li> <li>            /delay          </li> <li>            /deletevar          </li> <li>            /destroy          </li> <li>            /doability          </li> <li>            /docommand          </li> <li>            /doevents          </li> <li>            /doors          </li> <li>            /doortarget          </li> <li>            /dosocial          </li> <li>            /drop          </li> <li>            /dumpbinds          </li> <li>            /dumpstack          </li> <li>            /echo          </li> <li>            /endmacro          </li> <li>            /engine          </li> <li>            /eqtarget          </li> <li>            /exec          </li> <li>            /executelink          </li> <li>            /face          </li> <li>            /filter          </li> <li>            /flashontells          </li> <li>            /for          </li> <li>            /foreground          </li> <li>            /framelimiter          </li> <li>            /getwintitle          </li> <li>            /goto          </li> <li>            /help          </li> <li>            /highlight          </li> <li>            /hotbutton          </li> <li>            /hud          </li> <li>            /i          </li> <li>            /iconnect          </li> <li>            /identify          </li> <li>            /if          </li> <li>            /ini          </li> <li>            /inote          </li> <li>            /insertaug          </li> <li>            /invoke          </li> <li>            /istatus          </li> <li>            /itemnotify          </li> <li>            /items          </li> <li>            /itemslots          </li> <li>            /itemtarget          </li> <li>            /keepkeys          </li> <li>            /keypress          </li> <li>            /listmacros          </li> <li>            /loadcfg          </li> <li>            /loadhud          </li> <li>            /loadspells          </li> <li>            /location          </li> <li>            /loginname          </li> <li>            /look          </li> <li>            /lootall          </li> <li>            /lootnodrop          </li> <li>            /macro          </li> <li>            /makemevisible          </li> <li>            /mapclick          </li> <li>            /mapfilter          </li> <li>            /maphide          </li> <li>            /mapnames          </li> <li>            /mapshow          </li> <li>            /memspell          </li> <li>            /mercswitch          </li> <li>            /mouseto          </li> <li>            /mqanon          </li> <li>            /mqclear          </li> <li>            /mqconsole          </li> <li>            /mqcopylayout          </li> <li>            /mqfont          </li> <li>            /mqlistmodules          </li> <li>            /mqlistprocesses          </li> <li>            /mqlog          </li> <li>            /mqmin          </li> <li>            /mqoverlay          </li> <li>            /mqpause          </li> <li>            /mqsettings          </li> <li>            /mqtarget          </li> <li>            /msgbox          </li> <li>            /multiline          </li> <li>            /netstatusxpos          </li> <li>            /netstatusypos          </li> <li>            /next          </li> <li>            /no          </li> <li>            /nomodkey          </li> <li>            /noparse          </li> <li>            /notify          </li> <li>            /pet          </li> <li>            /pickzone          </li> <li>            /plugin          </li> <li>            /popcustom          </li> <li>            /popup          </li> <li>            /popupecho          </li> <li>            /profile          </li> <li>            /quit          </li> <li>            /ranged          </li> <li>            /reloadui          </li> <li>            /removeaug          </li> <li>            /removeaura          </li> <li>            /removebuff          </li> <li>            /removelev          </li> <li>            /removepetbuff          </li> <li>            /return          </li> <li>            /screenmode          </li> <li>            /selectitem          </li> <li>            /sellitem          </li> <li>            /setautorun          </li> <li>            /seterror          </li> <li>            /setprio          </li> <li>            /setwintitle          </li> <li>            /shiftkey          </li> <li>            /skills          </li> <li>            /spellslotinfo          </li> <li>            /spew          </li> <li>            /squelch          </li> <li>            /target          </li> <li>            /taskquit          </li> <li>            /telnet          </li> <li>            /timed          </li> <li>            /timestamp          </li> <li>            /tloc          </li> <li>            /unload          </li> <li>            /useitem          </li> <li>            /usercamera          </li> <li>            /varcalc          </li> <li>            /vardata          </li> <li>            /varset          </li> <li>            /where          </li> <li>            /while          </li> <li>            /who          </li> <li>            /whofilter          </li> <li>            /whotarget          </li> <li>            /windows          </li> <li>            /windowstate          </li> <li>            /yes          </li> <li>            /zonehud          </li> </ul>"},{"location":"tags/#tag:datatype","title":"datatype","text":"<ul> <li>            DataType:FPS          </li> <li>            DataType:bazaar          </li> <li>            DataType:bazaaritem          </li> <li>            MQ2EQIM:DataType:buddy          </li> <li>            MQ2IRC:DataType:irc          </li> <li>            achievement          </li> <li>            achievementcat          </li> <li>            achievementobj          </li> <li>            altability          </li> <li>            argb          </li> <li>            array          </li> <li>            augtype          </li> <li>            auratype          </li> <li>            bandolier          </li> <li>            bank          </li> <li>            body          </li> <li>            bool          </li> <li>            buff          </li> <li>            byte          </li> <li>            cachedbuff          </li> <li>            character          </li> <li>            charselectlist          </li> <li>            class          </li> <li>            corpse          </li> <li>            currentzone          </li> <li>            deity          </li> <li>            double          </li> <li>            dynamiczone          </li> <li>            dzmember          </li> <li>            dztimer          </li> <li>            everquest          </li> <li>            evolving          </li> <li>            fellowship          </li> <li>            fellowshipmember          </li> <li>            float          </li> <li>            framelmiter          </li> <li>            ground          </li> <li>            group          </li> <li>            groupmember          </li> <li>            heading          </li> <li>            hotbuttonwindow          </li> <li>            ini          </li> <li>            inifile          </li> <li>            inifilesection          </li> <li>            inifilesectionkey          </li> <li>            int          </li> <li>            int64          </li> <li>            inventory          </li> <li>            invslot          </li> <li>            invslotwindow          </li> <li>            item          </li> <li>            itemspell          </li> <li>            keyring          </li> <li>            keyringitem          </li> <li>            macro          </li> <li>            macroquest          </li> <li>            math          </li> <li>            mercenary          </li> <li>            merchant          </li> <li>            pet          </li> <li>            plugin          </li> <li>            race          </li> <li>            raid          </li> <li>            raidmember          </li> <li>            range          </li> <li>            skill          </li> <li>            social          </li> <li>            spawn          </li> <li>            spell          </li> <li>            string          </li> <li>            switch          </li> <li>            target          </li> <li>            task          </li> <li>            taskmember          </li> <li>            taskobjective          </li> <li>            ticks          </li> <li>            time          </li> <li>            timer          </li> <li>            timestamp          </li> <li>            tradeskilldepot          </li> <li>            type          </li> <li>            window          </li> <li>            worldlocation          </li> <li>            xtarget          </li> <li>            zone          </li> </ul>"},{"location":"tags/#tag:lua","title":"lua","text":"<ul> <li>            Lua Events and Binds          </li> <li>            LuaRocks Modules          </li> <li>            MacroScript to Lua          </li> </ul>"},{"location":"tags/#tag:macro","title":"macro","text":"<ul> <li>            AAPurchase.inc          </li> <li>            Advanced Fishing          </li> <li>            Afcleric.mac - nils          </li> <li>            AutoBot.mac          </li> <li>            AutoBot.mac-V4.28+          </li> <li>            Barter          </li> <li>            Cleric.mac - nytemyst          </li> <li>            Clockwork Grease Maker          </li> <li>            DRShmbot          </li> <li>            Defense.inc          </li> <li>            GemOpt.inc          </li> <li>            GenBot          </li> <li>            Group Language Trainer          </li> <li>            Guild Buff Bot          </li> <li>            Loot Any Corpse          </li> <li>            ModBot          </li> <li>            Modbot 4.0          </li> <li>            Necro Helper          </li> <li>            Ninjadvloot.inc          </li> <li>            Puller.inc          </li> <li>            QuickBeg.inc          </li> <li>            RDCommon.ini          </li> <li>            Related Include Files          </li> <li>            Rogue Helper          </li> <li>            Rogue Helper Command List          </li> <li>            Script Examples          </li> <li>            Sk.mac - nytemyst          </li> <li>            Snare          </li> <li>            Spell Routines.inc          </li> <li>            Spell Skill Trainer          </li> <li>            Wait4Rez.inc          </li> </ul>"},{"location":"tags/#tag:plugin","title":"plugin","text":"<ul> <li>            MQ2AdvPath          </li> <li>            MQ2AutoLogin          </li> <li>            MQ2Bzsrch          </li> <li>            MQ2Chat          </li> <li>            MQ2ChatWnd          </li> <li>            MQ2CustomBinds          </li> <li>            MQ2EQBugFix          </li> <li>            MQ2EQIM          </li> <li>            MQ2FPS          </li> <li>            MQ2HUD          </li> <li>            MQ2IRC          </li> <li>            MQ2ItemDisplay          </li> <li>            MQ2Labels          </li> <li>            MQ2Map          </li> <li>            MQ2Telnet          </li> <li>            MQ2Web          </li> </ul>"},{"location":"tags/#tag:tlo","title":"tlo","text":"<ul> <li>            Achievement          </li> <li>            AdvLoot          </li> <li>            Alert          </li> <li>            Alias          </li> <li>            AltAbility          </li> <li>            Bool          </li> <li>            Corpse          </li> <li>            Cursor          </li> <li>            Defined          </li> <li>            DisplayItem          </li> <li>            DoorTarget          </li> <li>            DynamicZone          </li> <li>            EverQuest          </li> <li>            Familiar          </li> <li>            FindItem          </li> <li>            FindItemBank          </li> <li>            FindItemBankCount          </li> <li>            FindItemCount          </li> <li>            Float          </li> <li>            FrameLimiter          </li> <li>            Friends          </li> <li>            GameTime          </li> <li>            Ground          </li> <li>            GroundItemCount          </li> <li>            Group          </li> <li>            Heading          </li> <li>            If          </li> <li>            Illusion          </li> <li>            Ini          </li> <li>            Int          </li> <li>            InvSlot          </li> <li>            Inventory          </li> <li>            ItemTarget          </li> <li>            LastSpawn          </li> <li>            LineOfSight          </li> <li>            Macro          </li> <li>            MacroQuest          </li> <li>            Math          </li> <li>            Me          </li> <li>            Mercenary          </li> <li>            Merchant          </li> <li>            Mount          </li> <li>            NearestSpawn          </li> <li>            Pet          </li> <li>            Plugin          </li> <li>            Raid          </li> <li>            Range          </li> <li>            Select          </li> <li>            SelectedItem          </li> <li>            Skill          </li> <li>            Social          </li> <li>            Spawn          </li> <li>            SpawnCount          </li> <li>            Spell          </li> <li>            Switch          </li> <li>            TLO:Bazaar          </li> <li>            TLO:FPS          </li> <li>            TLO:Irc          </li> <li>            Target          </li> <li>            Task          </li> <li>            Time          </li> <li>            TradeskillDepot          </li> <li>            Type          </li> <li>            Window          </li> <li>            Zone          </li> </ul>"},{"location":"lua/","title":"Lua Scripting in MacroQuest","text":"<p>Lua is in general a robust language with a multitude of tutorials and resources widely available:</p> <ul> <li>Main Lua Page with getting started and documentation</li> <li>Programming in Lua</li> <li>Tutorials Point</li> <li>MQ definitions VSCode Extension - This is all now wrapped up in a nice tidy extension.<ul> <li>MQ definitions (GitHub Repo)</li> </ul> </li> </ul> <p>I won't cover language conventions or features, just mention that mq2lua is built on LuaJIT 2.1.0 if you need to know the specific flavor.</p>"},{"location":"lua/#command-reference","title":"Command Reference","text":"<pre><code>/lua [COMMAND] {OPTIONS}\nMQ2Lua: A lua script binding plugin.\n\nrun -- run lua script from file location\nparse -- parse a lua string with an available mq namespace\nstop -- stop one or all running lua scripts\npause -- pause one or all running lua scripts\nconf -- set or view configuration variable\nreloadconf -- reload configuration\nps -- ps-like process listing\ninfo -- info for a process\n-h, -?, help -- displays this help text\n</code></pre> <ul> <li>run<ul> <li>the first argument is a script name (.lua is optional)</li> <li>additional arguments will be passed as arguments to the script parse</li> <li>all arguments will be interpreted as a lua script (via <code>loadstring</code>)</li> <li>the mq namespace is provided for you (as <code>mq</code>)</li> </ul> </li> <li>stop<ul> <li>no argument will stop all running scripts</li> <li>will accept script name or PID as an argument to stop individual scripts</li> </ul> </li> <li>pause<ul> <li>no argument will attempt to pause or resume all running scripts<ul> <li>if all scripts are paused or resumed, will toggle state on all of them</li> <li>otherwise, will just pause any running scripts</li> </ul> </li> <li>will accept script name or PID as an argument to pause or resume individual scripts</li> </ul> </li> <li>conf<ul> <li>arguments are option and value</li> <li>if only option is specified, will just echo the value</li> </ul> </li> <li>reloadconf<ul> <li>just reloads the config after it has been edited</li> </ul> </li> <li>ps<ul> <li>provides a table of processes with a quick status</li> <li>takes a list of statuses to filter the list (<code>STARTING</code>, <code>RUNNING</code>, <code>PAUSED</code>, <code>EXITED</code>)</li> <li>defaults to listing <code>RUNNING</code> and <code>PAUSED</code> scripts</li> </ul> </li> <li>info<ul> <li>displays detailed information about the status of a script</li> <li>takes a PID or a script name</li> <li>defaults to an unfiltered ps list when no script is specified</li> </ul> </li> </ul>"},{"location":"lua/#tlo-datatypes","title":"TLO &amp; Datatypes","text":"<p>One new TLO is provided, <code>Lua</code>. This is a transparent accessor to the new <code>lua</code> datatype, and takes no index because it is a global state. The new datatypes (and their members) are as follows:</p> <ul> <li>lua</li> <li>PIDs (string) - a comma-delimited list of integer PIDs that have info to access</li> <li>Dir (string) - the base lua scripts directory</li> <li>Turbo (int) - the turbo value</li> <li>RequirePaths (string) - the semicolon-delimited value for lua require search paths</li> <li>CRequirePaths (string) - the semicolon-delimited value for dll require search paths</li> <li>Script (luainfo) - the accessor to get info on individual scripts. Accepts a PID as an index, or will default to the last executed script that has finished running.</li> <li>luainfo (accessed using the Script accessor above)</li> <li>PID (int)- the PID of the running or most recently executed version of this script</li> <li>Name (string) - the name of the script</li> <li>Path (string) - the full path of the script</li> <li>Arguments (string) - a comma delimited list of arguments passed to the script</li> <li>StartTime (string) - The time the most recent execution of the script was started</li> <li>EndTime (string) - The time the most recent execution of the script ended or NULL if the script has not ended</li> <li>ReturnCount (int) - The number of returns from the script, will be 0 if the script has not ended</li> <li>Return (string) - if not indexed, a comma-delimited list of return values. Accepts an integer index to get a single return value if there is more than one</li> <li>Status (string) - The execution status of the script</li> </ul>"},{"location":"lua/#first-script-step","title":"First Script Step","text":"<p>The first thing to do when writing a lua script for MQ2 is to <code>require('mq')</code>. The 'mq' package is built into the plugin and is what provides access to all of the lua-mq bridge bindings. Everything that binds lua to mq is going to be accessed like <code>mq.something</code>, with one exception. The single exception is that the built-in lua function <code>print()</code> has been redirected to write to the mq chat. Special functions provided at the base level are:</p> <code>print('string')</code> as noted before <code>mq.delay(val, --[[optional]]callback)</code> where val can be an integer (which denotes milliseconds of delay) or a string that ends in 's' 'm' or 'ms' to have delays with human readable durations. The callback is optinal and is a function which evaluates to true or false to decide whether to end the delay early. <code>mq.join(args...)</code> where args must be convertible to string inside lua. This will join all the arguments into a single string <code>mq.exit()</code> force exits the script, ignoring the normal lua return flow <code>mq.bind('/command', callback)</code> where the callback is a lua function to execute when the user enters <code>/command</code> <code>mq.unbind('/command')</code> un-binds the command so that it will no longer function <code>mq.event('name', 'matcher text', callback)</code> where the callback is a lua function to execute when the text matching the matcher is detected <code>mq.unevent('name')</code> unregisters the event 'name' so that it won't react to the text anymore <code>mq.doevents(optional 'event')</code> will process queued events (binds don't queue, they execute automatically, this is only for events).  No arguments will process all events in the queue, and optionally you can pass in a single event that you wish to process and all other events will remain queued(but not flushed). <code>mq.flushevents(optional 'event')</code> clears all events in the queue without processing them.  No arguments will flush all events in the queue, and optionally you can pass in a single event that you wish to flush. <code>mq.parse(string)</code> runs the string through the macro parser and returns the result as a string (regardles of the data type returned).  This is not a replacement for mq.TLO or mq.TLO.MacroVariable and is only for complex operations where neither of those will work (generally converting from old ini/macro formats) <code>mq.TLO</code> noted in TLO Bindings below <code>mq.cmd</code> and <code>mq.cmdf</code> noted in Command Bindings below <code>mq.imgui</code> noted in ImGui Bindings below"},{"location":"lua/#lua-bindings","title":"Lua Bindings","text":""},{"location":"lua/#tlo-bindings","title":"TLO Bindings","text":"<p>TLOs are the same as macro TLOs, just accessed via the lua API. The reason for exposing these is to allow a quick conversion from macros directly into lua. The quick rules to convert are as follows:</p> <ol> <li>Remove the <code>${}</code></li> <li>prepend the expression with <code>mq.TLO.</code></li> <li>replace all <code>[]</code> with <code>()</code></li> <li>wrap all strings with quotes (double or single, it doesn't matter)</li> <li>append <code>()</code> to the end to finally bring the result into lua</li> </ol> <p>For example, let's take the macro data value of <code>${Me.Buff[Spirit of Wolf].ID}</code>. To convert this into lua following the steps, you get this:</p> <ol> <li><code>Me.Buff[Spirit of Wolf].ID</code></li> <li><code>mq.TLO.Me.Buff[Spirit of Wolf].ID</code></li> <li><code>mq.TLO.Me.Buff(Spirit of Wolf).ID</code></li> <li><code>mq.TLO.Me.Buff('Spirit of Wolf').ID</code></li> <li><code>mq.TLO.Me.Buff('Spirit of Wolf').ID()</code></li> </ol> <p>Something in particular to note. While things like <code>mq.TLO.Math</code> and <code>mq.TLO.SomeString.Equals</code> will work, it would be much better if you just bring those types into lua and do lua operations on them. so do <code>mq.TLO.SomeString() == 'thatstring'</code> or instead of <code>mq.TLO.Math('1 + 1')</code> just do <code>1 + 1</code>. Take advantage of the medium!</p>"},{"location":"lua/#command-bindings","title":"Command Bindings","text":"<p>This binding allows you to pass commands to EQ. It is very dumb in that it can take any value, and will just prepend a <code>/</code> in front of it and send it to the EQ parser. Any arguments passed to it are stringified (in lua), concatenated (with a space delimiter), and sent as part of the command. So for instance, <code>mq.cmd('/who all fred')</code> will end up getting passed to EQ as <code>/who all fred</code>. You can also use cmdf to provide a format string: <code>mq.cmdf('/who all %s', someStringValue)</code></p>"},{"location":"lua/#imgui-bindings","title":"ImGui Bindings","text":"<p>ImGui is a feature that lua supports that has no equivalent in the macro world. For full listing of bindings, it is best to check the ImGui Definitions in the mq-definitionsrepository.</p> <p>To use imgui, you must register a callback using <code>mq.imgui.init('name', callback)</code>. The callback will be a function that will be called every imgui update, and will usually be the code to render your imgui windows. To remove the callback, you can use <code>mq.imgui.destroy('name')</code> and the callback will unregister and no longer render on imgui updates.</p>"},{"location":"lua/#events-and-binds","title":"Events and Binds","text":"<p>As alluded to earlier, lua supports events and binds similar to the macro language. The details of how to use them are documented here.</p>"},{"location":"lua/#including-modules","title":"Including Modules","text":"<p>In general, if you have some lua code from somewhere, you can simply <code>require('thescript')</code> and it will be usable in your code. The <code>fishb</code> example does this with an external behavior tree module. There is something special to consider about loading modules like this -- they can sometimes be quite large, and in order to prevent some errors the implementation of mq2lua turns off the normal frame yielding operation to load requires. What this means is that your client can hang when you require a file, especially if it is large. The good news is that lua caches requires, so it will only hang on the first load, and won't hang again until the plugin restarts.</p> <p>There is another type of module that lua can include: compiled dlls. This is slightly more complex because you have to build it against the version of lua that we use in mq2lua. Luckily, this version of lua is in our vcpkg repo, so everything you need to link against is available in the mq git. LuaRocks is a great resource for these kinds of packages, and I have made detailed instructions for building these here.</p>"},{"location":"lua/#config-options","title":"Config Options","text":"<ul> <li>turboNum<ul> <li>the number of instructions that will be processed before yielding the frame</li> <li>default: 500</li> </ul> </li> <li>luaDir<ul> <li>the path where lua scripts live, relative to the MQ2 root directory</li> <li>default: 'lua'</li> </ul> </li> <li>luaRequirePaths<ul> <li>list of additional require lookup paths, written in lua require lookup format</li> <li>appends the global <code>package.path</code> in lua environments</li> <li>default: empty list</li> </ul> </li> <li>dllRequirePaths<ul> <li>list of additional require lookup paths for c modules, written in lua require lookup format</li> <li>appends the global <code>package.cpath</code> in lua environments</li> <li>default: empty list</li> </ul> </li> <li>infoGC<ul> <li>the time to garbage collect <code>ps</code> and <code>info</code> output so they don't always persist in memory</li> <li>accepts numbers (in milliseconds) or strings ending in 'h', 'm', 's', or 'ms' for hours, minutes, seconds, and milliseconds</li> <li>default: 1 hour</li> </ul> </li> <li>squelchStatus<ul> <li>a flag to set whether or not to print lua status messages when running, pausing, and stopping scripts</li> <li>default: false (do not squelch)</li> </ul> </li> </ul>"},{"location":"lua/actors/","title":"Actors in Lua","text":"<p>The lua plugin has been equipped with a method to utilize the actor subsystem of MQ. This system will allow script writers to communicate between scripts, clients, or even external applications using the same framework that is available to plugins. There are some few specializations unique to lua, and this document aims to provide a reference for them. Please refer to the terminology section in the other actors document for a glossary of terms.</p>"},{"location":"lua/actors/#module","title":"Module","text":"<p>The module is loaded by requiring <code>actors</code>. This module has a method <code>register</code> for creating actors, and a method <code>send</code> for sending anonymous messages to actors. Both of these methods provide overloads for various use cases:</p> <pre><code>local actors = require('actors')\n\n-- create an actor for the script -- the actor is addressed using script\nlocal script_actor = actors.register(function (message) ... end)\n\n-- create an actor with a mailbox name -- the actor is addressed using script and mailbox\nlocal actor = actors.register('myactor', function (message) ... end)\n\nlocal payload = {test='payload'}\n\n-- send a simple message to script_actor across all clients\nactors.send(payload)\n\n-- send a simple message to a specific address\nactors.send({mailbox='targetmailbox'}, payload)\n\n-- send a response message to script_actor across all clients (this will fail if any other client is running the same script)\nactors.send(payload, function (status, message) ... end)\n\n-- send a response message to a specific address\nactors.send({character='charname', mailbox='targetmailbox'}, payload, function (status, message) ... end)\n</code></pre> <p>There are some things to notice about these functions that are essential for understanding how actors function. These will be addressed in the following sections: What Goes in a Message, Addressing, Message Handler, and Response Callbacks</p>"},{"location":"lua/actors/#the-actor","title":"The Actor","text":"<p>The actor is the central component of this system. It's what you use to send messages, and it's where the message handler lives. The object that the register function returns is technically a dropbox, so it will provide the methods that a dropbox will provide:</p> <ul> <li><code>send</code>: the main method for sending from an actor. The overloads are the same as the anonymous <code>actors.send</code> methods.</li> <li><code>unregister</code>: a method to unregister the actor if you want to remove it early.</li> </ul>"},{"location":"lua/actors/#what-goes-in-a-message","title":"What Goes in a Message","text":"<p>Before we get to the register functions and the message handler, let's look at what a message is. In general, a message can contain any native lua primitive or a lua table. Different types can be added to the serialization in the plugin if they are required, so please open feature requests if there are types that need to be added. MacroQuest datatypes can not be serialized generically because they are localized to the eqgame client. The following datatypes are currently serializable:</p> <ul> <li>nil</li> <li>string</li> <li>number</li> <li>boolean</li> <li>ImVec2</li> <li>ImVec4</li> <li>table (with the caveat that anything not serializable in the table will be ignored)</li> </ul> <p>In the example above, the payload is the message content, and is simple a table with a single named string entry. This could be arbitrarily complex and nested tables will serialize as well, any type in the table that can't be serialized will simply be ignored.</p>"},{"location":"lua/actors/#addressing","title":"Addressing","text":"<p>Next, we want to see what goes into an address. An address in lua can also be referred to as a header, and is a table that can optionally contain the following entries:</p> <pre><code>{\n    mailbox='', -- the target mailbox name for an actor\n    absolute_mailbox=false, -- if you want to provide the fully-qualified mailbox name (which will look like 'plugin:mailbox' or 'lua:script:mailbox'), set this to true\n    script='', -- the target script for an actor, which is a qualifier to mailbox names to gurantee uniqueness\n    pid=0, -- an unsigned integer value for Windows PID. This won't likely be available, but it could be used to direct a message to a specific client\n    name='', -- a name of a standalone actor client, like 'launcher' -- used to direct messages to external applications\n    account='', -- the name of the target client's account\n    server='', -- the name of the target client's server shortname\n    character='', -- the name of the target client's character\n}\n</code></pre> <p>All of these entries are completely optional, and can be ambiguous if you want to send messages to multiple clients. If mailbox and script are not specified, then the target is assumed to be the current actor's mailbox (or just script if sent anonymously). Everything else can be used to disambiguate.</p>"},{"location":"lua/actors/#message-handler","title":"Message Handler","text":"<p>Now we get to the meat of the actors, the message handler. The function that is specified when you register an actor is what is called a \"message handler\". The function takes a message and returns nothing, to be used to handle incoming messages as you receive them. Delay will not work in the message handler and will throw a script error. The typical message handler would look something like this:</p> <pre><code>local function handler(message)\n    if message.content.id == 'something' then\n        ...\n    elseif message.content.id == 'somethingelse' then\n        ...\n    end\nend\n</code></pre> <p>In this example, <code>id</code> is something that the script writer provided in the message table, but <code>content</code> is provided by the plugin.</p>"},{"location":"lua/actors/#message-structure","title":"Message Structure","text":"<p>The plugin passes the message into the handler with some specific structure, as follows:</p> <ul> <li><code>content</code>: the actual data that was serialized from the sending side, following the rules for what goes in a message.</li> <li><code>reply</code>: a method used to reply to messages that have specified a response callback. This has two overloads: <code>function(content)</code> and <code>function(status, content)</code>, where <code>content</code> is any message as before, and <code>status</code> is an integer status (defaults to 0 in the first overload).</li> <li><code>sender</code>: the Address of the sender, fully qualified.</li> <li><code>send</code>: a method similar to reply, but is used for cases where the message doesn't have a response callback and you just want to send a message back to the sender for it to go through their message handler.</li> </ul>"},{"location":"lua/actors/#response-callbacks","title":"Response Callbacks","text":"<p>A response callback is similar to a message handler, but has an additional argument for <code>status</code>, which is just an integer value indicating response status. And important thing to consider is that these response messages will not be routed through your message handler, but will instead be routed directly through the response callback specified. The message is the same as in the message handler, so the only additional information needed for the callback is status. Typically, negative values indicate some kind of failure and should be handled, while positive values indicate something meaningful with 0 being the nominal \"acknowledge\" status. The follow enums are provided as they are errors that can happen external to the lua plugin:</p> <pre><code>actors.ResponseStatus.ConnectionClosed = -1\nactors.ResponseStatus.NoConnection = -2\nactors.ResponseStatus.RoutingFailed = -3\nactors.ResponseStatus.AmbiguousRecipient = -4\n</code></pre> <p>Of these, only the last two are something that you would have any control over in lua. <code>RoutingFailed</code> would happen if there is no recipient at the given address specified (like if you tried to address a specific character that was no longer logged in). <code>AmbiguousRecipient</code> would happen if there was too much ambiguity in the address (like if you addressed an entire server). This is important because these are RPC-style messages, and the requirement is that exactly 1 recipient will receive the message, or we wouldn't be able to provide the guarantee that you will get a response. If you need to send a response to a multi-recipient message, then just use <code>message.send</code> to do so, and handle the responses in the message handler.</p>"},{"location":"lua/actors/#putting-it-all-together","title":"Putting it All Together","text":"<p>In this example we demonstrate how to use Actors to communicate across clients to beg for buffs.  This script can be found alongside other examples in the MacroQuest Git repository here <pre><code>local mq = require('mq')\nlocal actors = require('actors')\n\n-- some example buffs, for demonstration purposes\nlocal mybuffs = {\n    CLR={'Aegolism'},\n    DRU={'Protection of the Glades', 'Shield of Blades', 'Spirit of Wolf'},\n    SHM={'Riotous Health', 'Focus of Spirit', 'Spirit of Wolf'},\n    ENC={'Speed of the Shissar'}\n}\nmybuffs = mybuffs[mq.TLO.Me.Class.ShortName()]\n\nlocal buff_queue = {}\nlocal function dobuffs()\n    for name, buff in pairs(buff_queue) do\n        printf('Casting %s on %s...', buff, name)\n        mq.cmdf('/target %s', name)\n        mq.delay(5000, function() return mq.TLO.Target.CleanName() == name end)\n        if mq.TLO.Target.CleanName() == name then\n            mq.cmdf('/cast \"%s\"', buff)\n        end\n    end\n\n    buff_queue = {}\nend\n\n-- store a list of buffs and who can cast them\nlocal buffers = {}\nlocal function addbuffer(buff, sender)\n    printf('Received buffer %s casting %s', sender.character, buff)\n    if buff and sender then\n        if not buffers[buff] then buffers[buff] = {} end\n\n        if not buffers[buff][sender] then\n            buffers[buff][sender] = true\n        end\n    end\nend\n\n-- whenever a buffer disconnects, handle that\nlocal function removebuffer(sender)\n    for buff, _ in pairs(buffers) do\n        buffers[buff][sender] = nil\n    end\nend\n\n-- this is then message handler, so handle all messages we expect\n-- we are guaranteed that the only messages here we receive are\n-- ones that we send, so assume the structure of the message\nlocal actor = actors.register(function (message)\n    if message.content.id == 'buffs' and message.sender and mybuffs then\n        -- request to send a list of buffs I can cast\n        for _, buff in ipairs(mybuffs) do\n            message:send({id='announce', buff=buff })\n        end\n    elseif message.content.id == 'beg' then\n        -- request for a buff, send back a reply to indicate we are a valid buffer\n        message:reply(0, {})\n        buff_queue[message.sender.character] = message.content.buff\n    elseif message.content.id == 'announce' then\n        -- a buffer has announced themselves, add them to the list\n        addbuffer(message.content.buff, message.sender)\n    elseif message.content.id == 'drop' then\n        -- a buffer has dropped, remove them from the list\n        removebuffer(message.sender)\n    end\nend)\n\n-- buffer login, notify all beggars of available buffs\nlocal function bufferlogin()\n    for _, buff in ipairs(mybuffs) do\n        -- need to specify the actor here because we're sending to beggars\n        -- from the buffer actor but leave it loose so that _all_ beggars\n        -- receive this message\n        printf('Registering %s on beggars', buff)\n        actor:send({id='announce', buff=buff})\n    end\nend\n\n-- beggar login, request buffer buffs\nlocal function beggarlogin()\n    actor:send({id='buffs'})\nend\n\n-- beggar buff request, choose from local list of buffers\nlocal function checkbuffs()\n    for buff, senders in pairs(buffers) do\n        if not mq.TLO.Me.Buff(buff)() then\n            -- get a random buffer that can cast the buff we want\n            local candidates = {}\n            for buffer, _ in pairs(senders) do\n                table.insert(candidates, buffer)\n            end\n\n            -- once we have the random buffer, ask them to cast the buff\n            local random_buffer = candidates[math.random(#candidates)]\n            if random_buffer then\n                printf('Requesting %s from %s...', buff, random_buffer.character)\n                actor:send(random_buffer, {id='beg', buff=buff}, function (status, message)\n                    -- we have a reply here so that we can remove any buffers that didn't\n                    -- clean up nicely (by calling /stopbuffbeg)\n                    if status &lt; 0 then removebuffer(random_buffer) end\n                end)\n            end\n        end\n    end\nend\n\nif mybuffs then bufferlogin() end\nmq.delay(100)\nbeggarlogin()\n\n-- we want to cleanup nicely so that all beggars know that we are done buffing\nlocal runscript = true\nmq.bind('/stopbuffbeg', function () runscript = false end)\n\nwhile runscript do\n    checkbuffs()\n    dobuffs()\n    mq.delay(1000)\nend\n\nactor:send({id='drop'})\n</code></pre></p>"},{"location":"lua/events-and-binds/","title":"Lua Events and Binds","text":"<p>Events and binds are very similar to their macro counterparts, but use the fact that Lua functions are first class to allow you to simply specify callback functions that will process events and binds when they get processed. The callbacks will require a specific signature to work, so this page is here to document how to use callbacks.</p>","tags":["lua"]},{"location":"lua/events-and-binds/#lua-events","title":"Lua Events","text":"<p>When you set up an event, you call <code>mq.event('name', 'matcher text', callback)</code>. The name is just a string to identify the event with so you can remove it later with <code>mq.unevent('name')</code> if the event is no longer necessary. The matcher text is the same matcher text that everyone is used to from macro events, where <code>#*#</code> is an uncaptured wildcard and <code>#1#</code> is a captured wildcard that will be the first argument. More arguments are similarly captured, so you can specify the argument order in a callback. </p> <p>The callback is the important feature of Lua. It expects a function with a signature of <code>(line, arg1, arg2, etc)</code> that will process the text of the event (the full matched line and the captured arguments, ordered by number). A simple example would look like this:</p> <pre><code>local function callback(line, arg1, arg2)\n    print(arg1)\n    print(arg2)\nend\n\nmq.event('mysay', '#1# says, #2#', callback)\n</code></pre> <p>Finally, events will not automatically process (much like in the macro language) -- you will have to call <code>mq.doevents()</code> when it makes sense in your lua script to process the queue of captured events:</p> <pre><code>while not terminate\ndo\n    mq.doevents()\n    mq.delay(1) -- just yield the frame every loop\nend\n</code></pre>","tags":["lua"]},{"location":"lua/events-and-binds/#lua-binds","title":"Lua Binds","text":"<p>Binds are very similar to events (and even use the same backend code) with a couple of important differences. Instead of capturing arbitrary text, it will pass arguments specified by the user, and it will execute at the beginning of the next frame always (no need to call <code>mq.doevents()</code>). When you set up a bind, you call <code>mq.bind('/command', callback)</code>. The command is simultaneously what the user will input to call the bind, and what the bind is indexed by to unbind with <code>mq.unbind('/command')</code> when you no longer want the bind to function while your script is running.</p> <p>The callback now has a function signature of <code>(arg1, arg2, etc)</code>. A simple example would look like this:</p> <pre><code>local callback = function (...)\n    local args = {...}\n    local str = ''\n    for i = 1, #args, 1 do\n        if i &gt; 1 then\n            str = str .. ' '\n        end\n        str = str .. args[i]\n    end\n    print(str)\nend\n\nmq.bind('/myecho', callback)\n</code></pre> <p>That's all that is required to implement an echo command.</p>","tags":["lua"]},{"location":"lua/getSpawns/","title":"Improved Spawn Search","text":""},{"location":"lua/getSpawns/#introduction-to-getfilteredspawns-and-getallspawns","title":"Introduction to getFilteredSpawns and getAllSpawns","text":"<p>The functions <code>getFilteredSpawns</code> and <code>getAllSpawns</code>are available as part of the Macroquest Lua bindings. They provide a sensible manner in which to retrieve and filter <code>spawn</code> objects for your scripts and then return the results in a native Lua table, making it painless for you to iterate through, sort or even further filter in your Lua scripts.</p>"},{"location":"lua/getSpawns/#getfilteredspawns","title":"getFilteredSpawns","text":"<p><code>getFilteredSpawns</code> is a Lua function that takes an optional predicate argument, which is a Lua function that can be used to filter the list of <code>spawn</code> objects. If the predicate argument is provided, the function iterates over all <code>spawn</code> objects and applies the predicate function to each one. If the predicate function returns true for a given <code>spawn</code> object, that object is added to a Lua table that is ultimately returned by the function.</p>"},{"location":"lua/getSpawns/#how-to-use-getfilteredspawns","title":"How to use getFilteredSpawns","text":"<p>Here's an example of how to use getFilteredSpawns: <pre><code>local mq = require('mq')\n\n-- Define a predicate function that checks if the spawn is an NPC\nlocal function isNPC(spawn)\n    return spawn.Type() == 'NPC'\nend\n\n-- Call getFilteredSpawns with the predicate function\nlocal npcs = mq.getFilteredSpawns(isNPC)\n</code></pre> In this example, we define an <code>isNPC</code> function that checks whether a given <code>spawn</code> object is of the type NPC (the type method return value equals the string \"NPC\").  This predicate is passed as the single argument to <code>getFilteredSpawns</code> function to retrieve a table of all <code>spawn</code> objects that meet this filtering criteria.</p>"},{"location":"lua/getSpawns/#inline-predicate-function","title":"Inline predicate function","text":"<p>It is also possible to write the predicate and call to <code>getFilteredSpawns</code> together by in-lining the predicate function as part of the call.  This is sometimes more convienant when the preciate check is simple and easily understood.  Here is the above example condensed into a single line.</p> <pre><code>local mq = require('mq')\n\n-- Call getFilteredSpawns with an inline predicate function\nlocal npcs = mq.getFilteredSpawns(function(spawn) return spawn.Type() == 'NPC' end)\n</code></pre>"},{"location":"lua/getSpawns/#getallspawns","title":"getAllSpawns","text":"<p><code>getAllSpawns</code> is another Lua function that retrieves all <code>spawn</code> objects and returns them as a Lua table. It does not take a predicate, and by default returns all spawns in the zone in a Lua table.</p>"},{"location":"lua/getSpawns/#how-to-use-getallspawns","title":"How to use getAllSpawns","text":"<p>Here's an example of how to use getAllSpawns: <pre><code>local mq = require('mq')\n\n-- Call getAllSpawns to retrieve a table of all `spawn` objects in the zone\nlocal allSpawns = mq.getAllSpawns()\n</code></pre> In this example, we call getAllSpawns to retrieve a table of all <code>spawn</code> objects in the zone.</p>"},{"location":"lua/luarocks-modules/","title":"LuaRocks Modules","text":"<p>MacroQuest includes helpers for lua script writers to allow their users to install modules from LuaRocks.  MacroQuest also includes luarocks.exe with the compile for facilitating this install.</p> <p>The repository of tested LuaRocks exists at https://luarocks.macroquest.org/ and these are all verified as working.  Packages can be added by submitting a pull request to the MQ LuaRocks Repo config</p>","tags":["lua"]},{"location":"lua/luarocks-modules/#script-writers-guide-to-using-packageman","title":"Script Writer's Guide to using PackageMan","text":"<p>PackageMan is the primary helper for installing LuaRocks modules.  The simplest method for package installation is PackageMan.Require.  However, there are also functions for InstallAndLoad and just Install.</p>","tags":["lua"]},{"location":"lua/luarocks-modules/#packagemanrequire","title":"PackageMan.Require","text":"<p>The simplest method of installing a required package is PackageMan.Require.  This will check for the package, try to install it if it is not found, and try to load it after the install.  If it fails, Require returns a customizable message that tells the user what happened.  By default this message just states that there was a failure.</p> <p>An example of how to require lsqlite3 for your script is:</p> <pre><code>local mq = require('mq')\nlocal PackageMan = require('mq/PackageMan')\nlocal sql = PackageMan.Require('lsqlite3')\n</code></pre> <p>This will contact the default MacroQuest rock server, install lsqlite3 and load it to be used under the sql variable.  If there is a failure, the simplest message (\"Failed to load package lsqlite3\") will be displayed to the user.</p> <p>Require also supports overloads for packages that do not have the same name as their luarocks name would suggest.  In this case, you can use two parameters for Require.  An example of this is lfs.  The name of the package is \"luafilesystem\" but when you load it, you load it with \"lfs\" so you can pass that information to Require as below:</p> <pre><code>local mq = require('mq')\nlocal PackageMan = require('mq/PackageMan')\nlocal lfs = PackageMan.Require('luafilesystem', 'lfs')\n</code></pre> <p>This will perform the same steps as above, but once the package is installed it uses the lfs name instead of the luafilesystem name for loading.</p> <p>Lastly, you can use Require to send your own custom message if you do not like the default message.  This is the third overload for Require.  For example, in the case that you want to return the message \"[ScriptNameHere] LFS failed to install and is required for this script\" you can do so as:</p> <pre><code>local mq = require('mq')\nlocal PackageMan = require('mq/PackageMan')\nlocal lfs = PackageMan.Require('luafilesystem', 'lfs', '[ScriptNameHere] LFS failed to install and is required for this sript')\n</code></pre> <p>The default message should suffice for most usages.</p> <p>In all cases, when there is a failure to load the package using Require, your script will be exited.  If you'd like more control, you can use the other functions of PackageMan.</p>","tags":["lua"]},{"location":"lua/luarocks-modules/#debugging","title":"Debugging","text":"<p>If you are having issues with packages not installing, you can enable debug logging by setting the global variable PackageMan.debug to true.  This will output the log of what is happening to the MQ window.</p> <pre><code>local mq = require('mq')\nlocal PackageMan = require('mq/PackageMan')\nPackageMan.debug = true\nlocal sql = PackageMan.Require('lsqlite3')\n</code></pre>","tags":["lua"]},{"location":"lua/luarocks-modules/#packagemaninstallandload","title":"PackageMan.InstallAndLoad","text":"<p>For most use cases, Require should be sufficient.  However, for more granular control over what happens when a package fails to load, you can start with InstallAndLoad.  This will attempt to install the package and load it.  It does not check to see if the package is installed first, as that is up to the script writer.  The mq/utils library has an example of an Include function which will try to load a library and gracefully fail.  An example of using this library to do your own error handling on a package install is below:</p> <pre><code>local mq = require('mq')\nlocal PackageMan = require('mq/PackageMan')\nlocal Utils = require('mq/Utils')\n\nlocal sql = Utils.Library.Include('lsqlite3')\nif not sql then\n    sql = PackageMan.InstallAndLoad('lsqlite3')\nend\n\nif not sql then\n    print('Could not load or install lsqlite3')\nend\n</code></pre> <p>Because Utils.Library.Include is a graceful failure, the above code will try to load the library, install and try to load it if the initial load fails, and lastly print a message if it is still not loaded.  This is useful if your script does not have a strict dependency on the library and would only use the library if it was available.</p> <p>InstallAndLoad also can be overloaded with an additional parameter for packages where the name is different.  Referencing luafilesystem, the appropriate usage for InstallAndLoad would be:</p> <pre><code>local mq = require('mq')\nlocal PackageMan = require('mq/PackageMan')\nlocal Utils = require('mq/Utils')\n\nlocal lfs = Utils.Library.Include('lfs')\nif not lfs then\n    lfs = PackageMan.InstallAndLoad('luafilesystem', 'lfs')\nend\n\nif not lfs then\n    print('Could not load or install luafilesystem/lfs')\nend\n</code></pre> <p>Unlike Require, InstallAndLoad does not have a third overload for a message, since you are expected to handle your own failure messages.</p>","tags":["lua"]},{"location":"lua/luarocks-modules/#packagemaninstall","title":"PackageMan.Install","text":"<p>If Require or InstallAndLoad does not meet your needs, then Install provides the most granular control over installing a package.  Again, for most people Require should be sufficient.  However, Install will allow you to determine the REASON for failures, which none of the other methods do.</p> <p>Install is also only responsible for installing your package, it will not try to load your package at all and it does not check if the package is already installed.  The return on Install is a numerical error code, the most up to date details for which can be found in the source for PackageMan.lua.  The most relevant return code that a script writer would probably be handling is error code 2 -- the user declined the installation of the package.</p> <p>One example of usage is below:</p> <pre><code>local mq = require('mq')\nlocal PackageMan = require('mq/PackageMan')\nlocal Utils = require('mq/Utils')\n\nlocal sql = Utils.Library.Include('lsqlite3')\nif not sql then\n    if PackageMan.Install('lsqlite3') == 2 then\n        print('User canceled the install, cannot proceed')\n        mq.exit()\n    else\n        sql = require('lsqlite3')\n    end\nend\n</code></pre>","tags":["lua"]},{"location":"lua/luarocks-modules/#advanced-configuration","title":"Advanced Configuration","text":"<p>PackageMan includes parameters repoUrl and repoName for pointing users at your own repo should you want to beta test with users.  However, use this at your own risk as there is no setup of maintaining multiple versions of packages from different repos.</p>","tags":["lua"]},{"location":"lua/luarocks-modules/#step-by-step-building-a-luarocks-module-for-mq","title":"Step-by-Step Building a LuaRocks Module for MQ","text":"<p>While the easiest method is to allow MQ's team to build the module you're looking for, if you're trying to build something locally for testing, one set of instructions are below.</p> <p>This is one method of compiling using LuaRocks with the Lua SQLite3 library. These instructions are available in generic form in the official installation instructions; but this covers the specific details needed for MQ.</p> <ol> <li> <p>Grab LuaRocks for Windows at the LuaRocks download page (you want the legacy windows package,     because you will need to build it yourself)</p> </li> <li> <p>Extract the zip to someplace nice.</p> </li> <li> <p>Open up the developer command prompt for VS and navigate to the aforementioned nice place.</p> <p></p> <pre><code>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community&gt;cd C:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32\n\nC:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32&gt;\n</code></pre> </li> <li> <p>If you have not built mq2lua (in VS), do so now. It will run the vcpkg install of <code>luajit</code> that we need to run <code>luarocks</code> with.     You can alternately just install it through the MQ vcpkg environment, but this is the simplest way to get what you need.</p> </li> <li> <p>Run <code>install.bat</code> with <code>/SELFCONTAINED</code>, using <code>/P</code> to point to the install directory, and (most importantly) <code>/INC</code>, <code>/LIB</code>, and <code>/BIN</code>     to point to the mq install of luajit that you just built, and <code>/NOADMIN</code> because this is a local install. Hit enter when prompted:</p> <pre><code>C:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32&gt;.\\install.bat /P C:\\Users\\dannu\\Downloads\\luarocks_install /SELFCONTAINED /INC \"C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\include\\luajit\" /LIB \"C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\lib\" /BIN \"C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\tools\" /NOADMIN\n\nC:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32&gt;rem=rem --[[--lua\nLuaRocks 3.6.x installer.\n\n\n========================\n== Checking system... ==\n========================\n\n\nAttempting to install without admin privileges...\nLooking for Lua interpreter\n    Found luajit.exe, testing it...\n    checking for C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\lib\\lua5.1.lib\n    checking for C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\lib\\lua51.lib\n    Found lua51.lib\n    checking for C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\include\\luajit\\lua.h\n    Found lua.h\n*** WARNING ***: could not analyse the runtime used, defaulting to MSVCR80\nRuntime check completed.\narch: 14c -&gt; IMAGE_FILE_MACHINE_I386\nLooking for Microsoft toolchain matching runtime MSVCR80 and architecture x86\n    checking: HKLM\\Software\\Microsoft\\VisualStudio\\8.0\\Setup\\VC\n    checking: HKLM\\Software\\Microsoft\\VCExpress\\8.0\\Setup\\VS\n    Cannot auto-detect Windows SDK version from MSVCR80\n\n==========================\n== System check results ==\n==========================\n\nWill configure LuaRocks with the following paths:\nLuaRocks        : C:\\Users\\dannu\\Downloads\\luarocks_install\nConfig file     : C:\\Users\\dannu\\Downloads\\luarocks_install\\config-5.1.lua\nRocktree        : C:\\Users\\dannu\\Downloads\\luarocks_install\\systree\n\nLua interpreter : C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\tools\\luajit.exe\n    binaries    : C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\tools\n    libraries   : C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\lib\n    includes    : C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\include\\luajit\n    architecture: x86\n    binary link : lua51.lib with runtime MSVCR80.dll\n\nCompiler        : Microsoft (make sure it is in your path before using LuaRocks)\n\nPress &lt;ENTER&gt; to start installing, or press &lt;CTRL&gt;+&lt;C&gt; to abort. Use install /? for installation options.\n\n\n============================\n== Installing LuaRocks... ==\n============================\n\n\nInstalling LuaRocks in C:\\Users\\dannu\\Downloads\\luarocks_install...\nCreated LuaRocks command: C:\\Users\\dannu\\Downloads\\luarocks_install\\luarocks.bat\nCreated LuaRocks command: C:\\Users\\dannu\\Downloads\\luarocks_install\\luarocks-admin.bat\n\nConfiguring LuaRocks...\nCreated LuaRocks hardcoded settings file: C:\\Users\\dannu\\Downloads\\luarocks_install\\lua\\luarocks\\core\\hardcoded.lua\nCreated LuaRocks config file: C:\\Users\\dannu\\Downloads\\luarocks_install\\config-5.1.lua\n\nCreating rocktrees...\nCreated system rocktree    : \"C:\\Users\\dannu\\Downloads\\luarocks_install\\systree\"\nLocal user rocktree exists : \"C:\\Users\\dannu\\AppData\\Roaming\\LuaRocks\"\n\n============================\n== LuaRocks is installed! ==\n============================\n\n\nYou may want to add the following elements to your paths;\nLua interpreter;\nPATH     :   C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\tools\nPATHEXT  :   .LUA\nLuaRocks;\nPATH     :   C:\\Users\\dannu\\Downloads\\luarocks_install\nLUA_PATH :   C:\\Users\\dannu\\Downloads\\luarocks_install\\lua\\?.lua;C:\\Users\\dannu\\Downloads\\luarocks_install\\lua\\?\\init.lua\nLocal user rocktree (Note: %APPDATA% is user dependent);\nPATH     :   %APPDATA%\\LuaRocks\\bin\nLUA_PATH :   %APPDATA%\\LuaRocks\\share\\lua\\5.1\\?.lua;%APPDATA%\\LuaRocks\\share\\lua\\5.1\\?\\init.lua\nLUA_CPATH:   %APPDATA%\\LuaRocks\\lib\\lua\\5.1\\?.dll\nSystem rocktree\nPATH     :   C:\\Users\\dannu\\Downloads\\luarocks_install\\systree\\bin\nLUA_PATH :   C:\\Users\\dannu\\Downloads\\luarocks_install\\systree\\share\\lua\\5.1\\?.lua;C:\\Users\\dannu\\Downloads\\luarocks_install\\systree\\share\\lua\\5.1\\?\\init.lua\nLUA_CPATH:   C:\\Users\\dannu\\Downloads\\luarocks_install\\systree\\lib\\lua\\5.1\\?.dll\n\nNote that the %APPDATA% element in the paths above is user specific and it MUST be replaced by its actual value.\nFor the current user that value is: C:\\Users\\dannu\\AppData\\Roaming.\n\n\n\nC:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32&gt;\n</code></pre> </li> <li> <p>Navigate to the path you specified with the <code>/P</code> switch</p> <pre><code>C:\\Users\\dannu\\Downloads\\luarocks-3.6.0-win32&gt;cd C:\\Users\\dannu\\Downloads\\luarocks_install\n\nC:\\Users\\dannu\\Downloads\\luarocks_install&gt;\n</code></pre> </li> <li> <p>Run <code>luarocks.bat</code> to <code>install</code> <code>lsqlite3complete</code>, which will build it with <code>cl</code> (this is why you needed to do this in the developer console)</p> <pre><code>C:\\Users\\dannu\\Downloads\\luarocks_install&gt;.\\luarocks.bat install lsqlite3complete\nInstalling https://luarocks.org/lsqlite3complete-0.9.5-1.src.rock\n\nlsqlite3complete 0.9.5-1 depends on lua &gt;= 5.1, &lt; 5.5 (5.1-1 provided by VM)\ncl /nologo /MD /O2 -c -Folsqlite3.obj -IC:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\include\\luajit lsqlite3.c -DLSQLITE_VERSION=\"0.9.5\" -Dluaopen_lsqlite3=luaopen_lsqlite3complete\nlsqlite3.c\ncl /nologo /MD /O2 -c -Fosqlite3.obj -IC:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\include\\luajit sqlite3.c -DLSQLITE_VERSION=\"0.9.5\" -Dluaopen_lsqlite3=luaopen_lsqlite3complete\nsqlite3.c\nlink -dll -def:lsqlite3complete.def -out:lsqlite3complete.dll C:\\Users\\dannu\\workspace\\mqnext\\contrib\\vcpkg\\installed\\x86-windows-static\\lib/lua51.lib lsqlite3.obj sqlite3.obj\nMicrosoft (R) Incremental Linker Version 14.28.29913.0\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\nCreating library lsqlite3complete.lib and object lsqlite3complete.exp\nLINK : warning LNK4098: defaultlib 'LIBCMT' conflicts with use of other libs; use /NODEFAULTLIB:library\nNo existing manifest. Attempting to rebuild...\nlsqlite3complete 0.9.5-1 is now installed in C:\\Users\\dannu\\Downloads\\luarocks_install\\systree (license: MIT)\n\n\nC:\\Users\\dannu\\Downloads\\luarocks_install&gt;\n</code></pre> </li> <li> <p>You now have a dll in <code>systree\\lib\\lua\\5.1\\lsqlite3complete.dll</code> that you can copy into your mq lua directory (wherever you lua script lives) and use it with <code>require('lsqlite3complete')</code></p> </li> </ol>","tags":["lua"]},{"location":"lua/macro-to-lua/","title":"MacroScript to Lua","text":"<p>Ported from RedGuides: MacroScript to Lua.</p> <p>This guide will cover some of the more common building blocks of code found in macros, and ways they may be written in Lua. They may not be the only ways or the best ways, but hopefully they are useful to see.  </p> <p>The purpose of this guide is primarily to help those who know the macro language, but not necessarily Lua or other programming languages, to be able to write new scripts in Lua. Its not to suggest that existing macros should be rewritten in Lua, although that may be a good learning exercise as well.  </p> <p>Before getting started, its recommended to have VS Code (not the same thing as Visual Studio) installed for working with Lua files. Install the mq-defs VS Code extension to make developing Lua scripts for MQ much easier.</p>","tags":["lua"]},{"location":"lua/macro-to-lua/#getting-started","title":"Getting Started","text":"<p>Before getting into MQ specifics, some basics about the Lua programming language should be understood.</p>","tags":["lua"]},{"location":"lua/macro-to-lua/#terminology","title":"Terminology","text":"<ul> <li>lua script: Like a macro, Lua scripts are run in game via command. For example, <code>/lua run examples/demo_tables</code> where <code>examples/demo_tables.lua</code> is a Lua script which exists in the MQ Lua folder.  </li> <li>variable: A variable is a symbolic name for some information. <code>local script_name = 'demo_tables'</code> would define the <code>script_name</code> variable which can then be referenced elsewhere in the script, and its value would be the string, <code>demo_tables</code>. Variables can be local or global, but should typically always be made local.  </li> <li>function: A function in lua is a callable, reusable block of code. Functions can take 0 or more arguments, as well as return 0 or more results. Lua functions would be comparable to subroutines in macro script.  </li> <li>table: In Lua, nearly everything is a table. Tables are the main data structure for the language. Think of tables as a combination of arrays, maps, sets, lists, etc. from other languages. Tables store a collection of key, value pairs, and the values can be accessed by their keys. The keys can be numbers or strings. When the keys are contiguous numbers from 1 to N, then the table can be accessed in a similar fashion to an array. They can also be iterated over by index (like an array) or by key (like a map).  </li> <li>userdata: Lua represents arbitrary C data as the type <code>userdata</code>. There will be more on this later, but it is important to note that all unevaluated data returned to Lua from MQ is of type <code>userdata</code>.  </li> <li>nil: The Lua equivalent of macros <code>NULL</code>. nil is Luas representation of no value. One common thing to do is check that a variable is not nil, i.e. the variable has a value. This might look like <code>if mob then do_something() end</code>. This is the same as <code>if mob ~= nil then do_something() end</code>.  </li> <li>string: A string is used for data values that are made up of ordered sequences of characters, such as \"hello world\". Strings are only mentioned here because in macros, everything was a string, and in lua not everything is treated as a string. In Lua, like most programming languages, strings belong inside of quotes. This was not required in macros. For example, <code>local name = fippy darkpaw</code> would fail. <code>local name = \"fippy darkpaw\"</code> would work.  </li> <li>literal: Defining this word here just to highlight the difference between macro script and pretty much any other programming language in the world. A literal would be something like the number <code>2</code> or the string <code>\"hello world\"</code>. Specifically for strings, as mentioned a few times throughout this guide, they must be in single (<code>'</code>) or double (<code>\"</code>) quotes. This differs from macro script where strings don't need to be in quotes.  </li> <li>true/false: Boolean values in Lua. They must be written lowercase, not to be confused with <code>TRUE</code> and <code>FALSE</code> seen in macros. One quick note on true/false in Lua is that numbers do not behave like booleans in conditions like they do in macros or several other languages. <code>if my_int_variable then</code> where <code>my_int_variable</code> is <code>0</code> would not evaluate to <code>false</code>. To compare numbers in if statements, the <code>==</code> or <code>~=</code> operators should be used.</li> </ul>","tags":["lua"]},{"location":"lua/macro-to-lua/#hello-world","title":"Hello World","text":"<p>PIL: Hello World The typical Hello World example for a Lua script is relatively short. No functions need to be written, no variables declared. Simply create a file in  the MQ Lua folder called <code>helloworld.lua</code> with the following content:</p> <pre><code>print('Hello, world')\n</code></pre> <p>And then execute the script in game by running the command: <code>/lua run helloworld</code></p> <p>This script calls the built in Lua <code>print</code> function to print the string <code>Hello, world</code>. It will print to the MQ console window. The Lua <code>print</code> function behaves the same way as <code>/echo</code> in macro script.</p>","tags":["lua"]},{"location":"lua/macro-to-lua/#variables","title":"Variables","text":"<p>PIL: Local Variables and Blocks Lua can have both local and global variables within the scope of a lua script, similar to a macro. In most cases, variables probably don't need to be made global. Global variables may have some use cases as script grow and begin to include multiple other scripts, but even then they are unlikely to be necessary, and most likely problems can be solved other ways.  </p> <p>To declare a variable, its as simple as: <pre><code>-- DEBUG_FLAGS will be a global variable with a value of 0\nDEBUG_FLAGS = 0\n\n-- healPct will be a local variable with a value of 70\nlocal healPct = 70\n\n-- mobName will be a local variable which stores the string \"Fippy Darkpaw\"\nlocal mobName = \"Fippy Darkpaw\"\n</code></pre></p> <p>NOTE: <code>--</code> is used to write comments (text which will not be executed as part of the script) in Lua.</p> <p>Local variables are valid for the block of code in which they are declared in. For example: <pre><code>local myLevel = mq.TLO.Me.Level()\nif myLevel &gt; 5 then\n    local canUseKick = true\nend\nprint(canUseKick)\n</code></pre></p> <p>The above code snippet defines a local variable inside the if block, so it is no longer in scope after the end of the if block. The print statement will output <code>nil</code> because <code>canUseKick</code> is no longer in scope.  </p> <p>The entirety of a lua script is also one code block. Local variables defined at the top level of the script can be referenced anywhere else in the script below where they have been defined. However, its always best to define variables as close as possible to where they will be used, and with as limited scope as possible.  </p> <p>Variables in Lua are not strongly typed, and can be assigned all sorts of values to any variable. To keep code simple and easy to follow, avoid reusing one variable for multiple different types of data. Just note that there is nothing stopping assigning a variable a number value in one line, and then assigning it a string value in the next.  </p> <p>The following code snippet shows some macro variable related commands and their lua equivalents:  </p> <p>Create a local variable <code>scriptName</code> with the value <code>helloworld</code>. <pre><code>| /declare variable_name type scope value\n/declare scriptName string local helloworld\n</code></pre> <pre><code>local scriptName = 'helloworld'\n</code></pre></p> <p>Create a global variable with the value <code>1</code>: <pre><code>/declare mobCount int global 1\n</code></pre> <pre><code>mobCount = 1\n</code></pre></p> <p>Update the value of variable <code>mobCount</code> to <code>2</code>: <pre><code>/varset mobCount 2\n</code></pre> <pre><code>mobCount = 2\n</code></pre></p> <p>Perform some math operation on a variable: <pre><code>/varcalc mobCount ${mobCount}+1\n</code></pre> <pre><code>mobCount = mobCount + 1\n</code></pre></p> <p>Store an MQ DataType in a variable: <pre><code>/declare nearestNPC spawn local\n/vardata nearestNPC Spawn[npc targetable]\n</code></pre> <pre><code>local nearestNPC = nil\nnearestNPC = mq.TLO.Spawn('npc targetable')\n</code></pre></p>","tags":["lua"]},{"location":"lua/macro-to-lua/#output","title":"Output","text":"<p>In Lua, output text to the console using <code>print</code>. Do not use <code>mq.cmd.echo</code> or <code>mq.cmd('/echo ...')</code>. Macro: <code>/echo some text</code> Lua:   <code>print('Some text')</code> </p> <p>Print colored text using the same color codes as <code>/echo</code>: Macro: <code>/echo \\arRed text</code> Lua:   <code>print('\\arRed text')</code> </p> <p>Print the value of a variable: Macro: <code>/echo ${scriptName}</code> Lua:   <code>print(scriptName)</code> </p> <p>Print the value of a string variable with some other text. <code>..</code> is used to concatenate strings: PIL: String concatenation Macro: <code>/echo Script Name: ${scriptName}</code> Lua:   <code>print('Script Name: '..scriptName)</code> </p> <p>NOTE: This requires that the type of data stored in the variable <code>scriptName</code> be a string.</p> <p>Another way is to use a formatted string: Lua:   <code>print(string.format('Script Name: %s', scriptName))</code> </p> <p>Another syntax for formatted strings: Lua:   <code>print(('Script Name: %s'):format(scriptName))</code> </p> <p>MQ automatically adds a <code>printf</code> function for all Lua scripts to make use of as well, so the above string.format isn't necessary: Lua:   <code>printf('Script Name: %s', scriptName)</code> </p> <p>Refer to the C++ printf reference for details on formatted string specifiers.</p> <p>TIP: <code>%s</code> in a formatted string can cope with a variable being <code>nil</code>.</p> <p>Also check out Knightly's Write.lua resource for debug logging helpers.</p>","tags":["lua"]},{"location":"lua/macro-to-lua/#functions","title":"Functions","text":"<p>PIL: Functions Lua functions are the equivalent of macro subroutines. Like variables, functions can be declared as <code>local</code> or <code>global</code>. In most cases, they don't need to be defined globally.  </p> <p>Example 1: A function which takes no arguments</p> <p>Macro: <pre><code>Sub echoMyName\n  /echo ${Me.Name}\n/return\n\nSub Main\n  /call echoMyName\n/return\n</code></pre></p> <p>Lua: <pre><code>local function printMyName()\n  print(mq.TLO.Me.Name())\nend\n\nprintMyName()\n</code></pre></p> <p>Example 2: A function with 1 named argument</p> <p>Macro: <pre><code>Sub Main\n  /declare scriptName global helloworld\n  /call eyecatcher \"section about subroutines\"\n/return\n\nSub eyecatcher(string message)\n  /echo \\ar${scriptName}: \\a-x${message}\n/return\n</code></pre></p> <p>Lua: <pre><code>local scriptName = 'helloworld'\n\n-- Define a local function which prints a formatted string with the script name and a message:\nlocal function eyecatcher(message)\n  printf('\\ar%s: \\a-x%s', scriptName, message)\nend\n\n-- Call the function which we just defined, similar to a macro /call eyecatcher \"section about subroutines\"\neyecatcher('section about subroutines')\n</code></pre></p> <p>Example 3: A function with multiple named arguments</p> <p>Macro: <pre><code>Sub somefunc(bool arg1, int arg2)\n  /echo ${arg1}\n  /echo ${arg2}\n/return\n\nSub Main\n  /declare debug bool local true\n  /declare id int local ${Me.ID}\n  /call somefunc ${debug} ${id}\n/return\n</code></pre></p> <p>Lua:</p> <pre><code>local function somefunc(arg1, arg2)\n  print(arg1)\n  print(arg2)\nend\n\nlocal debug = true\nlocal id = mq.TLO.Me.ID()\nsomefunc(debug, id)\n</code></pre> <p>Example 4: A function with a variable number of arguments: PIL: Variable number of arguments <pre><code>local function print_values(...)\n  local arg = {...}\n  for _,value in ipairs(arg) do\n    print(value)\n  end\nend\n\nlocal name = mq.TLO.Me.Name()\nlocal level = mq.TLO.Me.Level()\nlocal class = mq.TLO.Me.Class()\nprint_values(name, level, class)\n</code></pre></p> <p>Example 5: A function which returns multiple values PIL: Multiple Results <pre><code>local function get_class_and_race(a_spawn)\n  return a_spawn.Class(), a_spawn.Race()\nend\n\nlocal class, race = get_class_and_race(mq.TLO.Target)\n</code></pre></p> <p>Example 6: Return a table of values In most cases it will be more extensible and easier to read to return multiple values in a table rather than returning multiple values. <pre><code>local function get_class_and_race(a_spawn)\n  return {class=a_spawn.Class(), race=a_spawn.Race()}\nend\n\nlocal targetInfo = get_class_and_race(mq.TLO.Target)\nprintf('Target class=%s, race=%s', targetInfo.class, targetInfo.race)\n</code></pre></p>","tags":["lua"]},{"location":"lua/macro-to-lua/#tables","title":"Tables","text":"<p>Before getting into flow control, some knowledge of Lua tables is needed. They will be used in several of the examples.</p> <p>In lua, tables are the goto data structure for arrays, maps, pretty much everything.</p> <p>Tables store key/value pairs. The keys can be numbers or strings. They aren't required to be contiguous numbers, but if using the table as an array, then they must be.</p> <p>NOTE: Lua array tables start from index 1.</p> <p>Array table examples: </p> <p>Define an array by passing just a set of values. It will automatically give each value an index starting from <code>1</code>. <pre><code>local priests = { 'clr', 'dru', 'shm' }\n</code></pre></p> <p>Values can also be indexed explicitly, but prefer the example above: <pre><code>local casters={ [1]='enc', [2]='mag', [3]='nec', [4]='wiz' }\n</code></pre></p> <p>Lua also provides a table function for appending to arrays: <pre><code>local tanks = {}\ntable.insert(tanks, 'war')\ntable.insert(tanks, 'pal')\ntable.insert(tanks, 'shd')\n</code></pre></p> <p>To access a value directly by its index: <pre><code>print(priests[2])\n</code></pre> This would print <code>dru</code>.</p> <p>Tables can also be maps instead of arrays: <pre><code>local mez_classes = { brd=true, enc=true }\n</code></pre></p> <p>Values from the table can be looked up by key: <pre><code>print(mez_classes.brd)\nprint(mez_classes['brd'])\nlocal key = 'enc'\nprint(mez_classes[key])\n</code></pre></p> <p>While the above examples each just show grabbing a table value directly by index or key, tables can also be accessed by iterating over the values. This will be covered more in the examples under the section on control flow.</p> <p>Deciding whether a table should be an array or a map depends on the application and how the data will be used. The examples coming up prefer using tables as maps so that values could be looked up directly by key without having to iterate over the table to find the value.</p> <p>The <code>mez_classes</code> example above is using a table as a <code>Set</code> data structure, where the key is the unique value in the table like class short names, and the value is <code>true</code>.</p> <p>Lua Sets provides an example helper function to create sets like this.</p>","tags":["lua"]},{"location":"lua/macro-to-lua/#command-line-arguments","title":"Command Line Arguments","text":"<p>Lua provides access to command line arguments through the use of the same <code>...</code> which was introduced earlier with functions for variable number of arguments.</p> <p>Below is an example which iterates over the arguments which the script is called with: <pre><code>local args = {...}\nprintf('Script called with %d arguments:', #args)\nfor i,arg in ipairs(args) do\n  printf('arg[%d]: %s', i, arg)\nend\n</code></pre></p> <p>Add this code to a lua script <code>testarg1.lua</code> and execute it with: <code>/lua run testarg1 assist ini server_toon.ini</code></p> <p>This would output: <pre><code>Script called with 3 arguments:\narg[1]: assist\narg[2]: ini\narg[3]: server_toon.ini\n</code></pre></p> <p>Another example, uses named key/value arguments to add the args directly to a settings table: <pre><code>local settings = {}\nlocal current_key = nil\n\nfor _,arg in ipairs(args) do\n  if not current_key then\n    current_key = arg\n  else\n    settings[current_key] = arg\n    current_key = nil\n  end\nend\n\nfor key,value in pairs(settings) do\n  printf('Settings[%s]=%s', key, value)\nend\n</code></pre></p> <p>Add this code to a lua script <code>testarg2.lua</code> and execute it with: <code>/lua run testarg2 role assist ini server_toon.ini</code></p> <p>This would output: <pre><code>Settings[role]=assist\nSettings[ini]=server_toon.ini\n</code></pre></p>","tags":["lua"]},{"location":"lua/macro-to-lua/#require","title":"Require","text":"<p>The Lua <code>require</code> function is used to load one Lua file from another. For example, <code>Write.lua</code>, by Knightly, is a library which provides useful functions for logging. <code>Write.lua</code> is meant to be used by other scripts, and would be included as a module with: <code>local write = require('write')</code>. This would then allow a script to call the functions from <code>Write.lua</code> such as <code>write.debug('my debug message here')</code>.</p> <p>This is similar to include files in macros, though works slightly differently. Include files in macros make the macro behave as if the included files code was all inserted directly where the include was done. In Lua, the results of requiring another Lua file are typically stored into a variable. So, if a script is required, and it returns a table containing several helper functions, then that table is stored into a variable and those functions are accessed through that variable.</p> <p>Require is also how MQ makes its own functionality available to Lua scripts, such as TLOs, events, binds and commands which will all be discussed later. In short, its all made available by including the following line: <pre><code>local mq = require('mq')\n</code></pre></p> <p>This provides access to all the MQ functionality that has been made available to lua, and assigns it into the variable <code>mq</code>.</p> <p>A couple short examples using require:</p> <p>Create a file named <code>utils.lua</code> <pre><code>-- Create a table which will hold everything we want to be exported from this lua file\nlocal utils = {}\n\n-- Add a function to the utils table under the key \"perform_some_task\"\nfunction utils.perform_some_task()\n  print('successfully performed some task')\nend\n\n-- Return the utils table containing our function\nreturn utils\n</code></pre></p> <p>Then include <code>utils.lua</code> into the main script using a require statement: <pre><code>local utils = require 'utils'\n\nutils.perform_some_task()\n</code></pre></p> <p>Another way: <pre><code>-- Create a local function which will not be exported, so only functions in this file may use it\nlocal function internal_helper()\n  print('successfully performed some task')\nend\n\n-- Create a local function which will be exported and callable by scripts which require this file\nlocal function perform_some_task()\n  internal_helper()\nend\n\n-- Create a table which will hold everything we want to be exported from this lua file\nlocal exports = {\n  perform_some_task = perform_some_task\n}\n\n-- Return the export table\nreturn exports\n</code></pre></p> <p>Then include <code>utils.lua</code> into the main script using a require statement: <pre><code>local utils = require 'utils'\n\nutils.perform_some_task()\n-- Calling utils.internal_helper() would result in an error\n--utils.internal_helper()\n</code></pre></p>","tags":["lua"]},{"location":"lua/macro-to-lua/#scope-and-processing-order","title":"Scope and Processing Order","text":"<p>Scope was touched on a little bit earlier when talking about variables. The same applies to functions as well. Its always important to be aware of where variables or functions are defined, and when they will be in the correct scope to be referenced.</p> <p>An important part of this is understanding that Lua scripts are processed top down. A variable or function can only be referenced by code that occurs after it has been declared.</p> <p>Compare these three examples: <pre><code>local function print_version()\n    print(version)\nend\n\nlocal version = '1.0.0'\nprint_version()\n</code></pre></p> <p>This will print <code>nil</code> because <code>version</code> has not been defined ahead of the function <code>print_version</code>, so it will be printing an unknown variable. <pre><code>local version = '1.0.0'\nlocal function print_version()\n    print(version)\nend\n\nprint_version()\n</code></pre></p> <p>This will print <code>1.0.0</code> because <code>version</code> has been defined ahead of the function <code>print_version</code>, so it will be able to find the correct variable. <pre><code>local function print_version(version)\n    print(version)\nend\n\nlocal version = '1.0.0'\nprint_version(version)\n</code></pre></p> <p>While the second example works, it sort of treats <code>version</code> like a global variable. The scope of the <code>version</code> variable could be limited by passing it as an argument to the function instead.</p>","tags":["lua"]},{"location":"lua/macro-to-lua/#control-flow","title":"Control Flow","text":"<p>PIL: Control Structures A number of options are provided to control the flow of the script, such as if then else, for loops, while loops and repeat until.</p>","tags":["lua"]},{"location":"lua/macro-to-lua/#if-then-else","title":"If then else","text":"<p>PIL: if then else If conditions from macros should look pretty similar in lua.</p> <p>Macro: <pre><code>/declare my_name string local noone\n/declare max_level int local 115\n/if (${my_name.Equal[noone]}) {\n    /echo the values match\n}\n\n/if (${Me.Level} &lt; ${max_level}) {\n    /echo must get more levels\n}\n\n| In macros, conditions usually have to check .ID on something\n/if (${Me.Invulnerable.ID}) {\n    /removebuff ${Me.Invulnerable}\n}\n</code></pre></p> <p>Lua: <pre><code>local my_name = 'noone'\nlocal max_level = 115\nif my_name == 'noone' then\n    print('the values match')\nend\n\nif mq.TLO.Me.Level() &lt; max_level then\n    print('must get more levels')\nend\n\n-- In Lua, conditions should be able to just check something is not nil, without\n-- having to check the ID.\nif mq.TLO.Me.Invulnerable() then\n    mq.cmdf('/removebuff %s', mq.TLO.Me.Invulnerable())\nend\n</code></pre></p> <p>Macro: <pre><code>/if (${my_name.NotEqual[someone]}) {\n    /echo =~ is not equals in lua\n}\n</code></pre></p> <p>Lua: <pre><code>if my_name ~= 'someone' then\n    print('~= is not equals in lua')\nend\n</code></pre></p> <p>NOTE: Do not write a condition that combines both <code>not</code> and <code>==</code>. For example, instead of this: <pre><code>if not myName == 'aquietone' then\n</code></pre> use this: <pre><code>if myName ~= 'aquietone' then\n</code></pre></p>","tags":["lua"]},{"location":"lua/macro-to-lua/#for-loops","title":"For Loops","text":"<p>PIL: For Loops For loops in lua are most often going to be iterating over table values. This is done using either <code>pairs</code> or <code>ipairs</code>. Both <code>pairs(a_table)</code> and <code>ipairs(a_table)</code> will return 2 values on each pass of the loop, the key and the value for that key.</p> <p><code>pairs</code> iterates over all keys in a table (treats the table as a map). <pre><code>for class, value in pairs(mez_classes) do\n    printf('Class %s can mez: %s', class, value)\nend\n</code></pre></p> <p><code>ipairs</code> iterates over contiguous numeric keys in a table starting from index 1 (treats the table as an array). <pre><code>for index, value in ipairs(casters) do\n    printf('casters[%d]=%s', index, value)\nend\n</code></pre></p> <p>PIL: Numeric For Lua also allowed to iterate over a range like 1 to N: <pre><code>for spellIter=1,5 do\n  print(mq.TLO.Me.Book(spellIter).Name())\nend\n</code></pre></p> <p>Or, an example taken from <code>pocketfarm.mac</code> but changed so it doesn't print a lot of stuff: Macro: <pre><code>/for i 1 to ${SpawnCount[pc targetable]}\n  /if (${NearestSpawn[${i},pc targetable].Name.Equal[${Me.Name}]}) {\n    /echo ${NearestSpawn[${i},pc targetable].Name.Length}\n  }\n/next i\n</code></pre></p> <p>Lua: <pre><code>for i=1,mq.TLO.SpawnCount('pc targetable')() do\n  if mq.TLO.NearestSpawn(i..', pc targetable').Name() == mq.TLO.Me.Name() then\n    print(mq.TLO.NearestSpawn(i..', pc targetable').Name.Length())\n  end\nend\n</code></pre></p>","tags":["lua"]},{"location":"lua/macro-to-lua/#while-loops","title":"While Loops","text":"<p>PIL: While Loops While loops can also be used to iterate over a range: <pre><code>local loop = 1\nwhile loop &lt; 3 do\n  print('Loop #'..loop)\n  loop = loop + 1\nend\n</code></pre></p>","tags":["lua"]},{"location":"lua/macro-to-lua/#repeat-until","title":"Repeat Until","text":"<p>PIL: Repeat Until There is also repeat until: <pre><code>repeat\n  printf('Loop #%d', loop)\n  loop = loop - 1\nuntil loop == 0\n</code></pre></p>","tags":["lua"]},{"location":"lua/macro-to-lua/#goto","title":"/goto","text":"<p>This is only mentioned here because it is commonly used in macros. Avoid using this in Lua.</p> <p>While Lua also has goto, it should be possible to handle most situations with normal flow control like those described above.  </p> <p>One valid scenario for goto would be to handle the lack of <code>continue</code> in Lua, however, this can still be avoided in most situations.</p>","tags":["lua"]},{"location":"lua/macro-to-lua/#mq","title":"MQ","text":"<p>The first line to most lua scripts written for MQ will be: <pre><code>local mq = require('mq')\n</code></pre></p> <p>This provides access to all the MQ functionality.</p>","tags":["lua"]},{"location":"lua/macro-to-lua/#tlos","title":"TLOs","text":"<p>Top Level Objects, or TLOs, are how data is accessed from MQ. This should already be a pretty familiar concept from doing just about anything with MQ, including echoing data to the console, writing conditions in KissAssist INIs, writing macros, writing reacts, etc. We use TLOs every day. Some examples include <code>${Me}</code>, <code>${Target}</code>, <code>${Spawn}</code> and <code>${FindItem}</code>.</p> <p>To access TLOs using the <code>mq</code> variable:</p> <pre><code>local mq = require('mq')\n\nlocal assist_name = mq.TLO.Group.MainAssist.CleanName()\nprintf('Assisting: %s', assist_name)\n</code></pre> <pre><code>local mq = require('mq')\n\nif mq.TLO.Target() then\n    local mob_hp = mq.TLO.Target.PctHPs()\n    if mob_hp &lt; 98 then\n        printf('Assisting on %s', mq.TLO.Target.CleanName())\n        -- call some assist code\n    end\nend\n</code></pre> <pre><code>local mq = require('mq')\n\nlocal target = mq.TLO.Target\nif target() then\n    if target.Distance3D() &gt; 15 then\n        print('Moving closer to target')\n        -- call some movement code\n    end\nend\n</code></pre> <p>In general, to convert from a TLO in macro format to a TLO in Lua format, strip the <code>${ }</code> and add <code>mq.TLO.</code> on the front. If the goal is to evaluate the data to a Lua type, add <code>()</code> on the end. For example, <code>${Me.PctHPs}</code> becomes <code>mq.TLO.Me.PctHPs()</code>.</p> <p>To evaluate to a Lua type, it must always end in empty (). <code>mq.TLO.Spawn('npc')</code> will be type <code>userdata</code> while <code>mq.TLO.Spawn('npc')()</code> will be type <code>string</code>.  </p> <p>Background on Lua userdata: PIL: Userdata </p> <pre><code>printf('type(mq.TLO.Me.Name) == %s', type(mq.TLO.Me.Name)) -- prints userdata\nprintf('type(mq.TLO.Me.Name()) == %s', type(mq.TLO.Me.Name())) -- prints string\n</code></pre> <p>Data returned by MQ is always of type userdata. Adding () on the end will convert the MQ userdata to the appropriate lua datatype. <pre><code>printf('type(mq.TLO.Spawn(\"npc\") == %s', type(mq.TLO.Spawn(\"npc\")))\n-- The following print would throw an error because userdata cannot be concatenated to a string\nprintf('mq.TLO.Spawn(\"npc\") == %s', mq.TLO.Spawn(\"npc\"))\n\nprintf('type(mq.TLO.Spawn(\"npc\")() == %s', type(mq.TLO.Spawn(\"npc\")()))\nprintf('mq.TLO.Spawn(\"npc\")() == %s', mq.TLO.Spawn(\"npc\")())\n</code></pre></p>","tags":["lua"]},{"location":"lua/macro-to-lua/#commands","title":"Commands","text":"<p>Execute EQ and MQ commands from Lua scripts like so: <pre><code>mq.cmd('/keypress DUCK')\nmq.delay(1000)\nmq.cmd('/keypress DUCK')\n</code></pre></p> <p>To run a command with formatted input, use <code>mq.cmdf</code>: <pre><code>mq.cmdf('/echo %s', mq.TLO.Me.Name())\n</code></pre></p>","tags":["lua"]},{"location":"lua/macro-to-lua/#bindings","title":"Bindings","text":"<p>Lua Events and Binds Define a function for the bind to call when its executed <pre><code>local function bind_help()\n  print('some helpful text')\nend\n</code></pre></p> <p>Assign the function to a command that can be run in game: <pre><code>mq.bind('/howto', bind_help)\n</code></pre></p> <p>Binds can be removed using <code>mq.unbind(bindCommand)</code>.</p>","tags":["lua"]},{"location":"lua/macro-to-lua/#events","title":"Events","text":"<p>Lua Events and Binds First step is to define the function which will be called when the event triggers: <pre><code>local function event_handler()\n  print('entered event_handler')\nend\n</code></pre></p> <p>Next, define the event using <code>mq.event</code> and pass the event name, match text, and the function. <pre><code>mq.event('BrokenPole', \"#*#You can't fish without a fishing pole, go buy one.#*#\", event_handler)\n</code></pre></p> <p>Then later, typically in the main run loop of the script, call <code>mq.doevents</code>. <pre><code>mq.doevents()\n</code></pre></p> <p>Similar to macros, events can also be flushed with <code>mq.flushevents()</code>.  </p> <p>Events can be deregistered using <code>mq.unevent(eventName)</code>.</p>","tags":["lua"]},{"location":"lua/macro-to-lua/#macro-select-statements","title":"Macro ${Select[...]} Statements","text":"<p>Lua doesn't have <code>${Select[...]}</code> quite like the macro language does, but it has other solutions:</p> <ol> <li> <p>Use a loop and iterate through values:</p> <p>Consider a select statement like <code>${Select[${Me.Class.ShortName},clr,dru,shm]}</code></p> <pre><code>local my_class = mq.TLO.Me.Class.ShortName()\nfor _,class in  ipairs({'clr','dru','shm'}) do\n    if my_class == class then\n        -- assign something or perform some action based on matching class\n    end\nend\n</code></pre> </li> <li> <p>Use logical operators like \"or\" (https://www.lua.org/pil/3.3.html)</p> <p>Consider a select statement like <code>${Select[${role},pullertank,tank]}</code></p> <pre><code>local role = 'tank'\nif role == 'pullertank' or role == 'tank' then\n    -- assign something or perform some action based on matching role\nend\n</code></pre> </li> <li> <p>Use tables by checking for the presence of the value in the table</p> <p>Consider a select statement like <code>${Select[${Zone.ID},345,344,202,203,279,151,33506]}</code></p> <pre><code>local safe_zones = { [345]=true, [344]=true, [202]=true, [203]=true,  [279]=true, [151]=true, [33506]=true}\nlocal current_zone = mq.TLO.Zone.ID()\nif safe_zones[current_zone] then\n    -- disable some functionality because we are in a safe zone\nend\n</code></pre> <p>The above example checks the current zone ID against a list of zone IDs which have been classified as safe zones.</p> <pre><code>local mez_classes = { brd=true, enc=true }\nlocal my_class = mq.TLO.Me.Class.ShortName()\nif mez_classes[my_class] then\n    -- enter into mez handling routines\nend\n</code></pre> <p>The above example checks the characters class against a list of mez capable classes to gate entering mez handling functions.</p> <p>Taking this a bit further, table values can also be functions: <pre><code>local function enc_mez()\nprint('handle mezzing as an enc')\nend\n\nlocal function brd_mez()\nprint('handle mezzing as a brd')\nend\n\nlocal mez_funcs = { enc=enc_mez, brd=brd_mez }\nlocal my_class = mq.TLO.Me.Class.ShortName()\nif mez_funcs[my_class] then\nmez_funcs[my_class]() -- call the function from the table\nend\n</code></pre></p> </li> </ol>","tags":["lua"]},{"location":"lua/macro-to-lua/#macro-delay","title":"Macro /delay","text":"<p>Use mq.delay to achieve the same thing as a macros /delay command.</p> <p>Delay a fixed amount of time: <pre><code>print('wait 1 second then print again')\nmq.delay(1000)\nprint('finished waiting')\n</code></pre></p> <p>Delay with a condition to end the delay early: <pre><code>local function should_stop_waiting()\n  -- implement some more complex condition for when to break\n  -- early from the delay.\n  return not mq.TLO.Me.Casting()\nend\n\nprint('wait 5 seconds or until should_stop_waiting() returns true')\nmq.delay(5000, should_stop_waiting)\nprint('finished waiting')\n</code></pre></p> <p>This provides a function which will be called, which should return true or false, to decide whether to cancel the delay.</p> <p>Warning</p> <p><code>mq.delay</code> cannot be used within an ImGui callback. It will result in an error, as the ImGui callback is called every frame and cannot be delayed. A required module also cannot include <code>mq.delay</code> within its global scope.  </p> <p>In this example, a button click in the UI attempts to wait for an action to complete. The UI cannot be delayed, so it does not work. <pre><code>if ImGui.Button('mem spell') then\n    mq.cmd('/memspell 1 \"minor healing\"')\n    mq.delay(5000)\nend\n</code></pre> A more appropriate way to solve this would be to set some state from the button, and then handle the spell memorization from the scripts main loop.</p> <p>In this example, <code>init.lua</code> tries to require a module which uses <code>mq.delay</code> at the global scope, and so it does not work. <pre><code>-- navHelper.lua\nlocal mq = require('mq')\n\nmq.cmd('/nav target')\nmq.delay(5000)\nprint('ran to target')\n</code></pre> <pre><code>-- init.lua\nrequire('navHelper')\n</code></pre> Modules which are loaded with require should generally have all logic contained within functions, which can then be called.</p>","tags":["lua"]},{"location":"lua/macro-to-lua/#macro-sub-main-function","title":"Macro Sub Main Function","text":"<p>Lua scripts are processed from top to bottom, and don't actually require code to be inside of a function, unlike how macros always have a Sub Main where execution begins. Think of the entire lua file itself as the main function, entering at line 1 of the file when the script is run.</p> <p>There will often times still be blocks of code that perform a similar function to the main subroutine of a macro, like the typical /while or /goto loops people are familiar with from macros.</p> <p>For example, consider a macro Sub Main like below: <pre><code>Sub Main\n  /while (1) {\n    /doevents\n    /call check_target\n    /delay 10\n  }\n/return\n</code></pre></p> <p>This could be accomplished in lua using a while loop: <pre><code>while true do\n  mq.doevents()\n  check_target()\n  mq.delay(10)\nend\n</code></pre></p> <p>Code like the above example will usually be near the bottom of the file, due to how lua scripts are processed. Variables and functions can only refer to things which have already been defined, i.e. were declared earlier in the file (unless defined globally, but avoid that unless necessary).</p> <p>Alternatively, the code could be placed inside of a function, which is then called later on near the bottom of the file.</p> <pre><code>local function main()\n  while true do\n    mq.doevents()\n    mq.delay(100)\n  end\nend\n\nmain()\n</code></pre>","tags":["lua"]},{"location":"lua/macro-to-lua/#macro-call-and-macroreturn","title":"Macro /call and ${Macro.Return}","text":"<p>Macro subroutines call other subroutines using <code>/call my_function \"${arg1}\"</code>. Lua functions are just called like <code>my_function(arg1)</code>.</p> <p>Macro subroutines return results using <code>/return ${result}</code>. Lua functions return similarly, using <code>return result</code>.</p> <p>Example: The macro Main sub calls subroutine IsPluginLoaded with argument \"mq2eqbc\". IsPluginLoaded returns the result of the Plugin.IsLoaded TLO Member, which is TRUE or FALSE. <pre><code>Sub IsPluginLoaded(plugin)\n    /if (${Plugin[${plugin}].IsLoaded}) /return TRUE\n/return FALSE\n\nSub Main\n    /call IsPluginLoaded \"mq2eqbc\"\n    /echo ${Macro.Return}\n/return\n</code></pre></p> <p>Example: The lua script calls function IsPluginLoaded with argument 'mq2eqbc'. IsPluginLoaded returns the result of the Plugin.IsLoaded TLO Member, which is true or false. <pre><code>local function IsPluginLoaded(plugin)\n    return mq.TLO.Plugin(plugin).IsLoaded()\nend\n\nlocal eqbcLoaded = IsPluginLoaded('mq2eqbc')\nprint(eqbcLoaded)\n</code></pre></p>","tags":["lua"]},{"location":"lua/macro-to-lua/#timers","title":"Timers","text":"<p>Timer variables are used commonly throughout macros for controlling how often to attempt an action as well as other scenarios. There is no direct translation from the macro Timer type to Lua, however, a couple different options are available to implement them.  </p> <ol> <li><code>mq.gettime</code>: MQ provides this function for getting the current time with millisecond precision.  </li> <li><code>os.time</code> and <code>os.difftime</code>: These can be used to implement a timer with second precision. PIL </li> </ol> <p>Example: Only use an ability when its reuse time has passed. <pre><code>local function do_ability(ability)\n  if mq.gettime() - ability.lastUsedMillis &gt; ability.reuseTimeMillis then\n    mq.cmdf('/useability %s', ability.name)\n    ability.lastUsedMillis = mq.gettime()\n  end\nend\n</code></pre> Alternatively, a timer class could be created using similar logic to above for better reusability, allowing for code like <code>if ability.timer.is_expired() then</code>.</p>","tags":["lua"]},{"location":"lua/macro-to-lua/#mqparse","title":"mq.parse","text":"<p>The <code>mq.parse</code> command allows to evaluate a macro expression in Lua and assign the result to a variable. This could be useful if reading macro expressions such as conditions like those in KA or reacts from an INI file.</p> <pre><code>local mq = require('mq')\n\nlocal IF_STMT = '${If[%s,1,0]}'\n\nlocal function testCondition(condition)\n  -- the output from mq.parse is a string\n  return mq.parse(IF_STMT:format(condition)) == '1'\nend\n\n-- pretend these conditions were just read in from some config file like a KA INI\nlocal conditions = {\n  '${Me.PctHPs}&lt;50',\n  '${Me.PctHPs}&gt;50',\n}\n\nfor _,condition in ipairs(conditions) do\n  if testCondition(condition) then\n    printf('Condition \"%s\" was true', condition)\n  else\n    printf('Condition \"%s\" was false', condition)\n  end\nend\n</code></pre>","tags":["lua"]},{"location":"lua/macro-to-lua/#other-commonly-used-tlos","title":"Other commonly used TLOs","text":"<ul> <li>Math: Prefer to use the native math operations supported in Lua. There's no need to use <code>${Math.Calc[]}</code> or <code>/varcalc</code> when the language can already do <code>1 + 1</code>. For other operations like rounding, floor, ceiling, see the math library.</li> <li>String: Lua provides plenty of string related operations which can be found here. There should be no need to use the <code>String</code> TLO.</li> <li>.Equal and .NotEqual: No need to use macro language sorts of comparators, just use lua <code>==</code> and <code>~=</code> instead.</li> <li>.Arg[|,2]: Lua provides many examples for splitting strings which remove the need to use macro <code>.Arg</code>.</li> </ul>","tags":["lua"]},{"location":"lua/macro-to-lua/#storage","title":"Storage","text":"<p>For more info on storage, such as persisting configuration for a Lua script, refer to Persisting Configuration in Lua Scripts </p>","tags":["lua"]},{"location":"lua/macro-to-lua/#extras","title":"Extras","text":"","tags":["lua"]},{"location":"lua/macro-to-lua/#the-lua-parse-command","title":"The /lua parse command","text":"<p>MQ provides a command line utility for parsing lua, which is pretty useful for debugging. It automatically includes <code>local mq = require('mq')</code>, and can be used like: <pre><code>/lua parse mq.TLO.Me.Name()\n</code></pre></p> <p>It can do much more than that, including multiple statements strung together, loops, etc. The output gets printed to the console. <pre><code>/lua parse i = 1 while mq.TLO.NearestSpawn(i..', pc')() do print(mq.TLO.NearestSpawn(i..', pc')) i=i+1 end\n</code></pre></p> <p>The above example would print the name of PCs incrementing over a NearestSpawn search.</p>","tags":["lua"]},{"location":"lua/macro-to-lua/#vs-code-extensions","title":"VS Code Extensions","text":"<p>In addition to <code>mq-defs</code>, some useful VS Code extensions include:</p> <ul> <li>Rainbow Brackets  </li> <li>Indent Rainbow  </li> <li>Vscodemq2  </li> <li>Codemap  </li> </ul> <p>For the codemap extension, add a reference to this javascript file (ColdBlooded's handywork again) to the codemap section in <code>settings.json</code>:</p> <p><code>\"codemap.mac\": \"&lt;location of that file&gt;\",</code></p> <pre><code>\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"fs\");\nclass mapper {\n    static read_all_lines(file) {\n        let text = fs.readFileSync(file, 'utf8');\n        return text.split(/\\r?\\n/g);\n    }\n    static generate(file) {\n        \"\".match(/.* \\(.*\\) {/g);\n        let members = [];\n        try {\n            let line_num = 0;\n            mapper\n                .read_all_lines(file)\n                .forEach(line =&gt; {\n                line_num++;\n                line = line.trimStart();\n                if (line.startsWith(\"Sub \"))\n                    members.push(`${line.substr(4)}|${line_num}|function`);\n                else if (line.startsWith(\": \"))\n                    members.push(`${line.substr(1)}|${line_num}|level2`);\n            });\n        }\n        catch (error) {\n        }\n        return members;\n    }\n}\nexports.mapper = mapper;\n//# sourceMappingURL=mapper_md.js.map\n</code></pre>","tags":["lua"]},{"location":"lua/macro-to-lua/#mixing-lua-and-macro","title":"Mixing Lua and Macro","text":"<p>Macro variables have always been available through the command line while a macro is running. For example, when running a macro that created a global variable <code>MainAssistID</code>, then it is possible to <code>/echo ${MainAssistID}</code> and see the value of that variable at any time.</p> <p>Similarly, macro variables could be updated from the console using <code>/varset</code>.</p> <p>Lua variables are not exposed in the same way, regardless of whether they are global or local. One Lua script cannot access variables from another separately running Lua script, or by the lua parse command.</p> <p>Lua does have access to Macro variables, through <code>mq.TLO.Macro.Variable('macro_variable_name')()</code>. This makes it possible to do something like use Lua to create an ImGui based UI for an existing macro.</p>","tags":["lua"]},{"location":"lua/macro-to-lua/#common-problems","title":"Common Problems","text":"<ul> <li> <p>Comparing values with data from <code>mq.TLO.Something</code>: Due to the difference between userdata and regular lua types like numbers or strings, comparisons will often fail when the values visibly look like they should be the expected type.</p> <p>Example:  <pre><code>if mq.TLO.Target.CleanName == 'aquietone' then\n</code></pre> This will never succeed because <code>mq.TLO.Target.CleanName</code> is of type <code>userdata</code>, not <code>string</code>. It needs <code>()</code> on the end to trigger the evaluation from <code>userdata</code> to a lua <code>string</code>, like: <pre><code>if mq.TLO.Target.CleanName() == 'aquietone'\n</code></pre></p> <p>Example: <pre><code>if mq.TLO.Target.PctHPs &lt; 90 then\n</code></pre> This will have the same issue, printing <code>mq.TLO.Target.PctHPs</code> will look like a number, but it is actually <code>userdata</code>, and it needs to be evaluated by adding <code>()</code>.</p> </li> <li> <p>Command line argument types for bindings are always going to be passed into the bind function as strings. <code>tonumber(variable)</code> can be used to convert the type to a number in order to accept a number input to a binding command. If the input can not be parsed to a valid number, then <code>tonumber(variable)</code> will return <code>nil</code>.</p> </li> <li> <p><code>mq.delay</code> is causing errors or being ignored. There may be scenarios, as outlined above in the section on <code>mq.delay</code>, where delays are not supported. MQ will normally throw an error saying so, but there may be scenarios which are missing the appropriate error handling.</p> </li> </ul>","tags":["lua"]},{"location":"lua/pickle/","title":"Persisting Configuration in Lua Scripts","text":"<p>Lua comes with several options for reading and writing configuration files in a variety of formats.  </p>"},{"location":"lua/pickle/#configuration-file-formats","title":"Configuration File Formats","text":""},{"location":"lua/pickle/#lua-tables","title":"Lua Tables","text":"<p>The most straightforward approach to persisting configuration in Lua is to use Lua itself. Tables in Lua can be persisted to files and loaded back in by Lua scripts. Tables look very similar to JSON in structure.  </p> <p>Example Lua table as a configuration file: <pre><code>return {\n  setting1 = true,\n  setting2 = 5,\n  ['multiple word setting'] = 'some value',\n  nestedSettings = {\n    settingA = 1,\n    settingB = false\n  }\n}\n</code></pre></p>"},{"location":"lua/pickle/#mqpickle","title":"mq.pickle","text":"<p>This is a built-in function provided by MQ for serializing a Lua table to a file.  </p> <pre><code>local mq = require('mq')\n\n-- initialize your config table\nlocal myconfig = {}\n-- name of config file in config folder\nlocal path = 'pickletestcfg.lua'\n-- attempt to read the config file\nlocal configData, err = loadfile(mq.configDir..'/'..path)\nif err then\n    -- failed to read the config file, create it using pickle\n    mq.pickle(path, myconfig)\nelseif configData then\n    -- file loaded, put content into your config table\n    myconfig = configData()\nend\n-- print the contents\nfor k,v in pairs(myconfig) do print(k,v) end\n\nmyconfig.testkey = 'testvalue'\n\n-- save the config\nmq.pickle(path, myconfig)\n</code></pre>"},{"location":"lua/pickle/#many-table-serialization-options-on-lua-users","title":"Many table serialization options on lua-users","text":"<p>The lua-users wiki provides many example Lua table serialization implementations.</p>"},{"location":"lua/pickle/#yaml","title":"YAML","text":"<p>YAML provides an easy to read format if you don't mind being dependent on proper indentation.</p> <pre><code>settings:\n- setting1: somevalue\n- setting2:\n  - nestedSetting: anothervalue\n</code></pre>"},{"location":"lua/pickle/#lyaml-luarock","title":"lyaml LuaRock","text":"<p>The MQ LuaRocks server has a version of lyaml available which can be installed using the Lua PackageMan script provided by MQ.  </p> <pre><code>local lyaml = PackageMan.Require('lyaml')\n</code></pre> <p>More info on lyaml here.</p>"},{"location":"lua/pickle/#json","title":"JSON","text":"<pre><code>{\n  \"setting1\": \"somevalue\",\n  \"setting2\": {\n    \"nestedSetting\": \"anothervalue\"\n  }\n}\n</code></pre>"},{"location":"lua/pickle/#cjson-luarock","title":"cjson LuaRock","text":"<p>The MQ LuaRocks server has a version of <code>cjson</code> available which can be installed using the Lua PackageMan script provided by MQ.  </p> <pre><code>local cjson = PackageMan.Require('lua-cjson', 'cjson')\n</code></pre> <p>More info on cjson here</p>"},{"location":"lua/pickle/#sqlite3","title":"SQLite3","text":"<p>If you would prefer to use a database over a text based configuration file, SQLite3 is supported as well.  </p>"},{"location":"lua/pickle/#libsqlite3","title":"libsqlite3","text":"<p>The MQ LuaRocks server has a version of <code>lsqlite3</code> available which can be installed using the Lua PackageMan script provided by MQ.</p> <pre><code>local sql = PackageMan.Require('lsqlite3')\n</code></pre> <p>More info on lsqlite3 here</p>"},{"location":"lua/pickle/#ini","title":"INI","text":""},{"location":"lua/pickle/#mqtloini-and-ini-command","title":"mq.TLO.Ini and /ini command","text":"<p>MQ has the <code>Ini</code> TLO and <code>/ini</code> commands which are used heavily by macros and work well for reading and writing INI files. Refer to the reference pages for more info on them.</p>"},{"location":"lua/pickle/#liplua-lua-ini-parser","title":"LIP.lua Lua INI Parser","text":"<p>Lua INI Parser is a tiny Lua library allowing to handle .ini files. https://github.com/Dynodzzo/Lua_INI_Parser</p>"},{"location":"macros/","title":"Macro Reference","text":"<p>The use of macros is what really makes MacroQuest extremely powerful. Additional in-game functionality like the map, cross-zone targeting, enhanced /who, custom binds, the HUD and plugins are useful, but macroing is what **Macro**Quest is all about.</p> <p>See Getting Started for some introductory information about macros. This page is concerned primarily with all the relevant information required to create your own macros.</p>"},{"location":"macros/#macro-fundamentals","title":"Macro Fundamentals","text":"<p>The MQ scripting language primarily involves the use of Slash Commands, variables, Top-Level Objects and some Flow Control to help the macro along.</p> <p>Accessing and manipulating data can be done with:</p> <ul> <li>Variables</li> <li>MQ2Data<ul> <li>Top-Level Objects</li> <li>Data Types</li> </ul> </li> <li>Slash Commands</li> </ul> <p>Things that can be added to the macro file:</p> <ul> <li>Comments</li> <li>Macro Directives</li> <li>Custom Events</li> </ul> <p>Controlling macro execution is done with:</p> <ul> <li>Flow Control</li> <li>Operators</li> <li>Subroutines and Functions</li> </ul>"},{"location":"macros/#include-files","title":"Include Files","text":"<p>An effective way to store subroutines which are used in multiple macros is by using include files. Include files hold code just like macros, but do not have a Main subroutine. To use an include file, add \"#include FileNameHere\" in your macro. Include files can be any file type that works with plain text, such as .txt or .ini, but .inc is the most common file type.</p>"},{"location":"macros/#macro-tips","title":"Macro Tips","text":"<ul> <li>Sometimes you find a macro, and it's ALMOST what you need it for. In those cases, just edit the macro for your use.</li> </ul> <p>Take a look at this tutorial: Editing Existing Macros</p> <ul> <li>Be patient and expect to fail a few times. If your macro involved killing stuff, expect to die a few times to</li> </ul> <p>perfect your macro.</p> <ul> <li>Remember to check your syntax. Most of the common problems people run into are becuase they haven't closed their</li> </ul> <p>{}'s, []'s and ()'s properly. If you have to, start at the end of the troublesome section and start matching up</p> <p>the {}'s, []'s and ()'s by hand. It can really help sometimes to just print the macro and start crossing them out.</p> <ul> <li>For people using Utraedit, here is an addition you can make to your UltraEdit Syntax File</li> </ul> <p>that will give you some syntax highlighting and reformatting.</p>"},{"location":"macros/beginners-guide-datatypes/","title":"Beginners Guide to TLOs and DataVars","text":""},{"location":"macros/beginners-guide-datatypes/#introduction","title":"Introduction","text":"<p>Top-Level Objects (TLOs) are basically \"built-in\" global variables that contain information from the EQ client.</p>"},{"location":"macros/beginners-guide-datatypes/#usage","title":"Usage","text":"<p>In order to use these built-in variables, you need to pick a Top-Level Object to start with, and then \"build\" the variable by adding one or more DataType members of that TLO. It's best understood with some examples. Note: TLOs and members are all case sensitive, so enter them exactly as seen.</p>"},{"location":"macros/beginners-guide-datatypes/#example-1-mana-percentage","title":"Example 1: Mana Percentage","text":"<p>Say you want to display your current Mana Percentage in a HUD or use it in a macro.</p> <ul> <li>First off, you look through the list of TLOs and pick one that best suits the information you're looking for. The Me TLO looks like a good bet.</li> <li>Opening that page, you see that the Me TLO has access to the character datatype and the spawn datatype. The character datatype contains information about your own character, mostly things that only you will know (eg. how much mana you have, what spells you have loaded, etc). Since your character is also a spawn in the EQ world (ie. other people can see you and interact with you), you are also able to access the spawn datatype, which gives information that other characters in the same zone may know (eg. your location, your race, your class, etc).</li> <li>Since we're looking for your Mana Percentage, this is something that only you can know, so choose the character datatype page.</li> <li>This will display a list of all the members that are available to character. In the front of each datatype is an italic word, which is the datatype that the member belongs to. It may seem a bit confusing right now but should get easier as we progress to more complex examples.</li> <li>Scroll down the list until you find a member that looks like it will give us what we need. The PctMana member looks good.</li> <li>The int in front of PctMana shows that it is an integer. Since we're expecting a number, this seems correct.</li> <li>Click on the int link and you'll notice another table similar to the character datatype. This table has all the members of the int datatype. Note that the bottom line of the list is **To String_, which is the default for the datatype. The default for the_ int datatype is the number. Since we're just looking for the number, we can stop here.</li> <li>So now we can \"build\" our variable. Remember, all variables start with a $-sign and are surrounded by braces { }.</li> </ul> <p>We start with our TLO:</p> <p><code>${Me</code></p> <ul> <li>Then we add a period to indicate that we want to include a member of Me:</li> </ul> <p><code>${Me.</code></p> <ul> <li>Now we add the first datatype, PctMana:</li> </ul> <p><code>${Me.PctMana</code></p> <ul> <li>Now PctMana is an int and the default for int is just the number, so we don't need to add any members of int. So we can close off the variable now:</li> </ul> <p><code>${Me.PctMana}</code></p> <ul> <li>To test this variable, you can echo it in the EQ client. So typing the following will echo your mana percentage to the MQ2 chat window:</li> </ul> <p><code>/echo ${Me.PctMana}</code></p>"},{"location":"macros/beginners-guide-datatypes/#example-2-class-shortname","title":"Example 2: Class ShortName","text":"<p>The next example deals with getting your class short name (the 3-letter abbreviation of your class).</p> <ul> <li>Find the most likely TLO again. Again, the Me TLO looks best.</li> <li>Find the member you would like to select. To find the members of Me, go to</li> <li>Character</li> <li>Scrolling through the members of Me, Class looks like the best candidate.</li> <li>The class datatype has a default of \"Same as Name\". Looking at the Name member, we can see that it is the \"long name\" of the class (eg. Enchanter). We're actually looking for the short name, so we need to find a member of class found here Class. Funny enough, ShortName looks like it will do the job.</li> <li>ShortName is a string datatype and the default for this datatype (surprisingly) is the string, and since we're looking for a 3-letter string, this is perfect. So now we've found our endpoint, we can build the variable as before.</li> <li>Start with the TLO:</li> </ul> <p><code>${Me</code></p> <ul> <li>Add the first member</li> </ul> <p><code>${Me.Class</code></p> <ul> <li>Since we need a member of Class, we add another period and the next member</li> </ul> <p><code>${Me.Class.ShortName</code></p> <ul> <li>We've now arrived at the end of our variable, so we \"close\" it here</li> </ul> <p><code>${Me.Class.ShortName}</code></p> <ul> <li>Again, to test, we echo the variable and see that the result is what we expect.</li> </ul> <p><code>/echo ${Me.Class.ShortName}</code></p>"},{"location":"macros/beginners-guide-datatypes/#example-3-comparison-using-a-string","title":"Example 3: Comparison using a string","text":"<p>For the next example, we will use the variable and compare it to a string in an if statement. Let's say we want to echo something if we're a bard, and something else if we're not.</p> <ul> <li>We'll be using the same ShortName example as above, but since we don't just want to echo the current short name,</li> </ul> <p>we have to go a step further.</p> <ul> <li>Go back to the ShortName member and you'll see that it is a string datatype.</li> <li>Under the string datatype, you'll see the Equals member. This is the one we'll be using. Equals is a</li> </ul> <p>bool datatype, which means that it doesn't have any members. It will return 1 if true and 0 if false, which is</p> <p>good enough for our test.</p> <ul> <li>In the following example, I'll be using an /if statement. For the purposes of this example, you don't need to understand how they work, but they're the staple of MQ2, so it's a good idea to have a look at the Flow Control page and familiarize yourself with /if and its friends.</li> <li>Returning to the example though, let's build the variable. We'll start with where we left off in the previous example. Since we want to access a member of ShortName, we won't close it off:</li> </ul> <p><code>/if (${Me.Class.ShortName</code></p> <ul> <li>You'll notice that the Equals datatype has square brackets after it, which means that you need to enter something between the brackets. This can be another variable or just a string. For this example, we're checking if we're a bard:</li> </ul> <p><code>/if (${Me.Class.ShortName.Equals[BRD]</code></p> <ul> <li>Remember that we're using ShortName, so we need to include the 3-letter abbreviation. Since this is the end of the variable (Equals is a bool), we can close it off:</li> </ul> <p><code>/if (${Me.Class.ShortName.Equals[BRD]}</code></p> <ul> <li>But this is actually an /if statement, and we need to close that off to, so lets make it echo something if we're a bard.</li> </ul> <pre><code>/if (${Me.Class.ShortName.Equal[BRD]}) {\n  /echo Catch me if you can!\n}\n</code></pre> <ul> <li>We'll flesh this out a bit more by echoing one thing if we're a bard and another if we're not:</li> </ul> <pre><code>/if (${Me.Class.ShortName.Equal[BRD]}) {\n  /echo Catch me if you can!\n} else {\n  /echo Nerf bards!\n}\n</code></pre>"},{"location":"macros/comments/","title":"Comments","text":"<p>Comments</p> <p>Comments are descriptive lines in a macro to make reading easier. These are not executed when the macro runs.</p> <p>Single line comments start with <code>|</code>:</p> <pre><code>| This is a single line comment.\n</code></pre> <p>Multi line comments can also be used. Multi-line comments begin with <code>|**</code> and end with <code>**|</code>.</p> <pre><code>|** This is a multiple line comment where\n    you could use this form of commenting **|\n</code></pre>"},{"location":"macros/custom-events/","title":"Custom Events","text":""},{"location":"macros/custom-events/#basic-event-usage","title":"Basic Event Usage","text":"<p>The Custom Event system allows you to trigger Subroutines off of any text that reaches the EQ client. Basically any text that is displayed in an EQ chat window, or in the MQ2 chat window can be used. You are able to use parts of the text as parameters for your event subroutine. An example of an #event is below:</p> <pre><code>#event Invite           \"BillyBob invites you to join a group.\"\n</code></pre> <p>This means that when the text \"BillyBob invites you to join a group.\" appears on screen, the event will queue up. It's important to remember that the event will not trigger it's subroutine until you allow it to in your macro. You do so by adding \"/doevents\" or \"/doevents Invite\" at an appropriate point in your macro.</p> <p>When your macro hits the /doevents line, it will trigger any events that are queued up. At this point, the macro will look for the appropriately named subroutine, which in the above case is \"Sub Event_Invite\". So to flesh out the example above, we should have the following macro:</p> <pre><code> #event Invite           \"BillyBob invites you to join a group.\"\n Sub Main\n   :mainloop\n   /doevents\n   /delay 0\n   /goto :mainloop\n /return\n\n Sub Event_Invite\n   /echo BillyBob invited me!\n /return\n</code></pre> <p>This will keep running /doevents and when it senses the #event trigger text, it will /echo the text in the Event Sub.</p>"},{"location":"macros/custom-events/#using-part-of-the-event-text-as-a-variable","title":"Using part of the #event text as a variable","text":"<p>Now while the above example is pretty useful (eg. you can accept the invite in the Sub Event_Invite), what if we want to accept invites from more than one person? We could create two separate events and have them each echo a different piece of text. Or we could use part of the event text as a variable and manipulate it in the subroutine. You can do this by marking out the part of text you want to use as a variable. In the above example, we'll use the inviter's name:</p> <pre><code> #event Invite           \"#1# invites you to join a group.\"\n Sub Main\n   :mainloop\n   /doevents\n   /goto :mainloop\n /return\n\n Sub Event_Invite(Line,Inviter)\n   /echo ${Inviter} invited me!\n /return\n</code></pre> <p>A few things to note about the above example:</p> <ol> <li>Firstly, we use #1# to mark the first variable that we'd like passed to our Sub. If you want more than one variable</li> </ol> <p>to be passed, you can use #2# and greater to indicate other variables.</p> <ol> <li>Secondly, the above Sub has two variables passed to it - ${Line} and ${Inviter}. 1. The #event system will always pass the entire line of matched text to the subroutine as the first variable. Even</li> </ol> <p>if you don't wish to use the entire line of text, you need to define the variable. Using \"Line\" as the first</p> <p>variable is very common. However the first variable can be called whatever you'd like, especially if you'd like</p> <p>to use the line in your Sub!</p> <ol> <li> <p>The next variable, Inviter, is the one we're interested in, and will match whatever's between the first set of #</p> <p>symbols in the #event line.</p> </li> </ol> <p>So when the text \"PeggySue invites you to a group.\" appears in a chat window, the same event will trigger, and it will echo</p> <pre><code>\"PeggySue invited me!\"\n</code></pre> <p>in the MQ2 chat window.</p>"},{"location":"macros/custom-events/#ignoring-parts-of-the-event-text","title":"Ignoring parts of the #event text","text":"<p>You can also ignore certain parts of the trigger text by using #*#. So the example:</p> <pre><code>#event Invite           \"#1# invites you to join #*#\"\n</code></pre> <p>Would trigger when someone invited you to a group or a raid.</p>"},{"location":"macros/custom-events/#using-variables-in-the-event-text","title":"Using variables in the #event text","text":"<p>You can also have the #event system parse variables at the time of the match too. In the following example:</p> <pre><code>#event Follow \"#*#follow |${Me.CleanName}|'\"\n</code></pre> <p>When the text, apart from what is between the | symbols, is matched, it then evaluates what's between the | symbols and the event is triggered if the variable matches the text.</p> <p>So if ${Me.CleanName} was \"PeggySue\", the following text would not be matched:</p> <p><code>BillyBob tells the raid, 'follow me'</code></p> <p>While the following text would be:</p> <p><code>BillyBob tells the raid, 'follow PeggySue'</code></p>"},{"location":"macros/custom-events/#chat-special-event","title":"#chat Special event","text":"<p>The #chat command is a special custom event. It will always pass the channel, sender and text to the Sub Event_Chat subroutine. So your Sub Event_Chat should look something like this:</p> <p><code>Sub Event_Chat(ChatChannel,ChatSender,ChatText)</code> <code>/echo ${ChatSender} told me ${ChatText} in ${ChatChannel}</code> <code>/return</code></p> <p>Variable names can be anything you choose.</p>"},{"location":"macros/custom-events/#timer-events","title":"Timer Events","text":"<p>This is another special custom event. The name of the Timer and the Original Value it was set to, are passed to the subroutine as soon as the timer reaches 0. For example:</p> <p><code>Sub Event_Timer(Timer,OriginalValue)</code> <code>/echo ${Timer} reached 0, original value was ${OriginalValue}</code> <code>/return</code></p>"},{"location":"macros/custom-events/#notes-and-tips","title":"Notes and Tips","text":"<ol> <li>Because the system lets you pick the parameter number of any portion of the message, some parameters may not get</li> </ol> <p>defined. It's up to you to make sure you define all the needed parameters, and to make sure they're defined as the</p> <p>correct type (string, int, bool, etc).</p> <ol> <li>Pay particular attention to the syntax of your #event line. It will only trigger if the text is identical, so best</li> </ol> <p>to check it against text in game or in your log file.</p>"},{"location":"macros/custom-events/#if-your-death-event-no-longer-works","title":"If your death event no longer works","text":"<p>Note: This should be fixed as of the 20060628 MQ2 release.</p> <p>A common use for #event in a lot of macros was for use when you died, something like this:</p> <p><code>#event Died \"#*#You have entered#*#\"</code></p> <p>Due to a few small bugs, this event did not always work. To work around this, you can do the following:</p> <ol> <li>Declare an outer variable with the ID of your zone in the Main sub.</li> <li>Somewhere in your main loop, add a check that calls the #event if the zone is not the same.</li> <li>Reset the outer variable within your event.</li> </ol> <p>For example</p> <pre><code> #event Died       \"#*#You have entered#*#\"\n\n sub Main\n   /declare zonecheck int outer ${Zone.ID}\n\n   :main_loop\n   /if (${zonecheck} != ${Zone.ID}) /call Event_Died\n   /delay 0\n   /goto :main_loop\n /return\n\n sub Event_Died\n   /varset zonecheck ${Zone.ID}\n   /sit\n   /delay 10s\n   /afk\n   /endmacro\n /return\n</code></pre>"},{"location":"macros/editing-existing-macros/","title":"Editing Existing Macros","text":"<p>kharmakazy requested a macro that could loot any corpse. A macro like this already exists, so instead of inventing the wheel let's just change a current macro so it does what we need.</p> <p>The macro in question is called Wait4Rez.mac by FaNTuM. His macro is for when you die, it'll consent group, raid, and guild. It will then wait for a rez box, auto-accept it, wait till you finish zoning, summon your corpse, then loot all the items. One particular reason I like this macro is that its clean and efficient, and it works. Without further babble, here's FaNTuM's macro - unedited:</p> <pre><code>|** Wait4rez.mac by FaNTuM\nThis will automatically accept rez, then loot your corpse for you, leaving\nthe specified number of items on it. Usage:&amp;lt;/mac wait4rez 0&amp;gt;where 0\nis the number of items to leave on corpse, 0 loots all items.\n03/30/2005 **|\n\n| --------------\n| -- Main Sub --\n| --------------\nSub Main\n/declare t int outer 0\n/declare loottotal int outer\n/declare lootslot int outer\n/declare lootleft int outer 1\n\n/if (!${Defined[Param0]}) {\n/echo Defaulting to leaving ${lootleft} item/s on corpse\n} else {\n/varset lootleft ${Param0}\n}\n/echo Wait4rez.mac activated. Now consenting guild, raid, and group.\n| --------------\n| -- Consents --\n| --------------\n/consent guild\n/delay 30\n/consent raid\n/delay 30\n/consent group\n/echo Awaiting rez: will auto-accept, then loot leaving ${lootleft} item/s on corpse\n| ---------------------\n| -- Auto-accept Rez --\n| ---------------------\n:waitforrez\n/if (!${Window[ConfirmationDialogBox].Open}) {\n/delay 1s ${Window[ConfirmationDialogBox].Open}\n/goto :waitforrez\n}\n/if (${Window[ConfirmationDialogBox].Open}) /notify ConfirmationDialogBox Yes_Button leftmouseup\n| ----------------------------------------------\n| -- Wait until fully zoned in before looting --\n| ----------------------------------------------\n:zonein\n/delay 5\n/target mycorpse\n/delay 5 ${Target.CleanName.Equal[${Me}'s corpse]}\n/if (${Target.CleanName.NotEqual[${Me}'s corpse]}) /goto :zonein\n/if (${Target.CleanName.Equal[${Me}'s corpse]}) {\n/delay 3s\n/call Loot\n} else {\n/goto :zonein\n}\n/end\n\n| -----------------------\n| -- Pull corpse close --\n| -----------------------\nSub Loot\n:corpsepull\n/target mycorpse\n/delay 5 ${Target.CleanName.Equal[${Me}'s corpse]}\n/if (${Target.CleanName.NotEqual[${Me}'s corpse]}) {\n/echo No corpse in this zone\n/return\n}\n/delay 3s\n/corpse\n/delay 1s ${Target.Distance}&lt;20\n/if (${Target.Distance}&gt;20) {\n/echo Corpse is too far away\n/return\n}\n| ---------------------\n| -- Open the corpse --\n| ---------------------\n/if (${Target.CleanName.Equal[${Me}'s corpse]}) {\n/loot\n} else {\n/echo where did my corpse go?\n/return\n}\n/delay 5s ${Me.State.Equal[BIND]}\n/if (${Me.State.NotEqual[BIND]}) /goto :corpsepull\n/varset loottotal 0\n| -----------------\n| -- Count items --\n| -----------------\n/delay 3s\n:LootLag\n/if (${loottotal}!=${Corpse.Items}) {\n/varset loottotal ${Corpse.Items}\n/delay 2s\n/goto :LootLag\n}\n/if (${loottotal}&lt;=${lootleft}) {\n/echo Looting aborted. Error in number of items to be left on corpse.\n/notify LootWnd DoneButton leftmouseup\n/return\n}\n/varset loottotal ${Math.Calc[${Corpse.Items}-${lootleft}]}\n| ---------------------\n| -- Loot the corpse --\n| ---------------------\n/echo Looting all but ${lootleft} item(s)\n/for lootslot 1 to ${loottotal}\n:LootItem\n/itemnotify loot${lootslot} rightmouseup\n/delay 5 !${Corpse.Item[${lootslot}].ID}\n/if (!${Corpse.Item[${lootslot}].ID}) {\n/next lootslot\n} else {\n/goto :LootItem\n}\n| -----------------\n| -- Doublecheck --\n| -----------------\n/if (${Math.Calc[${Corpse.Items}-${lootleft}]}&gt;0) /goto :LootLag\n/notify LootWnd DoneButton leftmouseup\n/echo Done looting. ${lootleft} Item(s) left on your corpse.\n/return\n</code></pre> <p>Now, first thing we can skim away is the consent section. Since we will be looting NPC corpses we have no need to consent. By a quick glance, there's only a few lines that deal with consenting:</p> <pre><code>| --------------\n| -- Consents --\n| --------------\n/consent guild\n/delay 30\n/consent raid\n/delay 30\n/consent group\n/echo Awaiting rez: will auto-accept, then loot leaving ${lootleft} item/s on corpse\n</code></pre> <p>Now, let's look at the waiting for rez section. Again, when we kill a NPC we won't be getting a rez box, so that section can be removed as well.</p> <pre><code>| ---------------------\n| -- Auto-accept Rez --\n| ---------------------\n:waitforrez\n/if (!${Window[ConfirmationDialogBox].Open}) {\n/delay 1s ${Window[ConfirmationDialogBox].Open}\n/goto :waitforrez\n}\n/if (${Window[ConfirmationDialogBox].Open}) /notify ConfirmationDialogBox Yes_Button leftmouseup\n</code></pre> <p>Looking at the code, the next thing it does is it waits until it's fully zoned before looting. I'd surely hope you were fully zoned before looting a NPC corpse you just killed, so there's another section we can axe.</p> <pre><code>| ----------------------------------------------\n| -- Wait until fully zoned in before looting --\n| ----------------------------------------------\n:zonein\n/delay 5\n/target mycorpse\n/delay 5 ${Target.CleanName.Equal[${Me}'s corpse]}\n/if (${Target.CleanName.NotEqual[${Me}'s corpse]}) /goto :zonein\n/if (${Target.CleanName.Equal[${Me}'s corpse]}) {\n/delay 3s\n/call Loot\n} else {\n/goto :zonein\n}\n/end\n</code></pre> <p>Here we go again - next section deals with using the built in command /corpse to summon the corpse. (In case it was moved since you had been rezzed.)</p> <pre><code>| -----------------------\n| -- Pull corpse close --\n| -----------------------\nSub Loot\n:corpsepull\n/target mycorpse\n/delay 5 ${Target.CleanName.Equal[${Me}'s corpse]}\n/if (${Target.CleanName.NotEqual[${Me}'s corpse]}) {\n/echo No corpse in this zone\n/return\n}\n/delay 3s\n/corpse\n/delay 1s ${Target.Distance}&lt;20\n/if (${Target.Distance}&gt;20) {\n/echo Corpse is too far away\n/return\n}\n</code></pre> <p>Now the next section we run across our first spot where we will use something, and remove something from the same section. Before we do that though, we need to take a brief look into one of the most basic programming ideas, the IF-THEN statement. In plain english, an IF-THEN statement reads just like this: if A is true, then do B. Now, we can add a little to it, and add ELSE. IF-THEN-ELSE would read in plain english like this: if A is true, then B, otherwise(else) do C. Now, each programming language is different, but the basic way MacroQuest evaluates this is something similar to this:</p> <pre><code>/if (A) {\nB\n} else {\nC\n}\n</code></pre> <p>If this does not make sense to you, re-read it a few times. This is a very basic concept, don't make it harder than it is.</p> <p>Back on track, let's look at the next section of the Wait4Rez macro:</p> <pre><code>| ---------------------\n| -- Open the corpse --\n| ---------------------\n/if (${Target.CleanName.Equal[${Me}'s corpse]}) {\n/loot\n} else {\n/echo where did my corpse go?\n/return\n}\n/delay 5s ${Me.State.Equal[BIND]}\n/if (${Me.State.NotEqual[BIND]}) /goto :corpsepull\n/varset loottotal 0\n</code></pre> <p>Now I am NOT a coder. I learned one type of code and as soon as I got proficient, everything changed. Ever since then I haven't really done much of anything with code. Using common sense, however, we can read most of this section. Here's the section again, the bolded is plain english of what I think it means.</p> <pre><code>| ---------------------\n| -- Open the corpse --\n| ---------------------\n/if (${Target.CleanName.Equal[${Me}'s corpse]}) {\n/loot\n} else {\n/echo where did my corpse go?\n/return\n}\n/delay 5s ${Me.State.Equal[BIND]}\n/if (${Me.State.NotEqual[BIND]}) /goto :corpsepull\n/varset loottotal 0\n</code></pre> <p>Looking at this line by line we get:</p> <pre><code>if MyTarget's Name is Equal to Myname's corpse\n{\nLoot\n}\nOtherwise\n{\nprint \"where did my corpse go?\" to the MQ Window\nEnd Macro\n}\nWait 5 seconds or until Me.State is equal to BIND\nif Me.State is not equal to BIND then goto :corpsepull label\nSet loottotal variable to 0\n</code></pre> <p>Some of that IF-THEN-ELSE statement will not be needed for our macro. We will need the /loot part, but the rest of it can be canned. Also in that section is a delay of some sort - 5s (assuming 5 seconds) and then a statement that sorta looks like it's asking if we are binding wound. Then it has another IF-THEN statement that looks like IF you aren't in the bind wound position THEN goto :corpsepull. We removed corpsepull already, so it looks like we can get rid of the statement in whole. The /varset was put in there for a reason, and I'm not entirely sure why yet - so I'm going to leave it in.</p> <p>So now, we have this:</p> <pre><code>|** Wait4rez.mac by FaNTuM\nThis will automatically accept rez, then loot your corpse for you, leaving\nthe specified number of items on it. Usage: &amp;lt;/mac wait4rez 0&amp;gt;where 0\nis the number of items to leave on corpse, 0 loots all items.\n03/30/2005 **|\n| --------------| -- Main Sub --| --------------\nSub Main\n/declare t int outer 0\n/declare loottotal int outer\n/declare lootslot int outer\n/declare lootleft int outer 1\n\n/if (!${Defined[Param0]}) {\n/echo Defaulting to leaving ${lootleft} item/s on corpse\n} else {\n/varset lootleft ${Param0}\n}\n/echo Wait4rez.mac activated. Now consenting guild, raid, and group.\n/loot\n| -----------------\n| -- Count items --\n| -----------------\n/delay 3s\n:LootLag\n/if (${loottotal}!=${Corpse.Items}) {\n/varset loottotal ${Corpse.Items}\n/delay 2s\n/goto :LootLag\n}\n/if (${loottotal}&lt;=${lootleft}) {\n/echo Looting aborted. Error in number of items to be left on corpse.\n/notify LootWnd DoneButton leftmouseup\n/return\n}\n/varset loottotal ${Math.Calc[${Corpse.Items}-${lootleft}]}\n| ---------------------\n| -- Loot the corpse --\n| ---------------------\n/echo Looting all but ${lootleft} item(s)\n/for lootslot 1 to ${loottotal}\n:LootItem\n/itemnotify loot${lootslot} rightmouseup\n/delay 5 !${Corpse.Item[${lootslot}].ID}\n/if (!${Corpse.Item[${lootslot}].ID}) {\n/next lootslot\n} else {\n/goto :LootItem\n}\n| -----------------\n| -- Doublecheck --\n| -----------------\n/if (${Math.Calc[${Corpse.Items}-${lootleft}]}&gt;0) /goto :LootLag\n/notify LootWnd DoneButton leftmouseup\n/echo Done looting. ${lootleft} Item(s) left on your corpse.\n/return\n</code></pre> <p>Looks like we're almost done. Now, let's change one thing that's been bothering me. FaNTuM's macro by default leaves 1 item on the corpse. If we're looting NPC's then we don't need to leave 1 item on the corpse at all. (Unless you are a Necro or you group with one often that is)</p> <p>Scanning the code I see:</p> <p><code>/declare lootleft int outer 1</code></p> <p>Which I'm pretty sure is the variable that is the default of how many items to leave on the corpse. Let's try changing it to 0.</p> <p>I also noticed, just by looking at the code logically, that we currently have no way of targeting our corpse. Keeping it simple, let's add in a /target corpse somewhere before it attempts to open a loot window.</p> <p>Now, we can edit or remove the /echo statements - all /echo statements do it put text in your MQ2 Chat Window. I'm going to just delete them all - we can always add them in later if we decide we need to be told that we just looted something.</p> <p>Looks good - Now I'll just edit the comments at the top to better reflect what this macro does and we're finished.</p> <pre><code>|** Loot.mac by TheNewGuy\n20 July 2005\n\nMake a hotkey:\n/mac loot.mac\n\nWhen something dies, push that hotkey as you are standing over the\ncorpse. This should loot everything.\n\nThis code based upon Wat4rez.mac by FaNTuM. Changed from Wait4rez.mac to\nloot.mac at the following URL:\n\n[`http://www.macroquest.org/wiki/index.php/Editing_Existing_Macros`](https://macroquest.org/wiki/index.php/Editing_Existing_Macros)\n\n**|\n| -------------- | -- Main Sub -- | --------------\nSub Main\n/declare t int outer 0\n/declare loottotal int outer\n/declare lootslot int outer\n/declare lootleft int outer 0\n/if (!${Defined[Param0]}) {\n} else {\n/varset lootleft ${Param0}\n}\n/tar corpse\n/loot\n| -----------------\n| -- Count items --\n| -----------------\n/delay 3s\n:LootLag\n/if (${loottotal}!=${Corpse.Items}) {\n/varset loottotal ${Corpse.Items}\n/delay 2s\n/goto :LootLag\n}\n/if (${loottotal}&lt;=${lootleft}) {\n/notify LootWnd DoneButton leftmouseup\n/return\n}\n/varset loottotal ${Math.Calc[${Corpse.Items}-${lootleft}]}\n| ---------------------\n| -- Loot the corpse --\n| ---------------------\n/for lootslot 1 to ${loottotal}\n:LootItem\n/itemnotify loot${lootslot} rightmouseup\n/delay 5 !${Corpse.Item[${lootslot}].ID}\n/if (!${Corpse.Item[${lootslot}].ID}) {\n/next lootslot\n} else {\n/goto :LootItem\n}\n| -----------------\n| -- Doublecheck --\n| -----------------\n/if (${Math.Calc[${Corpse.Items}-${lootleft}]}&gt;0) /goto :LootLag\n/notify LootWnd DoneButton leftmouseup\n/return\n</code></pre>"},{"location":"macros/flow-control/","title":"Flow Control","text":"<p>MQ2 provides a few ways to control the execution of your macro.</p> <ul> <li>If/else decisions</li> <li>While loops</li> <li>For loops</li> <li>Goto jumps</li> </ul>"},{"location":"macros/flow-control/#ifelse-decisions","title":"If/else decisions","text":"<ul> <li>If statement blocks are the most common form of flow control in MQ2.</li> <li>The syntax for an /if statement can be found here.</li> <li>The simplest statements are one-liners like the following:</li> </ul> <pre><code>/if (${Me.Sitting}) /stand\n</code></pre> <p>This will stand you up if you're sitting.</p> <p>*One-line /if statements do not require curly braces ( {} )</p> <ul> <li>If you wish to execute more than one command, you must wrap your set of commands in braces:</li> </ul> <pre><code>/if (${Me.Sitting}) {\n  /stand\n  /echo I'm standing now!\n}\n</code></pre> <p>*If statements can also match multiple conditions for fine-grained control:</p> <pre><code>/if (${Me.Standing} &amp;&amp; !${Me.Combat} &amp;&amp; !${Me.Casting.ID}) {\n  /sit\n  /echo Medding now\n}\n</code></pre> <p>The above example will only be matched if you're currently standing and you're not in combat and you're not casting. Any of the Operators can be used to \"fine-tune\" the matching of any conditions. Also, brackets can be used to group certain sets of statements together.</p> <pre><code>/if ( (${Me.Sitting} &amp;&amp; !${Window[SpellBookWnd].Open}) || ${Me.Standing} ) /call Cast \"Complete Healing\" 10s\n</code></pre> <p>This will only cast the spell if:</p> <ul> <li>I'm sitting and the spellbook window is not open</li> </ul> <p>OR</p> <ul> <li>I'm standing.</li> </ul> <p>You will also need the curly braces any time you're using else or else if statements. An example:</p> <pre><code>/if (${Me.Sitting}) {\n  /stand\n  /echo I'm standing now!\n} else {\n  /echo I'm already standing\n}\n</code></pre> <p>Else blocks are extremely useful for catching \"everything else\" that is not matched by the /if statement.</p> <p>You can go one further and add some further matching with additional /if statments, like the following:</p> <pre><code>/declare random int local ${Math.Rand[10]}\n/if (${random}&lt;=3) {\n  /echo The number is less than or equal to 3\n} else /if (${random}&lt;=5) {\n  /echo The number is less than or equal to 5\n} else /if (${random}&lt;=8) {\n  /echo The number is less than or equal to 8\n} else {\n  /echo The number is 9 or higher\n}\n</code></pre> <p>You can also nest /if statements within other /if statements, to make your matching and macro flow very powerful.</p>"},{"location":"macros/flow-control/#while-loops","title":"While loops","text":"<p>Similar to for loops, while loops can be used to execute a series of commands as long as a certain set of conditions are or are not true.</p> <pre><code>/while (${Me.PctHPs}&lt;100 || ${Me.PctMana}&lt;100) {\n /if (${Me.Standing}) {\n  /echo Sitting because I am standing.\n   /sit\n }\n /echo Resting until my hitpoints (${Me.PctHPs}%) and mana (${Me.PctMana}%) are at 100%.\n /delay 6s\n}\n</code></pre> <p>You can end a /while loop immediately with /break or try the next iteration with /continue</p>"},{"location":"macros/flow-control/#for-loops","title":"For loops","text":"<p>For loops are used when you want to perform the same set of commands on a list of items. With a /for loop, you define a starting number, an end number and (if necessary) a number to increment by. The loop will perform the set of commands with the starting number, then will increment it (by 1 as a default, unless you specify the number) and will then re-run all the commands with the next number. It will continue to do that until it reaches the end number, at which time it will exit.</p> <p>Take this example, which will give a list of all your buff slots:</p> <pre><code>/declare x int local\n/for x 1 to 15\n /echo Buff ${x} is ${Me.Buff[${x}]}\n/next x\n</code></pre> <p>The problem with this example is that you'll get a couple of NULLs if you have no buffs in those slots, so we can further refine the loop to make use of an /if statement as well, like this:</p> <pre><code>/declare x int local\n/for x 1 to 15\n /if (${Me.Buff[${x}].ID}) /echo Buff ${x} is ${Me.Buff[${x}]}\n/next x\n</code></pre> <p>This will have a look and see if the buff in slot ${x} has an ID (remember that /if statements only deal with numbers) and if the number is positive (ie. not 0), then it will echo the buff name.</p> <p>You could easily list the buffs in reverse order by using \"downto\" instead of \"to\" in the /for loop.</p> <pre><code>/declare x int local\n/for x 15 downto 1\n /if (${Me.Buff[${x}].ID}) /echo Buff ${x} is ${Me.Buff[${x}]}\n/next x\n</code></pre> <p>You can end a /for loop immediately with /break or try the next iteration with /continue.</p>"},{"location":"macros/flow-control/#goto-jumps","title":"Goto jumps","text":"<p>As with most programming and scripting languages, the use of the \"goto\" function is frowned upon (generally because it's slow and there are better ways of achieving the same result). In MQ2 it's not much different, and since MQ2 originally didn't include any type of \"while\" function, many older macros still include goto statements.</p> <p>First off, you need a marker to denote where the /goto function should move to. A marker is created in the following format:</p> <pre><code>:marker\n</code></pre> <p>To utilize that marker with a /goto statment, do something like the following:</p> <pre><code>Sub Main\n  /echo start here\n\n  :marker\n  /echo just passed the marker\n  /goto :marker\n/return\n</code></pre> <p>In the above example, your MQ2 chat window would be filled with \"just passed the marker\" echoed constantly until you ended the macro. We've created an infinite loop above, which is the most common use of /goto. A conditional /goto (ie. a /goto after an /if statment) is the closest you can get to a \"while\" function. Take the following example:</p> <pre><code>Sub Main\n  /declare num int local 1\n  :marker\n  /echo Number is ${num}\n  /varcalc ${num} ${num}+1\n  /if (${num}&lt;=5) /goto :marker\n/return\n</code></pre> <p>This would output:</p> <pre><code>[MQ2] Number is 1\n[MQ2] Number is 2\n[MQ2] Number is 3\n[MQ2] Number is 4\n[MQ2] Number is 5\n</code></pre> <p>The macro echoes \"${num}\" and then increments it by one. If the total is less than or equal to 5, it loops back to the start. If the total is above 5, it won't loop back and will end naturally.</p>"},{"location":"macros/flow-control/#onexit","title":":OnExit","text":"<p>Anything included after that label will be called whenever an /endmacro command is issued. To use this feature, the label must be at the end of your 'Sub Main' function and end with a /return. Please note that this is NOT required of macros, so no macros will have to be altered unless you wish to take advantage of this feature.</p> <p>OnExit will not function upon a macro ending while paused.</p> <p>example:</p> <pre><code>Sub Main\n/while (1) {\n  /delay 5\n}\n/return\n  :OnExit\n  /echo Should run on exit. \n  /return\n</code></pre>"},{"location":"macros/general-help/","title":"General Macro Help","text":"<ul> <li>First off, do you have the latest copy of your macro?<ul> <li>If you found your macro on the forums, check back to the first post and see if it has been updated since you last downloaded it. If you are unsure, or the macro writer has not included a version number, then it's easiest to just recopy the code from the forums into your macro and then save it and try again.</li> </ul> </li> <li>Have you read all the documentation regarding the macro:<ol> <li>The first post on the forum normally has some text indicating how to run the macro, what it does, what its dependencies are, etc.</li> <li>Secondly, read all the pages in the thread about the macro. Yes, this may take you a while if its an old or established macro, but it's very likely someone else has had the same problem and the question has been answered.</li> <li>Check the wiki page, if your macro has one. Often they are checked and modified more frequently than the macro thread/first post.</li> </ol> </li> <li>Do you have all the pre-requisites for the macro, other snippets (.inc files) and plugins required?</li> <li>If there are pre-requisite plugins or snippets, are they configured correctly? You will most likely need to check the forum posts for the snippet/plugin in question too (yes, more reading :).</li> </ul>"},{"location":"macros/general-help/#ini-file-maintenance","title":"INI file maintenance","text":"<p>To remove a keyname ([Section]) and all of it's valuenames and values, from an ini file:</p> <pre><code>/ini \"Myfile.ini\" \"KeynameToRemove\"\n</code></pre> <p>To remove a valuename (and all of it's values) from an ini file:</p> <pre><code>/ini \"Myfile.ini\" \"Keyname\" \"ValuenameToRemove\"\n</code></pre>"},{"location":"macros/general-help/#macro-problems","title":"Macro Problems","text":""},{"location":"macros/general-help/#couldnt-open-macro-file-xxxmac","title":"Couldn't open macro file: xxx.mac","text":"<ul> <li>Make sure you saved the macro into the Release\\Macros directory.</li> <li>Make sure the macro has a .mac extension.<ul> <li>If you cannot see an extension on the macro file, you may have your file extensions turned off. In Explorer, go to Tools - Folder Options - View tab and untick the option \"Hide extensions for known file types\". Then rename the file and change the extension to .mac.</li> </ul> </li> </ul>"},{"location":"macros/general-help/#due-to-complete-misuse-of-the-string-top-level-object-it-has-been-removed","title":"Due to complete misuse of the String Top-Level Object, it has been removed.","text":"<ul> <li>A while back, macro writers were incorrectly using the ${String} TLO in their macros. In order to prevent people from using this TLO incorrectly, thus slowing down their macros, and in an attempt to teach people to create their macros properly and efficiently from the get-go, the ${String} TLO was removed.</li> <li>Finding this error when running a macro generally means you have an old copy of a macro. Most macros have been updated to not use the ${String} TLO and therefore the first place you should be looking is in the forum thread where you obtained your macro.</li> <li>Fixing the error is easy when you know what to look for, but a bit more tricky in a complicated macro or if you're not a macro maker yourself. Here's a simple example that should help explain it. The code:</li> </ul> <p><code>/if (${String[${Me.Gem[1]}].NotEqual[Complete Healing]}) /memspell 1 \"Complete Healing\"</code></p> <ul> <li>What this does is check if the spell name of the spell in the first slot is \"Complete Healing\" (the /if statement inside the brackets). If it is not, then mem \"Complete Healing\" in slot 1 (the /memspell bit after the brackets). If we look in the manual, we see the following entry for the Gem reference type (part of the character reference type):</li> </ul> spell Gem[#] The name of the spell in this slot# <ul> <li>The part we're interested here is the first word spell which tells you what the return type of Gem[#] will be.</li> </ul> <p>In this case it will return a type \"spell\".</p> <ul> <li> <p>Equal or NotEqual can only be used to compare two strings (which is why people would convert the result of ${Me.Gem[1]} (\"spell\") to a string by using the ${String} TLO). While this may look fine logically, it's not the way MQ2 Data Types were designed to be used, and its more work for your PC to convert the result of the spell to a string.</p> </li> <li> <p>The way you're supposed to use the Data Types is to add more members to the end of the TLO until you get the result you're looking for. In the above example, if we look at the reference type for spell, we see the following:</p> </li> </ul> [string] Name Name <ul> <li>This shows us that we can use the .Name reference type to get a string value as a result, which can then be compared (using .Equal or .NotEqual). So now we have a piece of code like the following:</li> </ul> <p><code>${Me.Gem[1].Name}</code></p> <ul> <li>That will output a string value which contains the name of the spell in gem slot 1. The code:</li> </ul> <p><code>${Me.Gem[1].Name.NotEqual[Complete Healing]}</code></p> <ul> <li>Will give us a TRUE/FALSE result if you echo the above statement.</li> <li>So instead of wrapping ${Me.Gem[1]} in a ${String[]} TLO, we've removed the need to convert the \"spell\" result to a \"string\" result, by adding .Name to the end of the TLO, thereby making it return a string value.</li> <li>The above changes can be incorporated into the initial faulty line, like this:</li> </ul> <p><code>/if (${Me.Gem[1].Name.NotEqual[Complete Healing]}) /memspell 1 \"Complete Healing\"</code></p> <ul> <li>We've now removed the ${String[]} part, and still have a perfectly functioning (and faster) macro.</li> </ul>"},{"location":"macros/general-help/#this-macro-i-downloaded-doesnt-do-x-fill-in-as-appropriate","title":"This macro I downloaded doesn't do X (fill in as appropriate)","text":"<ul> <li> <p>If you have followed all the advice in the General Macro Help section, and you are still having problems, you may want to post your problem to the macro thread itself.</p> </li> <li> <p>Follow the instructions in Help Forums but make sure to reply to the main macro post, and do not post a new thread in any of the other Help forums.</p> </li> <li> <p>If you have a feature request for your macro, post the request in the main macro thread and the macro writer may oblige you and add your requested feature. Or failing that, dive right in and modify the macro for your own use. Remember, many new macros are born when someone modifies an existing macro to do something more/different, and then after enough changes, it becomes a new macro in its own right.</p> </li> </ul>"},{"location":"macros/general-help/#macros-from-other-sites-not-working-properly","title":"Macros From Other Sites Not Working Properly","text":"<p>If you download a macro from a site that doesn't update their macros, first search the MQ forums to see if there is a similar problem discussed in any threads. If that doesn't help, read the Help Forums. Post to the thread that relates to the macro in question if one exists before starting a new thread. Make sure to follow all the rules discussed before posting in the Help section of the Message Boards.</p>"},{"location":"macros/general-help/#the-macro-does-not-report-if-its-running-or-not","title":"The Macro does not report if it's running or not","text":"<ul> <li>You may: add /echo macro_name_here is running to the Sub Main section of the actual .mac file</li> <li>Issue /echo ${Macro} to see the name of the macro currently running</li> <li>If that doesn't help, read the Help Forums and then post on the boards, making sure to follow all the rules.</li> </ul>"},{"location":"macros/getting-started/","title":"Getting Started","text":"<p>Macros are essentially scripts that run certain MQ commands when certain conditions are met.</p> <p>As an example, say you want to create a macro that repeatedly casts a certain spell (eg. if you were trying to train up your Divination skill). The macro could do something like this:</p> <ol> <li>Cast \"True North\" spell</li> <li>Check mana and if not enough mana to cast the above spell, sit down and rest until mana is full.</li> <li>If you have enough mana to cast the spell, then loop back to the beginning.</li> </ol> <p>Macros can also be triggered off of things that happen in game. For example, you can create a macro that waits until someone says \"Heal Me\" in group, and then casts a heal on that person.</p> <p>A snippet is a portion of macro code that can be re-used in lots of different macros. One of the most popular snippets of code is the spell_routines snippet, which casts a spell reliably (ie. deals with fizzles, target being out of range, etc). This snippet can be included in many different macros so that all of them benefit from the increased functionality.</p> <p>Snippets help keep key pieces of code separate from the main macro, which makes it easier to update portions of big macros.</p> <p>Please Note: VIP macros and snippets are only available on the VIP forums.</p>"},{"location":"macros/getting-started/#finding-macros-and-snippets","title":"Finding Macros and Snippets","text":"<p>You can find Macros in the following Forums:</p> <p>MQ2::Macros::Macro Depot v3.0</p> <p>VIP::Macros (VIP only)</p> <p>Snippets can be found here:</p> <p>MQ2::Macros::Snippets</p> <p>VIP::Macros (VIP only). There's no specific VIP snippet forum, so all of them are just located in the VIP macro forum.</p>"},{"location":"macros/getting-started/#using-macros-or-snippets-that-you-have-found","title":"Using Macros or Snippets that you have found","text":""},{"location":"macros/getting-started/#macros","title":"Macros","text":"<p>Using a macro is simply a matter of copying and pasting the code from the forum into a text file and placing the resulting file into the Release\\Macros directory.</p> <p>Macros with a .mac extension can be run without typing the \".mac\". Macros with other extensions require you to type the extension for the /macro command to work.</p> <p>In game, you can run the macro with the following command:</p> <p><code>/macro macroname</code></p> <p>Sometimes macros have additional arguments that you can pass to them when starting. These need to be added to the end of the /macro line, like so:</p> <p><code>/macro macroname 1 2 3</code></p> <p>The main macro post and/or the comments at the top of the macro should tell you how the macro needs to be run.</p>"},{"location":"macros/getting-started/#snippets","title":"Snippets","text":"<p>Just like a macro, a snippet needs to be copied into a text file. Traditionally, snippets have a .inc file extension, but there are no restrictions as to what the file is called.</p> <p>To use a snippet, add a line like the following examples, to the top of your macro before the Main sub:</p> <p><code>#include spell_routines.inc</code> <code>#include wait4rez.inc</code></p>"},{"location":"macros/getting-started/#list-of-popular-macros-and-snippets","title":"List of popular Macros and Snippets","text":"List of non VIP Macros List of Non-VIP Snippets/Includes <ul> <li>Advanced Fishing Advanced             Fishing macro (adv_fishing.mac)</li> <li>Language Macro </li> <li>Necro Helper Necro Helper             (necrohelper.mac)</li> <li>Rogue Helper Rogue Helper             (RH.mac)</li> <li>Wait4rez.mac </li> <li>YAFM - Yet Another Forage Macro </li> <li>YAST - Yet Another Spell Trainer </li> </ul> <ul> <li>AdvPath.inc (Pathing             and Movement Snippet)</li> <li>Defense.inc Include file             for automating tank defensive measures</li> <li>NinjaLoot.inc (Looting             Snippet)</li> <li>Ninjadvloot.inc </li> <li>Skill_Routines.inc (Skill             Trainer)</li> <li>Spell_Routines.inc </li> <li>Wait4Rez.inc </li> </ul> List of VIP Macros List of VIP Snippets/ Includes <ul> <li>Advbot.mac -             General purpose macro suitable for all classes</li> <li>Afcleric.mac - nils -             nils- Cleric Macro</li> <li>AutoBot.mac - Very popular             macro suitable for all classes</li> <li>AutoBot.mac-V4.28+ -             Another flavor of Raid Druid</li> <li>Cleric.mac - nytemyst -             Cleric macro written by nytemyst</li> <li>Autoenc.mac -             Enchanter Macro</li> <li>dRShmbot.mac - Shaman Macro</li> <li>Enchanter.mac - nils -             nilsEnchanter Macro</li> <li>Mage.mac -             Mage Macro</li> <li>ModBot - Another macro suitable             for all classes</li> <li>MyCleric.mac -             Cleric Macro</li> <li>Shaman.mac - nils -             nilsShaman Macro</li> <li>shambot.mac -             Shaman Macro</li> <li>Shaman Slow Macro </li> <li>SimpleBeastlord.mac -             Beastlord Macro</li> <li>SimpleWizard.mac -             Wizard Macro</li> <li>Ranger.mac - nils -             nilsRanger Macro with Auto Pull</li> <li>Warrior.mac - nils -             nilsWarrior Macro</li> </ul> <ul> <li>Spell_Routines.inc </li> <li>Wait4Rez.inc </li> <li>QuickBeg.inc - Buff Begging             snippet</li> <li>Puller.inc - Include that             can use pre-defined paths to pull</li> <li>GemOpt.inc -             Include that manages the usage and optimization of spell gems, as well             as memorization</li> </ul>"},{"location":"macros/getting-started/#creating-your-own-macros","title":"Creating your own Macros","text":"<p>Creating your own macro is a rewarding and fun experience, although there is a bit of a learning curve if you've never scripted before.</p> <p>See the Macro Reference for information on how to create your own macros.</p>"},{"location":"macros/getting-started/#troubleshooting","title":"Troubleshooting","text":"<p>See General Help for Help and Troubleshooting information.</p>"},{"location":"macros/mqdata/","title":"MQ2Data","text":""},{"location":"macros/mqdata/#mq2data-types","title":"MQ2Data Types","text":"<p>MQ2Data types are the means by which properties or methods (Data Types) of TLOs (Top-Level Objects) are accessed and used within macros. Variables in MQ2 are treated as Top-Level Objects.</p> <p>The basic syntax for accessing this MQ2Data is:</p> <p><code>${TopLevelObject[index].Member[index].Member[index]}</code></p> <p>To access a property of a TLO you begin with the TLO type you want, then append successive type members or properties until you get the result you're looking for. The use of properties can become very complex (ie. extremely long), especially when using ${Math.Calc[]}.</p> <p>Note: You absolutely MUST pay attention to the return types of each member and object. Make sure to always compare identical Data Types when doing comparisons (eg. string to a string, or a numeric to a numeric). Using .Equal or .NotEqual to compare .Name to .ID will give errors. For example, <code>${Target.Name.Equal[${Me.ID}]}</code> will not work. .Name returns a string, but .ID returns an int.</p> <p>Also be sure to look at the To String of each type.</p> <p>Example of building an MQ2Data string:</p> <ul> <li>Suppose you want to display the distance to an NPC that you have targeted.</li> <li>First, check the page for TLO:Target. There you can see its forms listed as</li> </ul> <p>\"spawn Target\". This indicates that the Target TLO has access to all the</p> <p>spawn reference type members.</p> <ul> <li> <p>Looking at the spawn reference type, you will find a list of the properties and members of spawn, to which Target has access to.</p> </li> <li> <p>Since you want to find the distance to the target, you would select one of the Distance members. For this example we will use:</p> </li> </ul> <p>float Distance</p> <p>Distance from player in (x,y)</p> <ul> <li>So you append append .Distance to the TLO name to get: Target.Distance</li> <li>Once you have gotten to the information you want, you MUST enclose the entire string in ${ }, so the end result of the example would be:</li> </ul> <p><code>/echo Distance to target is: ${Target.Distance}</code></p> <ul> <li>This returns the distance to your target in the float format ###.##</li> </ul> <p>Note: All TLOs and reference data types have access to immediate types, but ensure you use the appropriate members of the immediate types with reference types or TLOs. For example, if you wanted to convert the above float value Distance, to an int value, you could append one of the members of the float immediate type, to make it:</p> <p><code>/echo Distance to target is: ${Target.Distance.Int}</code></p>"},{"location":"macros/mqdata/#mq2data-members","title":"MQ2Data Members","text":"<p>Members can also be describd as Properties or things that are property (owned by, contained by, etc) of objects of a type.</p> <p>For example, the Desk type of object might have a property called Screws. The Screws property itself might be represented like this:</p> <p>int Screws</p> <p>int is a type of object which means WHOLE NUMBER while Screws is the name of the object</p> <p>To demonstrate that an object named Screws is a member of the Desk type, we may also say:</p> <p>int Desk.Screws</p> <p>The return type is of the last member appended (ie. int).</p>"},{"location":"macros/mqdata/#mq2data-inheritance","title":"MQ2Data Inheritance","text":"<p>Inheritance is a way to get less specific about what \"type\" of object you are looking at. For example, say you have two types, like desk and woodendesk.</p> <ul> <li>All wooden desks are desks, but not all desks are wooden desks.</li> <li>So now we have</li> </ul> <p>woodendesk ThisDesk</p> <ul> <li> <p>Remember that \"desk\" we said has a member called Screws of type int. \"woodendesk\" IS a desk, so it automatically gets a member called Screws.</p> </li> <li> <p>Therefore, \"ThisDesk.Screws\", even though it is a wooden desk and not just \"desk\", is valid.</p> </li> </ul>"},{"location":"macros/operators/","title":"Operators","text":"Numeric Operator Logical Operator + Addition == Equal to - Subtraction != Not equal to / Division &gt;= Greater than \\ Integer Division &gt;= Greater than or equal to * Multiplication &lt;= Less than % mod &lt;= Less than or equal to ^ Exponent &amp;&amp; AND &amp; Bitwise AND || OR | Bitwise OR ! NOT ~ Bitwise NOT ^^ XOR &lt;&lt; Bitwise shift left &gt;&gt; Bitwise shift right"},{"location":"macros/subroutines/","title":"Subroutines and Functions","text":""},{"location":"macros/subroutines/#general","title":"General","text":"<p>We know that every macro must have a Main Subroutine (see Macro Reference). However custom Subroutines can be created as a way of re-using common code, and as a way of separating code into logical blocks or routines.</p> <p>Subroutines start with a Sub line and end with a /return line. When it hits the /return line, it will pass control back to the calling Sub, at the point right after it was called.</p> <p>When a subroutine is called, it runs all of the commands within it immediately.</p> <p>Accessing your subroutine from the Main or other sub can be done with the /call command. Take the following example:</p> <pre><code>Sub Main\n    /call TestSub\n    /echo This is the main sub\n    /return\n\n\nSub TestSub\n    /echo This is a sub\n    /return\n</code></pre> <p>This will echo the following into the MQ2 Chat Window:</p> <pre><code>This is a sub\nThis is the main sub\n</code></pre>"},{"location":"macros/subroutines/#subroutine-names","title":"Subroutine Names","text":"<p>Only the following characters are allowed in the name of a subroutine: <code>[a-z][A-Z][0-9]_</code></p> <p>Name lookup is case insensitive.</p>"},{"location":"macros/subroutines/#passed-parameters","title":"Passed Parameters","text":"<p>All macros accept parameters passed to them when called. The parameters can be defined in the Sub line, or if not defined, they are available through the <code>Param0, Param1, Param2, ... ParamN</code> local variables while in the sub. If you don't define the types of variables, they will default to strings. The following two examples will both output the same thing:</p> <pre><code>Sub Echo1(One,Two)\n    /echo ${One} ${Two}\n    /return\n\nSub Echo2\n    /echo ${Param0} ${Param1}\n    /return\n</code></pre> <p>Note</p> <p>Any parameters passed to the sub are automatically declared as local variables for that Sub (no need to /declare them).</p>"},{"location":"macros/subroutines/#return-values","title":"Return Values","text":"<p>A return value for the sub can be added after the /return command, and can be accessed through <code>${Macro.Return}</code> by the calling macro. Take this example:</p> <pre><code>Sub Add(int A, int B)\n    /declare Sum int local ${Math.Calc[${A}+${B}]}\n    /return ${Sum}\n</code></pre> <p>This will take the two passed variables (A and B), add them together and return the result. To use it, you'd need call it like so:</p> <pre><code>Sub Main\n    /call Add 10 12\n    /echo ${Macro.Return}\n    /return\n</code></pre> <p>This would echo <code>22</code> in the MQ2 Chat Window.</p> <p>Return values can be used in Subs as well as Event Subrouties called by /doevents.</p>"},{"location":"macros/subroutines/#functions","title":"Functions","text":"<p>Subroutines can also be evaluated as part of an expression. The subroutine Add from the above example could also be used like so:</p> <pre><code>Sub Main\n    /echo ${Add[10,12]}\n    /return\n</code></pre> <p>This would also echo <code>22</code> in the MQ2 Chat Window.</p> <p>A function without arguments must be called as <code>${SomeFunction[]}</code>.</p> <p>If you evaluate as sub as part of expression, the sub has no delays, its just flushes through the sub so any advanced logic or processing is not a good use. Using subroutine as an inline function should be limited to simple repetive tasks, like math or writing things or something that is not macro critical for how time moves</p>"},{"location":"macros/variables/","title":"MQ2DataVars","text":"<p>MQ2Data was designed so that accessing information could be done utilizing a uniform system. User variables are treated as MQ2Data Top-Level Objects.</p>"},{"location":"macros/variables/#variable-basics","title":"Variable Basics","text":"<ol> <li>Default scope is local</li> <li>Default type is string</li> <li>Default value is nothing (empty string or 0)</li> </ol>"},{"location":"macros/variables/#scopes","title":"Scopes","text":"<ul> <li>global</li> </ul> <p>Variables of global scope ALWAYS exist until they are deleted or MacroQuest ends</p> <ul> <li>outer</li> </ul> <p>Variables of outer scope exist while a macro is running</p> <ul> <li>local (default)</li> </ul> <p>Variables of local scope only exist while within a macro function or \"Sub\"</p>"},{"location":"macros/variables/#types","title":"Types","text":"<p>Variables can be declared as any of the types in Data Types. The default type is string.</p>"},{"location":"macros/variables/#names","title":"Names","text":"<p>Only the following characters are allowed in the name of a variable: [a-z][0-9]_</p> <p>Name lookup is case insensitive.</p>"},{"location":"macros/variables/#manipulating-variables","title":"Manipulating Variables","text":""},{"location":"macros/variables/#declaring","title":"Declaring","text":"<p>Variables are declared (initially defined) in the following format:</p> <pre><code>/declare varname|varname[array extents] [type] [local|global|outer] [defaultvalue]\n</code></pre> <p>The parameters must be given in order, but any after varname may be skipped to use the default.</p> <p>Some Examples</p> <ol> <li>This creates an int variable named MyVar that exists while the macro is running:</li> </ol> <pre><code>/declare MyVar int outer\n</code></pre> <p>This creates a string variable named MyVar that exists within the Sub it was created in:</p> <pre><code>/declare MyVar local\n</code></pre> <p>This creates a timer named MyTime that is set to 3000 at creation and exists while the macro is running:</p> <pre><code>/declare MyTimer timer outer 3000\n</code></pre>"},{"location":"macros/variables/#arrays","title":"Arrays","text":"<p>To create an array, attach square brackets to the end of the variable name and place in it the number of elements per dimension.</p> <p>Array Examples</p> <ol> <li>This creates a single-dimension local array of int with 10 elements (1-10) all 0:</li> </ol> <pre><code>/declare MyArray[10] int\n</code></pre> <p>This creates a 2-dimensional 10x10 elements(1-10,1-10) int array of scope outer with all values of 5:</p> <pre><code>/declare MyArray[10,10] int outer 5\n</code></pre> <p>This creates a 3-dimensional array with 4x5x6 elements (1-4,1-5, 1-6) with UNDEFINED-ARRAY-ELEMENT in each location:</p> <pre><code>/declare MyArray[4,5,6] string outer UNDEFINED-ARRAY-ELEMENT\n</code></pre> <p>There is no limit to the number of dimensions or the number of elements in each dimension but use your own good judgment.</p> <p>Note: You cannot make an array of timers.</p>"},{"location":"macros/variables/#deleting-variables","title":"Deleting Variables","text":"<p>/deletevar is used to delete variables. Examples:</p> <ol> <li>Deletes the variable varname. Using * global will delete all global variables:</li> </ol> <pre><code>/deletevar varname [* global]\n</code></pre> <p>Sets a variable directly to a new value. Keep in mind that the type itself may reject this value depending on what you give it.</p> <pre><code>/varset varname [newvalue]\n</code></pre> <p>To clear the value of the variable, you may omit the new value.</p>"},{"location":"macros/variables/#settingchanging-variables","title":"Setting/Changing Variables","text":"<p>/varset is used to set or change a variable. Examples:</p> <ol> <li>This concatenates (joins one to the other) \"stuff\" to the end a string variable:</li> </ol> <pre><code>/varset MyString ${MyString}stuff\n</code></pre> <p>This inserts stuff at the front of ${MyString}:</p> <pre><code>/varset MyString stuff${MyString}\n</code></pre> <p>This sets MyInt to 123:</p> <pre><code>/varset MyInt 123\n</code></pre> <p>This sets MyTimer to 123 seconds:</p> <pre><code>/varset MyTimer 123s\n</code></pre> <p>This sets MyFloat to 1.23:</p> <pre><code>/varset MyFloat 1.23\n</code></pre> <p>This sets array element n to 123:</p> <pre><code>/varset MyIntArray[n] 123\n</code></pre>"},{"location":"macros/variables/#setting-variables-to-results-of-calculations","title":"Setting Variables to Results of Calculations","text":"<p>You can use /varcalc to set a variable directly to the numeric result of a calculation. Keep in mind that the type itself may reject this value depending on what you give it. This will NOT work on strings!</p> <p>Examples:</p> <pre><code> /varcalc MyInt 1+2*2+1\n /varcalc MyInt 1+(2*2)+1\n /varcalc NumBuffSlots ${Me.FreeBuffSlots}+${Me.CountBuffs}\n</code></pre>"},{"location":"macros/variables/#setting-variables-to-the-result-of-mq2data-strings","title":"Setting Variables to the Result of MQ2Data Strings","text":"<pre><code>/vardata varname newMQ2Datavalue\n</code></pre> <p>Sets a variable directly to the end result of a MQ2Data string. To use this, do NOT put ${} around the outer data to parse.</p> <p>This is most useful for when you want to keep the result of something instead of trying to make the variable accept a string with /varset.</p> <p>For Example:</p> <pre><code>/vardata MyFloat Math.Calc[${Me.X}+${Me.Y}]\n</code></pre>"},{"location":"macros/variables/#parsing","title":"Parsing","text":"<p>It is important to note that parsing of variables is performed from the inside to the outside, so any ${} inside your MQ2Data statement gets evaluated before continuing.</p> <p>Example</p> <p><code>${MyString${MyVar}}</code></p> <p>The parser first evaluates ${MyVar}. If MyVar's value is 1, this gives us ${MyString1}. ${MyString1} is then evaluated, giving the value of whatever MyString1 is. \\({\\). There is no limit to this recursion.}} will get the value of a MQ2Data query stored in MyString. This could be Me.Buff[1], or a variable name, or anything that is valid inside ${</p> <p><code>${${${${${${${${${${MyString}}}}}}}}}}</code> will evaluate inside to outside until there is nothing left to evaluate.</p> <p>This is also true for arrays: <code>${MyArray[${MyInt}]}</code> has no problems.</p>"},{"location":"macros/gallery/","title":"Examples","text":""},{"location":"macros/gallery/#chat-sub","title":"Chat-Sub","text":"<p>This is an example of a cleric bot with both loop based decision and instanced based dissision.</p> <p>Created for and freely shared by Belgarion</p> <p>|Cleric Automation |Set target name /Varset Toon \"Character Name\"</p> <ol> <li>turbo</li> <li>Chat Tell</li> <li>Event Root \"#*#Root#*#\"</li> <li>Event HPBuff \"#*#HPBuff#*#\"</li> <li>Event Heal \"#*#Heal#*#\"</li> </ol> <p>Sub Main</p> <p>/declare Toon string Global /declare HPlower /declare HPhigher /declare CharID /declare MyID /declare Range /declare ManaWarn</p> <p>/varset HPlower 30 /Varset HPhigher 55 /Varset ManaWarn 50 /varset Range 50 /varset Toon \"Character Name\"</p> <p>/Target ${Toon} /Delay 10 /varset ToonID ${Target.ID}</p> <p>/Target myself /Delay 10 /Varset MyID ${Target.ID}</p> <p>body</p> <p>/if (\\({Me.Casting.ID}\\) /goto :body /target \\({Toon} /If \\(\\)\\&lt;\\)) /Tell \\({Toon} LOM !!! \\({Me.PctMana} /If \\(\\)==\\)) /goto :Attack /if \\(${Me.PctHPs}\\&lt;80\\) /goto :heal3 /if \\(${Target.PctHPs}\\&lt;${HPlower}\\) /goto :heal1 /if (\\({Target.PctHPs}\\&lt;\\)) /goto :heal2 /goto :body</p> <p>heal1</p> <p><code>/face</code> <code>/Tell ${Toon} Quick Heal Incomming 8)</code> <code>/cast 2</code> <code>/if (${Me.Standing} &amp;&amp; !${Me.Mount.ID}) /sit</code></p> <p>/goto :body</p> <p>heal2</p> <p><code>/face</code> <code>/tell ${Toon} Healing you up 8)</code> <code>/cast 9</code> <code>/if (${Me.Standing} &amp;&amp; !${Me.Mount.ID}) /sit</code></p> <p>/goto :body</p> <p>heal3</p> <p><code>/target myself</code> <code>/cast 4</code> <code>/if (${Me.Standing} &amp;&amp; !${Me.Mount.ID}) /sit</code></p> <p>/goto :body</p> <p>Attack</p> <p><code>/If (${Me.PctMana}&lt;${ManaWarn}) /Tell ${Toon} LOM !!! ${Me.PctMana}</code> <code>|/Doevents</code> <code>/delay 20</code> <code>/assist ${Toon}</code> <code>/IF (${Target.ID}==${CharID}) /goto :Attack</code> <code>/If (${Target.ID}==${MyID}) /goto :Attack</code> <code>/If (${Target.Distance}&gt;${Range}) /goto :Attack</code> <code>/keypress 9</code> <code>/delay 60</code> <code>/cast 7</code></p> <p>/goto :body</p> <p>/Return</p> <p>Sub Event_Root</p> <p><code>/Tell ${Toon} Root Incomming</code> <code>/delay 10</code> <code>/assist ${Toon}</code> <code>/delay 10</code> <code>/Cast 6</code></p> <p>/Return</p> <p>Sub Event_HPBuff</p> <p><code>/Tell ${Toon} HP Buff Incomming</code> <code>/delay 10</code> <code>/Target ${Toon}</code> <code>/delay 10</code> <code>/Cast 5</code></p> <p>/Return</p> <p>Sub Event_Heal</p> <p><code>/Tell ${Toon} Heal on demand Incomming</code> <code>/delay 10</code> <code>/Target ${Toon}</code> <code>/delay 10</code> <code>/Cast 9</code></p> <p>/Return</p> <p>The Problem is in the return to Sub main from the Sub Event on the /doevents call. To remedy replace /Return with /Return Main or /goto :body.</p>"},{"location":"macros/gallery/#macro-errors","title":"Macro Errors","text":"<p>With the recent changes for ${String[ an attempt was made to fix an existing statement.</p> <pre><code>:CounterLoop \n   /if (${String[${Ini[${FileName},${SectionName},${ArrayType}${nValues}]}].Equal[null]}) { \n      /varcalc nValues ${nValues}-1 \n      /goto :MakeArray \n   } \n   /varcalc nValues ${nValues}+1 \n   /goto :CounterLoop\n</code></pre> <p>Error:</p> <pre><code>Unparsable in calculation 'E'\nadv_fishing.mac@145(ReadINI(FileName,SectionName,ArrayType)):/if ($Ini{$FileName},${SectionName},${ArrayType}${nValues}]}.Equal[null]}){adv_Fishing.mac@41(Main): /call ReadINI FishingLoot.ini \"$Zone.Name}\" Loot\nFailed to parse /if condition (NULL.Equal}), non-numeric encountered.\n</code></pre> <p>Attempted fixes: assumption - remove string syntax and clear check for null value,</p> <pre><code>/if (${Ini[${FileName},${SectionName},${ArrayType}${nValues}] &gt; 0)\n</code></pre> <p>this resulted in script working but all loot was dropped, the array was not populated from ini file.</p> <p>Solution:</p> <pre><code>:CounterLoop \n   /if (${Ini[${FileName},${SectionName},${ArrayType}${nValues},NULL].Equal[NULL]}) { \n     /varcalc nValues ${nValues}-1 \n     /goto :MakeArray \n  } \n  /varcalc nValues ${nValues}+1 \n  /goto :CounterLoop\n</code></pre> <p>This was able to make the macro work. I doubt this was the only solution but after some suggestions by others this block of code worked.</p>"},{"location":"macros/gallery/aapurchase.inc/","title":"AAPurchase.inc","text":"","tags":["macro"]},{"location":"macros/gallery/aapurchase.inc/#description","title":"Description","text":"<p>This macro will do the following: -Purchase AA's based on an array created from an ini file.</p> <p><code>-Allow you to specify how many levels of a skill to purchase.</code> <code>-Skip any AA that you are too low to purchase at your level.</code> <code>-Inform you that it was not able to purchase the skill yet and tell you how much you have and how much it costs.</code> <code>-Inform you of the skill it purchased and how much it cost.</code> <code>-Inform you that you were not able to purchase a skill yet and what level is requires.</code> <code>-Inform you when a skill you have defined is maxed, and will skip to the next in the list.</code> <code>-Inform you to define new AA's you when all current defined AA's are maxed.</code> <code>-Will detect if you do not have Fast AA Purchase on and cconfirm you want to purchase the AA.</code> <code>-Allows you to define your own ini section so that you can add shroud abilities to purchase without losing your characters list to purchase.</code> <code>-Warn you when you have 27+ AA's banked.</code> <code>-Switch you to 100% level XP when ou reach 30 banked AA's</code></p> <p>You can find the latest version of in this post.</p>","tags":["macro"]},{"location":"macros/gallery/aapurchase.inc/#usage","title":"Usage","text":"<p>-Create an AA_CharacterName.ini and place the following in it.</p> <p><code>[AAtoBuy]</code> <code>AACount=2</code> <code>AA1=Combat Agility|2</code> <code>AA2=Combat Stability|M</code></p> <p><code>```` \\</code></p> <p>-- Thanks Spudman for creating a dump macro that will dump all your non maxed AA's. You can get it here http://macroquest2.com/phpBB3/viewtopic.php?p=139521#139521</p> <p><code>-AACount would be the number of total AA's you are adding to the ini file.</code> <code>-AA1 would be the first AA you want to train. AA2 would be the second. Add more to your hearts content. There is no max limit. But it will take longer to run, especially if you do not clean up the list removing those you have already maxed.</code> <code>-The |2 would tell it to only purchase to ability level 2. For instance AC would purchase until it reached 2/28 and then skip to the next in the list.</code> <code>-The |M would tell it to purchase to the max ability level.</code> <code>-Add \"#include AAPurchase.inc\" into your macro.</code> <code>-Add \"/call AAInit\" or \"/call AAInit inisection\" into the initialization section of your macro.</code> <code>This should allow for autodetection of earned AA's and trigger the purchase sub.</code> <code>That is it.</code></p> <p>However, if you earn AA's while zoning the autodetection will not work. If that is the case:</p> <p><code>-Add \"/call AAPicker\" anywhere into your main loop.</code></p>","tags":["macro"]},{"location":"macros/gallery/aapurchase.inc/#macro-version","title":"Macro Version","text":"<p>If you want to run the include as a macro create the below:</p> <p><code>AAPurchase.mac</code> <code>\\#include AAPurchase.inc``` Sub Main(IniSection)</code> /call AAInit ${IniSection}<code>`/call AAPicker</code> <code>/return</code></p> <p><code>```` \\</code></p> <p>and then just run '/mac AAPurcahse' or optionally '/mac AAPurcahse inisection' to load a shroud's abilities that you defined in the 'inisection' you entered.</p>","tags":["macro"]},{"location":"macros/gallery/aapurchase.inc/#advanced","title":"Advanced","text":"<p>Change this to change which channel you send your notifications to.</p> <p><code>Ex: /bc , /echo , /mqlog</code> <code>#define def_channel_ /echo</code></p> <p><code>```` \\</code></p> <p>Also from fearless, if you want to know who is training what when using /mqlog use this</p> <p><code>#define def_channel_ \"/mqlog $[Me.Name}\"</code> ``</p>","tags":["macro"]},{"location":"macros/gallery/advanced-fishing/","title":"Advanced Fishing","text":"<p>The Advanced Fishing macro by Panther can be obtained here.</p>","tags":["macro"]},{"location":"macros/gallery/advanced-fishing/#requirements","title":"Requirements","text":"<ul> <li>Fisherman's Companion</li> </ul> <p>You can obtain the Fisherman's Companion by giving 2 Nightmare Cichlid Bones and 2 Vallorian Discus Bones (both usually available in the bazaar) to Ramos Jerwan in Plane of Knowledge.</p>","tags":["macro"]},{"location":"macros/gallery/advanced-fishing/#features","title":"Features","text":"<ul> <li>FishingLoot.ini file for zone specific fishing</li> <li>Uses Fisherman's Companion to autocast Brell's Fishin' Pole</li> <li>Statistics on your fishing progress</li> <li>GM Watch and auto macro exit</li> </ul>","tags":["macro"]},{"location":"macros/gallery/afcleric.mac-nils/","title":"Afcleric.mac - nils","text":"","tags":["macro"]},{"location":"macros/gallery/afcleric.mac-nils/#forum-link","title":"forum link","text":"<ul> <li>AFCleric.mac</li> </ul>","tags":["macro"]},{"location":"macros/gallery/afcleric.mac-nils/#nils-downloads","title":"nils downloads","text":"<ul> <li>AFCleric.mac - nils</li> </ul>","tags":["macro"]},{"location":"macros/gallery/afcleric.mac-nils/#required-plugins","title":"Required Plugins","text":"<ul> <li>MQ2Debuffs</li> <li>MQ2EQBC</li> <li>MQ2Exchange</li> <li>MQ2MoveUtils</li> </ul>","tags":["macro"]},{"location":"macros/gallery/afcleric.mac-nils/#required-include-files","title":"Required Include Files","text":"<ul> <li>QuickBeg.inc</li> <li>Spell_Routines.inc</li> <li>Wait4Rez.inc</li> <li>Ninjadvloot.inc included with zip</li> <li>AFClericCCH.inc included with zip</li> </ul>","tags":["macro"]},{"location":"macros/gallery/afcleric.mac-nils/#previous-versions","title":"Previous Versions","text":"<ul> <li>Original AFCleric by Fantum409</li> <li>AFCleric by DigitalMocking Jan.2005</li> </ul>","tags":["macro"]},{"location":"macros/gallery/afcleric.mac-nils/#updates","title":"Updates","text":"<p>Updated:</p> <ul> <li>Added aura support for a single aura.</li> <li>Added hammer routine.</li> <li>Apr.19/07</li> <li>Spell section in the ini file now requires Gem#, item or alt for all gems except YaulpSpellGem and NukeOneGem, will</li> </ul> <p>change them in the next update. You will need to make the change to your ini file.</p> <ul> <li>Added looting, not tested but should work. Ini entry is useAutoLoot=TRUE/FALSE. Alias is /autoloot. I will put a</li> </ul> <p>link to the *Ninjadvloot thread later for those not familiar with it and it's ini file.</p> <ul> <li>Added anchor support, resets automatically when you get the followstop command. /anchor</li> <li>Added 3 commands to the chat event, gheal, hot me and patch me, if you had them in the buff section you should take</li> </ul> <p>them out now.</p> <ul> <li>Removed the Resplendent Cure code, just use the CureStuff section in the ini now and you will need to be running</li> </ul> <p>MQ2Debuffs plugin. I set up the sample ini's CureStuff section to work a little better.</p> <ul> <li>Updated for Stacks change and updated for the newest QuickBeg</li> <li>Cleaned up a lot of /if statements, lots left to do yet. Most likely other changes that I don't remember and this</li> </ul> <p>version is not fully tested so let me know if I screwed something up.</p> <ul> <li>May 21/07</li> <li>Not sure what all I have done to this since it's last update but here is what I remember.</li> <li>UseWard should now work with named mobs, it should activate the Fervent Benediction and higher AA's.</li> <li>You should stand up after being hit with an FD spell.</li> <li>I changed the DoBuff routine so hopefully if asked for a group spell by more than one it should only cast it once.</li> </ul> <p>It is on a 2 minute timer before the next check for that spell, also resets if a different group spell is requested</p> <p>in that 2 minutes. It is not a great system but has helped so far by not looking as obvious by casting a group spell</p> <p>on the same group 2 or 3 times in a row.</p> <ul> <li>I changed the follow routine to use uw if you are underwater. If you zone into a water zone while following it will</li> </ul> <p>switch automatically but if following on land and then into water you will need to re-issue the follow command</p> <ul> <li>I was experimenting with Promised Renewal, the routine is still there and is hard coded to use gem8. I am not sure</li> </ul> <p>yet if I should just use the spell in place of complete healing or change my routine so it works better with it.</p> <ul> <li>Some new commands are:</li> <li>pop infusion will activate Infusion of the Faithful AA</li> <li>clickzone will click the nearest zone door book or whatever</li> <li>sayzone  will target senders target and say the zone text</li> </ul> <p>example: /bc sayzone wish to go will target senders target and say wish to go</p> <p>(bugged, tank's target is temporary fix)</p>","tags":["macro"]},{"location":"macros/gallery/afcleric.mac-nils/#commands","title":"Commands","text":"<ul> <li>/anchor /echo Setting Anchor</li> <li>/autoloot /echo ToggleVar Auto Looting,useAutoLoot,Settings,useAutoLoot,</li> <li>/automok /echo ToggleVar Auto MoK,UseAutoMok,Settings,UseAutoMok,</li> <li>/automount /echo Toggling AutoMount</li> <li>/autostun /echo ToggleVar Auto Stun,UseAutoStun,Settings,UseAutoStun,</li> <li>/buffbeg /echo ToggleVar Buff Begging,BegForBuffs,Settings,BegForBuffs,</li> <li>/buffradius /echo ToggleString Setting NPC Buff Radius,NPCBuffRadius,Settings,NPCBuffRadius,</li> <li>/casterhot /echo ToggleString Setting Caster Hot Pct,CasterHotPoint,Heal_Percentages,CasterHotPoint,</li> <li>/casterpatch /echo ToggleString Setting Caster Patch Pct,CasterPatchPoint,Heal_Percentages,CasterPatchPoint,</li> <li>/dacast /echo ToggleString Setting DA Cast Point,DaCastPoint,Heal_Percentages,DaCastPoint,</li> <li>/defaultmt /echo ToggleString Setting Default MT,DefaultMT,Settings,DefaultMT,</li> <li>/doraidbuffs /echo ToggleVar Setting Raid Buffing,DoRaidBuffs,RaidBuffs,DoRaidBuffs,</li> <li>/divarb /echo ToggleString Setting Divine Arbitration Cast Point,DivArbPoint,Heal_Percentages,DivArbPoint,</li> <li>/dobufftells /echo ToggleVar Do Buff Tells,DoBuffTells,DoBuffStuff,DoBuffTells,</li> <li>/docures /echo ToggleVar Auto Curing,DoCures,CureStuff,DoCures,</li> <li>/donukes /echo ToggleVar Using Nukes,DoNuke,NukeStuff,DoNuke,</li> <li>/meleemode /echo ToggleVar Melee Mode,MeleeMode,Settings,MeleeMode,</li> <li>/necshmpatch /echo ToggleString Setting Nec Shm Patch Pct,NecShmPatchPoint,Heal_Percentages,NecShmPatchPoint,</li> <li>/nukeat /echo ToggleString Setting Nuke At,NukeAt,NukeStuff,NukeAt,</li> <li>/nukedelay /echo ToggleString Setting Nuke Delay,NukeDelay,NukeStuff,NukeDelay,</li> <li>/pethealpct /echo ToggleString Setting Pet Heal Pct,PetHealPoint,Pet_Settings,PetHealPoint,</li> <li>/useaura /echo ToggleVar Setting use aura,UseAura,SelfBuffStuff,UseAura,</li> <li>/useda /echo ToggleVar Setting use DA,UseDA,DAStuff,UseDA,</li> <li>/usehammer /echo ToggleVar Using Hammer,UseHammer,Settings,UseHammer,</li> <li>/usehot /echo ToggleVar Using HoT,UseHot,Settings,UseHot,</li> <li>/userenewal /echo ToggleVar Use Promised Renewal,UseRenewal,Settings,UseRenewal</li> <li>/useyaulp /echo Toggling UseYaulp</li> <li>/useward /echo ToggleVar Use Ward,UseWard,Settings,UseWard</li> <li>/secondtank /echo ToggleString Setting Second Tank,SecondTank,Settings,SecondTank,</li> <li>/selfhealpct /echo ToggleString Setting Self Heal Pct,SelfHealPoint,Heal_Percentages,SelfHealPoint,</li> <li>/tankhealpct /echo ToggleString Setting Tank Heal Pct,TankHealPoint,Heal_Percentages,TankHealPoint,</li> <li>/toggletank /echo Setting new main tank to:</li> <li>/turnundead /echo ToggleVar Setting Turn Undead,TurnUndead,Settings,TurnUndead,</li> <li>/healspell /echo ToggleString Setting Heal Spell,HealSpell,Spells,HealSpell,</li> <li>undeadskin - cast Sunskin</li> <li>gheal - cast groupheal</li> <li>hot me - cast hotspell</li> <li>patch me - cast patchheal</li> <li>invisoff - click off inviso buff</li> <li>pop infusion - cast infusion AA</li> <li>foeoff - click off Flight of Eeagles</li> <li>follow - start following toon that issued the command - toon has to be on master list</li> <li>follow stop - stop following a toon</li> <li>clickzone - click nearest zoneline (book, zonedoor, etc.) - has to be within distance of 12</li> <li>sayzone - will target requestor's target and echo the following text sent with the command - currently uses tank's</li> </ul> <p>target (bugged, tank's target is temporary fix)</p> <ul> <li>mana check - report mana percent in channel</li> <li>slowcamp - sits and camps to desktop (fails if toon is on a mount)</li> <li>rezz me - will target and attempt to rezz the requestor's corpse, will use epic if available</li> <li>leaveraid - will disband you from a raid</li> </ul>","tags":["macro"]},{"location":"macros/gallery/afcleric.mac-nils/#faq","title":"FAQ","text":"<ul> <li>You can do /bc wod sym spell haste and it should cast them all in that order, usefull after rezzes and to do /bc mgb</li> </ul> <p>groupsym, can also be used this way to give more than one toon a command at the same time /bc focus symbolme p10 wod</p> <ul> <li>sayzone and clickzone</li> </ul> <p>this works nice now although I have not tried clickzone on every type of zone there is I did try a lot and it never failed. You will find a new entry in your ini files usually in the first section called ZoneDelay, this delay is for sayzone so that your whole grope doesn't /say all at the same time. You will want the person who initializes the command to have the longest delay, here is how I have mine set up</p> <p>Warrior 1 Cleric 10 Shaman 20 Druid 30 Enchanter 40 Ranger 50</p> <p>So the warrior would say the text first, 1 second later the cleric would and every second after that another would until 5 seconds after giving the command my ranger would finaly say it.</p> <ul> <li>Nuking is automatic and the frequency depends on the NukeDelay that you set in the ini (can be changed on the fly</li> </ul> <p>with /nukedelay #). Look for the NukeStuff section in your ini. Also if you look at Sub Nuke there is a line that</p> <p>will return out of that sub when your tanks hp's are below 80% and as stated earlier in this thread you can lower</p> <p>that if you feel comfortable nuking at less than that</p> <ul> <li>The conditions for the macro to give the /sit command are: AutoSit has to be true, your mana % has to be less than</li> </ul> <p>what you have SitAt set to, your not on a mount, your not casting, you don't have your yaulp buff on, you don't have</p> <p>your divine avatar buff on, you are standing, the nearest NPC is farther away than you have DistanceToSit set at,</p> <p>your hit points are greater than 80% and you are not following. If any one of those conditions are not met the macro</p> <p>will not do the /sit.</p> <p>The only other times /sit is used is right after a rezz and that should keep you sitting until you have 500 mana. The other time is if you give the slowcamp command.</p> <ul> <li>The Moked event works perfectly. It does have some strict conditions, first you need to have the spell memmed and it</li> </ul> <p>has to be ready to cast, second your tank needs to be 90% or higher hps and third the mob has to be above 75% not to</p> <p>mention the macro has to be free to run the event and not in another function like healing someone in the group or</p> <p>whatever and your cleric needs to be able to see the DS spam. If all those conditions are true it will work every</p> <p>time. If you want to change the conditions edit Sub Event_DamageShield but it has worked for me the way it is for</p> <p>almost 2 years.</p> <ul> <li>The mob you are fighting has to have a DS in order to for Sub Event_DamageShield to be triggered, here are the 3 trigger lines</li> <li>event DamageShield \"#1# was burned#*#\"</li> <li>event DamageShield \"#1# was pierced by#*#\"</li> <li>event DamageShield \"#1# was tormented#*#\"</li> <li>can I use | to set up multiple tanks to watch?</li> </ul> <p>It will only watch 1 tank the way it is set up and the tank doesn't need to be in your group. It would be able to watch 1 tank out of it's group and would also try to heal any in it's group in modes 2 and 3 and if they are a war, shd or pal it would try to use HealSpell first. The only other way would be for the other tanks to ask for a heal when they needed it, you could do that as a buff request or add another entry to the chat event for HealSpell but it may not be that reliable</p> <ul> <li>subroutine MedTime gets called if your mana is 98% or less</li> </ul>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/","title":"AutoBot.mac-V4.28+","text":"","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#description","title":"Description","text":"<p>AutoBot.mac by A_Druid_00 is a versatile macro for automating a lot of tasks for your character in group, raid and solo situations.</p> <p>This wiki includes many updates/changes done by Gomer,gSe7eN,trevyn,Warlock45,and others.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#requirements","title":"Requirements","text":"<p>AutoBot.mac does not run on a default MQ compilation, it has a few extra dependencies. Some of the below items are plugins and need to be compiled, just like MacroQuest2. Please read the appropriate documentation for each plugin. The Include files should be added to the same directory that AutoBot will be run from.</p> <p>Plugins:</p> <ul> <li>MQ2MoveUtils by Outlander</li> </ul> <p>This is so the macro knows about stick, /makecamp, and /moveto. Check out the</p> <p>wiki.</p> <ul> <li>MQ2Exchange by Wassup</li> </ul> <p>This is so that item swapping, casting, and swapping back will work</p> <ul> <li>MQ2Debuffs by pinkfloydx33</li> </ul> <p>This is so the macro can keep track of your debuff counters.</p> <ul> <li>MQ2Melee by s0rcier</li> </ul> <p>So as to properly configure melee/ranged combat and various options thereof, check out the</p> <p>wiki.</p> <p>*Optional: MQ2AutoLogin</p> <p>to change to your trader</p> <p>Includes Files:</p> <ul> <li>Wait4Rez.inc Handles pre-rez situations.</li> <li>spell_routines.inc Handles spell casting, from gems, items and AAs.</li> <li>QuickBeg2.inc Handles buff begging.</li> <li>Ninjadvloot.inc Handles looting.</li> <li>Defense.inc Handles automatic engagement of defensive disc/aa/items for tanks.</li> <li>AAPurchase.incHandles automatic purchase of AA based on INI entries.</li> </ul>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#getting-started","title":"Getting Started","text":"<p>Pointers for AutoBot stuffs. (We should make a multi-boxing wiki sometime, we could link it here...)</p> <p>In addition to the documentation for the various plugins used directly by AutoBot (see links in Requirements) The following is useful info on other plugins you can use to enhance your AutoBot experience.</p> <p>MQ2Clip by Vaft, Cr4zyb4rd, et al. Manages the clip plane of backgrounded sessions. Your CPU will thank you.</p> <p>MQ2FPS by Lax. Helps manage framerates of EQ sessions, greatly helps multi-botting... Check out the wiki</p> <p>MQ2Eqbc by Omnictrl Is an alternative way to communicate with your bots. Configure your EQBC.ini with the following: [Last Connect] Server=192.168.1.101 (This must be edited to match the ip and port you have the server listening to) Port=2112 [Settings] AutoConnect=1 AllowControl=1</p> <p>You will also need to change the channel setting in your AutoBot.ini from \"i say\" to \"bc\" to use it for bot to bot communication. Don't forget that if you are getting identify spam that you check loot.ini and QB2Settings.ini for any i say or i msg commands. QB2Settings.ini defaults to i msg and needs to be changed if using EQBC. Recommend MQ2NetBots, MQ2NetStat, and MQ2NetHeal to go along with this. More information available on Page 59 of the original AutoBot thread.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#using-autobotmac","title":"Using AutoBot.mac","text":"<p>1) The main macro file, 'yyy.mac' (called 'RaidDruid.mac' in the .zip file) can be named to 'AutoBot.mac' or 'AnythingYouWant.mac'. 2) To start the macro in EverQuest with MQ2 running; type '/macro yyy.mac Note: The first time you run the macro, it will generate an ini file called RD_xxx.ini 3) Configure your RD_xxx.ini, where 'xxx' is your character name. 3a) Peruse through RDCommon.ini and add in any mobs you might want to have certains spells ignore. I tend to put Guild Lobby and PoK NPCs as immune to mez, makes life simpler when walking around and I forget to pause my bots. You will also find the MasterList here. 4)Restart Autobot after configuring RD_xxx.ini. 5) Enjoy the show.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#bot-commands","title":"Bot Commands","text":"<p>There are a few non-alias (no / required) commands available to Autobot. These commands will cause the bots to respond to a few general status/movement commands without the obvious /alias, for easy use in a group setting. Bots will only respond to commands sent by someone in the MasterList buffqueue This command has your bot respond in your ChatChannel with the # of buffs left in his \"buff queue\". Handy for deciding whether to continue pulling/crawling after a group wipe. Keep in mind that some longer cast spells such as Night's Dark Terror for enchanters have extremely long recast times, and so can sit in the queue for a while. break This will make your bots visible (they will click off all invisibility or IVU buffs). camp here This command will cause any other toons using Autobot to utilize MQ2Moveutil's \"make camp\" function, using he location coordinates you are standing on when issuing the command. follow This command will have your bots /stick to you. They will sit to med if needed and within your LeashLength. They will also break off to attack if /domelee is turned on and the MA is fighting something. They will also service buff requests and do debuffing if applicable and they are not moving. guard here Those toons you have the Guard function turned on will utilize MQ2MoveUtils camp function to set up a tightly controlled camp radius where that character is currently standing. mana All bots with a mana pool bigger than 0 will report their current % mana in your /chatchannel. medtime All bots with a mana pool bigger than 0 will report their currently estimated time to full mana based on their current Mana Regen divided by their mana level. move up This command tells your bots to move up to your current location. If they are set to /makecamp, they will reset their camp X and Y loc to your current position. If they are following, they will resume following once they reach your position (This is handy for positioning your bots in front of doors/bridges before moving through/across them) stop This command tells the bots to stop following wherever they happen to be standing. use keyword XXX YYY This command will cause the toon to say the keyword XXX to target YYY. Example: \"use keyword when gribble\" who has XXXX This command will have the toon check their inventory for the item. It will announce in the chat channel if it is in your bank, bags, top level inventory, or a worn item. If the item is an augment and mounted, it will say what item the augments is in.</p> <p>Send me to XXXXX This will cause a listening wizard or druid to cast zehphyr/translocate XXX on the requester, uses same keywords as portto portto XXXXX This will cause your wizard or druid bot to port using their group port spells, provided they have them in their spellbook. Current accepted keywords are: Druid</p> <p><code>alra</code> <code>arcstone</code> <code>barindu</code> <code>blightfire</code> <code>brell</code> <code>buriedsea</code> <code>butcher</code> <code>cobalt</code> <code>commons</code> <code>combine</code> <code>dawnshroud</code> <code>direwild</code> <code>domain</code> <code>east (karana)</code> <code>emerald (jungle)</code> <code>feerrott</code> <code>greatdivide</code> <code>grimling</code> <code>grounds</code> <code>karana (north)</code> <code>iceclad</code> <code>lavastorm</code> <code>Lceanium</code> <code>loping</code> <code>misty</code> <code>moors</code> <code>natimbi</code> <code>nexus</code> <code>pok</code> <code>ro</code> <code>shards</code> <code>skyfire</code> <code>south (emerald jungle)</code> <code>steamfont</code> <code>steppes</code> <code>stonebrunt</code> <code>succor</code> <code>surefall</code> <code>tempest</code> <code>time</code> <code>tox</code> <code>twilight</code> <code>undershore</code> <code>wakening</code></p> <p>Wizard:</p> <p><code>alra</code> <code>arcstone</code> <code>barindu</code> <code>bloodfield</code> <code>brell</code> <code>cazic</code> <code>cobalt</code> <code>combine|dreadlands</code> <code>commons</code> <code>dawnshroud</code> <code>dragonscale</code> <code>ej|emerald (emerald jungle)</code> <code>gfay (greater faydark)</code> <code>gd|greatdivide</code> <code>grimling</code> <code>grounds</code> <code>karana (north)</code> <code>katta</code> <code>iceclad</code> <code>icefall</code> <code>Lceanium</code> <code>moors (blightfire moors)</code> <code>natimbi</code> <code>nek</code> <code>nexus</code> <code>nro</code> <code>pok|knowledge</code> <code>sarith</code> <code>skyfire</code> <code>shards</code> <code>slaughter</code> <code>sro</code> <code>sunderock</code> <code>time</code> <code>tox</code> <code>twilight</code> <code>twk|west karana (ethernere tainted west karana)</code> <code>undershore</code> <code>wakening</code> <code>wkarna</code> <code>succor</code></p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#slash-commands","title":"Slash Commands","text":"<p>AutoBot.mac comes with a great set of predefined Slash Commands for easy and fast in-game configuration. Uber macro pause/unpause hotkey (bound to  for me, unlike normal EQ hotkeys 1-10, it works even while casting) Add the following lines to MQ2CustomBinds.txt:</p> <p><code>name=StartPauseDB</code> <code>down=/docommand ${If[!${Macro.Name.Equal[RaidDruid.mac]}, /mac RaidDruid.mac, /varset RDPause ${If[${RDPause}==1,0,1]}]}</code> <code>up=</code></p> <p>Then in game type _/bind StartPauseDB _ to bind that to your __ key. When pressed your __ key will start AutoBot if it's not already started. If it's already running it will toggle the pause on the macro.</p> <p>Here's a full list, divided into sub-sections for each category of Slash Commands there are (Each toggle alias works by itself, or will take an argument of ON/OFF, TRUE/FALSE, or 1/0):</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#melee","title":"Melee","text":"<ul> <li>/dodefense</li> </ul> <p>Toggles usage of the defensive measures in Defense.inc (currently only works for SK,PAL, and WAR)</p> <ul> <li>/domelee</li> </ul> <p>Toggles automatic engaging of the MA's target in melee.(Must have the plugin</p> <p>MQ2Melee configured properly)</p> <ul> <li>/domercassist</li> </ul> <p>Toggles whether you want the macro to engage mercenaries (so you can better control when they engage)</p> <ul> <li>/domercstance</li> </ul> <p>Toggles automatic changing of the bot's mercenary stance based on if the MA's target is named (or higher level) or</p> <p>mercenary's aggro</p> <ul> <li>/doranged</li> </ul> <p>Toggles automatic engaging of /autofire if MA's target is with in NPCradius and beyond range distance</p> <ul> <li>/mercengagehps</li> </ul> <p>Set the HP% you want the macro to engage your mercenaries, if you have /domercassist on</p> <ul> <li>/guard</li> </ul> <p>Toggles the guard function on|off</p> <ul> <li>/rangedist XXX</li> </ul> <p>set the minimum distance away from mob before engaging /autofire. The EQ minumum is 30.</p> <ul> <li>/reportdefense</li> </ul> <p>Toggles reporting for Defense.inc events</p> <ul> <li>/status</li> </ul> <p>This will toggle the group \"status\" checking part of the guard function, allowing the guard toon to pause for group</p> <p>members below 50mana or 30endurance, for 60 second per check.</p> <ul> <li>/stickarg XXX</li> </ul> <p>sets melee arguments for stick during fights</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#general","title":"General","text":"<ul> <li>/addalert ${Target.CleanName}</li> </ul> <p>Adds targetted NPC to the list which will be ignored in the RDCommon.ini and will perform normally when near these</p> <p>npc's not treating them as hostile. ${Target.CleanName} can also be replaced with the name of the mob typed out or</p> <p>the ini file can be manually edited.</p> <ul> <li>/assistdelay</li> </ul> <p>Sets the amount of time the bot will wait between MA assists. (Ex. /assistdelay 5s)</p> <ul> <li>/assistma</li> </ul> <p>Toggles assisting of your designated MA1, MA2, and MA3. Turning this off essentially disables Melee, Nuking, DoTing,</p> <p>and Debuffing</p> <ul> <li>/autoninja</li> </ul> <p>Toggles auto looting of the nearest corpse after each XP gained message. Will only loot droppable items. Must have</p> <p>the plugin MQ2MoveUtils for this to work.</p> <ul> <li>/autosit</li> </ul> <p>Toggles auto sitting to med. Not much to say here.</p> <ul> <li>/changetank</li> </ul> <p>Toggles automatic changing to MA2 or MA3 when MA1 dies (need to have /usegroupassist and /useraidassist both off,</p> <p>still testing)</p> <ul> <li>/chatchannel</li> </ul> <p>Sets the chat channel the bot reports to, (Ex. /chatchannel \"i say\"\ufffd)</p> <ul> <li>/docanni</li> </ul> <p>Toggles auto casting of your cannibalization spell when below your MedPct and above your CanniHPs. Also works for</p> <p>wizard harvest, mana robe, and necromancer Lich spells.</p> <ul> <li>**/doports**Toggles whether your druid or wizard bot will respond to portto comands</li> <li>/doyaulp</li> </ul> <p>Toggles auto casting of your yaulp spell when below your MedPct and there are NPCs within your NPCRadius.</p> <ul> <li>/engagehps</li> </ul> <p>Sets the % of the mobs HPs you want to start melee/debuffing/dotting/nuking (Ex. /engagehps 95)</p> <ul> <li>/ma1</li> </ul> <p>Assigns a PC as Main Assist 1. (Ex. /ma1 BoDuke)</p> <ul> <li>/ma2</li> </ul> <p>Assigns a PC as Main Assist 2. (Ex. /ma2 LukeDuke)</p> <ul> <li>/ma3</li> </ul> <p>Assigns a PC as Main Assist 3. (Ex. /ma3 DaisyDuke)</p> <ul> <li>/leashlength</li> </ul> <p>Sets the distance your bot will allow itself to get from his follow target before resuming follow (Ex.</p> <p>/leashlength 25)</p> <ul> <li>/listspells</li> </ul> <p>Returns a list of all configured Spell Sets in your ini.</p> <ul> <li>/loadini \"IniFileName\"</li> </ul> <p>Loads a pre-configured ini file.</p> <ul> <li>/medpct</li> </ul> <p>Sets the % of Mana you want to sit or summon your horse at. (Ex. /medpct 50)</p> <ul> <li>/npcradchk</li> </ul> <p>Sets the Radius (in feet) around you that defines how close mobs are allow before you stop buffing to avoid aggro</p> <p>(Ex. /npcradchk 100)</p> <ul> <li>/npcradius</li> </ul> <p>Sets the Radius (in feet) around you that you want to watch NPCs using Assist healing and Assisting the MA (Ex.</p> <p>/npcradius 200)</p> <ul> <li>/npczradius</li> </ul> <p>Sets the Radius (in feet) above/below you that you want to watch NPCs using Assist healing and Assisting the MA (Ex.</p> <p>/npczradius 200)</p> <ul> <li>/rdpause</li> </ul> <p>Toggles AutoBot's active functions on and off.</p> <ul> <li>/relaytells</li> </ul> <p>Toggles automatic reporting of tells sent to the bot in your configured /chatchannel</p> <ul> <li>/reportevents</li> </ul> <p>Toggles automatic reporting of your bot's status messages such as low food/drink, stunned/unstunned, encumbered,</p> <p>etc.</p> <ul> <li>/reportmana</li> </ul> <p>Toggles automatic reporting of your mana status if you get below the medpct, only reports once before going above</p> <p>the medpct.</p> <ul> <li>/reportmanapct</li> </ul> <p>Defines the point at which you want to start reporting your mana status to your chat channel.</p> <ul> <li>/reporttoggles</li> </ul> <p>Toggles automatic reporting of your toggle status of any /commands you send your bot in the ChatChannel.</p> <ul> <li>/reportwow</li> </ul> <p>Toggles automatic reporting of Wrath of the Wild on the MA</p> <ul> <li>/saveini \"IniFileName\"</li> </ul> <p>Creates an ini file named \"IniFileName\"</p> <ul> <li>/sitdelay</li> </ul> <p>Sets the amount of time you want to wait before sitting after casting any spell that might be considered aggro. (Ex.</p> <p>/sitdelay 5s)</p> <ul> <li>/stophps</li> </ul> <p>Sets the % of the mob's HPs you want to stop nuking and debuffing. (Ex. /stophps 10)</p> <ul> <li>/targetlock</li> </ul> <p>Toggles using non-assist target lock</p> <ul> <li>/useepic</li> </ul> <p>Toggles automatic use of epic</p> <ul> <li>/usegroupassist</li> </ul> <p>Toggles automatic assigning of the group's main assist as MA1</p> <ul> <li>/usegroupma</li> </ul> <p>Toggles automatic assigning of the gorup's main assist as MA1</p> <ul> <li>/usegrouptank</li> </ul> <p>Toggles automatic assigning of the group's main tank as MA1</p> <ul> <li>/usemount</li> </ul> <p>Toggles automatic mount summoning at your /medpct, if this is off and /autosit is on, it will sit to med instead of</p> <p>summoning a mount.</p> <ul> <li>/useraidassist</li> </ul> <p>Toggles using the raid's main assist (assist 1) as MA1</p> <ul> <li>/useraidma</li> </ul> <p>Toggles using the raid's main assist (assist 1) as MA1</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#healing","title":"Healing","text":"<ul> <li>/aeheal</li> </ul> <p>Toggles on AE Healing. This creates an array of every PC within PCRadius, and cycles through every one of them,</p> <p>checking their HPs against your defined HealPct, and casts heals if appropriate. Super handy on mobs with AE Rampage</p> <p>or AE Damage effects.</p> <ul> <li>/assistheal</li> </ul> <p>Toggles on Assist Healing. This creates an array of every NPC within NPCRadius, and assists them to find the target</p> <p>of their aggression, and heals that target if necessary. Super handy for general clearing on raids before getting to</p> <p>named. Also causes target to constantly ping-pong wildly all over the place trying to find a target to heal</p> <ul> <li>/cancelpct</li> </ul> <p>Set this to the percentage of HPs you want AutoBot to cancel heals at. (Ex. /cancelpct 90)</p> <ul> <li>/checkgroup</li> </ul> <p>Sets the number of seconds you'd like to wait between HP evaluations</p> <ul> <li>/delayedhealpct XX</li> </ul> <p>Sets the percentage of HPs to cast delayed heal on MA1</p> <ul> <li>/divarbhps</li> </ul> <p>Sets the % HPs you want to cast Divine Arbitration at if a groupmember gets below it (Ex. /divarbhps 25)</p> <ul> <li>/dointerrupting</li> </ul> <p>Toggles interrupting debuffs/nukes/dots to heal group members. Some people like to just let their group members die</p> <p>instead of ducking a nuke to heal them. This is for those people!</p> <ul> <li>/doretort</li> </ul> <p>Toggles automatic casting of the listed Retort spell on MA1</p> <ul> <li>/doward</li> </ul> <p>Toggles automatic casting of the listed Ward spell on MA1</p> <ul> <li>/healchannel</li> </ul> <p>Sets the channel your bots use to report heals when they are cast.</p> <ul> <li>/healfd</li> </ul> <p>Toggles healing of FD classes (SK, Necro, Monk) only while they are FD (Ex. /healfd ON will only heal if they are</p> <p>FD)</p> <ul> <li>/healgroup</li> </ul> <p>Toggles healing of your group. With this on, it will heal groupmembers that are below HealPct</p> <ul> <li>/healmefirst</li> </ul> <p>Toggles healing of yourself over any group members. If you are mid-cast to heal someone else and your HPs fall below</p> <p>the HealPct, you will cancel it and heal yourself first. Self preservation at its finest.</p> <ul> <li>/healpct</li> </ul> <p>Sets the % of HPs you want to heal other PCs at. (ex. /healpct 70)</p> <ul> <li>/healpets</li> </ul> <p>Toggles healing of any pets in the group if they are below the PetHealPct</p> <ul> <li>/healramp</li> </ul> <p>Toggles automatic healing of your Rampage tank anytime a RAMPAGE message is detected.</p> <ul> <li>/healxtarget</li> </ul> <p>Toggles activation of healing PC and pets on the extended target window.</p> <ul> <li>/pcradius</li> </ul> <p>Sets the Radius (in feet) around you that you want to watch PC HPs using AE healing (Ex. /pcradius 200)</p> <ul> <li>/pczradius</li> </ul> <p>Sets the Radius (in feet) above and below you that you want to watch PC HPs using AE healing (Ex. /pczradius 50)</p> <ul> <li>/pethealpct</li> </ul> <p>Sets the % of HPs you will heal pets at. (Ex. /pethealpct 40)</p> <ul> <li>/ramptank</li> </ul> <p>Sets the Rampage Tank that you check whenever a RAMPAGE message is seen with /healramp on. (Ex. /ramptank</p> <p>UncleJesse)</p> <ul> <li>/reportheals</li> </ul> <p>Toggles automatic reporting of heals in the ChatChannel</p> <ul> <li>/reportinterrupts</li> </ul> <p>Toggles automatic reporting of interrupts to heal in the ChatChannel</p> <ul> <li>/reportsotw</li> </ul> <p>Toggles automatic reporting of Spirit of the Wood in the ChatChannel</p> <ul> <li>/sotw</li> </ul> <p>Toggle auto casting of Spirit of the Wood</p> <ul> <li>/sotwpct</li> </ul> <p>Set this to the average group HP percentage you want it to auto cast Spirit of the Wood at. (Ex. /sotwpct 75)</p> <ul> <li>/tankhealpct</li> </ul> <p>Sets the % you start Chealing. Due to some predictive logic the Cheal may start earlier. Set this to the abslute</p> <p>floor you want to start CH at.</p> <ul> <li>/usech</li> </ul> <p>Toggles using your Cheal spell on MA1 on or off. It will monitor the tank's HPs and if he's taking enough damage to</p> <p>be dead in less than 20 seconds, it will duck out of whatever RD is currently doing and start a CH. If the tank's</p> <p>HPs stop falling and level off above the TankHealPct, it will cancel CH and wait until the tank's HPs fall again.</p> <ul> <li>/usedelayed</li> </ul> <p>Toggles casting the listed Delayed Heal on MA1</p> <ul> <li>/usedivarb</li> </ul> <p>Toggles using your divine arbitration or cleric epic 1.5 (if you have it) when a group member falls below the</p> <p>DivArbHPs.</p> <ul> <li>/usetankhot</li> </ul> <p>Toggles casting the listed Heal over Time spell on MA1</p> <ul> <li>/waittocancel</li> </ul> <p>Toggle. When turned on, this will wait until your heals have less than .5 seconds left before making the decison to</p> <p>cancel the heal.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#buffing","title":"Buffing","text":"<p>AutoBot queues buff requests and casts them when appropriate. It will not cast buffs unless there are no mobs within 20 feet of the bot, it's not in combat, and it's not moving. It will hold onto those buff requests until you are no longer moving, not in combat, and there are no mobs within 20 feet. If you zone, all stored buffs are flushed, and you have to beg again. By default the bot only listens for /tells and IRC chat for buffing. If you want him to listen in other channels, you need to add #chat group to listen in group, or #chat chat to listen in EQ's chat channels; to the RaidDruid.mac file under the #chat tell line right near the top of the macro. More information on the #chat function can be found in the MacroQuest manual.</p> <p>Aliases:</p> <ul> <li>/buff \"Spell Name/Alias\" [Name | Group]</li> </ul> <p>Use this alias to send a buff command to your bot, will also accept buff aliases. You can use this to cast items and</p> <p>AAs as well as spells. If you specify Group instead of a name, it will buff your whole group with that spell, if it</p> <p>is a single target spell. In addition, you can cast it on any spawn including NPCs, Pets, Corpses, etc. (Ex. /buff</p> <p>\"Steeloak Skin\"\ufffd Bob, or /buff Oak Bob if oak is an alias for steeloak skin). If the /buff command utilizes a DoBuff</p> <p>alias, the buff request is queued and will not be performed during combat. If the Spell/AA/item name itself is used</p> <p>in the /buff command it is cast immediately. (Ex. /buff \"Exodus\" would fire right away, while /buff \"Evac\" would</p> <p>not). **WARNING: YOUR BOTS WILL NOT WATCH THE GROUP'S HPS OR ANYTHING ELSE WHILE EXECUTING A /BUFF COMMAND, USE IT</p> <p>WHEN YOU KNOW YOU DON'T NEED TO BE DOING ANYTHING ELSE IMPORTANT LIKE HEALING**</p> <ul> <li>/dobuffs</li> </ul> <p>Toggles automatic casting of buff requests made via /tell</p> <ul> <li>/dobufftells</li> </ul> <p>Toggles sending automatic replies to buff requests made via /tell</p> <ul> <li>/refreshbuffs</li> </ul> <p>Toggles automatic refreshing of buffs. Only buffs that are set to refresh in the ini will be refreshed.</p> <ul> <li>/reportdobuffs</li> </ul> <p>Toggles automatic reporting of buffs in the ChatChannel</p> <ul> <li>/reportselfbuffs</li> </ul> <p>Toggles automatic reporting of self buffs in the ChatChannel</p> <ul> <li>/selfbuff</li> </ul> <p>Toggles Self Buffing. Useful if you happen to be in an environment where having all your self buffs up puts you over</p> <p>the limit</p> <ul> <li>/wow</li> </ul> <p>Toggles automatic casting of Wrath of the Wild on your designated MA. I figure an extra 650 damage every 4 minutes</p> <p>cant hurt, since its mana free and all.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#debuffing","title":"Debuffing","text":"<ul> <li>/debuff</li> </ul> <p>Toggles Auto debuffing. Pretty much all there is to say about that</p> <ul> <li>/debuffchannel</li> </ul> <p>Sets the channel your bots will use to report debuffs</p> <ul> <li>/dot</li> </ul> <p>Toggle Auto DoTing of mobs</p> <ul> <li>/mez</li> </ul> <p>Toggles Auto mezzing for those places where mez==bad</p> <ul> <li>/reportdebuffs</li> </ul> <p>Toggles reporting of debuffs in the ChatChannel</p> <ul> <li>/reportdots</li> </ul> <p>Toggles automatic report of DoTs in the ChatChannel</p> <ul> <li>/reportmez</li> </ul> <p>Toggles automatic report of Mezzes in the ChatChannel</p> <ul> <li>/usehott</li> </ul> <p>Toggles using the Health of Target's Target Leadership ability to determine a mob's aggro.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#nuking","title":"Nuking","text":"<ul> <li>/domancy</li> </ul> <p>Toggles Auto use of wizard's Pyromancy, Cryomancr, and Arcomany AA before casting spell nukes.</p> <ul> <li>/nuke</li> </ul> <p>Toggles Auto Nuking the MA's target.</p> <ul> <li>/nukedelay</li> </ul> <p>Sets the delay between chain nuking. If your tank sucks, or are in a kite group raise this delay to prevent agro.</p> <ul> <li>/nukeset #</li> </ul> <p>Sets the spellset to cast Nuke/Debuff/DoTs. If no number is given, returns the current spell set # you are nuking</p> <p>from.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#pet","title":"Pet","text":"<ul> <li>/petbuff</li> </ul> <p>Toggles automatic buffing of your pet</p> <ul> <li>/usepet</li> </ul> <p>Toggles automatic summoning and sending in of pet to melee.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#curing","title":"Curing","text":"<p>This portion of the macro requires the MQ2Debuffs plugin by pinkfloydx33. See the requirements.</p> <ul> <li>/docures</li> </ul> <p>Toggles auto-curing on and off.</p> <ul> <li>/reportcures</li> </ul> <p>Toggles auto-cure reporting on and off.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#stuff","title":"Stuff","text":"<p>This macro has been updated to utilize a programmable rest, combat, and named script checks and commands similar to MQ2Melee's holy/down shits.</p> <ul> <li>/docombat</li> </ul> <p>Toggles useage of the Combat scripts.</p> <ul> <li>/donamed</li> </ul> <p>Toggles useage of the Named scripts.</p> <ul> <li>/dorest</li> </ul> <p>Toggles usage of the Rest scripts.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#bard","title":"Bard","text":"<p>This portion of the macro makes use of the MQ2Twist (See MQ2Twist wiki) and MQ2BardSwap plugins.</p> <ul> <li>/addcombatsong |\"\"</li> </ul> <p>Adds the Alias or Song Name to the combat twist if a slot is available.</p> <ul> <li>/addrestsong |\"\"</li> </ul> <p>Adds the Alias or Song Name to the rest twist if a slot is available.</p> <ul> <li>/autorestoff</li> </ul> <p>When turned on it watches with each loop to see if any npc's are within the radius defined and will switch off rest</p> <p>songs if any are detected</p> <ul> <li>/autorestradius</li> </ul> <p>Sets the radius at which your bard will stop twisting when NPCs are present</p> <ul> <li>/combatsongs on|off</li> </ul> <p>Enables or Disables automatically twisting the combat twist temporarily.</p> <ul> <li>/delcombatsong |\"\"</li> </ul> <p>Removes the Alias or Song Name from the combat twist present.</p> <ul> <li>/delrestsong |\"\"</li> </ul> <p>Removes the Alias or Song Name from the rest twist if present.</p> <ul> <li>/listsongs combat|rest|all</li> </ul> <p>Lists the songs set to be twisted for the given twist type.</p> <ul> <li>/songalias \"Song Name\"</li> </ul> <p>Creates an alias for the given song name (must be in quotes if it has a space).</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#ini-entries","title":"INI entries","text":"<p>.ini files will be automatically created and populated with default values if they do not exist.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#meleestuff","title":"[MeleeStuff]","text":"<p>DoMelee=1 (Set by /domelee) DoRanged=1 (0=Don't use ranged attacks, 1=Use Ranged attacks) DoMercAssist=TRUE (TRUE|1|FALSE|0) - If you want the macro to engage mercenaries so you can better control when they engage DoMercStance=FALSE (TRUE|1|FALSE|0) - Toggles use of automatic mercenary stance changes based on aggro MercEngageHPs=98 At what hp% you want the MATarget to be at before engaging StanceChange=50 (Amount off aggro to change DPS mercs from burn to balance) Guard=TRUE (TRUE|1|FALSE|0 - Toggles the guard function) StickArgs=10 pin (Set by /stickargs) DiscTotal=1 (Set this to the total number of melee disciplines you have defined) UseDiscs=1 (0=Don't Disc, 1=Use Discs) DiscName1=Furious Discipline (Set this to the name of the Discipline you want to use) DiscType1=0 (0=Defensive, 1=Offensive) DiscEndurance1=10 (Set this to the % endurance you want to be above when triggering this disc) DiscMinHPs1=10 (Set this to the min HPs of the mob or yourself that you want to trigger this disc at.) DiscMaxHPs1=90 (Set this to the max HPs of the mob or yourself that you want to trigger this disc at.) DiscSpawnCount1=2 (Set this to the # of mobs you want to have in melee range before triggering this disc.)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#settings","title":"[Settings]","text":"<p>AABuy=FALSE TRUE|1|FALSE|0 - Toggles whether to automatically buy AA ASRadius=20 (Set to radius to check for mobs before sitting) ASZRadius=50 (Set to Z radius to check for mobs before sitting) AutoNinja=0 (Set by /autoninja, 0=off and 1=on) AutoSit=1 (Set by /autosit, 0=off and 1=on) DrinkGem=gem1 (Set this to gem#, item, or alt; as applicable to summon food) DrinkSpell=Abundant Drink (Set this to the name of the spell/item/alt you use to summon drink) DoShrink=FALSE (TRUE|1|FALSE|0 - Toggles whether to automatically shrink) EndMedPct=80 Endurance % to med at? FoodGem=gem1 (Set this to gem#, item, or alt; as applicable to summon food) FoodSpell=Abundant Food (Set this to the name of the spell/item/alt you use to summon food) GatherPct=10 (Set this to the % mana you want to use your Gather Mana) IRCAddress= IRC Server URL IRCPort=6667 (set to the port you want MQ2IRC to use) IRCChannel=#Name (Set to the name of the channel you want MQ2IRC to utilize, remember to put a # sign in front) LeashLength=25 (Set by /leashlength) MedPct=50 (Set by /medpct) MountItem=Black Rope Bridle (This is the item you use to summon your mount) MoveUpJitter=10 (Amount of distance before \"jittering\", to look more natual) NPCRadChk=100 (Set by /npcradchk) NPCRadius=75 (Set by /npcradius) NPCZRadius=100 (Set by /npczradius) PCRadius=200 (Set by /pcradius) PCZRadius=100 (Set by /pczradius) ShrinkGem= (Set to item or gemNumber or alt for your shrink spell) ShrinkSelfOnly=TRUE (TRUE|1|FALSE|0 - Toggles whether to automatically use shrink on yourself) ShrinkSpell= (Put the name of your shrink spell or item here) SitDelay=5s (Set by /sitdelay) UseIRC=FALSE (TRUE|1|FALSE|0 - Toggles whether to utilize MQ2IRC) UseMount=1 (Set by /usemount, 0=off and 1=on) UseRods=0 (Set by /userods) RodMana=50 (Set this to the % mana you want to be below before clicking your mod rods) RodSpell=Rod of Mystical Transvergance (Set this to the spell you use to summon mod rods) RodGem=gem1 (Set this to gem you want to cast this from, or put item for items, alt for AAs)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#generalstuff","title":"[GeneralStuff]","text":"<p>AssistDelay=5s (Set by /assistdelay) AssistMA=1 (Set by /assistma, 0=off and 1=on) CalmSpell= Put the name of your calm spell or item here CalmGem= Put gem# for spells, or item for items CanniGem1=gem6 (Set this to spell gem you want to cast your canni spell from, or put alt if an AA, or item if its an item) CanniHPs1=0 (Set this to the % HPs you want to stop using your canni AA at) CanniSpell1=Harvest (Set this to the name of your canni aa/item/spell. This section also works for Lich and any other Canni type spells that have a buff icon) CanniTotal=1 (Set this to the total cannibalization/harvest AAs/items/spells you want to check and cast) ChangeTank=FALSE (TRUE|1|FALSE|0 - Toggles automatic changing to MA2 or MA3 when MA1 dies) ChatChannel=i say (Set by /chatchannel) DoCanni=1 (Set this to 1 if you want to use your Canni AAs/items/spells when you fall below your medpct) DoWoW=1 (Set by /wow, 0=off and 1=on) DoYaulp=1 (Set this to 1 if you want to use Yaulp when mobs are close by instead of sitting) EngageHPs=95 (Set by /engagehps) InvisibilitySpell= Put the name of your invis spell or item here InvisibilityGem= Put gem# for spells, or item for items MA1=HappyGilmore (Set by /ma1) MA2=BillyMadison (Set by /ma2) MA3=MrDeeds (Set by /ma3) MaxMezLvl=93 (Set this to the maximum level your Mez spell can effect) MaxCharmLvl=89 (Set this to the Max level your Charm spell can effect) MaxCalmLvl=90 (Set this to the Max level your Calm spell can effect) Mezbroke=FALSE (TRUE|1|FALSE|0 - Toggles announcement of who broke Mez) RelayTells=1 (Set by /relaytells) ReportEvents=1 (Set by /reportevents) ReportMana=1 (Set by /reportmana) ReportManaPct=50 (Set by /reportmanapct) ReportToggles=1 (Set by /reporttoggles) ReportWoW=1 (Set by /reportwow) SpellSet1=SomeSpellSetName (Put the name of the Spell Set you want to memorize when you die while using this spell set here. Needs to match the name of the spell set you have saved in EQ to work properly) SpellSetTotal=1 (Set this to the # of unique spell sets you have defined for nukes/debuffs) StopHPs=20 (Set by /stophps) TargetLock=FALSE TRUE|1|FALSE|0 - Toggles whether to lock target when not using a MA TraderName=Traderdude01 (Set this to name of your account's Trader in order to use MQ2AutoLogin's toon switching feature via \"go to trader\" ) UseEpic=1 \\(TRUE\\|1\\|FALSE\\|0 - Toggles automatic use of Epic on MA1's target_ **UseGroupMA=TRUE** _(TRUE\\|1\\|FALSE\\|0 - Toggles whether to automatically assign the group's main assist as MA1 )_ **UseGroupTank=FALSE** _(TRUE\\|1\\|FALSE\\|0 - Toggles whether to automatically assign the group's main tank as MA1)_ **UseRaidMA=FALSE** _(TRUE\\|1\\|FALSE\\|0 - Toggles whether to automatically assign the raid's main assist \\(assist1\\) as MA1) YaulpGem1=gem6 (Set this to spell gem you want to cast your Yaulp spell from) YaulpSpell1=Yaulp VII (Set this to the name of your Yaulp spell)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#healstuff","title":"[HealStuff]","text":"<p>AEHealing=0 (Set by /aeheal, 0=off and 1=on) AutoInterrupt=1 (Set by /interrupt, 0=off and 1=on) AssistHealing=0 (Set by /assistheal, 0=off and 1=on) BegFrantic=FALSE (TRUE|1|FALSE|0 - Toggle auto begging for frantic heals when below the BegFranticPCT) BegFranticPct=35 (Sets the amount of HP below which your toon will beg for a Frantic Heal) BegFranticChannel=BC (Sets the channel your toon will beg for Frantic Heals in) CancelPct=90(Set by /cancelpct) CheckGroupInterval=3(Set by /checkgroup, and sets how often you check group HP levels for healing) DelayedHeal=Promised Rehabilitation(This is your Delayed Heal spell) DelayedHealGem=Gem4(This is the gem you will be casting the Delayed Heal from) DelayedHealPct=95(Sets the HP% below which your toon will cast the Delayed Heal on MA1, use \"/delayedhealpct</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#_1","title":"\")*","text":"<p>DoRetort=TRUE*(TRUE|1|FALSE|0 - Toggles use of automatically casting Retort on MA1 during combat) UseDelayedHeal=TRUE(TRUE|1|FALSE|0 - Toggles whether to automatically cast the Delayed Heal, use \"/usedelayed\" ) DivArbHPs=20(Set by /divarbhps) DoSotW=1(Set by /sotw, 0=off and 1=on, Toggles casting of \"Spirit of the Wood\" or other listed spell/AA) FastHeal=Chlorotrope(This is your fast healing spell) FastHealGem=gem2(This is the gem you cast your Fast Heal from if it's not memmed already) FranticHeal=Fifteenth Emblem (Sets which heal your toon will cast in response to a Frantic Heal call) FranticHealGem=Gem6 (Sets the gem number to memorize the Frantic Heal spell) GroupHealing=1(Set by /healgroup, 0=off and 1=on) HealChannel=echo(Set by /healchannel) HealFD=0(Set by /healFD, 1 only heals FD classes while FD, 0 heals normally) HealMeFirst=1(Set by /healmefirst) HealPct=30(Set by /healpct) HealXTarget=TRUE(TRUE|1|FALSE|0 - Toggles healing of PC and Pets on the Extended Target Window) PetHeal=Karana's Renewal(Put the name of the spell you wish to use to heal your group's pets here) PetHealGem=gem1(Put the gem you wish to cast your pet heal from if its not memmed) PetHealing=1(Set by /healpets) PetHealPct=50(Set by /pethealpct) QM=TRUE(TRUE|1|FALSE|0 - Toggles automatic use of Quiet Miracle on group members whose mana is below 40m) RampHealing=0(Set by /healramp, 0=off and 1=on) RampTank=BigDaddy(Set by /ramptank) ReportHeals=1(Set by /reportheals) ReportInterrupts=1(Set by /reportinterrupts) ReportSotW=1(Set by /reportsotw) RetortSpell=Olsif's Retort(This is your Retort spell) RetortGem=Gem9(This is the gem you want to cast the Retort spell from) SotWAA=Spirit of the Wood(This is the Actual Alt ability you have, set it to whichever one you have) SotWPct=80(Set by /sotwpct) TankHeal=Karana's Renewal(Heal spell to use on the tank... usually your Cheal) MUST be defined and a different spell than FastHeal, even if not used. TankHealGem=gem8(Spell slot for your tank heal spell) TankHealPct=70(This is the % you heal MA1 at) UseBDA=0(Set this to 1 if you want to cast Bestow Divine Aura on groupmembers when Divine Arbitration is not up) UseCH=1(Use Chealing... or not, 1 for on, 0 for not) UseDivArb=0(Set by /usedivarb) UseFranticHeal=TRUE(TRUE|1|FALSE|0 - Toggles whether to respond to calls for Frantic Heals) WaitToCancel=1(Set by /waittocancel)''</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#curestuff","title":"[CureStuff]","text":"<p>CureTotal=1 (Put your total number of cure spells here) DoCures=0 (0=Don't Cure, 1=Cure) ReportCures=0 (0=Don't Report, 1=Report) CureSpell1=Resplendent Cure (Put the name of the item, alt, or spell you use to cure with here) CureGem1=alt (Put item for item, alt for AA, or the gem# you want to use to cure with here) CurseCounters1=50 (Set this to the # of curse counters you want this to react to \\(For example if the spell cures 25 curse counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\)) DiseaseCounters1=50 (Set this to the # of Disease counters you want this to react to \\(For example if the spell cures 25 Disease counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\)) PoisonCounters1=50 (Set this to the # of Poison counters you want this to react to \\(For example if the spell cures 25 Poison counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\))</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#selfbuffstuff","title":"[SelfBuffStuff]","text":"<p>SelfBuffTotal=9 (Put your total number of self buffs here) SelfBuffs=1 (Set by /selfbuff, 0=off and 1=on) ReportSelfBuffs=1 (Set by /reportselfbuffs) SelfBuffRecheck=10s (Sets how often you check to see if your self buffs are going to fade) SelfBuff1=Shrunken Goblin Skull Earring (This is the name of the item or spell you use for self buff 1) SelfBuffIcon1=Grim Aura (This is the name of self buff 1 as it shows up in your buff window) SelfBuffGem1=item (This is the gem you cast self buff 1 from, if it's an item put item, if it's an AA put alt) SelfBuffCount1=14 (Put the number of buffs you would like to stop casting this buff after, i.e if you want to leave a couple buff slots open, set your self buffs up so that the could is never equal to your max number of buff slots)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#dobuffstuff","title":"[DoBuffStuff]","text":"<p>DoBuffTotal=10 (Put the total number of DoBuff entries you have here) DoBuffs=1 (Set by /dobuffs, 0=off and 1=on) ReportDoBuffs=1 (Set by /reportdobuffs) DoBuffTells=0 (Set by /dobufftells) RefreshBuffs=1 (Set by /refreshbuffs) DoBuff1=Woven Grass Boots (Put the name of the item, aa, or spell you cast this buff with here) DoBuffIcon1=Spirit of Wolf (This is the name of dobuff 1 as it would show up in your buff window) DoBuffGem1=item (This is the gem you cast dobuff 1 from, if it's an item put item, if it's an AA put alt) DoBuffMana1=0 (Set this to the % mana you'd like to be above before handling this buff request) DoBuffAliases1=SoW|Spirit| (This is the string of different buff messages you want the druid bot to respond to, separated by the |. Make sure to have a | for each buff, as it needs to count them to find out how many buff request strings to check for. Also be mindful of spaces, as the buff request will not be registered without the preceding and trailing spaces defined in the alias. Ex: If the alias were set up as | Rune |. \"I could use a Rune right about now\" would trigger the request while \"Rune\" alone would not, unless the alias is actually defined with no spaces as |Rune|). DoBuffRefresh1=1 (Set this to 1 if you want to refresh this buff when it wears off) BattleBuff1=FALSE (Set this to TRUE if you would like to cast this buff with mobs nearby and/or in Combat.) RezBuff1=FALSE (This allows the buff to be cast on a corpse, IE set rez spells to TRUE, all else FALSE) BuffGem=gem3 (Set this to the spell gem you want to cast your /buff commands from)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#debuffstuff","title":"[DebuffStuff]","text":"<p>DebuffTotal=3 (Put the total number of Debuff entries you have here) DoDebuffs=1 (Set by /debuff, 0=off and 1=on) DoDoTs=1 (Set by /dot, 0=off and 1=on) DoMez=1 (Set by /mez, 0=off and 1=on) DoManaTaps=1 (0=off and 1=on) ReportDebuffs=1 (Set by /reportdebuffs) ReportDoTs=1 (Set by /reportdots) ReportMez=1 (Set by /reportmez) DebuffChannel=echo (Set by /debuffchannel) UseHoTT=1 (0=off and 1=on) MaxMobs=1 (Set this to the maximum number of mobs you would like AutoBot to keep track of) AllDebuffsFirst=1 (Set this to 1 if you want to land all your debuffs on each mob before moving on to debuff the next) DebuffMAFirst=1 (Set this to 1 if you want to land all your debuffs on the MA's target before moving on to any adds) DebuffSpell1=Hand of Ro (Put the name of the item, aa, or spell you cast this debuff with here) DebuffIcon1=Hand of Ro (This is the name of debuff 1 as it would show up in your buff window) DebuffGem1=gem5 (This is the gem you cast debuff 1 from, if it's an item put item, if it's an AA put alt) DebuffMana1=1 (Set this is to the % mana you would like to stop casting this debuff at.) DebuffHPs1=1 (Set this is to the % HPs you would like to start casting this debuff at.) DebuffStopHPs1=1 (Set this is to the % HPs you would like to stop casting this debuff at.) DebuffRecast1=3 (Set by /debuffrecast) DebuffSpellSet1=1 (This is the spell set you want to cast this debuff with. 0=all spell sets, 1=spell set #1, etc.) DebuffMAOnly1=1 (Set this is to 1 if you want to land this debuff on the MA's target only, and exclude adds.) DebuffNamedOnly1=1 (Set this is to 1 if you want to land this debuff on named targets only, and not normal XP mobs.) DebuffMessage1=%Target Debuffed by %Spell (This is your custom debuff message when you successfully land a debuff. Use %Target to report the target's name, %Spell to report the spell name, and %Duration to report the duration of the spell you just landed) Or set to None for no message. SpellType1=1 (Set this is to 0 for debuffs, 1 for DoTs, 2 for Mez, 3 for Mana Tap spells, 4 for AE Mez, and 5 for Charm.) DebuffCondition1=TRUE (Code conditions can be put here such as \"{Target.Body.Name.Equal[Undead]} or !{Target.Buff[Turgur's Swarm].ID} Default is TRUE )</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#nukestuff","title":"[NukeStuff]","text":"<p>NukeTotal=1 (Set this to the number of nukes you have defined) DoNukes=1 (Set by /nuke, 0=off and 1=on) Domancy=TRUE (Set by /domancy, FALSE=off and TRUE=on) determines if wizards will use \"mancy\" AA before casting spell NukeDelay=1 (Sets the delay in re-casting nukes, usefull when you have sucky tanks with low agro. Format for a 10 second delay is either 10s or 100) WhichNuke=1 (Sets which nuke to use 1=SpellSet #1, etc.) Nuke1=Solstice Strike (Set this to the name of the Nuke you want to cast) NukeGem1=gem7 (Set this to gem#, # being the gem you want to mem this nuke in) NukeSpellSet1=1 (Set this to the spell set you want to be using to cast this nuke) NukeStartHPs1=100 (Set this to the % of the mob's HPs you want to start dropping bombs on it. Some classes might want to use a smaller nuke when a mob gets under say 30% HPs, in order to prevent wasting mana) NukeStopHPs1=30 (Set this to the % HPs you want to stop nuking with this spell at) NukeMaxMana1=30 (The highest % mana you want to be when using this nuke. Most of us will want this at 100%, but some classes \\(such as wizards\\) might want to switch out to a small nuke when under 50m, and use a bigger one when over 50m.) NukeMinMana1=30 (Set this to the lowest % mana you want to be before you stop nuking. Essentially this is where most of us set our mana reserve for other duties such as healing, debuffing, etc. For wizards though, this provides the ability to stop nuking with one spell, and start nuking with another spell below this % using the same % for MaxMana) GoMNuke1=0 (Set this to 0 if you don't want to cast this Nuke when Gift of Mana is up. Set it to 1, and it will use this nuke when GoM is up. Another addition mainly for wizards, it provides them the opportunity to get a 1 mana cost monster nuke off, instead of wasting it on a crappy lure or something. If set to 1, it will stop debuffing in favor of nuking while Gift of Mana is up. If you want to get your debuffing done over all else, then leave this at 0. Your bots will still heal and mez normally if set to 1, but debuffs are ignored as long as the buff is up) DoConcussion=1 (0=Don't Concussion, 1=Do Concussion) ConcussionSpell=Concussion (Set this to the name of the Item, Alt, or Spell you use for Concussion) ConcussionGem=gem1 (Set this to Item for items, Alt for AAs, or gem# for Spells) DoMancy=TRUE\" (WIZ only, causes macro to change the \"pyromancy, ect\" buff according to the nuke it is about to cast)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#petstuff","title":"[PetStuff]","text":"<p>UsePet=1 (Set by /usepet) PetMana=10 (Set this to the % mana you'd like to be above before casting your pet.) KillFlappy1=1 (0=Keep your familiar, 1=Kill your Familiar) PetFocus=Some focus item (Set this to the item you want to equip before casting your pet) PetSpell=Nature Walkers Behest (Set this to your Pet spell) PetGem=gem4 (Set this to the gem you want to cast your pet from) PetBuffTotal=1 (Set this to the total number of pet buffs you want to cast) DoPetBuffs=1 (1=pet buffing on, 0= pet buffing off) ReportPetBuffs=1 (1=pet buffing reporting on, 0= pet buffing reporting off) PetBuffRecheck=10s (Set this to how often you'd like to re-check your pet's buffs for wearing off) PetBuff1=Pet Buff Item/Spell name PetBuffIcon1=Pet Buff Item/Spell Icon name PetBuffGem1=Pet Buff Item/Spell Gem name PetShrink=1 (1=pet shrinking on, 0=pet shrinking off) PetShrinkSpell=Tiny Companion (Set this to the Name of the spell/aa/item you use to shrink your pet) PetShrinkGem=gem4 (Set this to the gem you want to shrink your pet from) PetItemTotal=1 ( Your total number of pet item buffs. If you have 2 weapons you want to summon, you currently have to define the same weapon twice, so set this accordingly) PetItemSpell1=Blazing Stone of Demise ( The name of the spell/aa/item you want to summon with) PetItemGem1=item (gem# for spells, item for items, alt for AAs.) PettHealing= (Mage Specific- TRUE/FALSE use \"self pet heals\") SelfPetHealPct= (Mage Specific- what perctage of pet HP to heal pet) SelfPetHeal= (Mage Specific- what pet only heal to use) SelfPetHealGem= (Mage Specific- what gem to use pet only heal from) PetDelayedHealing= (Mage Specific- TRUE/FALSE use Pet Delayed Heal) PetDelayedHealPct= (Mage Specific- What Hit Point percentage to cast the Pet Delayed Heal) PetDelayedHeal= (Mage Specific- What Delayed Pet Heal spell to use) PetDelayedHealGem= (Mage Specific- What gem to use Delayed Pet Heal)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#holyshit","title":"[HolyShit]","text":"<p>TotalShit=1 (Set this to the total number of HolyShit Abilities you have defined) DoHolyShit=1 (1=On, 0=Off) HolyShit1=Oaken Guard (Name of Item/AA/Spell/disc to use) HolyShitGem1=gem9 (Put the HolyShit Gem#, alt, item, or skill) HolyShitHp1=70 (HP level you want to be below before triggering this ability) HolyShitType1=0 (0=Just cast, 1=Target yourself, 2=Target the mob hitting you, 3=Ability like \"Lay Hands\") HolyShitRUN1=0 (1=Attempt to run away from the mob towards the MA after casting this spell. 0=stand there and do nothing after casting)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#combatstuff","title":"[CombatStuff]","text":"<p><code>(This section is only accessed when you are in a combat state)</code></p> <p>CombatTotal=7 (Set this to the total number of Combat commands you have defined) DoCombatStuff=TRUE (TRUE|1|FALSE|0) CombatStuffRecheck=5s (Sets the amount of time between checking Combat scripts) CombatCommand1=/casting \"Mindless Hatred\" ALT (The command/script to do it all the conditions are met) CombatCondition1={Me.AltAbilityReady[Mindless Hatred]} &amp;&amp; {Target.Distance}\\&lt;=50 &amp;&amp; {Me.PctAggro}\\&lt;100 (Conditions to meet before doing the command/script)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#namedstuff","title":"[NamedStuff]","text":"<p><code>(This section is only access when your target is a named, the MA's target is more then 2 levels over you,</code> <code>or you have more then 2 mobs on your extended target window.</code> <code>If you wish to change this, search/look for \"/call named\" in the main loop)</code></p> <p>NamedTotal=1 (Set this to the total number of Named scripts you have defined DoNamedStuff=TRUE (on|off|TRUE|FALSE) NamedStuffRecheck=5s (Sets the amount of time between checking Named scripts) NamedCommand1=/call Cast \"Fury of Ro\" ALT (The command/script to do if the conditions are met) NamedCondition1={Me.PctAggro}\\&lt;80 &amp;&amp; {Me.AltAbilityReady[Fury of Ro]} (Conditions to meet before doing command/script)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#reststuff","title":"[RestStuff]","text":"<p><code>(This section is called when you are not in combat)</code></p> <p>RestTotal=1 (Set this to the total number of Rest commands you have defined) DoRestStuff=TRUE (TRUE|1|FALSE|0) RestStuffRecheck=5s (Sets the amount of time between checking Rest scripts) RestCommand1=/useitem \"Huntsman's Ethereal Quiver\" (The command/script to do if all conditions are met) RestCondition1={FindItemCount[Ethereal Arrow]}\\&lt;100 (The conditions to meet before doing the command/script)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#bard_1","title":"[Bard]","text":"<p>DoBardSwap=False (Enables Bardswap plugin automatically on startup if set to True) DoBardMeleeSwap=False (Enables Bardswap to swap in melee weapons as well automatically on startup if set to True) AutoRestOff=0 (Set with /autorestoff) AutoRestRadius=125 (Set with /autorestradius)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#bard-combat","title":"[Bard-Combat]","text":"<p>SongsArray1-8=Song Name *(Set via /addcombatsong |. Removed with /delcombatsong</p> <p>|. Add in extra entries as you gain spell gems.)*</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#bard-rest","title":"[Bard-Rest]","text":"<p>SongsArray9-18=Song Name *(Set via /addrestsong |. Removed with /delrestsong</p> <p>|.*</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#bard-aliases","title":"[Bard-Aliases]","text":"<p>aliasname=songname (Set via /songalias \"song name\"). Songalias is basically to make it easier to change your combat/rest lineup on the fly with /addrestsong alias.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac-v4.28%2B/#troubleshootingfaq","title":"Troubleshooting/FAQ","text":"<ul> <li>On \"where is my master list?!?</li> </ul> <p>The master list was moved to the RDCommon.ini file to avoid having to maintain a list on 50 different profile ini's. Open RDCommon.ini and use find \"MastereList\" to easily find where to put additional names.</p> <p><code>(A new command was added, in the channel your toon is listening to send \"add to masterlist newtoonname\" to have the macro add the new name to the list)</code></p> <ul> <li>On I set my ini to service XXXX skill/spell/AA/item but its not working</li> </ul> <p>Got something spelled wrong or not filled out properly. Check the examples again. Very rarely EQ has odd spaces in some names. I find it best to look up the spell/skill/item/AA off of Allakhazam.com and copy+paste to insure accurate spelling when troubleshooting problem INI's.</p> <ul> <li>On Dots/Debuffs that don't work, but (possibly) used to</li> </ul> <p>If in a group/raid with HoTT leadership skill set UseHoTT=1 in the ini file. If HoTT is not avialable you must set UseHoTT=0. Check to see the MaxMobs=5 is appropraite to the number of NPC's around you. Monsters that are green or sitting/laying down will never be debuffed/dotted.</p> <ul> <li>On Buff requests not being serviced</li> </ul> <p>Unless you indicate that you want the buff executed in combat the bot will not service the buff if there are NPC's nearby. You can have the macro ignore certain npcs that we know for certain arnt kos by adding their names in the RDCommon.ini .Alternatly the NPC check radius is adjustable in the ini. Also make sure that the buff name is spelled correctly just how it looks in the info window. Lastly make sure that the alias's are correct. in the example ini's it looks like this \"| convicton | viction | convic |\", however if you have it set up like that, the buff requester for all intents and purposes needs to put that word in a sentence. if you have the ini looking like this \"|convicton|viction|convic|\" with no spaces in between the \" | \" then the bot will reconize and ackowlege any tell that has any of the word alias's it sees.</p> <ul> <li>On Bot will assist but wont engage when set to</li> </ul> <p>The bigest thing you do to fix that is increase the NPCRadius=120, Also, consider verifiying, and tweaking the following as well. NPCZRadius=120, AssistMA=TRUE, , DoMelee=TRUE, AssistDelay=0s, MA1=Chuck_Norris, EngageHPs=101. aso remember that other options may be fighting for servicing. looting, selfbuffing, debuffing, buffing, etc.. so if melee is priority, turn everything but assisting off. also make sure that mq2melee is set up right. type /melee to bring up its console and see whats set and whats not. same thing goes. if your not a pet class turn off all that other stuff to prevent any chance of conflicts.</p> <ul> <li>On Cant load selo's into the ini</li> </ul> <p>Selos uses a \"````````````\" located to the left of the 1 key.</p> <ul> <li>On incorrectly mezed Targets (also known as: Oh why does my chanter mez my MA's target?)</li> </ul> <p>You need to properly set the target for the BOT by the Leader AA, or /varset MATarget ${Target.ID} as explained in \"On target acquisition\"</p> <ul> <li>On automatically mezzing NPCs when you don't want to</li> </ul> <p>Set /rdpause on the BOT you want to stop auto debuffing (rdpause stops all automatic activity), type \"/rdpause on\" \\(minus quotes\\) into your command channel to stop auto-activity on multiple BOT's at once, or add the NPC you wish to not mez to the immune/ignore list in RDCommon.ini. You will need to know the spell ID for the spell you wish not to cast and this can be found by ${Spell[My Mez Spell Name Here].ID} (Use /echo in front of ${Spell[My Mez Spell Name Here].ID} if your typing it in EQ)</p> <ul> <li>On Target acquisition</li> </ul> <p>AutoBot acquires the Main Assist's (MA) target in a number of ways.</p> <p>1) By setting the MA in the bot's ini file and the assist delay, the macro will attempt to acquire the target of the MA after the set time.</p> <p>2) By assigning the role Main Assist to someone in your group, the bot will acquire the MA's target that way. (if /udegroupassist or /usegroupma is on)</p> <p>3) By assigning the role Main Tank to someone in your group, the bot will aquire the MT's target. (if /usegrouptank is on)</p> <p>4) By manually setting the MA's target using /varset MATarget ${Target.ID} in whatever channel your bots listen to commands in.</p> <p>5) By using \"/useraidassist\" or \"/useraidma\" (remember to turn off /usegroupma and /usegrouptank if you do this) the macro will aquire a target assist the raids main assist (Raid Assist 1)</p> <ul> <li>On non-working clickies</li> </ul> <p>If you have a clicky with no recast timer that isn't working. (Such as Time's Antithesis, Veil of Lost Hopes, et al...) The odds are you have an old version of MQ2. As of the 20<sup>th</sup> of Dec Zip, these issues have been fixed. if you don't know what version of the zip you have, try simply running /echo ${FindItem[item name].Timer} and seeing what value it returns. Anything other than zero is Bad(tm) and denotes an out-of-date zip file. Update, update, update! Also your last inventory slot must NOT be a bag. Clickies usable from inventory, even if usable in other slots, will be used from base inventory slot 8.</p> <ul> <li>On chain-casting clickies or buffs</li> </ul> <p>Often times this is due to misspelling something in the INI file, or it can be the resulting buff icon differs from the spell icon in some manner. You will note there is now an \"Icon\" entry for buffs. Carefully double check the actual name of the buff ingame and match the INI to it.</p> <ul> <li>On out-of-date alias lists</li> </ul> <p>If you are attempting to reload your alias to your macroquest.ini. You must remove the Version=X.XX from RD_common.ini. Doing this will make the Version mismatch appear and reload all the alias's</p> <ul> <li>On healing not working</li> <li>On heals that never cancel even though target's health goes above CancelPct</li> </ul> <p>Tankheal must be defined as a valid spell and different than FastHeal=, even if you are not using Tankheals (UseCH setting).</p> <ul> <li>On Green (non-XP) corpses that are not auto looted</li> </ul> <p>These are not looted automatically. To trigger looting, at any time, send your bot \"You gain party experience!\" in whatever channel it is set to monitor.</p> <ul> <li>On late/not reliable buffs</li> </ul> <p>Bots will not buff in combat. Also it will not sit to memorize buffs if a NPC is within a certain range, although using a horse remedies this.</p> <ul> <li>On non-refreshing buffs on bots themselves</li> </ul> <p>Buffs from the [DoBuffStuff] or buff command are not rebuffed on the same bot that cast them, because you dont get a buff wear off message when they wear off yourself. If you want certain buffs kept up on your bot, you should use [SelfBuffStuff] section.</p> <ul> <li>On bots that keep targeting some npc, even though it hasn't been told it to assist and kill it</li> </ul> <p>Your MA could have a corpse close, and that is being assisted to get a target. Or you could be using an old version of autobot.</p> <ul> <li>On non-following bots</li> </ul> <p>Target someone and type /stick. If that doesnt work you have issues with MQ2MoveUtils.</p> <ul> <li>On Clerics that spam Complete Heals and interrupt them all</li> </ul> <p>Make sure you have UseDivArb set to 0 if you dont have that AA. // There's more to this than just the DivArb setting... but this might be one issue\\</p> <ul> <li>On non-attacking pets/bots</li> </ul> <p>Check your MQ2Melee settings(the wiki for it is here). You need a properly configured MQ2Melee for your pets/bots to attack and do other various melee-related tasks.</p> <ul> <li>On items being identified</li> </ul> <p>You aren't using the IRC plugin. By default /i is mapped to /identify.</p> <ul> <li>No slash commands work or error: \"DoCommand - Couldn't parse '/...' \"</li> </ul> <p>This usually happens when you update MQ2 and overwrite the macroquest.ini file. This file contains all the aliases (ie. the slash commands). To fix, delete the Version=X.XX line in RD_Common.ini, which will write all the aliases back to the macroquest.ini file when you restart Autobot. In general, you do not need to overwrite the Macroquest.ini file when updating MQ2.</p> <ul> <li>When your bot doesn't mem spells</li> </ul> <p>Your ini is set up wrong. Your XXXXGem#= entry needs to read \"gem#\", not just #. At least, 9 times out of 10 that's the problem. Check one of the sample ini files for an example.</p> <ul> <li>On My bots dont aquire targets when everything is set up properly</li> </ul> <p>Each toon needs a breastplate, it has to do with the way autobot checks deaths and runs the auto accept rez feature, it also disables assisting, for a good reason...</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/","title":"AutoBot.mac","text":"","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#description","title":"Description","text":"<p>AutoBot.mac by A_Druid_00 is a versatile macro for automating a lot of tasks for your character in group, raid and solo situations.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#requirements","title":"Requirements","text":"<p>AutoBot.mac does not run on a default MQ2 compilation, it has a few extra dependencies. Some of the below items are plugins and need to be compiled, just like MacroQuest2. Please read the appropriate documentation for each plugin. The Include files should be added to the same directory that AutoBot will be run from.</p> <p>Plugins:</p> <ul> <li>MQ2MoveUtils by Outlander</li> </ul> <p>This is so the macro knows about stick, /makecamp, and /moveto. Check out the</p> <p>wiki.</p> <ul> <li>MQ2Exchange by Wassup</li> </ul> <p>This is so that item swapping, casting, and swapping back will work</p> <ul> <li>MQ2Debuffs by pinkfloydx33</li> </ul> <p>This is so the macro can keep track of your debuff counters.</p> <ul> <li>MQ2Melee by s0rcier</li> </ul> <p>So as to properly configure melee/ranged combat and various options thereof, check out the</p> <p>wiki.</p> <p>Includes Files:</p> <ul> <li>Wait4Rez.inc Handles pre-rez situations.</li> <li>spell_routines.inc Handles spell casting, from gems, items and AAs.</li> <li>QuickBeg2.inc Handles buff begging.</li> <li>Ninjadvloot.inc Handles looting.</li> </ul>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#getting-started","title":"Getting Started","text":"<p>Pointers for AutoBot stuffs. (We should make a multi-boxing wiki sometime, we could link it here...)</p> <p>In addition to the documentation for the various plugins used directly by AutoBot (see links in Requirements) The following is useful info on other plugins you can use to enhance your AutoBot experience.</p> <p>MQ2Clip by Vaft, Cr4zyb4rd, et al. Manages the clip plane of backgrounded sessions. Your CPU will thank you.</p> <p>MQ2FPS by Lax. Helps manage framerates of EQ sessions, greatly helps multi-botting... Check out the wiki</p> <p>MQ2Eqbc by Omnictrl Is an alternative way to communicate with your bots. Configure your EQBC.ini with the following: [Last Connect] Server=192.168.1.101 (This must be edited to match the ip and port you have the server listening to) Port=2112 [Settings] AutoConnect=1 AllowControl=1</p> <p>You will also need to change the channel setting in your AutoBot.ini from \"i say\" to \"bc\" to use it for bot to bot communication. Don't forget that if you are getting identify spam that you check loot.ini and QB2Settings.ini for any i say or i msg commands. QB2Settings.ini defaults to i msg and needs to be changed if using EQBC. Recommend MQ2NetBots, MQ2NetStat, and MQ2NetHeal to go along with this. More information available on Page 59 of the original AutoBot thread.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#using-autobotmac","title":"Using AutoBot.mac","text":"<p>1) The main macro file, 'yyy.mac' (called 'RaidDruid.mac' in the .zip file) can be named to 'AutoBot.mac' or 'AnythingYouWant.mac'. 2) To start the macro in EverQuest with MQ2 running; type '/macro yyy.mac Note: The first time you run the macro, it will generate an ini file called RD_xxx.ini 3) Configure your RD_xxx.ini, where 'xxx' is your character name. 3a) Peruse through RDCommon.ini and add in any mobs you might want to have certains spells ignore. I tend to put Guild Lobby and PoK NPCs as immune to mez, makes life simpler when walking around and I forget to pause my bots. 4)Restart Autobot after configuring RD_xxx.ini. 5) Enjoy the show.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#bot-commands","title":"Bot Commands","text":"<p>There are a few non-alias (no / required) commands available to Autobot. These commands will cause the bots to respond to a few general status/movement commands without the obvious /alias, for easy use in a group setting. Bots will only respond to commands sent by someone in the MasterList buffqueue This command has your bot respond in your ChatChannel with the # of buffs left in his \"buff queue\". Handy for deciding whether to continue pulling/crawling after a group wipe. Keep in mind that some longer cast spells such as Night's Dark Terror for enchanters have extremely long recast times, and so can sit in the queue for a while. follow This command will have your bots /stick to you. They will sit to med if needed and within your LeashLength. They will also break off to attack if /domelee is turned on and the MA is fighting something. They will also service buff requests and do debuffing if applicable and they are not moving. mana All bots with a mana pool bigger than 0 will report their current % mana in your /chatchannel. medtime All bots with a mana pool bigger than 0 will report their currently estimated time to full mana based on their current Mana Regen divided by their mana level. move up This command tells your bots to move up to your current location. If they are set to /makecamp, they will reset their camp X and Y loc to your current position. If they are following, they will resume following once they reach your position (This is handy for positioning your bots in front of doors/bridges before moving through/across them) stop This command tells the bots to stop following wherever they happen to be standing.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#slash-commands","title":"Slash Commands","text":"<p>AutoBot.mac comes with a great set of predefined Slash Commands for easy and fast in-game configuration. Uber macro pause/unpause hotkey (bound to  for me, unlike normal EQ hotkeys 1-10, it works even while casting) Add the following lines to MQ2CustomBinds.txt:</p> <p><code>name=StartPauseDB</code> <code>down=/docommand ${If[!${Macro.Name.Equal[RaidDruid.mac]}, /mac RaidDruid.mac, /varset RDPause ${If[${RDPause}==1,0,1]}]}</code> <code>up=</code></p> <p>Then in game type _/bind StartPauseDB _ to bind that to your __ key. When pressed your __ key will start AutoBot if it's not already started. If it's already running it will toggle the pause on the macro.</p> <p>Here's a full list, divided into sub-sections for each category of Slash Commands there are (Each toggle alias works by itself, or will take an argument of ON/OFF, TRUE/FALSE, or 1/0):</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#melee","title":"Melee","text":"<ul> <li>/domelee</li> </ul> <p>Toggles automatic engaging of the MA's target in melee.(Must have the plugin</p> <p>MQ2Melee configured properly)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#general","title":"General","text":"<ul> <li>/addalert ${Target.CleanName}</li> </ul> <p>Adds targetted NPC to the list which will be ignored in the RDCommon.ini and will perform normally when near these</p> <p>npc's not treating them as hostile. ${Target.CleanName} can also be replaced with the name of the mob typed out or</p> <p>the ini file can be manually edited.</p> <ul> <li>/assistdelay</li> </ul> <p>Sets the amount of time the bot will wait between MA assists. (Ex. /assistdelay 5s)</p> <ul> <li>/assistma</li> </ul> <p>Toggles assisting of your designated MA1, MA2, and MA3. Turning this off essentially disables Melee, Nuking, DoTing,</p> <p>and Debuffing</p> <ul> <li>/autoninja</li> </ul> <p>Toggles auto looting of the nearest corpse after each XP gained message. Will only loot droppable items. Must have</p> <p>the plugin MQ2MoveUtils for this to work.</p> <ul> <li>/autosit</li> </ul> <p>Toggles auto sitting to med. Not much to say here.</p> <ul> <li>/chatchannel</li> </ul> <p>Sets the chat channel the bot reports to, (Ex. /chatchannel \"i say\"\ufffd)</p> <ul> <li>/docanni</li> </ul> <p>Toggles auto casting of your cannibalization spell when below your MedPct and above your CanniHPs. Also works for</p> <p>wizard harvest, mana robe, and necromancer Lich spells.</p> <ul> <li>/doyaulp</li> </ul> <p>Toggles auto casting of your yaulp spell when below your MedPct and there are NPCs within your NPCRadius.</p> <ul> <li>/engagehps</li> </ul> <p>Sets the % of the mobs HPs you want to start melee/debuffing/dotting/nuking (Ex. /engagehps 95)</p> <ul> <li>/ma1</li> </ul> <p>Assigns a PC as Main Assist 1. (Ex. /ma1 BoDuke)</p> <ul> <li>/ma2</li> </ul> <p>Assigns a PC as Main Assist 2. (Ex. /ma2 LukeDuke)</p> <ul> <li>/ma3</li> </ul> <p>Assigns a PC as Main Assist 3. (Ex. /ma3 DaisyDuke)</p> <ul> <li>/leashlength</li> </ul> <p>Sets the distance your bot will allow itself to get from his follow target before resuming follow (Ex.</p> <p>/leashlength 25)</p> <ul> <li>/listspells</li> </ul> <p>Returns a list of all configured Spell Sets in your ini.</p> <ul> <li>/loadini \"IniFileName\"</li> </ul> <p>Loads a pre-configured ini file.</p> <ul> <li>/medpct</li> </ul> <p>Sets the % of Mana you want to sit or summon your horse at. (Ex. /medpct 50)</p> <ul> <li>/npcradius</li> </ul> <p>Sets the Radius (in feet) around you that you want to watch NPCs using Assist healing and Assisting the MA (Ex.</p> <p>/npcradius 200)</p> <ul> <li>/npczradius</li> </ul> <p>Sets the Radius (in feet) above/below you that you want to watch NPCs using Assist healing and Assisting the MA (Ex.</p> <p>/npczradius 200)</p> <ul> <li>/rdpause</li> </ul> <p>Toggles AutoBot's active functions on and off.</p> <ul> <li>/relaytells</li> </ul> <p>Toggles automatic reporting of tells sent to the bot in your configured /chatchannel</p> <ul> <li>/reportevents</li> </ul> <p>Toggles automatic reporting of your bot's status messages such as low food/drink, stunned/unstunned, encumbered,</p> <p>etc.</p> <ul> <li>/reportmana</li> </ul> <p>Toggles automatic reporting of your mana status if you get below the medpct, only reports once before going above</p> <p>the medpct.</p> <ul> <li>/reportmanapct</li> </ul> <p>Defines the point at which you want to start reporting your mana status to your chat channel.</p> <ul> <li>/reporttoggles</li> </ul> <p>Toggles automatic reporting of your toggle status of any /commands you send your bot in the ChatChannel.</p> <ul> <li>/reportwow</li> </ul> <p>Toggles automatic reporting of Wrath of the Wild on the MA</p> <ul> <li>/saveini \"IniFileName\"</li> </ul> <p>Creates an ini file named \"IniFileName\"</p> <ul> <li>/sitdelay</li> </ul> <p>Sets the amount of time you want to wait before sitting after casting any spell that might be considered aggro. (Ex.</p> <p>/sitdelay 5s)</p> <ul> <li>/stophps</li> </ul> <p>Sets the % of the mob's HPs you want to stop nuking and debuffing. (Ex. /stophps 10)</p> <ul> <li>/usemount</li> </ul> <p>Toggles automatic mount summoning at your /medpct, if this is off and /autosit is on, it will sit to med instead of</p> <p>summoning a mount.</p> <ul> <li>/npcradchk</li> </ul> <p>Sets the Radius (in feet) around you that defines how close mobs are allow before you stop buffing to avoid aggro</p> <p>(Ex. /npcradchk 100)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#healing","title":"Healing","text":"<ul> <li>/aeheal</li> </ul> <p>Toggles on AE Healing. This creates an array of every PC within PCRadius, and cycles through every one of them,</p> <p>checking their HPs against your defined HealPct, and casts heals if appropriate. Super handy on mobs with AE Rampage</p> <p>or AE Damage effects.</p> <ul> <li>/assistheal</li> </ul> <p>Toggles on Assist Healing. This creates an array of every NPC within NPCRadius, and assists them to find the target</p> <p>of their aggression, and heals that target if necessary. Super handy for general clearing on raids before getting to</p> <p>named. Also causes target to constantly ping-pong wildly all over the place trying to find a target to heal</p> <ul> <li>/cancelpct</li> </ul> <p>Set this to the percentage of HPs you want AutoBot to cancel heals at. (Ex. /cancelpct 90)</p> <ul> <li>/checkgroup</li> </ul> <p>Sets the number of seconds you'd like to wait between HP evaluations</p> <ul> <li>/divarbhps</li> </ul> <p>Sets the % HPs you want to cast Divine Arbitration at if a groupmember gets below it (Ex. /divarbhps 25)</p> <ul> <li>/healchannel</li> </ul> <p>Sets the channel your bots use to report heals when they are cast.</p> <ul> <li>/healfd</li> </ul> <p>Toggles healing of FD classes (SK, Necro, Monk) only while they are FD (Ex. /healfd ON will only heal if they are</p> <p>FD)</p> <ul> <li>/healgroup</li> </ul> <p>Toggles healing of your group. With this on, it will heal groupmembers that are below HealPct</p> <ul> <li>/healmefirst</li> </ul> <p>Toggles healing of yourself over any group members. If you are mid-cast to heal someone else and your HPs fall below</p> <p>the HealPct, you will cancel it and heal yourself first. Self preservation at its finest.</p> <ul> <li>/healpct</li> </ul> <p>Sets the % of HPs you want to heal other PCs at. (ex. /healpct 70)</p> <ul> <li>/healpets</li> </ul> <p>Toggles healing of any pets in the group if they are below the PetHealPct</p> <ul> <li>/healramp</li> </ul> <p>Toggles automatic healing of your Rampage tank anytime a RAMPAGE message is detected.</p> <ul> <li>/interrupt</li> </ul> <p>Toggles interrupting debuffs/nukes/dots to heal group members. Some people like to just let their group members die</p> <p>instead of ducking a nuke to heal them. This is for those people!</p> <ul> <li>/pcradius</li> </ul> <p>Sets the Radius (in feet) around you that you want to watch PC HPs using AE healing (Ex. /pcradius 200)</p> <ul> <li>/pczradius</li> </ul> <p>Sets the Radius (in feet) above and below you that you want to watch PC HPs using AE healing (Ex. /pczradius 50)</p> <ul> <li>/pethealpct</li> </ul> <p>Sets the % of HPs you will heal pets at. (Ex. /pethealpct 40)</p> <ul> <li>/ramptank</li> </ul> <p>Sets the Rampage Tank that you check whenever a RAMPAGE message is seen with /healramp on. (Ex. /ramptank</p> <p>UncleJesse)</p> <ul> <li>/reportheals</li> </ul> <p>Toggles automatic reporting of heals in the ChatChannel</p> <ul> <li>/reportinterrupts</li> </ul> <p>Toggles automatic reporting of interrupts to heal in the ChatChannel</p> <ul> <li>/reportsotw</li> </ul> <p>Toggles automatic reporting of Spirit of the Wood in the ChatChannel</p> <ul> <li>/sotw</li> </ul> <p>Toggle auto casting of Spirit of the Wood</p> <ul> <li>/sotwpct</li> </ul> <p>Set this to the average group HP percentage you want it to auto cast Spirit of the Wood at. (Ex. /sotwpct 75)</p> <ul> <li>/tankhealpct</li> </ul> <p>Sets the % you start Chealing. Due to some predictive logic the Cheal may start earlier. Set this to the abslute</p> <p>floor you want to start CH at.</p> <ul> <li>/usech</li> </ul> <p>Toggles using your Cheal spell on MA1 on or off. It will monitor the tank's HPs and if he's taking enough damage to</p> <p>be dead in less than 20 seconds, it will duck out of whatever RD is currently doing and start a CH. If the tank's</p> <p>HPs stop falling and level off above the TankHealPct, it will cancel CH and wait until the tank's HPs fall again.</p> <ul> <li>/usedivarb</li> </ul> <p>Toggles using your divine arbitration or cleric epic 1.5 (if you have it) when a group member falls below the</p> <p>DivArbHPs.</p> <ul> <li>/waittocancel</li> </ul> <p>Toggle. When turned on, this will wait until your heals have less than .5 seconds left before making the decison to</p> <p>cancel the heal.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#buffing","title":"Buffing","text":"<p>AutoBot queues buff requests and casts them when appropriate. It will not cast buffs unless there are no mobs within 20 feet of the bot, it's not in combat, and it's not moving. It will hold onto those buff requests until you are no longer moving, not in combat, and there are no mobs within 20 feet. If you zone, all stored buffs are flushed, and you have to beg again. By default the bot only listens for /tells and IRC chat for buffing. If you want him to listen in other channels, you need to add #chat group to listen in group, or #chat chat to listen in EQ's chat channels; to the RaidDruid.mac file under the #chat tell line right near the top of the macro. More information on the #chat function can be found in the MacroQuest manual.</p> <p>Aliases:</p> <ul> <li>/buff \"Spell Name/Alias\" [Name | Group]</li> </ul> <p>Use this alias to send a buff command to your bot, will also accept buff aliases. You can use this to cast items and</p> <p>AAs as well as spells. If you specify Group instead of a name, it will buff your whole group with that spell, if it</p> <p>is a single target spell. In addition, you can cast it on any spawn including NPCs, Pets, Corpses, etc. (Ex. /buff</p> <p>\"Steeloak Skin\"\ufffd Bob, or /buff Oak Bob if oak is an alias for steeloak skin). If the /buff command utilizes a DoBuff</p> <p>alias, the buff request is queued and will not be performed during combat. If the Spell/AA/item name itself is used</p> <p>in the /buff command it is cast immediately. (Ex. /buff \"Exodus\" would fire right away, while /buff \"Evac\" would</p> <p>not). **WARNING: YOUR BOTS WILL NOT WATCH THE GROUP'S HPS OR ANYTHING ELSE WHILE EXECUTING A /BUFF COMMAND, USE IT</p> <p>WHEN YOU KNOW YOU DON'T NEED TO BE DOING ANYTHING ELSE IMPORTANT LIKE HEALING**</p> <ul> <li>/dobuffs</li> </ul> <p>Toggles automatic casting of buff requests made via /tell</p> <ul> <li>/dobufftells</li> </ul> <p>Toggles sending automatic replies to buff requests made via /tell</p> <ul> <li>/refreshbuffs</li> </ul> <p>Toggles automatic refreshing of buffs. Only buffs that are set to refresh in the ini will be refreshed.</p> <ul> <li>/reportdobuffs</li> </ul> <p>Toggles automatic reporting of buffs in the ChatChannel</p> <ul> <li>/reportselfbuffs</li> </ul> <p>Toggles automatic reporting of self buffs in the ChatChannel</p> <ul> <li>/selfbuff</li> </ul> <p>Toggles Self Buffing. Useful if you happen to be in an environment where having all your self buffs up puts you over</p> <p>the limit</p> <ul> <li>/wow</li> </ul> <p>Toggles automatic casting of Wrath of the Wild on your designated MA. I figure an extra 650 damage every 4 minutes</p> <p>cant hurt, since its mana free and all.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#debuffing","title":"Debuffing","text":"<ul> <li>/debuff</li> </ul> <p>Toggles Auto debuffing. Pretty much all there is to say about that</p> <ul> <li>/debuffchannel</li> </ul> <p>Sets the channel your bots will use to report debuffs</p> <ul> <li>/dot</li> </ul> <p>Toggle Auto DoTing of mobs</p> <ul> <li>/mez</li> </ul> <p>Toggles Auto mezzing for those places where mez==bad</p> <ul> <li>/reportdebuffs</li> </ul> <p>Toggles reporting of debuffs in the ChatChannel</p> <ul> <li>/reportdots</li> </ul> <p>Toggles automatic report of DoTs in the ChatChannel</p> <ul> <li>/reportmez</li> </ul> <p>Toggles automatic report of Mezzes in the ChatChannel</p> <ul> <li>/usehott</li> </ul> <p>Toggles using the Health of Target's Target Leadership ability to determine a mob's aggro.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#nuking","title":"Nuking","text":"<ul> <li>/nuke</li> </ul> <p>Toggles Auto Nuking the MA's target.</p> <ul> <li>/nukedelay</li> </ul> <p>Sets the delay between chain nuking. If your tank sucks, or are in a kite group raise this delay to prevent agro.</p> <ul> <li>/nukeset</li> </ul> <p>Returns the current spell set # you are nuking from.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#pet","title":"Pet","text":"<ul> <li>/petbuff</li> </ul> <p>Toggles automatic buffing of your pet</p> <ul> <li>/usepet</li> </ul> <p>Toggles automatic summoning and sending in of pet to melee.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#curing","title":"Curing","text":"<p>This portion of the macro requires the MQ2Debuffs plugin by pinkfloydx33. See the requirements.</p> <ul> <li>/docures</li> </ul> <p>Toggles auto-curing on and off.</p> <ul> <li>/reportcures</li> </ul> <p>Toggles auto-cure reporting on and off.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#bard","title":"Bard","text":"<p>This portion of the macro makes use of the MQ2Twist (See MQ2Twist wiki) and MQ2BardSwap plugins.</p> <ul> <li>/addcombatsong |\"\"</li> </ul> <p>Adds the Alias or Song Name to the combat twist if a slot is available.</p> <ul> <li>/addrestsong |\"\"</li> </ul> <p>Adds the Alias or Song Name to the rest twist if a slot is available.</p> <ul> <li>/autorestoff</li> </ul> <p>When turned on it watches with each loop to see if any npc's are within the radius defined and will switch off rest</p> <p>songs if any are detected</p> <ul> <li>/autorestradius</li> </ul> <p>Sets the radius at which your bard will stop twisting when NPCs are present</p> <ul> <li>/combatsongs on|off</li> </ul> <p>Enables or Disables automatically twisting the combat twist temporarily.</p> <ul> <li>/delcombatsong |\"\"</li> </ul> <p>Removes the Alias or Song Name from the combat twist present.</p> <ul> <li>/delrestsong |\"\"</li> </ul> <p>Removes the Alias or Song Name from the rest twist if present.</p> <ul> <li>/listsongs combat|rest|all</li> </ul> <p>Lists the songs set to be twisted for the given twist type.</p> <ul> <li>/songalias \"Song Name\"</li> </ul> <p>Creates an alias for the given song name (must be in quotes if it has a space).</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#ini-entries","title":"INI entries","text":"<p>.ini files will be automatically created and populated with default values if they do not exist.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#meleestuff","title":"[MeleeStuff]","text":"<p>DoMelee=1 (Set by /domelee) DoRanged=1 (0=Don't use ranged attacks, 1=Use Ranged attacks) StickArgs=10 pin (Set by /stickargs) DiscTotal=1 (Set this to the total number of melee disciplines you have defined) UseDiscs=1 (0=Don't Disc, 1=Use Discs) DiscName1=Furious Discipline (Set this to the name of the Discipline you want to use) DiscType1=0 (0=Defensive, 1=Offensive) DiscEndurance1=10 (Set this to the % endurance you want to be above when triggering this disc) DiscMinHPs1=10 (Set this to the min HPs of the mob or yourself that you want to trigger this disc at.) DiscMaxHPs1=90 (Set this to the max HPs of the mob or yourself that you want to trigger this disc at.) DiscSpawnCount1=2 (Set this to the # of mobs you want to have in melee range before triggering this disc.)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#settings","title":"[Settings]","text":"<p>LeashLength=25 (Set by /leashlength) NPCRadius=75 (Set by /npcradius) NPCZRadius=100 (Set by /npczradius) PCRadius=200 (Set by /pcradius) PCZRadius=100 (Set by /pczradius) AutoNinja=0 (Set by /autoninja, 0=off and 1=on) FoodSpell=Abundant Food (Set this to the name of the spell/item/alt you use to summon food) FoodGem=gem1 (Set this to gem#, item, or alt; as applicable to summon food) DrinkSpell=Abundant Drink (Set this to the name of the spell/item/alt you use to summon drink) DrinkGem=gem1 (Set this to gem#, item, or alt; as applicable to summon food) AutoSit=1 (Set by /autosit, 0=off and 1=on) SitDelay=5s (Set by /sitdelay) UseMount=1 (Set by /usemount, 0=off and 1=on) MountItem=Black Rope Bridle (This is the item you use to summon your mount) MedPct=50 (Set by /medpct) UseRods=0 (Set by /userods) RodMana=50 (Set this to the % mana you want to be below before clicking your mod rods) RodSpell=Rod of Mystical Transvergance (Set this to the spell you use to summon mod rods) RodGem=gem1 (Set this to gem you want to cast this from, or put item for items, alt for AAs) GatherPct=10 (Set this to the % mana you want to use your Gather Mana) NPCRadChk=100 (Set by /npcradchk)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#generalstuff","title":"[GeneralStuff]","text":"<p>ChatChannel=i say (Set by /chatchannel) MasterList=|AlGore|BobDole|DanQuayle| (This is the list of people you want to be able to send you commands) AssistMA=1 (Set by /assistma, 0=off and 1=on) AssistDelay=5s (Set by /assistdelay) MA1=HappyGilmore (Set by /ma1) MA2=BillyMadison (Set by /ma2) MA3=MrDeeds (Set by /ma3) EngageHPs=95 (Set by /engagehps) StopHPs=20 (Set by /stophps) ReportEvents=1 (Set by /reportevents) ReportToggles=1 (Set by /reporttoggles) RelayTells=1 (Set by /relaytells) ReportMana=1 (Set by /reportmana) ReportManaPct=50 (Set by /reportmanapct) SpellSetTotal=1 (Set this to the # of unique spell sets you have defined for nukes/debuffs) SpellSet1=SomeSpellSetName (Put the name of the Spell Set you want to memorize when you die while using this spell set here. Needs to match the name of the spell set you have saved in EQ to work properly) CanniTotal=1 (Set this to the total cannibalization/harvest AAs/items/spells you want to check and cast) DoCanni=1 (Set this to 1 if you want to use your Canni AAs/items/spells when you fall below your medpct) CanniSpell1=Harvest (Set this to the name of your canni aa/item/spell. This section also works for Lich and any other Canni type spells that have a buff icon) CanniGem1=gem6 (Set this to spell gem you want to cast your canni spell from, or put alt if an AA, or item if its an item) CanniHPs1=0 (Set this to the % HPs you want to stop using your canni AA at) DoWoW=1 (Set by /wow, 0=off and 1=on) ReportWoW=1 (Set by /reportwow) DoYaulp=1 (Set this to 1 if you want to use Yaulp when mobs are close by instead of sitting) YaulpSpell1=Yaulp VII (Set this to the name of your Yaulp spell) YaulpGem1=gem6 (Set this to spell gem you want to cast your Yaulp spell from)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#healstuff","title":"[HealStuff]","text":"<p>ReportHeals=1 (Set by /reportheals) ReportInterrupts=1 (Set by /reportinterrupts) HealChannel=echo (Set by /healchannel) HealMeFirst=1 (Set by /healmefirst) HealFD=0 (Set by /healFD, 1 only heals FD classes while FD, 0 heals normally) GroupHealing=1 (Set by /healgroup, 0=off and 1=on) CheckGroupInterval=3 (Set by /checkgroup, and sets how often you check group HP levels for healing) AutoInterrupt=1 (Set by /interrupt, 0=off and 1=on) RampHealing=0 (Set by /healramp, 0=off and 1=on) RampTank=BigDaddy (Set by /ramptank) AEHealing=0 (Set by /aeheal, 0=off and 1=on) AssistHealing=0 (Set by /assistheal, 0=off and 1=on) HealPct=30 (Set by /healpct) CancelPct=90 (Set by /cancelpct) WaitToCancel=1 (Set by /waittocancel) FastHeal=Chlorotrope (This is your fast healing spell) FastHealGem=gem2 (This is the gem you cast your Fast Heal from if it's not memmed already) UseCH=1 (Use Chealing... or not, 1 for on, 0 for not) TankHealPct=70 (This is the % you heal MA1 at) TankHeal=Karana's Renewal (Heal spell to use on the tank... usually your Cheal) MUST be defined and a different spell than FastHeal, even if not used. TankHealGem=gem8 (Spell slot for your tank heal spell) PetHealing=1 (Set by /healpets) PetHealPct=50 (Set by /pethealpct) PetHeal=Karana's Renewal (Put the name of the spell you wish to use to heal your group's pets here) PetHealGem=gem1 (Put the gem you wish to cast your pet heal from if its not memmed) DoSotW=1 (Set by /sotw, 0=off and 1=on) ReportSotW=1 (Set by /reportsotw) SotWAA=Spirit of the Grove (This is the Actual Alt ability you have, set it to whichever one you have) SotWPct=80 (Set by /sotwpct) UseDivArb=0 (Set by /usedivarb) DivArbHPs=20 (Set by /divarbhps) UseBDA=0 (Set this to 1 if you want to cast Bestow Divine Aura on groupmembers when Divine Arbitration is not up)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#curestuff","title":"[CureStuff]","text":"<p>CureTotal=1 (Put your total number of cure spells here) DoCures=0 (0=Don't Cure, 1=Cure) ReportCures=0 (0=Don't Report, 1=Report) CureSpell1=Resplendent Cure (Put the name of the item, alt, or spell you use to cure with here) CureGem1=alt (Put item for item, alt for AA, or the gem# you want to use to cure with here) CurseCounters1=50 (Set this to the # of curse counters you want this to react to \\(For example if the spell cures 25 curse counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\)) DiseaseCounters1=50 (Set this to the # of Disease counters you want this to react to \\(For example if the spell cures 25 Disease counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\)) PoisonCounters1=50 (Set this to the # of Poison counters you want this to react to \\(For example if the spell cures 25 Poison counters and you want it to only cure if it can do it in 2 casts or less, set it to 50\\))</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#selfbuffstuff","title":"[SelfBuffStuff]","text":"<p>SelfBuffTotal=9 (Put your total number of self buffs here) SelfBuffs=1 (Set by /selfbuff, 0=off and 1=on) ReportSelfBuffs=1 (Set by /reportselfbuffs) SelfBuffRecheck=10s (Sets how often you check to see if your self buffs are going to fade) SelfBuff1=Shrunken Goblin Skull Earring (This is the name of the item or spell you use for self buff 1) SelfBuffIcon1=Grim Aura (This is the name of self buff 1 as it shows up in your buff window) SelfBuffGem1=item (This is the gem you cast self buff 1 from, if it's an item put item, if it's an AA put alt) SelfBuffCount1=14 (Put the number of buffs you would like to stop casting this buff after, i.e if you want to leave a couple buff slots open, set your self buffs up so that the could is never equal to your max number of buff slots)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#dobuffstuff","title":"[DoBuffStuff]","text":"<p>DoBuffTotal=10 (Put the total number of DoBuff entries you have here) DoBuffs=1 (Set by /dobuffs, 0=off and 1=on) ReportDoBuffs=1 (Set by /reportdobuffs) DoBuffTells=0 (Set by /dobufftells) RefreshBuffs=1 (Set by /refreshbuffs) DoBuff1=Woven Grass Boots (Put the name of the item, aa, or spell you cast this buff with here) DoBuffIcon1=Spirit of Wolf (This is the name of dobuff 1 as it would show up in your buff window) DoBuffGem1=item (This is the gem you cast dobuff 1 from, if it's an item put item, if it's an AA put alt) DoBuffMana1=0 (Set this to the % mana you'd like to be above before handling this buff request) DoBuffAliases1=SoW|Spirit| (This is the string of different buff messages you want the druid bot to respond to, separated by the |. Make sure to have a | for each buff, as it needs to count them to find out how many buff request strings to check for. Also be mindful of spaces, as the buff request will not be registered without the preceding and trailing spaces defined in the alias. Ex: If the alias were set up as | Rune |. \"I could use a Rune right about now\" would trigger the request while \"Rune\" alone would not, unless the alias is actually defined with no spaces as |Rune|). DoBuffRefresh1=1 (Set this to 1 if you want to refresh this buff when it wears off) BattleBuff1=FALSE (Set this to TRUE if you would like to cast this buff with mobs nearby and/or in Combat.) BuffGem=gem3 (Set this to the spell gem you want to cast your /buff commands from)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#debuffstuff","title":"[DebuffStuff]","text":"<p>DebuffTotal=3 (Put the total number of Debuff entries you have here) DoDebuffs=1 (Set by /debuff, 0=off and 1=on) DoDoTs=1 (Set by /dot, 0=off and 1=on) DoMez=1 (Set by /mez, 0=off and 1=on) DoManaTaps=1 (0=off and 1=on) ReportDebuffs=1 (Set by /reportdebuffs) ReportDoTs=1 (Set by /reportdots) ReportMez=1 (Set by /reportmez) DebuffChannel=echo (Set by /debuffchannel) UseHoTT=1 (0=off and 1=on) MaxMobs=1 (Set this to the maximum number of mobs you would like AutoBot to keep track of) AllDebuffsFirst=1 (Set this to 1 if you want to land all your debuffs on each mob before moving on to debuff the next) DebuffMAFirst=1 (Set this to 1 if you want to land all your debuffs on the MA's target before moving on to any adds) DebuffSpell1=Hand of Ro (Put the name of the item, aa, or spell you cast this debuff with here) DebuffIcon1=Hand of Ro (This is the name of debuff 1 as it would show up in your buff window) DebuffGem1=gem5 (This is the gem you cast debuff 1 from, if it's an item put item, if it's an AA put alt) DebuffMana1=1 (Set this is to the % mana you would like to stop casting this debuff at.) DebuffHPs1=1 (Set this is to the % HPs you would like to start casting this debuff at.) DebuffStopHPs1=1 (Set this is to the % HPs you would like to stop casting this debuff at.) DebuffRecast1=3 (Set by /debuffrecast) DebuffSpellSet1=1 (This is the spell set you want to cast this debuff with. 0=all spell sets, 1=spell set #1, etc.) DebuffMAOnly1=1 (Set this is to 1 if you want to land this debuff on the MA's target only, and exclude adds.) DebuffNamedOnly1=1 (Set this is to 1 if you want to land this debuff on named targets only, and not normal XP mobs.) DebuffMessage1=%Target Debuffed by %Spell (This is your custom debuff message when you successfully land a debuff. Use %Target to report the target's name, %Spell to report the spell name, and %Duration to report the duration of the spell you just landed) Or set to None for no message. SpellType1=1 (Set this is to 0 for debuffs, 1 for DoTs, 2 for Mez, and 3 for Mana Tap spells) DebuffCondition1=TRUE (Code conditions can be put here such as \"{Target.Body.Name.Equal[Undead]} or !{Target.Buff[Turgur's Swarm].ID} Default is TRUE )</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#nukestuff","title":"[NukeStuff]","text":"<p>NukeTotal=1 (Set this to the number of nukes you have defined) DoNukes=1 (Set by /nuke, 0=off and 1=on) NukeDelay=1 (Sets the delay in re-casting nukes, usefull when you have sucky tanks with low agro. Format for a 10 second delay is either 10s or 100) WhichNuke=1 (Sets which nuke to use 1=SpellSet #1, etc.) Nuke1=Solstice Strike (Set this to the name of the Nuke you want to cast) NukeGem1=gem7 (Set this to gem#, # being the gem you want to mem this nuke in) NukeSpellSet1=1 (Set this to the spell set you want to be using to cast this nuke) NukeStartHPs1=100 (Set this to the % of the mob's HPs you want to start dropping bombs on it. Some classes might want to use a smaller nuke when a mob gets under say 30% HPs, in order to prevent wasting mana) NukeStopHPs1=30 (Set this to the % HPs you want to stop nuking with this spell at) NukeMaxMana1=30 (The highest % mana you want to be when using this nuke. Most of us will want this at 100%, but some classes \\(such as wizards\\) might want to switch out to a small nuke when under 50m, and use a bigger one when over 50m.) NukeMinMana1=30 (Set this to the lowest % mana you want to be before you stop nuking. Essentially this is where most of us set our mana reserve for other duties such as healing, debuffing, etc. For wizards though, this provides the ability to stop nuking with one spell, and start nuking with another spell below this % using the same % for MaxMana) GoMNuke1=0 (Set this to 0 if you don't want to cast this Nuke when Gift of Mana is up. Set it to 1, and it will use this nuke when GoM is up. Another addition mainly for wizards, it provides them the opportunity to get a 1 mana cost monster nuke off, instead of wasting it on a crappy lure or something. If set to 1, it will stop debuffing in favor of nuking while Gift of Mana is up. If you want to get your debuffing done over all else, then leave this at 0. Your bots will still heal and mez normally if set to 1, but debuffs are ignored as long as the buff is up) DoConcussion=1 (0=Don't Concussion, 1=Do Concussion) ConcussionSpell=Concussion (Set this to the name of the Item, Alt, or Spell you use for Concussion) ConcussionGem=gem1 (Set this to Item for items, Alt for AAs, or gem# for Spells)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#petstuff","title":"[PetStuff]","text":"<p>UsePet=1 (Set by /usepet) PetMana=10 (Set this to the % mana you'd like to be above before casting your pet.) KillFlappy1=1 (0=Keep your familiar, 1=Kill your Familiar) PetFocus=Some focus item (Set this to the item you want to equip before casting your pet) PetSpell=Nature Walkers Behest (Set this to your Pet spell) PetGem=gem4 (Set this to the gem you want to cast your pet from) PetBuffTotal=1 (Set this to the total number of pet buffs you want to cast) DoPetBuffs=1 (1=pet buffing on, 0= pet buffing off) ReportPetBuffs=1 (1=pet buffing reporting on, 0= pet buffing reporting off) PetBuffRecheck=10s (Set this to how often you'd like to re-check your pet's buffs for wearing off) PetBuff1=Pet Buff Item/Spell name PetBuffIcon1=Pet Buff Item/Spell Icon name PetBuffGem1=Pet Buff Item/Spell Gem name PetShrink=1 (1=pet shrinking on, 0=pet shrinking off) PetShrinkSpell=Tiny Companion (Set this to the Name of the spell/aa/item you use to shrink your pet) PetShrinkGem=gem4 (Set this to the gem you want to shrink your pet from) PetItemTotal=1 ( Your total number of pet item buffs. If you have 2 weapons you want to summon, you currently have to define the same weapon twice, so set this accordingly) PetItemSpell1=Blazing Stone of Demise ( The name of the spell/aa/item you want to summon with) PetItemGem1=item (gem# for spells, item for items, alt for AAs.)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#holyshit","title":"[HolyShit]","text":"<p>TotalShit=1 (Set this to the total number of HolyShit Abilities you have defined) DoHolyShit=1 (1=On, 0=Off) HolyShit1=Oaken Guard (Name of Item/AA/Spell/disc to use) HolyShitGem1=gem9 (Put the HolyShit Gem#, alt, item, or skill) HolyShitHp1=70 (HP level you want to be below before triggering this ability) HolyShitType1=0 (0=Just cast, 1=Target yourself, 2=Target the mob hitting you, 3=Ability like \"Lay Hands\") HolyShitRUN1=0 (1=Attempt to run away from the mob towards the MA after casting this spell. 0=stand there and do nothing after casting)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#bard_1","title":"[Bard]","text":"<p>DoBardSwap=False (Enables Bardswap plugin automatically on startup if set to True) DoBardMeleeSwap=False (Enables Bardswap to swap in melee weapons as well automatically on startup if set to True) AutoRestOff=0 (Set with /autorestoff) AutoRestRadius=125 (Set with /autorestradius)</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#bard-combat","title":"[Bard-Combat]","text":"<p>SongsArray1-8=Song Name *(Set via /addcombatsong |. Removed with /delcombatsong</p> <p>|. Add in extra entries as you gain spell gems.)*</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#bard-rest","title":"[Bard-Rest]","text":"<p>SongsArray9-18=Song Name *(Set via /addrestsong |. Removed with /delrestsong</p> <p>|.*</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#bard-aliases","title":"[Bard-Aliases]","text":"<p>aliasname=songname (Set via /songalias \"song name\"). Songalias is basically to make it easier to change your combat/rest lineup on the fly with /addrestsong alias.</p>","tags":["macro"]},{"location":"macros/gallery/autobot.mac/#troubleshootingfaq","title":"Troubleshooting/FAQ","text":"<ul> <li>On I set my ini to service XXXX skill/spell/aa but its not working</li> </ul> <p>got something spelled wrong or not filled out properly. check the examples again.</p> <ul> <li>On Dots/Debuffs that don't work, but (possibly) used to</li> </ul> <p>If in a group/raid with HoTT leadership skill set UseHoTT=1 in the ini file. If HoTT is not avialable you must set UseHoTT=0. Check to see the MaxMobs=5 is appropraite to the number of NPC's around you. Monsters that are green or sitting/laying down will never be debuffed/dotted.</p> <ul> <li>On Buff requests not being serviced</li> </ul> <p>Unless you indicate that you want the buff executed in combat the bot will not service the buff if there are NPC's nearby. You can have the macro ignore certain npcs that we know for certain arnt kos by adding their names in the RDCommon.ini .Alternatly the NPC check radius is adjustable in the ini. Also make sure that the buff name is spelled correctly just how it looks in the info window. Lastly make sure that the alias's are correct. in the example ini's it looks like this \"| convicton | viction | convic |\", however if you have it set up like that, the buff requester for all intents and purposes needs to put that word in a sentence. if you have the ini looking like this \"|convicton|viction|convic|\" with no spaces in between the \" | \" then the bot will reconize and ackowlege any tell that has any of the word alias's it sees.</p> <ul> <li>On Bot will assist but wont engage when set to</li> </ul> <p>The bigest thing you do to fix that is increase the NPCRadius=120, Also, consider verifiying, and tweaking the following as well. NPCZRadius=120, AssistMA=TRUE, , DoMelee=TRUE, AssistDelay=0s, MA1=Chuck_Norris, EngageHPs=101. aso remember that other options may be fighting for servicing. looting, selfbuffing, debuffing, buffing, etc.. so if melee is priority, turn everything but assisting off. also make sure that mq2melee is set up right. type /melee to bring up its console and see whats set and whats not. same thing goes. if your not a pet class turn off all that other stuff to prevent any chance of conflicts.</p> <ul> <li>On Cant load selo's into the ini</li> </ul> <p>Selos uses a \"````````````\" located to the left of the 1 key.</p> <ul> <li>On incorrectly mezed Targets (also known as: Oh why does my chanter mez my MA's target?)</li> </ul> <p>You need to properly set the target for the BOT by the Leader AA, or /varset MATarget ${Target.ID} as explained in \"On target acquisition\"</p> <ul> <li>On automatically mezzing NPCs when you don't want to</li> </ul> <p>Set /rdpause on the BOT you want to stop auto debuffing (rdpause stops all automatic activity), type \"/rdpause on\" \\(minus quotes\\) into your command channel to stop auto-activity on multiple BOT's at once, or add the NPC you wish to not mez to the immune/ignore list in RDCommon.ini. You will need to know the spell ID for the spell you wish not to cast and this can be found by ${Spell[My Mez Spell Name Here].ID} (Use /echo in front of ${Spell[My Mez Spell Name Here].ID} if your typing it in EQ)</p> <ul> <li>On Target acquisition</li> </ul> <p>AutoBot acquires the Main Assist's (MA) target in a number of ways.</p> <p>1) By setting the MA in the bot's ini file and the assist delay, the macro will attempt to acquire the target of the MA after the set time.</p> <p>2) By using the Delegate Main Assist leadership AA, the bot will acquire the MA's target that way.</p> <p>3) By manually setting the MA's target using /varset MATarget ${Target.ID} in whatever channel your bots listen to commands in.</p> <ul> <li>On non-working clickies</li> </ul> <p>If you have a clicky with no recast timer that isn't working. (Such as Time's Antithesis, Veil of Lost Hopes, et al...) The odds are you have an old version of MQ2. As of the 20<sup>th</sup> of Dec Zip, these issues have been fixed. if you don't know what version of the zip you have, try simply running /echo ${FindItem[item name].Timer} and seeing what value it returns. Anything other than zero is Bad(tm) and denotes an out-of-date zip file. Update, update, update! Also your last inventory slot must NOT be a bag. Clickies usable from inventory, even if usable in other slots, will be used from base inventory slot 8.</p> <ul> <li>On out-of-date alias lists</li> </ul> <p>If you are attempting to reload your alias to your macroquest.ini. You must remove the Version=X.XX from RD_common.ini. Doing this will make the Version mismatch appear and reload all the alias's</p> <ul> <li>On healing not working</li> <li>On heals that never cancel even though target's health goes above CancelPct</li> </ul> <p>Tankheal must be defined as a valid spell and different than FastHeal=, even if you are not using Tankheals (UseCH setting).</p> <ul> <li>On Green (non-XP) corpses that are not auto looted</li> </ul> <p>These are not looted automatically. To trigger looting, at any time, send your bot \"You gain party experience!\" in whatever channel it is set to monitor.</p> <ul> <li>On late/not reliable buffs</li> </ul> <p>Bots will not buff in combat. Also it will not sit to memorize buffs if a NPC is within a certain range, although using a horse remedies this.</p> <ul> <li>On non-refreshing buffs on bots themselves</li> </ul> <p>Buffs from the [DoBuffStuff] or buff command are not rebuffed on the same bot that cast them, because you dont get a buff wear off message when they wear off yourself. If you want certain buffs kept up on your bot, you should use [SelfBuffStuff] section.</p> <ul> <li>On bots that keep targeting some npc, even though it hasn't been told it to assist and kill it</li> </ul> <p>Your MA could have a corpse close, and that is being assisted to get a target. Or you could be using an old version of autobot.</p> <ul> <li>On non-following bots</li> </ul> <p>Target someone and type /stick. If that doesnt work you have issues with MQ2MoveUtils.</p> <ul> <li>On Clerics that spam Complete Heals and interrupt them all</li> </ul> <p>Make sure you have UseDivArb set to 0 if you dont have that AA. // There's more to this than just the DivArb setting... but this might be one issue\\</p> <ul> <li>On non-attacking pets/bots</li> </ul> <p>Check your MQ2Melee settings(the wiki for it is here). You need a properly configured MQ2Melee for your pets/bots to attack and do other various melee-related tasks.</p> <ul> <li>On items being identified</li> </ul> <p>You aren't using the IRC plugin. By default /i is mapped to /identify.</p> <ul> <li>No slash commands work or error: \"DoCommand - Couldn't parse '/...' \"</li> </ul> <p>This usually happens when you update MQ2 and overwrite the macroquest.ini file. This file contains all the aliases (ie. the slash commands). To fix, delete the Version=X.XX line in RD_Common.ini, which will write all the aliases back to the macroquest.ini file when you restart Autobot. In general, you do not need to overwrite the Macroquest.ini file when updating MQ2.</p> <ul> <li>When your bot doesn't mem spells</li> </ul> <p>Your ini is set up wrong. Your XXXXGem#= entry needs to read \"gem#\", not just #. At least, 9 times out of 10 that's the problem. Check one of the sample ini files for an example.</p> <ul> <li>On My bots dont aquire targets when everything is set up properly</li> </ul> <p>Each toon needs a breastplate, it has to do with the way autobot checks deaths and runs the auto accept rez feature, it also disables assisting, for a good reason...</p>","tags":["macro"]},{"location":"macros/gallery/barter/","title":"Barter","text":"<p><code>#turbo</code> <code>Sub Main()</code> <code>/declare itemname string local</code> <code>/declare itemqty int local</code> <code>/declare itemprice int local</code> <code>/declare result int local</code> <code>/if (!${Window[BarterMerchantWnd].Open}) {``` :RightClickBuyer</code> /click right target<code>`/delay 10s ${Window[BarterMerchantWnd].Open}</code> <code>/if (!${Window[BarterMerchantWnd].Open}) {</code> <code>/echo You need to move closer to your target</code> <code>/delay 1s</code> <code>/goto :RightClickBuyer</code> <code>}</code> <code>}</code> <code>/delay 3s</code> <code>/for result 1 to 100</code> <code>/if (${Bool[${Window[BarterMerchantWnd].Child[BTRMERCH_BuyLineList].List[${result},2]}]}) {</code> <code>/varset itemname ${Window[BarterMerchantWnd].Child[BTRMERCH_BuyLineList].List[${result},2]}</code> <code>/varset itemqty ${Window[BarterMerchantWnd].Child[BTRMERCH_BuyLineList].List[${result},3]}</code> <code>/varset itemprice ${Window[BarterMerchantWnd].Child[BTRMERCH_BuyLineList].List[${result},4]}</code> <code>/echo ${result} ${itemname} ${itemqty} ${itemprice}</code> <code>}</code> <code>/next result</code> <code>/return</code></p>","tags":["macro"]},{"location":"macros/gallery/cleric.mac-nytemyst/","title":"Cleric.mac - nytemyst","text":"","tags":["macro"]},{"location":"macros/gallery/cleric.mac-nytemyst/#forum-link","title":"Forum Link","text":"<ul> <li>Cleric.mac - Nytemyst</li> </ul>","tags":["macro"]},{"location":"macros/gallery/cleric.mac-nytemyst/#description","title":"Description","text":"<p>This macro is mainly for high level cleric, but possible for low levels to use. It is based off of Nils's version of Afcleric which was based off of the original by fantum409, but it's been highly highly modified. Will Heal Groups, extended targets,Pets,specific tanks, Specific PCs outside of your group.</p>","tags":["macro"]},{"location":"macros/gallery/cleric.mac-nytemyst/#plugins-used","title":"Plugins Used","text":"<ul> <li>MQ2MoveUtils</li> <li>MQ2Debuffs Need for Curing.</li> <li>MQ2EQBC For BC curing and Buffing</li> <li>MQ2Netbots For BC curing and Buffing</li> </ul>","tags":["macro"]},{"location":"macros/gallery/cleric.mac-nytemyst/#required-include-files","title":"Required Include Files","text":"<p>General.inc - All the macros made/updated by me will use this include. Contains common features all the macros use to ease in updating functions and features to all the macros instead of updating each macro separately.</p> <ul> <li>Spell_Routines.inc</li> <li>Ninjadvloot.inc</li> </ul> <p>If you don't want to use Ninjadvloot.inc you can comment out or delete these lines.</p> <p><code>#include ninjadvloot.inc</code> <code>/call SetupAdvLootVars</code> <code>/if (${DoLoot} &amp;&amp; !${Me.Moving} &amp;&amp; !${Me.Invis}) /call LootMobs</code></p> <ul> <li>AAPurchase.inc</li> </ul> <p>If you don't want to use AAPurchase.inc You can comment out or delete these lines.</p> <p><code>#include AAPurchase.inc</code> <code>/call AAInit</code></p> <p>Events.inc This is used for raiding to allow the bot to perform certain emotes. Whenever I get involved with a new raid that needs the toons to react to an emote this gets updated. If you don't care to use it you can comment or delete out this line.</p> <p><code>#include events.inc</code></p>","tags":["macro"]},{"location":"macros/gallery/cleric.mac-nytemyst/#commands","title":"Commands","text":"<ul> <li>/battlerez On/Off - Turn Battle rez on or off.</li> <li>/Reverse On/Off - Changes BC Buff and Curing process order.</li> <li>/doloot On/Off - Turns looting on or off.</li> <li>/hammer On/Off - Turns using the Pet hammer on or off.</li> <li>/nuke On/Off - Turns nuking on or off.</li> <li>/GroupHeal On/Off - Turns casting a group heal on or off.</li> <li>/Tankhot On/Off - Turns casting a HOT on the tank on or off.</li> <li>/UseCure On/Off - Turns Spell Curing on or off.</li> <li>/RC On/Off - Turns curing by RC on or off.</li> <li>/Raidbuff - Turns raid buffing on or off.</li> <li>/stopheal # - Changes the default stop heal point.</li> <li>/startheal # - Changes the % of when to start healing.</li> <li>/Xheal On/Off - Turns on or off healing Extended Targets.</li> <li>/Xhealknights On/Off - Turns on or off of automatically adding Knights to xtargets.</li> <li>/usepromise On/Off - Turns on or off using promise line on tank.</li> <li>/promise # - Changes the % of the minimum health the tank can be for a promise heal.</li> <li>/useepic On/Off - Turns using the epic on or off.</li> <li>/doyaulp On/Off - Turns using spell yaulp on or off.</li> </ul>","tags":["macro"]},{"location":"macros/gallery/clockwork-grease-maker/","title":"Clockwork Grease Maker","text":"<p>This is a macro to make jars of clockwork grease, a very tedious combine. It does not deal well with subcombine failures yet, but is otherwise completely functional.</p> <p>Paste this code into a file called grease.mac in your \\macros directory, usually found under your release directory unless you have changed something:</p> <p><code>|/////////////////////////////////////////////////////////////////////////////</code> <code>| Grease.mac by dedpoet</code> <code>|</code> <code>| Attempts to make a Jar of Clockwork Grease until out of components.</code> <code>|</code> <code>| You will need the following items in your inventory: Water Flask, Block of</code> <code>| Clay, Small Jar Sketch, Quality Firing Sheet, Clockwork Grease. You will</code> <code>| need your last inventory slot open.</code> <code>|</code> <code>| Stand between the pottery wheel and the kiln and run grease.mac.</code> <code>|</code> <code>| This macro uses the pack subs written by Override and quite a bit of his</code> <code>| code. Also thanks to JJ for the shoves in the right direction with the</code> <code>| window stuff</code> <code>|\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\</code></p> <p><code>#turbo</code></p> <p><code>#event CombineError \"#*#There was no place to put that#*#\"</code> <code>#event CombineError \"#*#You cannot combine these items in this container type!#*#\"</code> <code>#event CombineError \"#*#did not accept these items#*#\"</code></p> <p><code>Sub Main</code></p> <p><code>| Let's make an Unfired Small Container</code> <code>/call OpenPacks</code> <code>/delay 2s</code></p> <p><code>:GreaseLoop</code></p> <p><code>/itemtarget Pottery Wheel</code> <code>/face item</code> <code>/nomodkey /click left item</code> <code>/delay 1s</code> <code>/nomodkey /notify TradeSkillWnd COMBW_ExperimentButton leftmouseup</code> <code>/delay 1s</code> <code>`/if (!${FindItem[=Water Flask].InvSlot}) /goto :Done</code> /nomodkey /ctrl /itemnotify ${FindItem[=Water Flask].InvSlot} leftmouseup<code>`/nomodkey /itemnotify enviro1 leftmouseup`````  /if (!${FindItem[=Block of Clay].InvSlot}) /goto :Done``` /nomodkey /ctrl /itemnotify ${FindItem[=Block of Clay].InvSlot} leftmouseup</code> <code>/nomodkey /itemnotify enviro2 leftmouseup</code></p> <p><code>/if (!${FindItem[=Small Jar Sketch].InvSlot}) /goto :Done</code> <code>/nomodkey /ctrl /itemnotify ${FindItem[=Small Jar Sketch].InvSlot} leftmouseup</code> <code>/nomodkey /itemnotify enviro3 leftmouseup</code></p> <p><code>/combine enviro</code> <code>/delay 15</code> <code>/doevents</code> <code>/call ClearCursor</code> <code>/delay 5</code> <code>/nomodkey /keypress esc</code> <code>/delay 1s</code></p> <p><code>| Let's make it into a Small Clay Jar</code></p> <p><code>/itemtarget Kiln</code> <code>/nomodkey /click left item</code> <code>/delay 1s</code> <code>/nomodkey /notify TradeSkillWnd COMBW_ExperimentButton leftmouseup</code> <code>/delay 1s</code></p> <p><code>/if (!${FindItem[=Unfired Small Container].InvSlot}) /goto :Done</code> <code>/nomodkey /ctrl /itemnotify ${FindItem[=Unfired Small Container].InvSlot} leftmouseup</code> <code>/nomodkey /itemnotify enviro1 leftmouseup</code> <code>/if (!${FindItem[=Quality Firing Sheet\\].InvSlot}) /goto :Done``` /nomodkey /ctrl /itemnotify ${FindItem\\[=Quality Firing Sheet].InvSlot} leftmouseup</code> /nomodkey /itemnotify enviro2 leftmouseup`</p> <p><code>/combine enviro</code> <code>/delay 15</code> <code>/doevents</code> <code>/call ClearCursor</code> <code>/nomodkey /keypress esc</code> <code>/delay 1s</code></p> <p><code>| Open our new jar and put 2 greases in it</code> <code>`/itemnotify pack8 rightmouseup</code> /delay 1s<code>```  /if (!${FindItem[=Clockwork Grease].InvSlot}) /goto :Done</code> /nomodkey /ctrl /itemnotify ${FindItem[=Clockwork Grease].InvSlot} leftmouseup<code>`</code>/nomodkey /itemnotify in pack8 1 leftmouseup<code></code>/delay 5`</p> <p><code>/if (!${FindItem[=Clockwork Grease].InvSlot}) /goto :Done</code> <code>/nomodkey /ctrl /itemnotify ${FindItem[=Clockwork Grease].InvSlot} leftmouseup</code> <code>/nomodkey /itemnotify in pack8 2 leftmouseup</code> <code>/combine pack8``` /delay 15</code> /doevents<code>`/call ClearCursor</code> <code>/delay 20</code></p> <p><code>| We should have a grease. Let's start over.</code> <code>/goto :GreaseLoop</code></p> <p><code>| When we run out of components.</code> <code>:Done</code> <code>/echo We're out of components. Ending macro.</code> <code>/beep</code> <code>/cleanup</code> <code>/end</code> <code>/return</code></p> <p><code>sub ClearCursor</code> <code>:Loop</code> <code>/if (!${Cursor.ID}) /return</code> <code>/autoinv</code> <code>/delay 5</code> <code>/doevents</code> <code>/goto :Loop</code> <code>/return</code></p> <p><code>Sub OpenPacks</code> <code>/declare bag int local 0</code></p> <p><code>/newif (!${Window[InventoryWindow].Open}) /keypress inventory</code> <code>/delay 1</code> <code>/for bag 1 to 8 step 1</code> <code>/newif (!${Window[pack${bag}].Open}) /itemnotify pack${bag} rightmouseup</code> <code>/next bag</code> <code>/delay 1</code> <code>/return</code></p> <p><code>Sub Event_CombineError</code> <code>/echo Combine error encountered. Ending macro.</code> <code>/beep</code> <code>/end</code> <code>/return</code></p>","tags":["macro"]},{"location":"macros/gallery/defense.inc/","title":"Defense.inc","text":"","tags":["macro"]},{"location":"macros/gallery/defense.inc/#description","title":"Description","text":"<p>This include is ment to help automate defensive measures for various classes.</p> <p>There is no INI file to go with this, this is simply my version of what each class ought to be doing as each line of defense goes down.</p> <p>Currently set up for use with AA, disc's, and BP clicks up to level 105. Currently set up for SK,Pal, and War.</p> <p>You can find the latest version posted here</p>","tags":["macro"]},{"location":"macros/gallery/defense.inc/#requirements","title":"Requirements","text":"<p>Spell_Routines.inc</p>","tags":["macro"]},{"location":"macros/gallery/defense.inc/#usage","title":"Usage","text":"<p>Pretty much runs itself, you just need to make a call do it when you want it to engage defensive measures.</p> <p>Someplace in your main loop/combat loop put some sort of call, for example:</p> <p><code>/if (${Target.Named} || ${Me.XTarget}&gt;2 || ${Me.PctHPs}&lt;60) &amp;&amp; ${Target.Distance}&lt;75) /call Defense</code></p> <p>This is set up to work with RaidDruid.mac, so it utilizes a ${ChatChannel} to make announcements if \"ReportDefense\" is true/on.</p> <p>If Defense.inc finds no \"ReportDefense\" variable, it will make one and default it to FALSE If Defense.inc finds no \"ChatChannel\" variable, it will make one and default it to Echo</p>","tags":["macro"]},{"location":"macros/gallery/drshmbot/","title":"DRShmbot","text":"","tags":["macro"]},{"location":"macros/gallery/drshmbot/#drshmbot_1","title":"dRShmbot","text":"<p>Author: DeathlyRanja Alias: dR~ Date: 12/05/2006</p> <p>Credit where its due:</p> <p><code>Basis of this script is Version: v0.5c by Hubba</code> <code>Shambot Version 1.0c by Ranma</code> <code>Version 2.0c by thread_001</code> <code>Version 3.0+ to 3.3 by IonCache</code> <code>Version 3.4+ to Current, By DeathlyRanja</code></p> <p>dRShmbot is a fairly complex Shaman macro. It is not finish or in any way finalized, so many more updates will come.</p> <p><code>This macro offers:</code> <code>Intelligent Healing Code</code> <code>Spell Gem Optimization</code> <code>Dynamic Mana Preservation</code> <code>Mob Debuffing(Malo/Slow/Cripple/Root/Nuke/Dot)</code> <code>Self/Group Buffing(Panther/Avatar/Buffs)</code> <code>TSS Regen Support</code> <code>User Settings for almost all variables to customize</code> <code>Pet Routines</code></p>","tags":["macro"]},{"location":"macros/gallery/drshmbot/#request-space","title":"Request Space","text":"<p>This area is reserved for user requests. Feel free to hit the edit button to your right and add to this. I will add as I can.</p> <p>Requesting links for the below listed .inc - Could not find them with searches on MQ2 forums or wiki.</p>","tags":["macro"]},{"location":"macros/gallery/drshmbot/#to-do-list","title":"To Do List","text":"<p><code>To Do List:</code> <code>Fix 'Spell Worn Off' for dots,buffs,debuffs,etc.</code> <code>Add Command Queuing</code> <code>Add Flee Routine</code> <code>Fix Buff Stacking Issues and checks upon casting</code> <code>Fix Healing Interrupts -- currently removed</code> <code>Clean up code</code> <code>Add GoM GoRM events and cast preferences during those events</code></p> <p><code>Correct targetting issues with detrimental and beneficial spells.</code> <code>Add a new targetting array</code> <code>Add INI support</code></p>","tags":["macro"]},{"location":"macros/gallery/drshmbot/#future-to-do-list","title":"Future to do List","text":"<p>Specific Buffing Instructions Rework the targeting Sub Routine Add more targets to the targetting array and allow for user specified amount of targets to track</p>","tags":["macro"]},{"location":"macros/gallery/drshmbot/#how-to-use","title":"How To Use","text":"<p>To use this macro, you must have these files in your macros directory: DRShmbot.mac dREvents.inc dRSubs.inc</p> <p>To start the macro, type: /mac DRShmbot.mac __</p> <p>Tank Name and Master Name are optional. They are NOT required but must be set in the INI for the bot to function correctly if not provided.</p> <p>The macro will create an INI file for you to customize called, dR_ToonsName.ini, in your macro directory. (Ex. dR_Bobshaman.ini)</p> <p>After the INI file is created, it will end the macro and you MUST edit the new INI file. Then you can restart the macro(You will not need to edit it after it has been set once unless you need to change a setting.</p> <p>This macro DOES NOT REQUIRE ANY PLUGIN but it will use MQ2EQBC if you want it to. However, there is no support for it on this macro at this time.</p>","tags":["macro"]},{"location":"macros/gallery/drshmbot/#commands-and-aliases","title":"Commands and Aliases","text":"<p>None at this time.</p>","tags":["macro"]},{"location":"macros/gallery/drshmbot/#dynamic-mana","title":"Dynamic Mana","text":"<p>More to be posted later.</p>","tags":["macro"]},{"location":"macros/gallery/drshmbot/#spell-gem-optimization","title":"Spell Gem Optimization","text":"<p>Add to your macro before main loop:</p> <p><code>/declare numGem int outer</code> <code>/declare OWgem int outer</code> <code>/call GemOpt</code></p>","tags":["macro"]},{"location":"macros/gallery/drshmbot/#subs-for-use-within-macro","title":"Subs for use within macro","text":"<p>/call GemMem ${SpellGem} ${SpellName} ${SpellGemState} ${MOWState}</p> <p><code>ex. /call GemMem ${NukeGem} ${Nuke} ${NukeStatus} TRUE</code> <code>/call GemMem 4 \"Ice Spear of Solist\" TRUE FALSE</code> <code>/call GemMem 0 \"Complete Healing\" FALSE ${CHAlwaysOW}</code> <code>/call GemMem 9 \"Ancient: Hallowed Light\" ${KeepAH} ${AHOverWrite}</code></p> <ul> <li>SpellNameHere must be a string, SpellGemHere must be a integer, SpellGemState must be TRUE/FALSE</li> <li> <p>FALSE means that the spell will stay until a spell is memmed over top of it within the macro by the user or</p> <p>manually deleted.</p> </li> <li> <p>TRUE flags the gem as switchable. Spells will be memmed to the least used switchable slot</p> </li> <li>SpellGemHere</li> <li>when it equals 0, means that the sub will memorize into the first switchable gem it finds that is available.</li> <li>If no gems are available, it finds the switchable gem that has not been cast in the longest time</li> <li> <p>Each timer for each switchable gem is set to a default of five minutes. Lowest timer will be overwritten, or</p> <p>first in list if multiple timers are at 0 * MOWState is just a TRUE/FALSE constant that tells the sub to overwrite it if no gems can be switched and you don't</p> </li> </ul> <p>want to use the OWgem</p> <p>IF you want the timer function to work correctly, you must add this line directly after casts in your macro</p> <p><code>/if (${Macro.Return.Equal[CAST_SUCCESS]}) /call GemTimer ${Me.Gem[&lt;${SpellThatWasCast}&gt;]}</code></p> <p>/call GemEdit ${SpellName - OR - SpellGem}</p> <p><code>ex. /if (${SpGem[1,2]}) /call GemEdit 1</code> <code>/call GemEdit \"Complete Healing\"</code> <code>/call GemEdit ${QuickHeal}</code> <code>/if (${Nuke.Equal[${SpGem[${NukeGem},1]}]}) /call GemEdit ${NukeGem}</code></p> <ul> <li>This sub is used to switch states of memorized spells or spell gems. IF the spell name isnt found, no change will</li> </ul> <p>occur. This state will be changed next time a gem will be memorized, therefore no need to mindlessly call GemFind</p>","tags":["macro"]},{"location":"macros/gallery/drshmbot/#drshmbot-ini-settings","title":"dRShmbot Ini Settings","text":"<p>Sample Ini</p> <p><code>[DRShmBot]</code> <code>UseMq2EQBC=FALSE(TRUE if you want macro to use MQ2EQ Box Chat Plugin) -- You must also have the EQBCS server running.</code></p> <p><code>[General]</code> <code>UseMount=FALSE(TRUE if you want to use a mount)</code> <code>MountItem=NULL(Set this to the name of the item you wish to use. Ex. MountItem=Small Black Drum)</code> <code>MSRL=##(Set this value to the percent of Mana that bot will sit at when not in combat, TSS regen is active and mana is below the</code> <code>set value)</code> <code>HSRL=##(Set this value to the percent of HP that bot will sit at when not in combat, TSS regen is active and HP is below the set</code> <code>value)</code> <code>UseCanniAA=TRUE(Set to False if you do not wish to use canni AA, or do not have it yet.)</code> <code>Verbose=FALSE(Set to TRUE if you want the bot to announce heals/debuffs/etc into group/channel.)</code> <code>DoLoot=FALSE(Set to TRUE if you want the bot to loot for you)</code> <code>AutoFollowDist=##(Set this value to distance that bot will stay within when following its AutoFollow Target)</code></p> <p><code>[DynMana]</code> <code>DynManaTimer=50(This value is the time in deciseconds between mana checks before making changes to HP Stops/Starts)Default is</code> <code>50dS or 5 Seconds</code> <code>PercentCarry=60(This value is the percentage of carry-over from 1 Mana Tier to another. Do not alter this unless you understand</code> <code>what you are doing. Read Dynamic Mana section if you want to further understand this function.)</code> <code>DetriHPIncrease=20(Set this to the percentage that you want detrimental HP Increases to increase by. Ex. SPantherHP=70 but</code> <code>increases by 20% on each tier.)</code> <code>DetriHPDecrease=15(Same as above)</code> <code>BeneHPIncrease=15(etc)</code> <code>BeneHPDecrease=10(etc)</code></p> <p><code>[PrimarySpells]</code> <code>SwapGem=9(Set this to the gem number that you want to use for swapping spells. This may be removed in the near future with</code> <code>the implementation of GemOpt.inc)</code> <code>HP2MP=Ancestral Bargain Rk. II(Set this to the Canni spell you want to use. Quotes are not needed.)</code> <code>HP2MPGem=1(Set this to the spell gem you want Canni to use.)</code> <code>Slow=Balance of Discord(refer above)</code> <code>SlowGem=2(refer above)</code> <code>Malo=Malosinise(refer above)</code> <code>MaloGem=3(refer above)</code> <code>DoTOne=Juju(refer above)</code> <code>DoTOneGem=4(refer above)</code> <code>Nuke=Sting of the Queen(refer above)</code> <code>NukeGem=5(refer above)</code> <code>QuickHeal=Ahnkaul's Mending(refer above)</code> <code>QuickHealGem=6(refer above)</code> <code>HealOverTime=Halcyon Breeze(refer above)</code> <code>HoTGem=7(refer above)</code> <code>DoTTwo=Ahnkaul's Spear of Venom(refer above)</code> <code>DoTTwoGem=8(refer above)</code> <code>HP2MPState=FALSE(NEW VARS) -- FALSE means that the spell will not be switched out when another spell is called for memorization. TRUE means that if</code> <code>the another spell is called for memorization, and there isnt a free gem available, the new spell will be memmed over</code> <code>top of this one.</code> <code>SlowState=FALSE</code> <code>MaloState=TRUE</code> <code>DoTState=TRUE</code> <code>NukeState=TRUE</code> <code>QuickHealState=FALSE</code> <code>HoTState=FALSE</code> <code>DoTTwoState=TRUE</code></p> <p><code>SecondarySpells</code> <code>Pet=Kyrah's Faithful</code> <code>Cripple=Crippling Spasm</code> <code>Root=Greater Immobilize</code> <code>Panther=Spirit of the Leopard</code> <code>GroupPanther=Talisman of the Panther Rk. II</code> <code>Avatar=Ferine Avatar</code> <code>GroupAvatar=Champion</code> <code>Haste=Swift like the Wind</code> <code>GroupHaste=Talisman of Celerity</code> <code>Focus=Dire Focusing</code> <code>GroupFocus=Talisman of the Dire</code> <code>Charisma=Unfailing Reverance</code> <code>Dexterity=Mortal Deftness</code> <code>GroupDex=Talisman of the Raptor</code> <code>Strength=Preternatural Foresight</code> <code>GroupSTR=Talisman of Foresight</code> <code>Agility=Preternatural Foresight</code> <code>GroupAGI=Talisman of Foresight</code> <code>Stamina=Spirit of Fortitude</code> <code>GroupSTA=Talisman of Fortitude</code> <code>Regen=Spirit of the Stoic One</code> <code>GroupRegen=Talisman of the Stoic One</code> <code>Primal=Primal Essence</code> <code>PrDrResist=Protection of Wishka Rk. II</code> <code>ArmorClass=Ancestral Bulwark</code> <code>Movement=Spirit of Bih'li</code> <code>Levitate=Levitation</code> <code>Invis=Spirit Veil</code> <code>Shrink=Shrink</code> <code>GroupShrink=Tiny Terror</code> <code>Grow=Grow</code> <code>SeeInvis=Acumen</code> <code>Gate=Gate</code> <code>Food=Summon Food</code> <code>Drink=Summon Drink</code></p> <p><code>[CombatVars]</code> <code>AssistRange=100(Set this to the distance MA must within for bot to assist for target)</code> <code>StartCombatHP=98(Set this to the distance target npc must be within to start combat subs)</code> <code>StartDoTHP=0(Set this to the value that mob HP must be under to start function)</code> <code>EndDoTMP=100(Set this to the value that bot mp must be above in order to do this function)</code> <code>StartRootHP=0(Set this to the value that mob HP must be under to start function)</code> <code>EndRootMP=100(Set this to the value that bot mp must be above in order to do this function)</code> <code>StartNukeHP=90(Set this to the value that mob HP must be under to start function)</code> <code>EndNukeMP=50(Set this to the value that bot mp must be above in order to do this function)</code> <code>EndPantherHP=100(Set this to the value that target hp must be above in order to do this function)</code> <code>StartSitMP=0(Set this to the percent of MP bot must be below to sit)</code> <code>EndBuffMP=100(Set this to the percent of MP bot must be above to buff)</code> <code>StopCanniHP=3500(Set this to the amount of HP bot must be above to canni)</code> <code>AssistDelay=3(Set this value to the delay in deciseconds before bot will assist main assist to get a target)</code> <code>TimetoRecast=5s(Set this to a value in seconds that bot will continue to try to recast a spell)</code></p> <p><code>Healing</code> <code>UseQuickHeals=TRUE</code> <code>UseHealOverTime=TRUE</code> <code>UseGroupHoT=FALSE</code> <code>DoHealTank=TRUE</code> <code>DoHealGroup=TRUE</code> <code>DoHealPets=FALSE</code> <code>HealPriority=2(Healing modes -- 0 = Default, heal normally /\\/\\ 1 = Tank Priority, heal tank before all others /\\/\\</code> <code>2 = Tank and Shaman Priority, heal self and tank before all others)</code> <code>StartGroupHoTHP=0(Group HoT -- integer is the average hp level of the group)</code> <code>CasterHealHP=50(start heal on class type when hp is below value)</code> <code>CasterHoTHP=60</code> <code>MeleeHealHP=40</code> <code>MeleeHoTHP=60</code> <code>TankHealHP=50</code> <code>TankHoTHP=70</code> <code>PetHealHP=30</code> <code>PetHoTHP=50</code> <code>SelfHealHP=50</code> <code>SelfHoTHP=60</code></p> <p><code>[Debuff]</code> <code>UseMalo=TRUE</code> <code>UseSlow=TRUE</code> <code>UseCripple=FALSE</code> <code>SlowOnlyOnce=FALSE(bot will only attempt to slow one time if TRUE)</code> <code>MaxSlowAttempts=3</code> <code>UseRoot=FALSE</code> <code>UseDots=FALSE</code> <code>UseNukes=TRUE</code></p> <p><code>[Buffing]</code> <code>UseBuffs=FALSE</code> <code>UseRebuffs=TRUE</code> <code>UsePanther=FALSE</code> <code>UseGroupPanther=FALSE</code> <code>PantherGroup=FALSE</code> <code>PantherPets=FALSE</code> <code>UseAvatar=TRUE</code> <code>UseGroupAvatar=FALSE</code></p> <p><code>[Pet-Familiar]</code> <code>UsePet=TRUE</code> <code>BuffMyPet=FALSE</code> <code>BuffOtherPets=FALSE</code></p>","tags":["macro"]},{"location":"macros/gallery/gemopt.inc/","title":"GemOpt.inc","text":"","tags":["macro"]},{"location":"macros/gallery/gemopt.inc/#spell-gem-optimization-include","title":"Spell Gem Optimization Include","text":"","tags":["macro"]},{"location":"macros/gallery/gemopt.inc/#vip-only","title":"VIP ONLY","text":"<p>Welcome to the Wiki for GemOpt.inc by DeathlyRanja</p> <p>This wiki will cover the little knowledge needed to run a macro with this include.</p>","tags":["macro"]},{"location":"macros/gallery/gemopt.inc/#what-does-this-do","title":"What does this do?","text":"<p>This include file allows the macro to control the use of spell gems and how they are memorized. The include will monitor the spell gems and user setting emOpt -- This function sets up the include file and has no user interaction at all except in the beginning of the macro. This sub/function must be called before your main loop.</p> <p>GemMem -- Memorizes the spell, remembers spell data, recognizes how long the spell has been memorized and if it has been flagged by the user as a gem that is allowed to be switched out. GemMem may call GemDMem if there is a spell in the slot and the spell gem is switchable or the user wants to overwrite the gem that is there anyway.</p> <p>GemDMem -- Simple ... It dememorizes the spell in whatever slot chosen(1-9)</p> <p>GemEdit -- This sub routine takes the spell name or gem-number and switches it from switchable/not-switchable to not-switchable/switchable</p> <p>GemTimer -- A subroutine to be called after spell casts if you want the include to monitor the usage of the spell. Spells often will not be replaced by spells that aren't cast as often.</p> <p>GemFind -- A subroutine to scan the spell information, stored user-responses and available/used gems to find a suitable gem for memorization.</p> <p>Putting all these functions together, this include micromanages the use of spell gems within a routine. Instead of using something like /call cast 4 \"Shrink\" 5s, You can use this instead /if (\\({Me.Gem[\\)) /call cast }]\\({Me.Gem\\[\\) 5s.}]} ${ShrinkSpell</p>","tags":["macro"]},{"location":"macros/gallery/gemopt.inc/#why-use-this","title":"Why use this?","text":"<p>As said before, this can allow you to dynamically assign spell gems to make a macro more flexible. Is it easier to code and use, probably not... for the moment. Can it be improved, YES!</p> <p>This isn't for the weak of heart. This include will allow you to do really awesome things without alot of effort on your part.</p>","tags":["macro"]},{"location":"macros/gallery/gemopt.inc/#usage","title":"Usage","text":"<p>Add to your macro before main loop:</p> <p><code>/declare numGem int outer</code> <code>/declare OWgem int outer</code> <code>/call GemOpt</code></p>","tags":["macro"]},{"location":"macros/gallery/gemopt.inc/#subs-for-use-within-macro","title":"Subs for use within macro","text":"<p>/call GemMem ${SpellGem} ${SpellName} ${SpellGemState} ${MOWState}</p> <p><code>ex. /call GemMem ${NukeGem} ${Nuke} ${NukeStatus} TRUE</code> <code>/call GemMem 4 \"Ice Spear of Solist\" TRUE FALSE</code> <code>/call GemMem 0 \"Complete Healing\" FALSE ${CHAlwaysOW}</code> <code>/call GemMem 9 \"Ancient: Hallowed Light\" ${KeepAH} ${AHOverWrite}</code></p> <ul> <li>SpellNameHere must be a string, SpellGemHere must be a integer, SpellGemState must be TRUE/FALSE</li> <li> <p>FALSE means that the spell will stay until a spell is memmed over top of it within the macro by the user or</p> <p>manually deleted.</p> </li> <li> <p>TRUE flags the gem as switchable. Spells will be memmed to the least used switchable slot</p> </li> <li>SpellGemHere</li> <li>when it equals 0, means that the sub will memorize into the first switchable gem it finds that is available.</li> <li>If no gems are available, it finds the switchable gem that has not been cast in the longest time</li> <li> <p>Each timer for each switchable gem is set to a default of five minutes. Lowest timer will be overwritten, or</p> <p>first in list if multiple timers are at 0 * MOWState is just a TRUE/FALSE constant that tells the sub to overwrite it if no gems can be switched and you don't</p> </li> </ul> <p>want to use the OWgem</p> <p>IF you want the timer function to work correctly, you must add this line directly after casts in your macro</p> <p><code>/if (${Macro.Return.Equal[CAST_SUCCESS]}) /call GemTimer ${Me.Gem[&lt;${SpellThatWasCast}&gt;]}</code></p> <p>/call GemEdit ${SpellName - OR - SpellGem}</p> <p><code>ex. /if (${SpGem[1,2]}) /call GemEdit 1</code> <code>/call GemEdit \"Complete Healing\"</code> <code>/call GemEdit ${QuickHeal}</code> <code>/if (${Nuke.Equal[${SpGem[${NukeGem},1]}]}) /call GemEdit ${NukeGem}</code></p> <ul> <li>This sub is used to switch states of memorized spells or spell gems. IF the spell name isnt found, no change will</li> </ul> <p>occur. This state will be changed next time a gem will be memorized, therefore no need to mindlessly call GemFind</p>","tags":["macro"]},{"location":"macros/gallery/gemopt.inc/#code","title":"Code","text":"<p>If you want access to the code for this include, you must donate to the dev's. They do alot and require nothing. If you can't get $10 out of your budget, you should sell your plat, your soul or wife/husband. If you get the code from someone else and your not a VIP, may your soul rot in hell while cherubs mutilate your unidentifiable corpse.</p> <p>If you paid, you may of course just follow this link!!</p> <p>Spell Gem Optimization Include Note: This currently goes to the DRShmBot Page</p>","tags":["macro"]},{"location":"macros/gallery/genbot/","title":"GenBot","text":"<p>Genbot was released by GrimJack sometime in early 2003 and eventually became one of the more popular bot macros. Genbot was originally designed as a core set of scripts to handle all of the non class specific functions needed in a bot while providing a means to easily \"plug in\" any extra code needed for a specific character.</p> <p>Genbot History</p> <ul> <li>Version 0 - 8.8 Genbot created and developed by GrimJack</li> <li>Version 8.8 - ? GrimJack stopped playing everquest and</li> </ul> <p>Lasher took over the code.</p> <ul> <li>Version ? - 12.34 Lord Giddeon maintained the code.</li> <li>Version 12.35 - 13.3 Vexix took over the code.</li> </ul>","tags":["macro"]},{"location":"macros/gallery/genbot/#known-issues","title":"Known Issues","text":"<p>When using MQ2IRC in combination with the Genbot macro be sure to NOT use the /gb sitaftercast command. I do not know how but issuing this command with either off/on makes it so genbot chat no longer goes to the IRC window. Without this command the plugin and macro work together perfectly. (\\(Frank25\\))</p>","tags":["macro"]},{"location":"macros/gallery/group-language-trainer/","title":"Group Language Trainer","text":"<p>This macro was originally published in the Macro Depot 3.0 Forum, and has been successfully used to max out languages.</p> <p>The speed at which languages are learned is dependent on either intelligence or wisdom, depending on class. The higher the stat, the quicker it goes up. A typical character will max all languages in about 3 passes.</p> <p>Instructions</p> <p>Paste this code into a file called lang.mac in your \\macros directory.</p> <p>In game, create a social with 5 lines of text, and place this in hotbutton 1. It doesn't matter what it says, as this macro will only end up spamming numbers anyway. While spamming, group members can either turn off group text in options, or can use /ignore [spammer] during the \"lesson\".</p> <p><code>|/////////////////////////////////////////////////////////////////////////////</code> <code>| Lang.mac</code> <code>|</code> <code>| /macro lang</code> <code>| Cycles through all your available languages</code> <code>| Target yourself to end</code> <code>|</code> <code>| Written by shuttle</code> <code>| Converted by bob_the_builder 4/22/04</code> <code>| Updated by loadingpleasewait 9/11/04</code> <code>|</code> <code>| Usage: /mac Lang</code> <code>|</code> <code>| NOTE: You must have spam text set to a social on hotbutton 1 as any other</code> <code>| way it does not actually speak the set languages.</code> <code>|</code> <code>|\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\</code></p> <p><code>#event LangHelp \"Type /language help for a list\"</code></p> <p><code>|SetDeclares</code> <code>/declare LangNum outer</code> <code>/declare MinLangNum outer</code> <code>/declare MaxLangNum outer</code></p> <p><code>|SetVars</code> <code>/varset MinLangNum 2</code> <code>/varset MaxLangNum 25</code></p> <p><code>:MainLoop</code> <code>/if (${Target.ID}) /goto :end</code></p> <p><code>|GroupChat</code> <code>/notify HotButtonWnd HB_Button1 leftmouseup</code> <code>/delay 2s</code> <code>|IncreaseLanguage</code> <code>/lang ${LangNum}</code> <code>/varcalc LangNum ${LangNum}+1</code> <code>/if (${LangNum}&gt;${MaxLangNum}) /varset LangNum ${MinLangNum}</code> <code>/doevents</code> <code>/goto :MainLoop</code></p> <p><code>:end</code> <code>/endmacro</code></p> <p><code>Sub event_LangHelp</code> <code>/varset LangNum ${MinLangNum}</code> <code>/return</code></p>","tags":["macro"]},{"location":"macros/gallery/guild-buff-bot/","title":"Guild Buff Bot","text":"","tags":["macro"]},{"location":"macros/gallery/guild-buff-bot/#description","title":"Description","text":"<p>Guild Buff Bot a macro by TheDroidUrLookingFor, to help out a few friends. You can run it on a Shaman, Magician, Enchanter, Ranger, Druid, or Cleric.</p>","tags":["macro"]},{"location":"macros/gallery/guild-buff-bot/#features","title":"Features","text":"<p><code>- Buffs level appropriate buffs when Hailed.</code> <code>- Setup to use languages for FV.</code> <code>- Echos who it is helping to EQBC for debug is on.</code> <code>- Mage: Summons Pet toys when it hears \"toys\"</code> <code>- Mage: Summons Between 1- 20 Pet toys when it hears \"toys 1-20\"</code> <code>- Mage: Summons Invis stone when it hears \"invis\"</code> <code>- Mage: Summons mod rod when it hears \"rod\"</code> <code>- Mage: Summons damage rod when it hears \"drod\"</code> <code>- Mage: Summons arrows/quiver when it hears \"arrows\"</code> <code>- Mage: Summons Invis stone, Lev Ring, Mod Rod, and Damage Rod when it hears \"other\"</code> <code>- Cleric: Will resurrect a player when it hears \"rez\"</code> <code>- Druid: Ports to all available druid Zephyrs.</code> <code>- Wizard: Ports to all available wizard Translocates.</code> <code>- Account balances! Charge people for your buffs and stop buffing them if they can't afford it.</code> <code>- Will deduct a set amount each time it buffs a pet, merc, or the initiator.</code> <code>- Will deduct a set amount teach time it summons on the mage.</code> <code>- Moved everything you need to change into the INI.</code></p>","tags":["macro"]},{"location":"macros/gallery/guild-buff-bot/#available-commands","title":"Available Commands:","text":"<ul> <li>All</li> </ul> <p><code>-- Hail for level appropriate buffs.</code></p> <ul> <li>Druid</li> </ul> <p><code>-- ports</code></p> <ul> <li>Wizard</li> </ul> <p><code>-- ports</code></p> <ul> <li>Mage</li> </ul> <p><code>-- toys</code> <code>-- toys x(1-20)</code> <code>-- invis</code> <code>-- arrows</code> <code>-- rod</code> <code>-- drod</code> <code>-- other</code></p> <ul> <li>Cleric</li> </ul> <p><code>-- rez</code></p> <ul> <li>Necromancer</li> </ul> <p><code>-- summon</code></p>","tags":["macro"]},{"location":"macros/gallery/loot-any-corpse/","title":"Loot Any Corpse","text":"<p>This macro is UNTESTED, but should work fine. If it doesn't - hit edit and fix it.</p> <p>Converted from Wait4Rez.mac to loot.mac here---&gt; Editing Existing Macros</p> <pre><code> |** Loot.mac by TheNewGuy\n 20 July 2005  \n\n Make a hotkey:\n   /mac loot.mac \n\n When something dies, push that hotkey as you are standing over the\n corpse.  This should loot everything.\n\n This code based upon Wat4rez.mac by FaNTuM.  Changed from Wait4rez.mac to\n loot.mac at the following URL:\n\n http://www.macroquest.org/wiki/index.php/Editing_Existing_Macros\n\n **|\n\n | -------------- \n | -- Main Sub -- \n | -------------- \n Sub Main \n    /declare t int outer 0 \n    /declare loottotal int outer \n    /declare lootslot int outer \n    /declare lootleft int outer 0 \n    /if (!${Defined[Param0]}) { \n    } else { \n       /varset lootleft ${Param0} \n    } \n    /tar corpse\n    /loot\n | ----------------- \n | -- Count items -- \n | ----------------- \n    /delay 3s \n    :LootLag \n    /if (${loottotal}!=${Corpse.Items}) { \n       /varset loottotal ${Corpse.Items} \n       /delay 2s \n       /goto :LootLag \n    } \n    /if (${loottotal}&lt;=${lootleft}) { \n       /notify LootWnd DoneButton leftmouseup \n       /return \n    } \n    /varset loottotal ${Math.Calc[${Corpse.Items}-${lootleft}]} \n | --------------------- \n | -- Loot the corpse -- \n | --------------------- \n    /for lootslot 1 to ${loottotal} \n    :LootItem \n    /itemnotify loot${lootslot} rightmouseup \n    /delay 5 !${Corpse.Item[${lootslot}].ID} \n    /if (!${Corpse.Item[${lootslot}].ID}) { \n       /next lootslot \n    } else {\n      /goto :LootItem \n    }\n | ----------------- \n | -- Doublecheck -- \n | ----------------- \n    /if (${Math.Calc[${Corpse.Items}-${lootleft}]}&gt;0) /goto :LootLag \n    /notify LootWnd DoneButton leftmouseup \n /return\n</code></pre>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/","title":"Modbot 4.0","text":"<p>WIKI PAGE UNDER CONSTRUCTION</p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#modbot-a-universal-bot-macro","title":"ModBot - A Universal Bot Macro","text":"<ul> <li>Caster</li> <li>Melee</li> <li>Shrouds &amp; MM's</li> <li>Mez, Charm, Heal, Melee, etc</li> <li>All classes supported</li> <li>Now supports mixed groups of MQ2 and Non-MQ2 users/players</li> <li>ModBot is under constant improvement effort, open to suggestions / additions / adjustments, etc</li> </ul> <p>ModBot_4.x Source</p> <p>General Note on Wiki Entries - Release ZIP packages - While the majority of entries in the Wiki apply to ModBot in general, there are always some entries that apply to changes, additional functionality, new commands, etc. Please keep this note in the back of your mind as you work with the Wiki - if you come across a command, etc. that will just not seem to work for you (and you have already thoroughly researched it, checked syntax, re-checked syntax, etc.), please take a moment to check your version of the module that it applies to - you may need to update.</p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#how-to","title":"How To","text":"<p>To use ModBot</p> <ol> <li>Extract and place all included files from zip (all .mac and .inc files) into your MQ2 macro directory.</li> <li>From inside EQ, type /macro modbot (e.g. /macro modbot OR /macro modbot raidmode).</li> </ol> <p>This will build, if it doesn't exist, your MB_.ini file. Optional entries will make a</p> <p>MB__.ini. Being shrouded on startup without using an option will use your race and class for the</p> <p>creation of an MB__.ini file.</p> <ol> <li>From inside EQ, end the macro by typing /endmac</li> <li>Tab out of EQ, locate your new MB_.ini file in your macro directory, and open it. You can use the editor</li> </ol> <p>of your choice, but Notepad will work just fine.</p> <ol> <li>For every component of the macro you want to use, increase the respective \"count\", if you want two heals, set</li> </ol> <p>AHCount=2, if you want 2 debuffs, set ADCount=2, etc. After you have set your counts, save and close the INI file.</p> <ol> <li>Tab back over into EQ and restart the macro (/macro modbot). This will now populate your INI file based on the count</li> </ol> <p>entries that you made in the previous step</p> <ol> <li>End the macro again by typing /endmac</li> <li>Open the INI file once more and \"tweak\" the newly created entries to fit your needs. When you are done, save and</li> </ol> <p>close the INI file.</p> <ol> <li>Tab back over to EQ and restart the macro.</li> </ol> <p>Your bot should now be just that, a BOT and will listen to your every command (assuming you are the master).</p> <p>For examples of complete class ModBot INI files, please go to the example INI page.</p> <p>Please Note!! One thing to keep in mind throughout the configuration of the ModBot INI file: keep your most critical and most used spells, activities, etc., first in their respective INI sections. You don't want your mez spell as Debuff number 20, you don't want slow as debuff 10, you don't want a CBT based buff as buff 23, and you don't want CH as heal 1 (you want your most desperate heal as heal 1), etc. Configure your heals, buffs, debuffs, etc. in a highest priority first order.</p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#reference-to-understanding-the-modbot-wiki","title":"Reference to Understanding the ModBot WiKi","text":"<p><code>- Replace this with the respective descriptor</code> <code>Example 1 -_is luclin_bobby</code> <code>Example 2 -is bobby</code></p> <p><code>(text) - These are \"comments\" and should be removed when saving the respective file</code> <code>Example 1 - Send=1 (If set to 1 it will send netbots information over the network) This text:</code> <code>*``\\(If`````set</code> <code>to</code> <code>1</code> <code>it</code> <code>will</code> <code>send</code> <code>netbots</code> <code>information</code> <code>over</code> <code>the</code> <code>network)``\\*`should NOT appear in the INI file` ````` [text\\] - This is to show different options or series of options</code> Example 1 - /bc cast[, %t, grp,, etc]``</p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#plugin-requirements-examples","title":"Plugin Requirements &amp; Examples","text":"<p>I suggest you have a good understanding of how to configure each of these plugins. Any misconfiguration can have an adverse affect on the performance of ModBot</p> <p>Prefered versions are found within the Plugins_Other.zip file that can be found Here (Our thanks go out to the orignal makers and maintainers of these plugins)</p> <p>MQ2AdvPath (Wiki page) MQ2Cast (Wiki Page) MQ2eqbc (Wiki Page) MQ2Exchange (Wiki Page) MQ2Melee (Wiki Page) MQ2MoveUtils (Wiki Page) MQ2NetBots (Wiki Page) MQ2Twist (Wiki Page) and a modified version of MQ2Main\\MQ2Utilities Optional: Mq2Banolier (Wiki Page)</p> <ul> <li>If you plan to use item swapping and spell foci items, you may need to configure \"sets\"</li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#plugin-ini-examples","title":"Plugin INI Examples","text":"<p>Example _.INI for MQ2NetBots, MQ2Cast, MQ2Melee:</p> <p><code>[MQ2NetBots]</code> <code>Stat=1</code> <code>Send=1</code> <code>Grab=1</code> <code>[MQ2Cast(SpellSet)]</code> <code>ModBot2=1111|1 12345|2 22342|3 43241|4 42342|5 23423|6 12532|7 22334|8 33221|9 11225|10 55443|11 22337|12 88559</code> <code>[MQ2Melee]</code> <code>enrage=1</code> <code>facing=1</code> <code>infuriate=1</code> <code>jugular=0</code> <code>petassist=1</code> <code>petengagehps=94</code> <code>petrange=45</code> <code>plugin=1</code> <code>resume=75</code> <code>stickrange=75</code> <code>version=8.000</code></p> <p>Example MQ2MoveUtils.INI for MQ2MoveUtils:</p> <p><code>[Defaults]</code> <code>AutoPause=on</code> <code>BreakOnWarp=on</code> <code>BreakDist=250.0</code> <code>BreakOnGate=on</code> <code>Verbosity=1</code> <code>stuckDist=0.8</code> <code>turnDirection=10.0</code> <code>stuckCheck=5</code> <code>StuckLogic=off</code></p> <p>Example MQ2Bandolier_.ini for MQ2Bandolier:</p> <p><code>[ThisSet]</code> <code>17=12345</code> <code>13=23456</code> <code>14=34567</code></p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#modbot-hud","title":"ModBot HUD","text":"<p><code>[_]</code> <code>Last=ModBotHUD</code> <code>SkipParse=7</code> <code>CheckINI=100</code> <code>UpdateInBackGround=on</code> <code>ClassHUD=on</code> <code>ZoneHUD=on</code></p> <p><code>[ModBotHUD]</code> <code>Target= 3,060,210,225,225,225,${If[${Target.ID},Dis:${Int[${Target.Distance}]}-Lvl:${Target.Level}-${Target.Class.ShortName}-${Target.PctHPs}%,]}</code> <code>Name1= 3,060,220,240,240,000,${If[${NetBots.Counts}&gt;=1,${NetBots.Client.Arg[1]} ${NetBots[${NetBots.Client.Arg[1]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[1]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[1]}].PctAAExp}]},NA]}</code> <code>HP1= 3,060,230,255,100,100,HP:${If[${NetBots.Counts}&gt;=1,${NetBots[${NetBots.Client.Arg[1]}].PctHPs},]}%</code> <code>Mana1= 3,105,230,100,100,255,M:${If[${NetBots.Counts}&gt;=1,${NetBots[${NetBots.Client.Arg[1]}].PctMana},]}%</code> <code>End1= 3,145,230,255,234,008,E:${If[${NetBots.Counts}&gt;=1,${NetBots[${NetBots.Client.Arg[1]}].PctEndurance},]}%</code> <code>Pet1= 3,185,230,255,255,255,Pet:${If[${NetBots.Counts}&gt;=1 &amp;&amp; ${NetBots[${NetBots.Client.Arg[1]}].PetID}&gt;0,${NetBots[${NetBots.Client.Arg[1]}].PetHP},]}%</code> <code>Name2= 3,060,240,240,240,000,${If[${NetBots.Counts}&gt;=2,${NetBots.Client.Arg[2]} ${NetBots[${NetBots.Client.Arg[2]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[2]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[2]}].PctAAExp}]},NA]}</code> <code>HP2= 3,060,250,255,100,100,HP:${If[${NetBots.Counts}&gt;=2,${NetBots[${NetBots.Client.Arg[2]}].PctHPs},]}%</code> <code>Mana2= 3,105,250,100,100,255,M:${If[${NetBots.Counts}&gt;=2,${NetBots[${NetBots.Client.Arg[2]}].PctMana},]}%</code> <code>End2= 3,145,250,255,234,008,E:${If[${NetBots.Counts}&gt;=2,${NetBots[${NetBots.Client.Arg[2]}].PctEndurance},]}%</code> <code>Pet2= 3,185,250,255,255,255,Pet:${If[${NetBots.Counts}&gt;=2 &amp;&amp; ${NetBots[${NetBots.Client.Arg[2]}].PetID}&gt;0,${NetBots[${NetBots.Client.Arg[2]}].PetHP},]}%</code> <code>Name3= 3,060,260,240,240,000,${If[${NetBots.Counts}&gt;=3,${NetBots.Client.Arg[3]} ${NetBots[${NetBots.Client.Arg[3]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[3]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[3]}].PctAAExp}]},NA]}</code> <code>HP3= 3,060,270,255,100,100,HP:${If[${NetBots.Counts}&gt;=3,${NetBots[${NetBots.Client.Arg[3]}].PctHPs},]}%</code> <code>Mana3= 3,105,270,100,100,255,M:${If[${NetBots.Counts}&gt;=3,${NetBots[${NetBots.Client.Arg[3]}].PctMana},]}%</code> <code>End3= 3,145,270,255,234,008,E:${If[${NetBots.Counts}&gt;=3,${NetBots[${NetBots.Client.Arg[3]}].PctEndurance},]}%</code> <code>Pet3= 3,185,270,255,255,255,Pet:${If[${NetBots.Counts}&gt;=3 &amp;&amp; ${NetBots[${NetBots.Client.Arg[3]}].PetID}&gt;0,${NetBots[${NetBots.Client.Arg[3]}].PetHP},]}%</code> <code>Name4= 3,060,280,240,240,000,${If[${NetBots.Counts}&gt;=4,${NetBots.Client.Arg[4]} ${NetBots[${NetBots.Client.Arg[4]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[4]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[4]}].PctAAExp}]},NA]}</code> <code>HP4= 3,060,290,255,100,100,HP:${If[${NetBots.Counts}&gt;=4,${NetBots[${NetBots.Client.Arg[4]}].PctHPs},]}%</code> <code>Mana4= 3,105,290,100,100,255,M:${If[${NetBots.Counts}&gt;=4,${NetBots[${NetBots.Client.Arg[4]}].PctMana},]}%</code> <code>End4= 3,145,290,255,234,008,E:${If[${NetBots.Counts}&gt;=4,${NetBots[${NetBots.Client.Arg[4]}].PctEndurance},]}%</code> <code>Pet4= 3,185,290,255,255,255,Pet:${If[${NetBots.Counts}&gt;=4 &amp;&amp; ${NetBots[${NetBots.Client.Arg[4]}].PetID}&gt;0,${NetBots[${NetBots.Client.Arg[4]}].PetHP},]}%</code> <code>Name5= 3,060,300,240,240,000,${If[${NetBots.Counts}&gt;=5,${NetBots.Client.Arg[5]} ${NetBots[${NetBots.Client.Arg[5]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[5]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[5]}].PctAAExp}]},NA]}</code> <code>HP5= 3,060,310,255,100,100,HP:${If[${NetBots.Counts}&gt;=5,${NetBots[${NetBots.Client.Arg[5]}].PctHPs},]}%</code> <code>Mana5= 3,105,310,100,100,255,M:${If[${NetBots.Counts}&gt;=5,${NetBots[${NetBots.Client.Arg[5]}].PctMana},]}%</code> <code>End5= 3,145,310,255,234,008,E:${If[${NetBots.Counts}&gt;=5,${NetBots[${NetBots.Client.Arg[5]}].PctEndurance},]}%</code> <code>Pet5= 3,185,310,255,255,255,Pet:${If[${NetBots.Counts}&gt;=5 &amp;&amp; ${NetBots[${NetBots.Client.Arg[5]}].PetID}&gt;0,${NetBots[${NetBots.Client.Arg[5]}].PetHP},]}%</code> <code>Name6= 3,060,320,240,240,000,${If[${NetBots.Counts}&gt;=6,${NetBots.Client.Arg[6]} ${NetBots[${NetBots.Client.Arg[6]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[6]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[6]}].PctAAExp}]},NA]}</code> <code>HP6= 3,060,330,255,100,100,HP:${If[${NetBots.Counts}&gt;=6,${NetBots[${NetBots.Client.Arg[6]}].PctHPs},]}%</code> <code>Mana6= 3,105,330,100,100,255,M:${If[${NetBots.Counts}&gt;=6,${NetBots[${NetBots.Client.Arg[6]}].PctMana},]}%</code> <code>End6= 3,145,330,255,234,008,E:${If[${NetBots.Counts}&gt;=6,${NetBots[${NetBots.Client.Arg[6]}].PctEndurance},]}%</code> <code>Pet6= 3,185,330,255,255,255,Pet:${If[${NetBots.Counts}&gt;=6 &amp;&amp; ${NetBots[${NetBots.Client.Arg[6]}].PetID}&gt;0,${NetBots[${NetBots.Client.Arg[6]}].PetHP},]}%</code></p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#modbot-commands-syntax","title":"ModBot Commands &amp; Syntax","text":"<p>ModBot commands are executed in a few different ways:</p> <ul> <li>/bc</li> <li>/bc</li> <li>/bct</li> <li>/bct</li> </ul> <p>Are probably most common but check out the EQBC Forum thread for more methods / features.</p> <p>You can also configure an alias so you can run modbot on the character you control and execute ModBot commands.</p> <p>To create the alias you must run this from the EQ prompt:</p> <ul> <li>/alias /mb /echo mb-</li> </ul> <p>Or change the LoadAlias variable in MBCommon.inc [Settings] section from 0 to 1 if you've lost the alias in your Macroquest.ini</p> <p>With this alias you can tell your bot locally what to do:</p> <ul> <li>/mb makecamp</li> <li>/mb buffup</li> <li>/mb letsroll</li> <li>/mb</li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#command-reference","title":"Command Reference","text":"<p>Section Updated: June 7, 2009</p> <ul> <li>abort (Interrupts any cast in progress, Sets - DoHeals, DoDebuffs &amp; DoMelee FALSE and follows the sender</li> </ul> <p>closely, usefull when you want to RUN away)</p> <ul> <li>addbuff \"\\|\\\" ABSpellAlias ABTarType (Adds a new buff entry to the</li> </ul> <p>character's INI file.)</p> <ul> <li> <p>You must restart the ModBot macro after executing the addbuff command in order to complete the adding of the</p> <p>buff entry.</p> </li> <li> <p>The Spellname, etc. section can be entered directly (e.g. */mb addbuff \"Bone Mask of the Ancient Iksar|item\"</p> <p>iksar self_) or, if adding a clicky, by holding the item on your cursor (e.g._ /mb addbuff</p> <p>\"${Cursor.Name}|item\" iksar self*). Please note that the quotes around the spellname|gem section are required.</p> </li> <li> <p>ABTarType will accept multiple targets if quotes are used (e.g. */mb addbuff \"Levitiation|gem1\" levi \"war mnk</p> <p>rog\"*).</p> </li> <li> <p>addbuff execution will add ABGem, ABSpell, ABSpellAlias and ABTarType entries to the characters INI file. The</p> <p>remaining buff lines (ABSpellFociX, ABDurModX, etc.) will be added once you restart the ModBot macro (the array</p> <p>size change (ABCount) will also not increment until after re-start). For example, using these Bonemask example</p> <p>command, the following entires will be added to the INI file (where \"X\" is equal to whatever the next numbered</p> <p>entry is in your advbuff section):</p> </li> </ul> <p>ABGemX=item</p> <p>ABSpellX=Bone Mask of the Ancient Iksar</p> <p>ABSpellAliasX=iksar</p> <p>ABTarTypeX=self</p> <ul> <li>attack (Sets DoMelee TRUE and forces bot to attack the TankName's target)</li> <li>attack (Sets DoMelee TRUE and forces bot to attack the target)</li> </ul> <p>* Note: OffTank must be TRUE to use this option (I may remove this requirement though TBD)</p> <p>* Example 1 - /bc attack badguy</p> <p>* Example 2 = /bc attack badguy 100 20</p> <ul> <li>buffup (This will set DoBuffs &amp; DoEvents TRUE &amp; DoHeals FALSE)</li> <li>campout (Performs a /camp desktop and ends the macro)</li> <li>cast  &lt;on/off&gt; (This will disable or enable the spell associated with this alias)</li> <li>cast [&lt;spawnname/id&gt; \\&lt;%t&gt; ] [&lt;spawnname/id&gt; \\&lt;%t&gt; ] (infinte)</li> <li>If the spell is detrimental, CAST targets the requester's target.</li> <li>If the spell is beneficial, it targets the sender or, if grp is present, it casts buff on group members.</li> <li>If %t is present, it targets the requester's target.</li> <li> <p>The cast command will ignore INI settings for things like minmana, maxmana, recasts, buff debuff counters, etc.</p> <p>This command is mainly used for manual, \"one off\" type casts.</p> </li> </ul> <p><code>Example 1 - /bc cast buffhp grp haste bob haste jane dmgshld bob</code> <code>Example 2 - /bc cast dmgshld bob nuke tash</code> <code>Example 3 - /bc cast slow \"nasty add\"</code></p> <ul> <li>doafk [on, true, off, false, ]</li> <li>dobuffbot [on, true, off, false, ] (Places the bot in \"BuffBot Mode\".</li> </ul> <p>Currently once set to on or true, it will NOT turn off and you MUST restart the macro to \"quit\" this mode. It will</p> <p>cast any spell alias on the requesting target. The requester must be a \"master\". Example: /t buffhp</p> <ul> <li>dobuffs [on, true, off, false, ]</li> <li>docombines (Toggle that turns docombines on/off (default off). Docombines will check for an open tradeskill</li> </ul> <p>window with an enabled combine button (you have to select recipe), and will click the button. Upon a successful</p> <p>combine, Modbot's built in cursor handling takes over. Useful for tank to summon more arrows during fight. An</p> <p>associated event will fire and toggle docombines to FALSE when you run out of recipe components.)</p> <ul> <li>docures [on, true, off, false, ]</li> <li>dodebuffs [on, true, off, false, ]</li> <li>doevents [on, true, off, false, ]</li> <li>doforage [on, true, off, false, ]</li> <li>dofw [on, true, off, false, ]</li> <li>doheals [on, true, off, false, ]</li> <li>dolist (Used to /bc out the existing \"Do\" status)</li> <li>doloot [on, true, off, false, ]</li> <li>domelee [on, true, off, false, ]</li> <li>domount [on, true, off, false, ] (To cast a mount or not, used in conjunction</li> </ul> <p>with MountCast INI entry)</p> <ul> <li>dopet [on, true, off, false, ] (To cast a pet or not, used in conjunction</li> </ul> <p>with PetCast INI entry)</p> <ul> <li>dopull [on, true, off, false, ] (not fully production yet)</li> <li>dopull &lt;on/off/path&gt; (Self explanatory. See the instructions on forums.)</li> <li>doquest [on,true,off,false] (Default is TRUE. If set to FALSE, your looter will ignore items marked \"quest\"</li> </ul> <p>and still loot other items.)</p> <ul> <li> <p>Can be used to add quest items to your loot.ini file. For example, while holding an item on cursor, */mb doquest</p> <p>4 Hair of the Dog* will set the item you're holding to \"=Quest|4|Hair of the Dog|\" in loot.ini.</p> </li> <li> <p>Can also be used in conjunction with the QuestOnly variable (found in the setting section of the loot.ini</p> <p>file). If both doquest and QuestOnly are set to TRUE, your toon will only loot quest items. Also note that if</p> <p>QuestOnly is set to TRUE and doquest is set to FALSE, your toon will only loot cash off of mobs.</p> </li> <li> <p>Please see the modloot section found</p> <p>here for more information on the</p> <p>loot.ini file.</p> </li> <li> <p>dosit [on, true, off, false, ]</p> </li> <li>dosongs [on, true, off, false, ] (used for bards only)</li> <li>dotells [on, true, off, false, ] (Toggles a beep when tells are recieved from</li> </ul> <p>non-netbots toons. Useful for tells in background sessions)</p> <ul> <li>**exclude ** (Adds to alert list, to save list you must use the \"save\" option, otherwise</li> </ul> <p>it will not be written to the INI file)</p> <ul> <li>The exclude list is dynamic and will only exclude mobs that are present in the zone AND that are on the list.</li> <li> <p>If you want to force an exclude you must edit the INI file and place a \"#\" in front of the mobs name (e.g.</p> <p>ExcludeList=a dusty barrel|a dark coffin|#a bitten victim|a hollow tree|, this will always force \"a bitten</p> <p>victim\" to be on the exclude list)</p> </li> <li> <p>Use the following commands from a character to add mobs to the exclude list (Kroak suggested just tossing this</p> <p>in a two-line hotkey):</p> <ul> <li>/bcaa //mb exclude ${Target.CleanName} Will write the exclusion to a string that is checked through the</li> </ul> <p>debuff loop</p> <ul> <li>/bcaa //mb exclude save Will write the exclusion in the mbcommon.ini and that exclusion includes the zone</li> </ul> <p>id, so mobs of the same name in a different zone are NOT excluded. You shouldn't have to re-run the macro</p> <p>after an exclude but if you do this in the midst of comabat or something, while mobs are near, it may not</p> <p>\"take\" as quickly.</p> </li> <li> <p>For mob names with spaces in them, simply enter the name without any quotations. For example:</p> <ul> <li>''/bcaa //mb exclude a small bat</li> </ul> </li> <li> <p>See the Include command (found below) to temporarily remove a mob from the alert list</p> </li> <li> <p>follow (Follows the sender or )</p> </li> <li>follow close (Follows the sender within 3 steps, very close)</li> <li>give (Calls the sub GiveCheck to hand an item to a toon or NPC.)</li> <li>ItemCount is optional and will default to 1.</li> <li> <p>The give command can be used in conjunction with categories that have been defined in the loot.ini. For</p> <p>instance, if you have items marked 'SpellScroll' in your loot.ini, and the Category variable has \"SpellScroll\"</p> <p>included, you can issue the give command as follows: /mb give Bob SpellScroll TRUE. The result will be that</p> <p>all items on your toon that are marked with that category (SpellScroll) in your loot.ini will be handed to Bob.) * goto   (Bot will move to the loc given) * handin (Target an NPC or PC, get one item on your cursor, and all of that item will be handed to them and trade</p> </li> </ul> <p>or give button pressed.)</p> <ul> <li>holdup (This will set DoBuffs,DoDebuffs,DoEvents,DoMelee all to FALSE)</li> <li>include  (Removes  from alert list, this will not save to the INI file, see exclude save)</li> <li>letsroll (This will set DoBuffs,DoHeals,DoMelee,DoEvents,DoDebuffs TRUE)</li> <li>makecamp (This will Makecamp at existing location. Use /makecamp off or /mb stop to toggle makecamp</li> </ul> <p>functionality off)</p> <ul> <li>mana (Used to /bc out the existing Mana % of the bot)</li> <li>mbpause or mbp [on, true, off, false, ] (Used to pause or unpause the</li> </ul> <p>macro)</p> <ul> <li>mbwayplay (Used to playback previously recorded paths / waypoints, through zones, doors, chaining</li> </ul> <p>paths, etc.)</p> <ul> <li>mbwayrec (Used to record a path / waypoint.)</li> <li>Once started, ducking for each location will add a waypoint to the path.</li> <li>Sitting stops path recording and returns to modbot functions.</li> <li>To add doors, chains, pull locations, etc. you'll need to edit the MBWayPlay.INI file</li> <li> <p>Further information about mbwayplay and mbwayrec (along with examples) can be found</p> <p>here in the wiki. * offtank &lt;on/off&gt; (Toggles offtanking for dealing with adds.) * script (This will allow you to run custom commands while the macro is running, or</p> </li> </ul> <p>combine series of commands, see script examples in manual / rev notes)</p> <ul> <li>sell (You must be within range of a merchant in order to function, it will sell loot marked as</li> </ul> <p>\"=SELL\" in the loot.ini file)</p> <ul> <li>sell (With NPC targeted will attempt to sell all items marked \"sell\" in your lootIni file to</li> </ul> <p>target. Otherwise optional target name can be supplied.)</p> <ul> <li>setinivar (This will find and change any setting in your .ini)</li> <li> <p>Note that this command will have trouble with script settings if you have more than one (it will set the first</p> <p>C1= or whatever that it comes to.</p> </li> <li> <p>Variables changed in the .ini are /varset with the macro running</p> </li> <li> <p>Spells, gems, etc. will not be set unless you use the array correctly for . In other words,</p> <p>ADGem[1] is not the same as ADGem1:</p> <ul> <li>Use ADGem[1] and this will set the ADGem1 .ini setting and varset the change to memory.</li> <li>Use ADGem1 and it will only change the .ini.</li> </ul> </li> <li> <p>This still has a problem finding variables in very long sections. If /echo \\({Ini\\[\\),</p> <p>]} is over the MAX_STRING value - (You go LD typing that if it is). - Stuff like ABGem[20] is almost never found. (Still working on that.)</p> </li> </ul> <p>For example, Ligament Slice for a rogue was set up from in-game with these commands typed in to the MQ window (and the rogue was able to put it immediately to use):</p> <p>/mb setinivar ADCount 4</p> <p>(restart macro - had 0 count before)</p> <p>/mb setinivar ADGem[1] alt</p> <p>/mb setinivar ADSpell[1] Ligament Slice</p> <p>/mb setinivar ADTarBegHP[1] 40</p> <p>/mb setinivar ADTarCnt[1] 1</p> <p>/mb setinivar ADTarType[1] 1</p> <p>/mb setinivar ADAnnounce[1] /bc</p> <p>/mb setinivar ADSpellAlias[1] snare</p> <ul> <li>sing (Will sing this song and add the respective gem number to the Twist.List, it attempts to use</li> </ul> <p>detrimental as the qualifier to add it to combat songs, or rest songs)</p> <ul> <li>stop (Will stop following and/or stop in place)</li> <li>sung (Will remove this song from the respective Twist.List, it attempts to use detrimental as the</li> </ul> <p>qualifier to remove it from combat songs, or rest songs)</p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#modbot-in-game-usage-and-commands","title":"ModBot in game usage and commands","text":"<p><code>Example commands:</code> <code>/bc Bob follow me [This tells bob and only bob to follow me]</code> <code>/bc cast dd [this tells every bot to cast the spell alias dd]</code> <code>/bc shamandude cast buffsta grp buffhp focus grp buffhp %T [buffsta on the group, buffhp on the requester, focus on the group, buffhp on requesters target]</code> <code>/bc necroguy makecamp [this tells \"necroguy\" to makecamp]</code> <code>/bc campout [tells all bots to camp to desktop]</code> <code>/bc exclude ${Target.CleanName} [tells all bots to add your target to the exclude / ignore list, toons will not attack any spawn with that name.]</code> <code>/bc clericname dobuffs on [tells the cleric to set DoBuffs to true and will then begin buffing group]</code> <code>/bc pallyguy cast bmb %t buffhp grp [bmb on requesters target, buffhp on the group]</code></p> <p><code>Typical commands sequence for an EXP group:</code> <code>/bc letsroll</code> <code>/bc makecamp</code> <code>You then begin to pull mobs and they will react accordingly.</code></p> <p><code>Mobile Camp Example:</code> <code>/bc follow</code> <code>/bc buffup</code> <code>[once ready zone into the instance]</code> <code>/bc stop</code> <code>/bc letsroll</code> <code>[clear first room lets say]</code> <code>/bc follow</code> <code>[move to next room]</code> <code>/bc makecamp</code> <code>[etc, repeat]</code></p> <p><code>Example movement options with or without invis</code> <code>/bc mbp on</code> <code>/bc follow</code></p> <p><code>Make a EQBC Channel and do things like (using this technique you don't even have to be a master)</code> <code>/bct mycoolchannelname //mb letsroll</code> <code>/bct mycoolchannelname //mb campout</code></p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#modbot-ini-settings","title":"ModBot INI Settings","text":"","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#preface-notes","title":"PreFace Notes","text":"<ul> <li>Spell Alias's must be unique across all alias's</li> </ul> <p>Obsolete? 06272011 -Changed - ?</p> <p><code>\"cast\" command usage now allows for multiple aliases. If you have several spells with the same alias, using /bc castwill now cast all spells marked.</code> <code>Example, for shaman you can have Fo7, Talisman of Boar, Talisman of Wrulan, Talisman of Tribunal, ect.. all marked with \"fullgroup\". \"/mb cast fullgroup\" will</code> <code>cast each spell in the order they are found in the .ini file.</code> <code>`Buffing -</code>Group buffs can now be seperated to different classes, and will allow keeping the spell on netbots members in seperate groups from the caster with the inclusion of keyword<code>`\"raid\". Example -`````  Code: ``````[AB2]</code> <code>ABGem=8</code> <code>ABSpell=Focus of the Seventh</code> <code>ABSpellFoci=</code> <code>ABDurMod=50</code> <code>ABSpellAlias=fo7|grpfocus|fullgroup</code> <code>ABAnnounce=</code> <code>ABSpellMinMana=20</code> <code>ABTarCnt=2</code> <code>ABTarType=war shd pal rng mnk rog brd bst ber shm dru wiz mag enc nec raid</code> <code>ABRecast=FALSE</code> <code>ABSpellIcon=</code> <code>ABPreCondition=TRUE</code> <code>Note from the above example that clr is not included in the TarType.. My clerics have the spell blocked. Attempting to cast on them will cause a chain loop of``````casting until the cleric gets self buff on that doesn't \"stack\" with focus. - so watch spell stacking and make sure to set your toons accordingly.``````````` Old format of \"self\" will also work with no change if you don't want to buff other groups with the spell.</code> <code>Commands -</code> <code>Tell commands will now check buff aliases, and don't need \"cast\" to ask for buffs.. \"/tellfullgroup\" from a non-master toon will make the shaman cast</code> <code>every spell with that alias on the sender of the tell. Masters still require use of \"cast\". - This does allow guildies or whoever else knows your aliases to get</code> <code>buffs easily.</code> <code>/say is not affected and is still not enabled for modbot.</code> <code>`` Added \"docommand\" -</code>Master toons that aren't in netbots can now directly command toons. \"/telldocommand /sit\" will make the receiving toon sit, or execute any command after<code>`````</code>the \"docommand\" keyword. - Word of caution - You can cause macro errors with this if you aren't careful. The command sent is executed directly with /docommand in the macro.<code></code>A tell received of \"/telldocommand /sit\" will locally execute \"/docommand /sit\" Watch extra characters and or brackets.. - Because of the nature of this one,<code></code>the commanding toon MUST be listed in MasterList.`</p> <ul> <li>You should be familiar or at least capable of making MQ2Bandolier sets as they are used by MQ2Cast for \"foci\"</li> </ul> <p>items</p> <ul> <li>Please treat the Buff, Debuff, Event, Heal INI sections as a first in first out (FIFO). Highest priority to lowest</li> </ul> <p>priority, you don't want mez or slow as AD12 but as AD1. You don't want AH1 as Complete Heal, you want AH1 to be</p> <p>DA/DB (those are examples, use common sense)</p> <ul> <li>If you want to add some visual zip to your announcements (things are easy to miss in /bc..), you can use color</li> </ul> <p>coding and the like in any of your Announce settings. For example, *Announce=/bc [+r+]Group Mez \\&lt;\\&lt;[+y+]</p> <p>%t [+x+]&gt;&gt; with %s [+x+]* will produce a line in the MQ chat window that is MUCH easier to see than the</p> <p>regular fonts.</p> <ul> <li>Rk. XX Usage - Heals, buffs, debuffs, and cures have code added to check your book and find the correct version of</li> </ul> <p>the spell you're using on startup of modbot. Rk. II and Rk. III are not needed, but only for these sections. If you</p> <p>upgrade a normal spell in these sections to Rk. II or III, restarting the macro will make the new spell work. Please</p> <p>note that this does not apply to discs, potionbelt, abilities, or PetCast at this time (meaning you must include the</p> <p>Rk. XX in the spell name for these types).</p> <ul> <li>Setting spell duration modifications (AHDurMod, ADDurMod, ABDurMod, AEDurMod) - Use the following formula to</li> </ul> <p>determine what number to set your DurMod at:</p> <p>\\({Spell[X\\].Duration} \\* (\\)) == timer duration.}+${Spell[X].Duration</p> <p>So if you want a 25% extension on the timer, set durmod to 25 to make ${Spell[X].Duration} * 1.25 = timer. Modbot shouldn't re-cast if timer is still running.</p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#references","title":"References","text":"<ul> <li>tnt = TankName Target</li> <li>grp = group</li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#settings-section-settings","title":"Settings Section [Settings]","text":"<ul> <li>DoMelee=TRUE|FALSE</li> <li>DoHeals=TRUE|FALSE</li> <li>DoBuffs=TRUE|FALSE</li> <li>DoDebuffs=TRUE|FALSE</li> <li>DoEvents=TRUE|FALSE</li> <li>DoCures=TRUE|FALSE</li> <li>DoPull=TRUE|FALSE</li> <li>DoPet=TRUE|FALSE</li> <li> <p>Must have a buff entry for creating a pet (in the AdvBuff section - see note for ABTarType). Also see note for</p> <p>Cleric pets under PetCast below. * DoSit=TRUE|FALSE * DoLoot=TRUE|FALSE * DoFW=TRUE|FALSE   * Should I cast spells for food and water. (see FoodSpell and DrinkSpell entries) * DoForage=TRUE|FALSE * ForageIni=name of ini file for forage   * Defaults to forage.ini. Please see the Related include files page for more information on the Forage.ini file. * DoAfk=TRUE|FALSE * DoMount=TRUE|FALSE   * If set to TRUE, you must complete the MountCast entry below. * MountCast=Spell/Item name/AA name|gem #,item,alt   * Use MQ2Cast syntax without quotes. Examples: * MountCast=Collapsable Roboboar|item * MasterList=PC Name,PC Name   * Comma delimited list of names. Can also use ${NetBots.Client} to designate that any chars using NetBots can</p> <p>act as master. Examples:</p> <ul> <li>MasterList=Bigbob,Sooper</li> <li>MasterList=${NetBots.Client}</li> <li>TankName=PC Name,PC Name</li> <li>Comma delimited list of names. This variable will also be set when you designate a character using either the</li> </ul> <p>Main Tank or Main Assist group roles.</p> </li> <li> <p>Can also use ${Group.MainTank.Name} to auto set this to whomever is set in the group main tank role. Examples:</p> <ul> <li>TankName=Billytank,Larrytank</li> <li>TankName=${Group.MainTank.Name}</li> </ul> </li> <li>Radius=#</li> <li> <p>Radius that I will monitor for NPCs. If you are having issues with your characters not casting buffs, etc. while</p> <p>not in combat, try adjusting the Radius setting down a bit to make certain that they are not pickng non-aggro</p> <p>mobs in the surrounding area. Example:</p> <ul> <li>Radius=100</li> <li>ExcludeList=npcname|npcname|</li> <li>Pipe delimited names to exclude. Please note that you must have a Pipe \"|\" at the end. Example:</li> <li>ExcludeList=a hollow tree|a broken barrel|</li> <li>SitAggroRadiusCheck=#</li> <li>Radius to check for aggro to see if I can sit. Default is 75.</li> <li>AfkMessage=afk message</li> <li>Enter a custom AFK message if desired (leave blank for no AFK message).</li> <li>Default is \"Not now, thanks\".</li> <li>DeathSlot=TRUE|FALSE</li> <li>Will only be true if your bot needs to camp to desktop to save res timer. This way the macro will know if you</li> </ul> <p>died and had to camp out. * NetworkIni=Path and filename of ini file   * Option for a network based INI file for scripts and path playback (mbwayplay and mbwaypnt.ini file).   * File must be prefixed by \"Network-\" or \"Net-\"   * Example: NetworkINI=X:\\shared\\modbot\\mb_network.ini * TraderName=toon name|bazaar trader   * For use with the Campout command. Example: * /bc campout trader will log in whatever toon you have set in the TraderName variable.   * Second argument (|bazaar trader) will log in the toon and run the bazaar macro with the trader option (or any</p> <p>other mac+options you want there.) * FollowDistance=#   * Designates how far you will stay from followee.   * Default 20. * FollowStick=MQMoveUtils Options   * If using MQ2MoveUtils, enter the options that you would like to use. Default 20 hold uw. Example: * FollowStick=20 hold uw * PetAggro=TRUE|FALSE   * TRUE - pet taunt on   * FALSE - pet taunt off * PetAssist=[1]   * Assist and pet attack or not * PetFoci=[-bandolier|petfoci]   * Any spell foci you want to swap in for this spell using MQ2Cast syntax, you must have previously created the set</p> <p>via the MQ2Bandolier plugin /createset command. * PetShrinkSpell=pet shrink spell name|gem#   * Spell to be used to shrink your pet. Leave blank if you don't want your pet shrunk. Example: * PetShrinkSpell=Tiny Companion|gem9 * GoMNuke/GoRMNuke/GoERMNuke/GoDERMNuke=[]   * GoMNuke, GoRMNuke, GoERMNuke and GoDERMnuke will only appear if the toon has the AA available upon startup.</p> <p>These settings only require the * ALIAS * of the debuff you want to be \"cast\" on the MA's target when the</p> <p>event fires. No script required. * **SummonFood=spell name,item name,alt</p> </li> </ul> <p>name|gem#,item,alt&lt;/span&gt;**</p> <ul> <li> <p>These entries appear when DoFW is set to TRUE. Use MQ2Cast syntax for spell entry. Example:</p> <ul> <li>SummonFood=Summon Food|gem12</li> </ul> </li> <li> <p>**SummonDrink=spell name,item name,alt</p> </li> </ul> <p>name|gem#,item,alt&lt;/span&gt;**</p> <ul> <li>MQ2Cast syntax. Example:<ul> <li>SummonDrink=Summon Drink|gem8</li> </ul> </li> </ul> <p>Deprecated Entries</p> <ul> <li>DoAura=[TRUE,FALSE] (Must have a completed AuraCast entry below) DEPRICATED!! Set up aura as a buff with</li> </ul> <p>'self aura' as the ABTarType.</p> <ul> <li>AuraCast=[\\|\\,item,alt&gt;] (Example: Uber Aura|gem3) - DEPRICATED! Set up aura</li> </ul> <p>as a buff with 'self aura' as ABTarType. Use MQ2Cast syntax without quotes.</p> <ul> <li>PetCast=|gem\\&lt;#&gt;|(for Suspended Minion II)] (PLEASE NOTE: As of 3.499 beta, PetCast is</li> </ul> <p>no longer needed. You can now add pet to \"AB\" section by setting ABTarTypeX=petspell (or petcast). Pets won't be</p> <p>cast unless DoBuffs and DoPet are true. Also shouldn't cast if in combat unless \"cbt\" is included in ABTarType. When</p> <p>used with modbuff, Persistent Minion is also used automatically if you have it, and no extra entry needed. Original</p> <p>entry: Spell to cast to create / recall pet. Example: PetCast=Animate Dead|gem8|smii (Mainly MQ2Cast syntax</p> <p>without quotes))</p> <ul> <li> <p>Can also use for charming:</p> <ul> <li>[charm \\&lt;NPC type 0=any 1=undead,vampyre 2=animal 3=summoned 4=(specify name</li> </ul> <p>type)&gt; ]</p> <ul> <li>Example: PetCast=charm 4 4 \"lowland basilisk,a emerald drake\"</li> <li>For Cleric Hammer type pets that you only want to cast / have while in combat, you MUST have DoPet set to False</li> </ul> <p>AND have PetCast=|\\,item,alt&gt;)</p> </li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#advmelee-melee","title":"AdvMelee [Melee]","text":"<ul> <li>OffTank=TRUE|FALSE</li> <li>False - attack the MA target only</li> <li>True - assist MA and then not change targets</li> <li>ACLeash=#</li> <li> <p>The farthest the bot will move from where he is to engage a mob. However if \"TankName\" stays within 20 steps,</p> <p>the bot will exceed this leash. * ACAssistPct=#   * Assist when target HP is this or less. Melee characters will engage at this point and caster pets will be sent</p> <p>in. * ACManaPct=#   * Stop assisting when Mana drops below this. * Set to 0 for melee only * Set to 101 for non-melee casters * ACAnnounce=channel   * Channel to announce in, or leave blank for no announce. Example: * ACAnnounce=/bc Will announce in MQ/EQBC window * ACAnnounce=/g Will announce in group chat * ACMeleeCmd=command   * Use to set MQ2Melee commands. Example: * ACMeleeCmd=/melee plugin=1 * ACBefore=script   * Special script code to execute before you engage. Example: * *ACBefore=/if ({ACMATarget} &amp;&amp; {Spawn[{ACMATarget}].Type.Equal[NPC]} &amp;&amp;</p> <p>{Spawn[{ACMATarget}].Distance3D}\\&lt;={ACLeash} &amp;&amp; {Me.CombatAbilityReady[Sneak Attack]} &amp;&amp; {Me.Invis} &amp;&amp;</p> <p>{Me.Sneaking} &amp;&amp; {Me.PctEndurance}&gt;40 &amp;&amp; !{Me.Moving}) /call mbscript SneakAttack*</p> <ul> <li>ACBefore=/if (!{Me.Pet.ID}) /casting ''{PetCast}'' \\&lt;-- cleric pet hammer example</li> <li>ACAfter=script</li> <li>Special script code to execute after you leave combat. Uses same script format as ACBefore.</li> </ul> </li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#advheal-section-advheal","title":"AdvHeal Section [AdvHeal]","text":"<p>Please note that for FD class toons and ${Group.Puller} - If they are out of ACLeash range and not FD, they will not be healed (to prevent aggro on group), but only if healer is not in 'combat' combatstate. If not in combat they will be healed.</p> <p>For group heal spells, you must set the TarCnt to something greater than 1 in order for the spell to evaluate correctly (and be used as a \"group\" heal when more than one member of the group requires healing). For instance, if you have TarCnt=3, then at least 3 members of your group will need to be below the HP level that you set in the Class line. A possible issue may arise when the cleric is in a loop state where a single heal is being fired \\(AHHealMode\\) - it may take a bit for it to realize the single heal should be stopped and the group heal cast instead. Depending on how you have it configured, the use of AHHealMode can force it to not even check the your group heal spell as it's being told to only check one \\(the single heal\\). If this is the case (and not the desired result), perhaps use the group heal as the spell to check in AHHealMode.</p> <ul> <li>AHCount=#</li> <li>Number of heals you plan to have.</li> <li>AHNewFormat=#</li> <li>Set to '1' for ModBot v4 INI format</li> <li>Set to '0' for ModBot v3.49 INI format</li> <li>AHCheckTime=#</li> <li>How often to check for heals in seconds.</li> <li>AHHealOOBC=TRUE|FALSE</li> <li>Do I heal characters outside of Netbots and EQBC (e.g. folks not running MQ2 or mercenaries.)</li> </ul> <p><code>AHHealOOBC</code> <code>Thinking of an english name for that setting, all that comes up is \"Heal Outside Of BC\".</code> <code>So, in other words, if the setting is FALSE, it won't heal anyone that's not on YOUR EQBC server with the netbots plugin set up correctly, even if they're in your group.</code> <code>That is why I recommend you connect all toons and run modbot on all of them at least once, even if you don't plan to run it as a regular thing for the other toons.. It assures the plugins are set correctly.</code> <code>If AHHealOOBC=TRUE, then modbot will heal group members and pets even if there's no netbots connection.</code> <code>Out of group healing can only be done by the macro if there's a netbots connection, or if the other toon is a master and uses the cast command via /tell.</code> <code>I do recommend AHHealOOBC=TRUE setting, but I still left the default FALSE so people could check their connections before setting TRUE.</code></p> <ul> <li>AHHealMode=#|#|#</li> <li>0 or 1 (off or on)|Heal #|Timer</li> <li> <p>This will keep the toon in the heal loop after casting  to check for additional heals for the duration</p> <p>of . * AHInterruptLevel=#   * Lowest interruptable spell. For example, AHHealSpell1 will never interrupt if this is set to 2. * AHClassPriority=class names   * Set class healing priority (e.g. if you're currently healing a chanter, you won't interrupt for a monk). * Allowed entires are: enc,wiz,mag,nec,clr,dru,shm,pal,shd,war,bst,rng,ber,rog,brd,mnk (or any combination</p> <p>thereof) * AHAllowDismount=TRUE|FALSE   * Designate whether your toon should dismount (or not) to interrupt a spell to cast a heal   * TRUE - allow toon to dismount if necessary to interrupt a spell cast in order to fire off a heal.   * FALSE - your toon will never dismount to interrupt a spell. * [AHx]   * Where 'x' is the number of healing spell * Gem=source   * Designate what the source of the spell is.   * Valid entries: gem number, alt, ability, item, script, potionbelt   * Note that 'potionbelt' does not require a slot number.   * Examples: * Gem=3 Cast this spell from gem 3 * Gem=alt This spell is an alternative advancement ability * Spell=source name   * Valid entries: spell name, item name, alternate ability name, ability name, script name   * Examples: * Spell=Superior Healing This would be generally be paired with an Gem entry indicating which spell gem to</p> <p>cast Superior Healing from.</p> <ul> <li>Spell=Healing Thingy of Uberness This would be generally be paired with an Gem entry indicating that the</li> </ul> <p>source of this spell is an item. * SpellFoci=setname   * Bandolier set name to swap in before casting this heal.   * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * DurMod=##   * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%).   * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100%</p> <p>(e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the</p> <p>correct extension. * SpellMinMana=#   * Minimum mana percentage to have in order to attempt this heal (e.g. 05 \\(for 5%\\), 25 (for 25%) * SpellAlias=spell alias   * Alias name for the heal.   * Please note that you can NOT have spaces in your alias names. * Announce=channel   * Channel to announce in, or leave blank for no announce. See Announce description in the AdvMelee section for</p> <p>further explanation. * TarCnt=#   * Designate how many targets are required to cast this spell. * Class=class name(s)   * Valid entries: pc pet group hp0 war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec mypet self (or</p> <p>some combination there of). Please also note the following combination restrictions:</p> <ul> <li>pc \\&lt;-- will include pc's and mercs. Leave pet out to ONLY heal PC's and mercs.</li> <li>pet \\&lt;-- will include pets. Leave pc option out for pet only heals.</li> <li>group \\&lt;-- will exclude everyone that is not in your group</li> <li>hp0 \\&lt;-- set an overall health percentage for any named classes</li> <li>classnames (war, shd, etc.) \\&lt;-- used to declare which classes this heal should apply to. Can also be</li> </ul> <p>combined with a health persentage (e.g. bst50).</p> <ul> <li>mypet to be used by itself (e.g. set up a seperate heal for your pet)</li> <li>self \\&lt;-- Only use self if the heal spell is SELF ONLY, or only to be cast on yourself. This setting is</li> </ul> <p>exclusive and other targets will not be checked for that spell. * PreCondition=TRUE|FALSE|PR   * Defaults to TRUE   * PR (only to be used with NetBots) If PreCondition=PR, then for that particular heal there will be a check on</p> <p>target (over NetBots) for any PR type spell. If target has a PR buff on, then the heal will be skipped. Please</p> <p>note that the PR setting does not currently account for the duration remaining of the PR buff. PreCondition=PR</p> <p>will check for these spell ID's:</p> <ul> <li>9755 (Promised Renewal)</li> <li>9756 (Promised Renewal Rk. II)</li> <li>9757 (Promised Renewal Rk. III)</li> <li>18270 (Promised Recuperation)</li> <li>18271 (Promised Recuperation Rk. II)</li> <li>18272 Promised Recuperation Rk. III)</li> </ul> </li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#advdebuff-section-advdebuff","title":"AdvDebuff Section [AdvDebuff]","text":"<ul> <li>ADCount=#</li> <li>Number of debuffs you plan to have.</li> <li>ADNewFormat=x</li> <li>Set 'x' to 1 for ModBot v4 style</li> <li>Set 'x' to 0 for MobBot v3.49 style</li> <li>ADMobMax=#</li> <li> <p>This is the array size where the valid mob ID's are stored after found. The loop to find valid mobs uses</p> <p>SpawnCount, then stores the mobs it \"finds\" in the array. Setting this to 20 or 30 should be way more than</p> <p>enough ever. It is best to keep this setting (and therefor the array) relative small for memory purposes (as</p> <p>well as for speed through the debuff loop).</p> </li> <li> <p>If your toons are ignoring NPCs, this number may be set too low. First thing to check!!</p> </li> <li>ADCheckTime=#</li> <li>How often to check for debuffs in seconds.</li> <li> <p>\"It's the forced delay or timer between allowing that section of the macro to execute again.. Set higher for</p> <p>toons you want to have more emphasis somewhere else.. Like a cleric can be 8 for debuffs and 0 for heals, but a</p> <p>shammy you'd want 0 for debuffs. 0 = no forced delay. Speed still varies depending on the size of the loops or</p> <p>how many heals, debuffs, ect are in each section.\" - toomanynames * ADAggroOnly=1|0   * 1 - only add mobs to the mob list if someone in your group or in netbots is the mob's target. Only use this</p> <p>option on bots that cast on targets that are NOT the main assist's target (e.g. chanter mezzing adds).</p> </li> <li> <p>Please note: ADAggroOnly is not terribly reliable at times. If you are having issues with one of your bots</p> <p>auto-aggroing mobs (when they are not the tank), try setting ADAggroOnly=0 and then ADTarType=1 or 11. * ADHold=0|1|1|   * 1=on 0=off|Debuff spell #|Time to wait for debuff|   * This is used much like the AHHealMode setting, but only for type 12 debuffs. Sets a timer to hold the toon in</p> <p>the debuff loop (no buffs or events) until the debuff is complete. * [ADx]   * Where 'x' is the number of Debuff spell * Gem[x]=source   * Designate what the source of the spell is.   * Valid entries: gem number, alt, ability, item, script, potionbelt   * Note that 'potionbelt' does not require a slot number.   * Examples: * Gem=3 Cast this spell from gem 3 * Gem=alt This spell is an alternative advancement ability * Spell=source name   * Valid entries: spell name, item name, alternate ability name, ability name, script name   * Examples: * Spell=Ensnare This would be generally be paired with an Gem entry indicating which spell gem to cast</p> <p>Ensnare from.</p> <ul> <li>Spell=Bangy Thingy of Uberness This would be generally be paired with an Gem entry indicating that the</li> </ul> <p>source of this spell is an item. * SpellFoci=setname   * Bandolier set name to swap in before casting this spell. Please see MQ2Bandolier and MQ2Cast to understand how</p> <p>to use swap sets. * DurMod=##   * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%).   * Due to how spell durations / extensions are calculated, you may need to enter extensions in excess of 100% (e.g.</p> <p>a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct</p> <p>extension. * SpellAlias=spell alias   * Alias name for the spell. Please note that you can NOT have spaces in your alias names. * Announce=channel   * Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for</p> <p>further explanation. * SpellMinMana=#   * Minimum mana percentage to have in order to attempt this spell (e.g. 05 \\(for 5%\\), 25 \\(for 25%) * **SpellRecast=\\#**   * Number of times to recast this spell for fizzles, interrupts, etc. * **SpellCastonResist=spell alias**   * Should this spell be resisted, is there another alias to cast before another attempt of this spell.   * Please note that if SpellCastonResist is defined, ADSpellRecast must be at least 1. * **SpellDelay=\\#**   * Number of seconds to wait between casts of this spell. * **TarCnt=\\#**   * Number of targets required to be present to cast this spell. If set to 0, this spell will not be auto-casted\\) * TarType=#   * Designate one target type to cast this debuff on.   * Valid target types: * 0 = All mobs * 1 = MA Target only * 2 = All except MA Target * 3 = Only on named mob * 10 = All mobs before next spell * 11 = MA target only before next spell * 12 = All but MA target before next spell * 13 = Only on named mob before next spell   * Priority Debuffs (10, 11, 12, 13) should be placed first most (prior to non-priorities). Meaning - settings of</p> <p>10, 11, 12 and 13 need to be in top spells slots (AD1, AD2, etc) * TarBegHP=#   * The target must be equal or below this HP%. * TarEndHP=#   * The target must be equal or above this HP% * IfSpellImmune=script name   * This is meant to be a pointer to a quick, one line script that is executed when a mob is immune to the spell you</p> <p>have cast. If you need to do something complicated, other scripts can be called from it. 'Param1' is now passed</p> <p>as the immune target's ID. An example where this would be useful is for chanter mez:</p> <ul> <li>/bc {TankName} //multiline ; /varset ACMATarget {Param1};/target id {Param1} will make your</li> </ul> <p>toon target the immune mob even if he was on another mob at the time. * UseHoTT=#   * This will cause the macro to /target the mob and check TargetOfTarget before casting and delay # seconds before</p> <p>checking again if mob is skipped. If not a raid or group member, the macro will move on and recheck that mob for</p> <p>that debuff after the time has expired. Note that this will default to casting the debuff anyways if HoTT isn't</p> <p>available. * PreCondition=one line script   * Whatever statement you add to this line needs to /return TRUE. i.e. - PreCondition=/if ({This} &amp;&amp; {That})</p> <p>/return TRUE. Only a TRUE return will allow the spell to cast, so script carefully, or leave the lines default.</p> </li> </ul> <p>Code:</p> <p><code>[AD1]</code> <code>Gem=2</code> <code>Spell=Turgur's Insects</code> <code>SpellFoci=</code> <code>DurMod=0</code> <code>SpellAlias=slow</code> <code>Announce=/bc Slowed &lt;&lt;[+y+] %t [+x+]&gt;&gt; with[+g+] %s [+x+]</code> <code>SpellMinMana=10</code> <code>SpellRecast=2</code> <code>SpellCastonResist=malos</code> <code>SpellDelay=0</code> <code>TarCnt=1</code> <code>TarType=11</code> <code>TarBegHP=200</code> <code>TarEndHP=15</code> <code>IfSpellImmune=</code> <code>UseHoTT=0</code> <code>PreCondition=TRUE</code></p> <p>\"Notice the TarBegHP setting. I have the same spell set with TarType=12 directly after this one to make sure he slows adds. (sometimes he pulls em too..) Everything else - mainly ACAssistPct is set to a lower value. Most around 95 or so. Buffs are a pita because if the debuff sub is called \\(it is called first\\) it won't cast the debuffs if there's any reason not to, then the macro runs through the whole buff loop before getting back to debuffs again.. Setting the TarBegHP at least over the level of all other functions at least attempts to keep the slow first. Also.. I find the macro works best if you always set your ACManaPct very low. Usually keep mine around 5 or so for every toon. I should change the default on that, but clearing targets and such is something your toon will do quite often if his mana is under that value.\" - Ptarp on the forums on Wed Mar 09, 2011 7:54 pm. (edited into Wiki by Arblis)</p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#advbuff-section-advbuff","title":"AdvBuff Section [AdvBuff]","text":"<p>If you want to cast single target buffs after group buffs, place all of your group buffs first.</p> <ul> <li>ABCount=#</li> <li>Number of buffs you plan to have.</li> <li>ABNewFormat=x</li> <li>Set 'x' to 1 for ModBot v4 style</li> <li>Set 'x' to 0 for MobBot v3.49 style</li> <li>ABMobMax=#</li> <li>Max number of targets to track for buffs (do not include pets)</li> <li>ABCheckTime=#</li> <li>How often to check for buffs in seconds</li> <li>[ABx]</li> <li>Where 'x' is the number of buff spell</li> <li>Gem=source</li> <li>Designate what the source of the spell is.</li> <li>Valid entries: gem number, alt, ability, item, script, potionbelt</li> <li>Note that 'potionbelt' does not require a slot number.</li> <li>Examples:<ul> <li>Gem=3 Cast this spell from gem 3</li> <li>Gem=alt This spell is an alternative advancement ability</li> </ul> </li> <li>Spell=source name</li> <li>Valid entries: spell name, item name, alternate ability name, ability name, script name</li> <li> <p>Examples:</p> <ul> <li>Spell=Minor Shielding This would be generally be paired with an Gem entry indicating which spell gem to</li> </ul> <p>cast Minor Shielding from.</p> <ul> <li>Spell=Uber Wand Thingy of Uberness This would be generally be paired with an Gem entry indicating that the</li> </ul> <p>source of this spell is an item. * SpellFoci=setname   * Bandolier set name to swap in before casting this spell.   * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * DurMod=##   * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%).   * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100%</p> <p>(e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the</p> <p>correct extension. * SpellAlias=spell alias   * Enter an \"alias\" for the spell. This is often a short, easier to use name (e.g. the alias for Spirit of the Wolf</p> <p>might be SoW).</p> </li> <li> <p>Please note that you can NOT have spaces in your alias names.</p> </li> <li>Announce=channel</li> <li> <p>Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for</p> <p>further explanation.</p> </li> <li> <p>Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example:</p> <ul> <li>Announce=/bc [+r+]Buffed \\&lt;\\&lt; %t &gt;&gt; with %s [+x+]</li> </ul> </li> <li>SpellMinMana=#</li> <li>Minimum mana percentage to have in order to attempt this spell (e.g. 05 \\(for 5%\\), 25 (for 25%)</li> <li>TarCnt=#</li> <li> <p>Designate how many targets are required to cast this spell.</p> <ul> <li>If set to 0, this spell will not be auto-casted. This is useful for spells that you want to call via alias</li> </ul> <p>to be cast manually.</p> <ul> <li>For single cast spells (e.g. Spirit of Eagle), TarCnt will most often be set to 1.</li> <li>For group spells (e.g. Flight of Eagles), you might set your TarCnt higher so that it only gets cast when</li> </ul> <p>there are more than 2 or 3 people in your group. * TarType=target type   * Valid target types are as follows (please note which entries can be used with others and which are exclusive): * ShortClassName Used for class specific buffs (ie. haste on \"war\"). Valid entries are: war shd pal rng mnk</p> <p>rog brd bst ber shm clr dru wiz mag enc nec. Note that any or all of these entries can be used at the same</p> <p>time.</p> <ul> <li>self Used for self only spells.</li> <li>grp for Group spells (e.g. TarType=self grp)</li> <li>pet used to cast buffs on all pets in the group.</li> <li>mypet used to cast on only your pet. Please note that pet and mypet are mutually exclusive.</li> <li>cbt for spells to be casted during combat (e.g. an entry for Yaulp would be TarType=self cbt). Please note</li> </ul> <p>that any NPC within radius that is not on your exclude list will cause 'cbt' buffs to fire. If you want to</p> <p>buff next to NPCs (and don't plan to kill them), use the exclude command. If you later decide to kill</p> <p>whatever mob you've excluded, use the include command to remove it from list. The macro does not check</p> <p>combat state of the tank for buffs.</p> <ul> <li>idle used with cbt for spells to be casted when in or out of combat (e.g. if you wanted to keep Yaulp on</li> </ul> <p>at all times (in AND out of combat), your entry would be TarType=self cbt idle). Please note that idle is</p> <p>only used in TarType when cbt is also used.</p> <ul> <li>aura used to cast an aura - must be used with self (e.g. TarType=self aura)</li> <li> <p>Note that Bard auras *REQUIRE* SpellAlias to be set up to cast, and modbuff will use CastCall to</p> <p>actually cast the aura.     * tank used to cast only on the designated group tank. Tank designation is keyed from either the TankName</p> </li> </ul> <p>variable in the setting section (see above) or by setting a toon to Main Tank (Group.Maintank) using the</p> <p>Roles function.</p> <ul> <li>petspell used to set up an entry to create/cast a pet. Example:</li> </ul> </li> </ul> <p>''[AB3]</p> <p>Gem=7</p> <p>Spell=Shambling Minion</p> <p>SpellFoci=</p> <p>DurMod=0</p> <p>SpellAlias=pet</p> <p>Announce=/bc Cooking up a pet</p> <p>SpellMinMana=10</p> <p>TarCnt=1</p> <p>TarType=petspell</p> <p>Recast=FALSE</p> <p>SpellIcon=</p> <p>PreCondition=TRUE''</p> <ul> <li> <ul> <li>Default entry: *TarType=tank war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self mypet grp pet</li> </ul> <p>cbt idle*</p> <ul> <li>Please note that the default entry includes settings that do not work together. Specifically, tank, self</li> </ul> <p>and mypet are meant to be used by themselves. If you want to cast the same buff on yourself, your pet and</p> <p>the tank, create them as seperate buff entries. * Recast=TRUE|FALSE   * True is only really needed for single targets that are NOT in the group and/or on NetBots. Set Recast TRUE when</p> <p>you want the macro to use the spell worn off messages from EQ for the macro to know who to cast the buff on.</p> <p>This allows you to rebuff toons that are lower level for your normal buff set, or not in EQBC and not in group.</p> </li> <li> <p>For the most part this shouldn't be needed for rebuffing if all of your toons are NetBots members. The macro</p> <p>actually checks the other toons in netbots and knows what their buffs are, whether the one they're trying to</p> <p>cast will stack, and the duration of the buff if the toon still has it on. * SpellIcon=icon name   * Use when the spell icon has a different name than the actual spell (e.g. the spell Unity of Spirits has a</p> <p>spell icon of Transcendent Foresight. In fact, you could use any one of the four spell icons/names that Unity</p> <p>creates).</p> <ul> <li>Please note that if the name you have in SpellIcon doesn't evaluate to a spell name, the buff will be</li> </ul> <p>skipped. In other words, leave it blank if your spell doesn't need it.</p> </li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#advevent-section-advevent","title":"AdvEvent Section [AdvEvent]","text":"<ul> <li>AECount=#</li> <li>Number of events you plan to have.</li> <li>AECheckTime=#</li> <li>How often to check for events in seconds</li> <li>AECustomX=watch text</li> <li>Custom emote-triggered events driven by scripts.</li> <li>Default is three blank entries (AECustom1=, AECustom2=, AECustom3=)</li> <li> <p>Please note that an earlier version of this variable populated AECustom1, AECustom2 and AECustom3 with random</p> <p>numbers in the ini file. The newwer version of AECustom now adds the three AECustomX entries but sets them as</p> <p>blank.)</p> </li> <li> <p>Each AECustomX entry, if defined, must have a corresponding script entry. For example, by defining</p> <p>AECustom1=greater bloodmoon healing in the AdvEvent section, you would need a corresponding script defined</p> <p>that might read something like:</p> </li> </ul> <p>[Script-AECustomEvent1]</p> <p>Commands=1</p> <p>C1=/bc cast stun</p> <ul> <li>AEGem[x]=source</li> <li>Designate what the source of the spell is.</li> <li>Valid entries: gem number, alt, ability, item, script, potionbelt</li> <li>Note that 'potionbelt' does not require a slot number.</li> <li>Examples:<ul> <li>AEGem1=3 Cast this spell from gem 3</li> <li>AEGem1=alt This spell is an alternative advancement ability</li> </ul> </li> <li>AESpell[x]=source name</li> <li>Valid entries: spell name, item name, alternate ability name, ability name, script name</li> <li> <p>Examples:</p> <ul> <li>AESpell1=Minor Shielding This would be generally be paired with an ABGem1 entry indicating which spell gem</li> </ul> <p>to cast Minor Shielding from.</p> <ul> <li>AESpell1=Uber Wand Thingy of Uberness This would be generally be paired with an AEGem1 entry indicating</li> </ul> <p>that the source of this spell is an item. * AESpellFoci[x]=setname   * Bandolier set name to swap in before casting this spell.   * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * AEDurMod[x]=##   * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%).   * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100%</p> <p>(e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the</p> <p>correct extension. * AEDelay[x]=#   * How many seconds do I wait between casts of this spell. * AEEventMinMana[x]=#   * My mana percentage must be at least this to complete this event. * AEEventMinHP[x]=#   * My HP percentage must be at least this to complete this event. * AEMinMana[x]=#   * The event target's mana percentage must be above this to complete this event. * AEMaxMana[x]=#   * The event target's mana percentage must be below this to complete this event. * AEMinHP[x]=#   * The event target's HP percentage must be above this to complete this event. * AEMaxHP[x]=#   * The event target's HP percentage must be below this to complete this event. * AETarType[x]=target type   * Valid entries: war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self tnt (Less is better!) * AESpellAlias[x]=event alias   * Enter an \"alias\" for the event. This is often a short, easier to use name (e.g. the alias for Spirit of the Wolf</p> <p>might be SoW).</p> </li> <li> <p>Please note that you can NOT have spaces in your alias names.</p> </li> <li>AEAnnounce[x]=channel</li> <li> <p>Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for</p> <p>further explanation.</p> </li> <li> <p>Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example:</p> <ul> <li>ABAnnounce1=/bc [+r+]Buffed \\&lt;\\&lt; %t &gt;&gt; with %s [+x+]</li> </ul> </li> <li>AETarCnt[x]=1|0</li> <li>Settings are *only* either 1 (on) or 0 (off).</li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#examples","title":"Examples","text":"<p>Shaman cannibalization example. In this case, settings like AEEventMinMana and AEMinMana both refer to the shaman as he is both the event triggerer as well as the target of the event:</p> <p><code>AEGem1=5</code> <code>AESpell1=Cannibalize III</code> <code>AESpellFoci1=</code> <code>AEDurMod1=0</code> <code>AEDelay1=0</code> <code>AEEventMinMana1=0</code> <code>AEEventMinHP1=30</code> <code>AEMinMana1=0</code> <code>AEMaxMana1=90</code> <code>AEMinHP1=50</code> <code>AEMaxHP1=100</code> <code>AETarType1=self</code> <code>AESpellAlias1=canni</code> <code>AEAnnounce1=</code></p> <p>Necromancer mana feed example (where the necro is feeding mana to another character). In this case, AEEventMinMana refers to the necro's mana and AEMinMana refer to the mana of the target (as defined by AETarType):</p> <p><code>AEGem2=4</code> <code>AESpell2=Rapacious Subvention</code> <code>AESpellFoci2=</code> <code>AEDurMod2=0</code> <code>AEDelay2=0</code> <code>AEEventMinMana2=50</code> <code>AEEventMinHP2=50</code> <code>AEMinMana2=20</code> <code>AEMaxMana2=45</code> <code>AEMinHP2=0</code> <code>AEMaxHP2=100</code> <code>AETarType2=clr enc</code> <code>AESpellAlias2=manafeed</code> <code>AEAnnounce2=/bc</code></p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#advcure-section-advcure","title":"AdvCure Section [AdvCure]","text":"<ul> <li>AQCount=#</li> <li>Number of cures you plan to have.</li> <li>AQNewFormat=x</li> <li>Set 'x' to 1 for ModBot v4 style</li> <li>Set 'x' to 0 for MobBot v3.49 style</li> <li>AQCheckTime=#</li> <li>How often to check for cures in seconds</li> <li>[AQx]</li> <li>Where 'x' is the number of cure spell</li> <li>Gem=source</li> <li>Designate what the source of the spell is.</li> <li>Valid entries: gem number, alt, ability, item, script, potionbelt</li> <li>Note that 'potionbelt' does not require a slot number.</li> <li>Examples:<ul> <li>Gem=3 Cast this spell from gem 3</li> <li>Gem=alt This spell is an alternative advancement ability</li> </ul> </li> <li>Spell=source name</li> <li>Valid entries: spell name, item name, alternate ability name, ability name, script name</li> <li> <p>Examples:</p> <ul> <li>Spell=Minor Shielding This would be generally be paired with an Gem entry indicating which spell gem to</li> </ul> <p>cast Minor Shielding from.</p> <ul> <li>Spell=Uber Wand Thingy of Uberness This would be generally be paired with an Gem entry indicating that the</li> </ul> <p>source of this spell is an item. * '''SpellCntr=   * Currently not used for anything, so don't worry about it :) * SpellFoci=setname   * Bandolier set name to swap in before casting this spell.   * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets (e.g. -bandolier|) * SpellCureType=cure type   * Valid entries (type of cure needed): Cursed, Diseased, Poisoned, EnduDrain, LifeDrain, ManaDrain, Blinded,</p> <p>CastingLevel, Charmed, Feared, Healing, Mesmerized, Resistance, Rooted, Silenced, Slowed, Snared, SpellCost,</p> <p>SpellSlowed, SpellDamage, Trigger, All</p> </li> <li> <p>Set the cure type to the best match for the spell, but keep them in order of best cure first.</p> </li> <li> <p>The first cure in your .ini matching the cure type needed (or if you set to \"All\") will be the first attempted</p> <p>spell.</p> </li> <li> <p>Cures *can* always be interrupted by any heal spell, unless you're using a cure spell that's already listed in</p> <p>your heal section (e.g. Cleric's \"Word of XXX\" line of spells may or may not interrupt for heals depending on</p> <p>where they are in your heal section).</p> </li> <li> <p>Modcure.inc will cast once per loop and then return to the main loop, so setting group cures (like Radiant Cure)</p> <p>toward the top would be best</p> </li> <li> <p>Be specific on cure types to avoid recasting the same cure over and over if it won't cure you.</p> </li> <li>SpellMinMana=#</li> <li>Minimum mana to have in order to attempt this cure.</li> <li>SpellRecast=#</li> <li>Number of times to recast this spell for fizzles, interrupts, etc.</li> <li>TarCnt=#</li> <li>How many targets should be present to cast this spell, if set to 0, this spell will not be auto-casted.</li> <li>TarType=target type</li> <li> <p>Valid target types are as follows (please note which entries can be used with others and which are exclusive):</p> <ul> <li>ShortClassName Used for class specific buffs (ie. haste on \"war\"). Valid entries are: war shd pal rng mnk</li> </ul> <p>rog brd bst ber shm clr dru wiz mag enc nec. Note that any or all of these entries can be used at the same</p> <p>time.</p> <ul> <li>self Used for self only spells.</li> <li>grp for Group spells (e.g. ABTarType1=self grp)</li> <li>pet used to cast buffs on all pets in the group.</li> <li>mypet used to cast on only your pet. Please note that pet and mypet are mutually exclusive.</li> <li>cbt for spells to be casted during combat (e.g. an entry for Yaulp would be TarType=self cbt). Please note</li> </ul> <p>that any NPC within radius that is not on your exclude list will cause 'cbt' buffs to fire. If you want to</p> <p>buff next to NPCs (and don't plan to kill them), use the exclude command. If you later decide to kill</p> <p>whatever mob you've excluded, use the include command to remove it from list. The macro does not check</p> <p>combat state of the tank for buffs.</p> <ul> <li>idle used with cbt for spells to be casted when in or out of combat (e.g. if you wanted to keep Yaulp on</li> </ul> <p>at all times (in AND out of combat), your entry would be TarType=self cbt idle). Please note that idle is</p> <p>only used in TarType when cbt is also used.</p> <ul> <li>aura used to cast an aura - must be used with self (e.g. TarType=self aura)</li> <li> <p>Note that Bard auras *REQUIRE* ABSpellAlias to be set up to cast, and modbuff will use CastCall to</p> <p>actually cast the aura.     * tank used to cast only on the designated group tank. Tank designation is keyed from either the TankName</p> </li> </ul> <p>variable in the setting section (see above) or by setting a toon to Main Tank (Group.Maintank) using the</p> <p>Roles function.   * Default entry: *TarType=tank war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self mypet grp pet</p> <p>cbt idle*</p> <ul> <li>Please note that the default entry includes settings that do not work together. Specifically, tank, self</li> </ul> <p>and mypet are meant to be used by themselves. If you want to cast the same buff on yourself, your pet and</p> <p>the tank, create them as seperate buff entries. * SpellAlias=spell alias   * Enter an \"alias\" for the spell. This is often a short, easier to use name (e.g. the alias for Radiant Cure might</p> <p>be RC).</p> </li> <li> <p>Please note that you can NOT have spaces in your alias names.</p> </li> <li>Announce=channel</li> <li> <p>Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for</p> <p>further explanation.</p> </li> <li> <p>Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example:</p> <ul> <li>Announce=/bc [+r+]Cured \\&lt;\\&lt; %t &gt;&gt; with %s [+x+]</li> </ul> </li> </ul> <p><code>[AQ2]</code> <code>Gem=2</code> <code>Spell=Counteract Disease</code> <code>SpellCntr=0</code> <code>SpellFoci=</code> <code>SpellCureType=Diseased Slowed</code> <code>SpellMinMana=0</code> <code>SpellRecast=0</code> <code>TarCnt=1</code> <code>TarType=pc grp pet cbt idle</code> <code>SpellAlias=</code> <code>Announce=/bc</code></p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#advpull-section-advpull","title":"AdvPull Section [AdvPull]","text":"<p>This section is under development.</p> <ul> <li>APCheckTime=#</li> <li>Time (in seconds) to wait in between AdvPull executions. Default is 0.</li> <li>APRadius=#</li> <li> <p>The distance around your target to check for more mobs as defined by APMobMax (basically, a check for adds).</p> <p>Default is 40. * APMobMax=#   * The max amount of mobs (target + adds) you will allow before pulling. Default is 1. If there are less than</p> <p>APMobMax mobs within APRadius of your target, it will pull the mob. * APScript=Scriptname   * Name of script to define how you want to tag the mob (throw stone, ranged, item clicky, spell, etc) and executes</p> <p>when you have a mob targeted to pull. The script name must have at least 3 characters. Default is empty. **YOU</p> <p>MUST CREATE A SCRIPT TO TAG THE MOB!**</p> </li> <li> <p>Modbot Scripts</p> </li> <li>APPath=Pathname</li> <li> <p>The name of the path to run for pulling/movement, as defined in your MBWayPnt.ini (See</p> <p>ModMove for more details on creating</p> <p>a path). The path name must be at least 3 characters. Default is empty. * APRetPath=ReturnPathname   * The name of the path to use to move back to camp. The path must be defined in your MBWayPnt.ini file. The path</p> <p>name must be at least 3 characters. Default is empty.</p> </li> <li> <p>Mostly used for when the path back to camp is a different one than used to pull mobs (ie, you go through a</p> <p>one-way wall to pull or intentionally fall off a ledge and have to run the long way back). If you want to return</p> <p>the same way you came, you can just use WPLoop=TRUE in MBWayPnt.ini instead of having to set up a second path. * APBefore=   * Command or series of commands (with multiline) to execute before the rest of AdvPull section. Must be at least 3</p> <p>characters. Default is empty. * APAfter=   * Command or series of commands (with multiline) to execute after AdvPull has finished. Default is empty. * APAnnounce=   * A way to announce what you have pulled. Default is empty.   * Note: This is not just a chat channel, but a place to put a full incoming message, ie: * APAnnounce=/gsay Incoming -[ %t ]- * APRetries=1   * Number of times to attempt to pull a mob in case it fails the first try (line of site, etc). This will strafe</p> <p>left and right on subsequent attempts. Default is 1.</p> </li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#mbcommoninc-settings","title":"MBCommon.inc Settings","text":"<p>The location and name of MBCommon.inc can now be set by changing line 38 in Modbot.mac.</p> <p><code>/declare MBCommon string outer MBCommon.ini</code></p> <p>It defaults to the ./macros folder, but the line can be changed to any path.</p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#settings-section","title":"Settings Section","text":"<ul> <li>LoadAlias [1,0] This is an on / off setting to load the \"/alias /mb /echo MB-\" alias for commands. It is set</li> </ul> <p>to 0 after first run when alias should be loaded, but you can set to 1 to add it back to your Macroquest.ini file if</p> <p>it gets deleted.</p> <ul> <li>IniLocation Path to your MB_.ini files. Must end in / or  if changed from default.</li> <li>LootIni [Loot.ini] This setting can be used to change the location of your Loot.ini file as well as the name.</li> <li>MBWayPntLocation [MBWayPnt.ini] This setting can be used to change the location of your MBWayPnt.ini file as</li> </ul> <p>well as the name of the file.</p> <ul> <li>CheckTargetDebuffs [TRUE|FALSE] This setting toggles on/off the ${Target.Buff} checking for debuffs</li> </ul> <p>(essentially this checks if the spell \"Stacks\" before casting.)</p> <ul> <li> <p>Each debuff listed in MBCommon.ini now has an 'OverwritesID=' entry. This entry is meant for a list of debuffs</p> <p>that the spell doesn't 'Stack' with, but you want the debuff to overwrite.</p> </li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#spell-section","title":"Spell Section","text":"<ul> <li>Zone.ShortName - List of mobs excluded for that zone in a pipe -\"|\" delimited string. This setting is not</li> </ul> <p>present for any zones which you have nothing excluded.</p> <ul> <li> <p>Immune lists for each spell are saved in their own section along with a MaxLevel=[100] setting. Change to the</p> <p>max level of the spell.</p> </li> <li> <p>As the macro finds mobs that are immune to the spell, the zone shortname is added to the entry as a variable</p> <p>along with the mob names in pipe delimited format.</p> </li> <li> <p>Mobs that are marked immune to debuffs can be marked in MBCommon.ini with an asterisk to allow for some names</p> <p>that have only some immune, and some not. For example, Dreadspire has some body types with same names where some</p> <p>are immune to mez, and some not (e.g. an aid to the Seneschal - some body types with that mob name are immune</p> <p>to befuddle, and others aren't). By adding an asterisk to the end of the name in the exclude section, the macro</p> <p>will repeat attempts to mez, etc. that mob type (rather than just marking them immune and not casting at all):</p> <p>_DreadspireImmune=|an aid to the Seneschal_|*</p> </li> <li> <p>The ADIfSpellImmune script, if defined, will only run if the mob is found to be immune after cast, but the</p> <p>astrik will not be replaced, and the spell will only cast once allowing the spell to still attempt on the next</p> <p>mob it hasn't been cast on.</p> </li> <li> <p>Overwrites= list of debuffs that the spell doesn't 'Stack' with, but you want the debuff to overwrite. This</p> <p>does require user intervention, and there's no way to set it auto-set them.</p> </li> <li> <p>MaxLevel= maximum level of mob that can be affected by debuff</p> </li> </ul> <p>An entry in the spell section might look something like this:</p> <p><code>[Mystify]</code> <code>MaxLevel=83</code> <code>thalassius_bImmune=|a sea mephit defender||a sea mephit evoker|</code> <code>OverwritesID=|14569|14570|14530|</code></p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#modbot-class-ini-examples","title":"ModBot Class INI Examples","text":"<p><code>ModBot`` ``Class`` ``INI`` ``Examples`` ``linked`` ``to`` ``another`` ``page</code></p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#scripts-and-modbot-variable-usage","title":"Scripts and ModBot Variable Usage","text":"<p>ModBot allows VERY customizable sripts to such an extent you can actually program your own sub-procedures within your INI file. You can harness ANY global variable within ModBot to use with the scripts. Scripts match MQ2 code to every extent, below are several examples of scripts and common variables one would use to create complex scripts</p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#understanding-scripts-syntax-example-how-to","title":"Understanding scripts, syntax, example, how to","text":"<ul> <li>Scripts General Info</li> <li> <p>Scripts can be difficult and there are some MQ2 commands that give scripts trouble. Keep this in mind and</p> <p>prepare to post you script code should you have problems.</p> </li> <li> <p>No script can take more then 15 seconds to complete, however this can be modified in the code directly in the</p> <p>Sub MBScript or even changed in the script you create ({Timer} is the var)</p> </li> <li> <p>Scripts are executed from top to bottom and you are allowed to use a label :Top (e.g. /goto :Top), in your</p> <p>script. The /goto :Top option allows for complex loops to take place directly from code in the INI file</p> </li> <li> <p>If you use ANY INI generated ModBot global string variables that have spaces in your custom scripts they MUST be</p> <p>encapsulated by 2 apostrophies when used in the script, see PetCast example below. * Reserved Characters</p> </li> </ul> <p>:*These characters can not be used in scripts</p> <p>::*$ \"</p> <p>:*'' Two apostrophies are for passing variables with spaces in script code. Use them to replace quotes.</p> <ul> <li>Syntax</li> </ul> <p><code>[Script-]</code> <code>Commands=</code> <code>C1=</code> <code>.</code> <code>Cn=</code></p> <p>What does a script look like in your INI file:</p> <p><code>[Script-HelloWorld]</code> <code>Commands=2</code> <code>C1=/echo Hello World</code> <code>C2=/if ({Timer}&gt;50) /varset Timer 5s</code> <code>C3=/goto :Top</code></p> <p>In the example above it will echo to the MQ2ChatWindow \"Hello World\" for 5s. Notice how I do NOT use a $ to reference the \"Timer\" variable.</p> <ul> <li>How To use or launch a script</li> </ul> <p>:*/bc bob script HelloWorld</p> <p>:*You can set Gem=script and Spell=HelloWorld as a spell name for any of the spells you've configured in ModBot, and it will be triggered when that event, heal, etc would take place.</p> <p>Please see the below examples for complex script code.</p> <p>Common Variables (You can use ANY mq2 variable without the $, you can even CREATE new global vars and use them, all from the INI file via Scripts)</p> <p><code>{ACState} = If greater than 0, ModBot thinks you are in combat</code> <code>{ACMATarget} = The target of the main assist</code> <code>{CampStatus} = If greater than 0, means I've been given a /bc makecamp command</code> <code>{FollowFlag} = If greater than 0, means I should be following something</code> <code>{TankName} = The acting main assist</code> <code>{Me}, {Spawn}, etc = See MQ2 Manual</code></p> <p>Examples This example is triggered from an event OR a heal and it will remove the necro \"Lich\" spell:</p> <p><code>[AdvHeal]</code> <code>[AH3]</code> <code>Gem=Script</code> <code>Spell=DropLich</code> <code>SpellFoci=</code> <code>DurMod=0</code> <code>SpellAlias=droplich</code> <code>SpellMinMana=0</code> <code>Announce=/bc</code> <code>TarCnt=1</code> <code>Class=pc hp40 nec</code></p> <p><code>[AdvEvent]</code> <code>[AE3]</code> <code>Gem=Script</code> <code>Spell=DropLich</code> <code>SpellFoci=</code> <code>DurMod=0</code> <code>Delay=0</code> <code>EventMinMana=100</code> <code>EventMinHP=40</code> <code>MinMana=20</code> <code>MaxMana=100</code> <code>MinHP=0</code> <code>MaxHP=90</code> <code>TarType=tnt</code> <code>SpellAlias=</code> <code>Announce=/bc</code></p> <p><code>[Script-DropLich]</code> <code>Commands=1</code> <code>C1=/if ({Me.Buff[Lich].ID}) /notify BuffWindow Buff{Math.Calc[{Me.Buff[Lich].ID}-1].Int} leftmouseup</code></p> <p>This example is launched via the ACBefore command from the [Melee] section, I've got Sneak Attack bound to hotkey 6. What the bot will do is to trigger Sneak Attack, attempt proper position, backstab the mob, then revert to \"normal\"</p> <p><code>[Script-SneakAttack]</code> <code>Commands=10</code> <code>C1=/if ({Melee.Enable}) /melee plugin=0</code> <code>C2=/if ({Me.CombatAbilityReady[Sneak Attack]}) /keypress 6</code> <code>C3=/if (!{Me.Moving} &amp;&amp; !{Stick.MoveBehind} &amp;&amp; {Stick.Distance}!={Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}+5]}) /stick {Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}+5]} behind id {ACMATarget}</code> <code>C4=/if ({Target.ID}!={ACMATarget}) /multiline ; /target id {ACMATarget};/delay 5</code> <code>C5=/if ({Melee.BackAngle}&gt;60 || {Melee.BackAngle}&lt;-60) /goto :Top</code> <code>C6=/if ({Target.Distance3D}&gt;={Spawn[{ACMATarget}].MaxRangeTo}) /stick {Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}-5]} hold behind id {ACMATarget}</code> <code>C7=/if ({Target.Distance3D}&gt;={Spawn[{ACMATarget}].MaxRangeTo}-3) /goto :Top</code> <code>C8=/delay 5</code> <code>C9=/if ({Me.AbilityReady[Backstab]}) /doability backstab</code> <code>C10=/melee plugin=1</code></p> <p>This example will confirm you are hidden and sneaking when I'm at \"camp\" and not sneaking when I'm in follow mode. It will also re-engage if MQ2Melee lost \"stick\" because of too much mob movement</p> <p><code>[Script-HideSneak]</code> <code>Commands=4</code> <code>C1=/if ({FollowFlag} &amp;&amp; {Me.Sneaking}) /multiline ; /doability sneak;/return</code> <code>C2=/if (!{FollowFlag} &amp;&amp; !{ACState} &amp;&amp; {Select[{MakeCamp},on]} &amp;&amp; {Me.AbilityReady[Hide]} &amp;&amp; !{Me.Moving} &amp;&amp; !{Melee.Combat}) /multiline ; /doability Hide;/delay 5</code> <code>C3=/if (!{FollowFlag} &amp;&amp; !{ACState} &amp;&amp; {Select[{MakeCamp},on]} &amp;&amp; {Me.AbilityReady[Sneak]} &amp;&amp; !{Me.AbilityReady[Hide]} &amp;&amp; !{Me.Moving} &amp;&amp; !{Melee.Combat}) /multiline ; /doability Sneak;/delay 5</code> <code>C4=/if ({ACState} &amp;&amp; {ACMATarget} &amp;&amp; {Target.ID} &amp;&amp; {Me.AbilityReady[Backstab]}) /keypress q</code></p> <p>Example of createing a new global var and an example of using it</p> <p><code>[Script-EventsOff]</code> <code>Commands=2</code> <code>C1=/if (!{Defined[CheckSlow]}) /declare CheckSlow int outer 1</code> <code>C2=/if ({DoEvents}) /multiline ; /varset DoEvents FALSE;/varset CheckSlow 1</code></p> <p><code>[Script-EventsOn]</code> <code>Commands=2</code> <code>C1=/if (!{Defined[CheckSlow]}) /declare CheckSlow int outer 3</code> <code>C1=/if (!{DoEvents}) /multiline ; /varset DoEvents TRUE;/varcalc CheckSlow {CheckSlow}+1</code></p> <p><code>[Script-IsSlowed]</code> <code>Commands=3</code> <code>C1=/if (!{Defined[CheckSlow]}) /multiline ; /varset DoEvents FALSE;/return</code> <code>C2=/if ({CheckSlow}&lt;=4) /varset DoEvents FALSE</code> <code>C3=/if ({CheckSlow}&gt;4) /varset DoEvents TRUE;/varset CheckSlow 1</code></p> <p>Example of using a ModBot global string. This will create a new pet, say when your existing pet is about to die</p> <p>:*Please note in the INI snippets below that the INI generated global string PetCast has a space so to pass this properly in the script,</p> <p>you must encapsulated in quotes, script code uses apostrophies in place of quotes.</p> <p><code>[Script-NewPet]</code> <code>Commands=4</code> <code>C1=/multiline ; /casting ''{PetCast}'' -maxtries|5;/delay 2s</code> <code>C2=/if ({Cast.Timing}&gt;600) /goto :Top</code> <code>C3=/multiline ; /if ({Me.Pet.ID}) /pet go away;/delay 2s !{Me.Casting.ID}</code> <code>C4=/if (!{Me.Pet.ID}) /goto :Top</code></p> <p>Example of using PetCast for a cleric hammer, to be called from a ACBefore command</p> <p><code>[Settings]</code> <code>DoPet=FALSE</code> <code>PetCast=Unswerving hammer of awesomeness|gem1</code> <code>[Melee]</code> <code>ACBefore=/if (!{Me.Pet.ID} &amp;&amp; {ACMATarget} &amp;&amp; {Spawn[{ACMATarget}].Type.Equal[NPC]} &amp;&amp; {Spawn[{ACMATarget}].Distance3D}&lt;={ACLeash}) /call MBScript SumHam</code> <code>[Script-SumHam]</code> <code>Commands=2</code> <code>C1=/if ({Target.ID}!={ACMATarget}) /multiline ; /target id {ACMATarget};/delay 5</code> <code>C2=/if (!{Me.Pet.ID}) /multiline ; /casting ''{PetCast}'' -maxtries|2;/delay 3s</code></p> <p>Example of a CH script to be run from a non cleric .ini (warrior)</p> <p><code>I figure I might as well be posting some of the script versions of other macros that I've been seeing around, but written my own thing so I could just keep modbot running.</code> <code>Modbot script version of CH chain that seems to work, though might have problems I haven't noticed.... I use this with a hotkey from my tank -```\"/mb script chain 50\" (yes it's in MB\\_tank.ini - NOT the cleric.ini.. ) It finds all clerics in netbots, then runs through the list telling each</code> to cast CH after the delay you specify. This script does require the clerics to all be running modbot with an alias of CH for complete heal spell,<code>`and connection to the same EQBCS server.</code></p> <pre><code>`Commands=13`\n`C1=/multiline ; /declare clrlist string local;/declare x int local 1;/declare StopLoop bool local FALSE`\n`C2=/if ({Spawn[{NetBots.Client.Arg[{x}]}].Class.ShortName.Equal[clr]}) /varset clrlist {clrlist} {NetBots.Client.Arg[{x}]}`\n`C3=/if ({x} &lt; {NetBots.Counts}) /multiline ; /varset a 1;/varcalc x {x}+1`\n`C4=/echo Clerics: {clrlist} casting {Math.Calc[{Param1}/10]}s apart`\n`C5=/varset x 0`\n`C6=/varset Timer 100`\n`C7=/varcalc x {x}+1`\n`C8=/if ((!{Spawn[{clrlist.Arg[{x}]}].ID} || {NetBots[{clrlist.Arg[{x}]}].PctMana} &lt; 3) &amp;&amp; {x} &lt;= {clrlist.Count[ ]}) /varset a 5`\n`C9=/if ((!{Spawn[{clrlist.Arg[{x}]}].ID} || {NetBots[{clrlist.Arg[{x}]}].PctMana} &lt; 3) &amp;&amp; {x} &gt; {clrlist.Count[ ]}) /varset a 4`\n`C10=/bc {clrlist.Arg[{x}]} cast ch`\n`C11=/delay {Param1}`\n`C12=/if ({x}&gt;{clrlist.Count[ ]}) /varset a 4`\n`C13=/if (!{StopLoop}) /varset a 5`\n`````  Posted By Ptarp Tue Apr 12, 2011 1:01 am. Moved to Wiki by Arblis\\`\n\n## Script Examples\n\n[```Script`` ``examples`` ``linked`` ``to`` ``another`` ``page```](https://macroquest.org/wiki/index.php/Script_Examples)\n\n* These are for ModBot v3.49 please adjust accordingly\n\n## Related Include Files Information and Examples\n\n[```Related`` ``Include`` ``files`` ``(modloot,`` ``AAPurchase,`` ``modmove,`` ``etc.)`` ``information`` ``and`` ``INI`` ``examples`` ``linked`` ``to`` ``another`` ``page```](https://macroquest.org/wiki/index.php/Related_Include_Files)\n\n* These are from MobDot v3.49 please adjust acccordingly\n\n## Tips, Tricks and Troubleshooting\n\nHere you will find a collection of little gems pulled from the ModBot thread. At some point, this may morph in to a handy little troubleshooting flowchart, but for now it will serve as kind of a tidbit catchall for things that would otherwise get lost in the hundreds of thread pages...\n\nPlease note- when you are posting on the forum for help (after reading this wiki of course!\\) include the MQ2 version, winEQ version and the EQ install type \\(Titanium / sod / UF)\n\n`If you want to have colored messages in Announce=/bc you can try some of these:`\n`b = black`\n`g = green`\n`m = magenta`\n`o = orange`\n`p = purple`\n`r = red`\n`t = cyan`\n`u = blue`\n`w = white`\n`y = yellow`\n`Example:`\n`Announce=/bc [+t+]`\n`would color the text cyan`\n\n`Although covered previously on the Wiki quite a few times - If you are having trouble with mobs keeping you from doing non combat things (buff, loot etc) try using the following:`\n`exclude &lt;mob name,save&gt;`\n````` \"What I do.. (while targeted on the mob you want to ignore)```On my tank I have a hotkey. I target the mob to exclude and press it.``\n`First line is /bcaa //mb exclude ${Target.CleanName}`\n`second line - /bcaa //mb exclude save`\n````` /echo ${ADMobCount} (use this after your exclude to see if the char in question has any mobs on the exclude list. Can be used with /bcaa to see all of your toons mobcounts)```If you fight near non-combatant mobs, always use the exclude command so the macro doesn't \"see\" them, and set your Radius= in your toon's .ini file to a minimum.``\n`I normally keep mine at around 60 to 80 depending on what I'm doing. Remember you can \"/varset Radius 50\" or something in game with the mac running to find a happy medium.\" -Ptap Mon Sep 20, 2010 1:18 pm`\n\n`It also sounds like an exclude hotkey, and pause hotkey would be your best friends.. Here's a few of the hotkeys I use.`\n\n`_EQTitan.ini in your everquest folder.`\n````` Code:```[Socials]``\n`Page10Button1Name=TankName`\n`Page10Button1Color=0`\n`Page10Button1Line1=/bcaa //varset TankName ${Me.Name}`\n`Page10Button7Name=Masters`\n`Page10Button7Color=0`\n`Page10Button7Line1=/bcaa //varset MasterList ${NetBots.Client}`\n`Page10Button5Name=pause`\n`Page10Button5Color=0`\n`Page10Button5Line1=/bcaa //mb mbpause on`\n`Page10Button11Name=unpause`\n`Page10Button11Color=0`\n`Page10Button11Line1=/bcaa //mb mbpause off`\n`Page10Button6Name=follow`\n`Page10Button6Color=0`\n`Page10Button6Line1=/bca follow`\n`Page10Button12Name=stop`\n`Page10Button12Color=0`\n`Page10Button12Line1=/bcaa //mb stop`\n`Page10Button10Name=letsroll`\n`Page10Button10Color=0`\n`Page10Button10Line1=/bcaa //mb letsroll`\n`Page2Button1Name=corpse`\n`Page2Button1Color=0`\n`Page2Button1Line1=/corpse`\n`Page2Button6Name=sellitem`\n`Page2Button6Color=0`\n`Page2Button6Line1=/ini loot.ini ${Cursor.Name.Left[1]} \"${Cursor.Name}\" Sell`\n`Page8Button1Name=include`\n`Page8Button1Color=0`\n`Page8Button1Line1=/bcaa //mb include ${Target.CleanName}`\n`Page8Button1Line2=/pause 5`\n`Page8Button1Line3=/bcaa //mb exclude save`\n`Page8Button7Name=exclude`\n`Page8Button7Color=0`\n`Page8Button7Line1=/bcaa //mb exclude ${Target.CleanName}`\n`Page8Button7Line2=/pause 5`\n`Page8Button7Line3=/bcaa //mb exclude save`\n`````\n</code></pre> <p><code>I normally just keep my keys on page 10 and click from there, but as you can see there's include and exclude keys on pg 8 and another on pg2 I use for setting items to</code> <code>\"sell\" in my loot.ini file.</code> <code>The /bcaa stuff might not work for some depending on plugin versions, so that cn be replaced with a /bca and /mb on a second line. I find it very handy to have some keys I can</code> <code>press quickly, and always either pause all my toons or exclude npcs before I go into areas that I don't want something attacked.</code></p> <p><code>Having trouble with your background session toons not moving properly? You might try this:</code> <code>WinEQ=on```to the [Defaults] section of your mq2moveutils.ini.</code> TrueHeading=off might help also in the same section, though I'm not sure if that's needed.`</p>","tags":["macro"]},{"location":"macros/gallery/modbot-4.0/#do-your-toons-wander-where-they-are-not-supposed-to","title":"Do your toons wander where they are not supposed to?","text":"<p>Thanks to Toomanynames for this tidbit:</p> <p>Those who have toon wandering issues or whatnot - when you say \"radius\", what radius do you mean, modbot, melee, makecamp? There are actually three things that work together to make certain that your bots fight and return to a certain area - MQ2MoveUtils, MQ2Melee and the MB_charname.ini file (from ModBot).</p> <ul> <li>/makecamp x x x</li> <li>This is a MQ2MoveUtils setting that needs to be properly configured. For example:<ul> <li>/makecamp radius x leash=on (or something like that)</li> </ul> </li> <li> <p>Please see the MQ2MoveUtils (PMS version)</p> <p>[http://www.macroquest2.com/phpBB3/viewtopic.php?f=31&amp;t=15909thread] and</p> <p>MQ2MoveUtils:v11 for more detailed information. * /melee x x x   * This is an MQ2Melee setting. Those ranges and settings come into play and must be set accordingly to work</p> <p>WITH modbot</p> </li> <li> <p>Please see the MQ2Melee [http://www.macroquest2.com/phpBB3/viewtopic.php?f=50&amp;t=17045thread] for more</p> <p>detailed information. * Modbot INI   * Radius = the max the toon will \"See\" thiings   * ACLeash = the max a toon will engage things</p> </li> </ul> <p>If you don't properly configure MQ2MoveUtils, MQ2Melee and ModBot and confirm those settings are within or compatible with ModBot \"ranges\" then you'll have issues.</p>","tags":["macro"]},{"location":"macros/gallery/modbot/","title":"ModBot","text":"","tags":["macro"]},{"location":"macros/gallery/modbot/#modbot-a-universal-bot-macro","title":"ModBot - A Universal Bot Macro","text":"<ul> <li>Caster</li> <li>Melee</li> <li>Shrouds &amp; MM's</li> <li>Mez, Charm, Heal, Melee, etc</li> <li>All classes supported</li> <li>Now supports mixed groups of MQ2 and Non-MQ2 users/players</li> <li>ModBot is under constant improvement effort, open to suggestions / additions / adjustments, etc</li> </ul> <p>ModBot_v3.x Source</p> <p>General Note on Wiki Entries - Release ZIP packages vs. SVN Updates - While the majority of entries in the Wiki apply to ModBot in general, there are always some entries that apply to changes, additional functionality, new commands, etc. that exist only in the \"beta\" files from the SVN repository. Please keep this note in the back of your mind as you work with the Wiki - if you come across a command, etc. that will just not seem to work for you (and you have already thoroughly researched it, checked syntax, re-checked syntax, etc.), please take a moment to check your version of the module that it applies to - you may need to update.</p>","tags":["macro"]},{"location":"macros/gallery/modbot/#using-the-svn-repository","title":"Using the SVN Repository","text":"<p>For those of you that would like to use the beta files off of the SVN repository, you have two options - use your browser to grab files or use a tool like TortoiseSVN to automate the process a bit. Using the browser is pretty self-explanatory, but TortoiseSVN requires a bit of set up. This process covers what is needed for the Windows version: Links to the browser access and to SVN can be found at the bottom of this post.. http://www.macroquest2.com/phpBB3/viewtopic.php?f=49&amp;t=15313</p> <ol> <li>Download and install [http://tortoisesvn.net/downloads.htmlTortoiseSVN].</li> <li>Create a folder on your system where you want to store the downloaded ModBot files.</li> <li>Right click on your newly created folder and select SVN Checkout (right above the TortoiseSVN entry).</li> <li>In the menu that comes up, input the URL of repository and then click</li> </ol> <p>OK.</p> <p>Once you've clicked OK, the folder will populate with everything on SVN. Any time you want to update the folder to newest revision, simply right click on the folder and select SVN Update from the Tortoise menu.</p>","tags":["macro"]},{"location":"macros/gallery/modbot/#how-to","title":"How To","text":"<p>To use ModBot</p> <ol> <li>Extract and place all included files from zip (all .mac and .inc files) into your MQ2 macro directory.</li> <li>From inside EQ, type /macro modbot (e.g. /macro modbot OR /macro modbot raidmode).</li> </ol> <p>This will build, if it doesn't exist, your MB_.ini file. Optional entries will make a</p> <p>MB__.ini. Being shrouded on startup without using an option will use your race and class for the</p> <p>creation of an MB__.ini file.</p> <ol> <li>From inside EQ, end the macro by typing /endmac</li> <li>Tab out of EQ, locate your new MB_.ini file in your macro directory, and open it. You can use the editor</li> </ol> <p>of your choice, but Notepad will work just fine.</p> <ol> <li>For every component of the macro you want to use, increase the respective \"count\", if you want two heals, set</li> </ol> <p>AHCount=2, if you want 2 debuffs, set ADCount=2, etc. After you have set your counts, save and close the INI file.</p> <ol> <li>Tab back over into EQ and restart the macro (/macro modbot). This will now populate your INI file based on the count</li> </ol> <p>entries that you made in the previous step</p> <ol> <li>End the macro again by typing /endmac</li> <li>Open the INI file once more and \"tweak\" the newly created entries to fit your needs. When you are done, save and</li> </ol> <p>close the INI file.</p> <ol> <li>Tab back over to EQ and restart the macro.</li> </ol> <p>Your bot should now be just that, a BOT and will listen to your every command (assuming you are the master).</p> <p>For examples of complete class ModBot INI files, please go to the example INI page.</p> <p>Please Note!! One thing to keep in mind throughout the configuration of the ModBot INI file: keep your most critical and most used spells, activities, etc., first in their respective INI sections. You don't want your mez spell as Debuff number 20, you don't want slow as debuff 10, you don't want a CBT based buff as buff 23, and you don't want CH as heal 1 (you want your most desperate heal as heal 1), etc. Configure your heals, buffs, debuffs, etc. in a highest priority first order.</p>","tags":["macro"]},{"location":"macros/gallery/modbot/#reference-to-understanding-the-modbot-wiki","title":"Reference to Understanding the ModBot WiKi","text":"<p><code>- Replace this with the respective descriptor</code> <code>Example 1 -_is luclin_bobby</code> <code>Example 2 -is bobby</code></p> <p><code>(text) - These are \"comments\" and should be removed when saving the respective file</code> <code>Example 1 - Send=1 (If set to 1 it will send netbots information over the network) This text:</code> <code>*``\\(If`````set</code> <code>to</code> <code>1</code> <code>it</code> <code>will</code> <code>send</code> <code>netbots</code> <code>information</code> <code>over</code> <code>the</code> <code>network)``\\*`should NOT appear in the INI file` ````` [text\\] - This is to show different options or series of options</code> Example 1 - /bc cast[, %t, grp,, etc]``</p>","tags":["macro"]},{"location":"macros/gallery/modbot/#plugin-requirements-examples","title":"Plugin Requirements &amp; Examples","text":"<p>I suggest you have a good understanding of how to configure each of these plugins. Any misconfiguration can have an adverse affect on the performance of ModBot</p> <p>MQ2EQBC &amp; EQBCS (/cheer OmniCtrl and ascii38 for this plugin)</p> <ul> <li>2/15/14 - EQBCS Wiki (with current code maintained by PMS)</li> </ul> <p>MQ2Cast (/cheer A_Enchanter_00 for this plugin) * ModBot will create a saved spell set using MQ2cast called ModBot2 and this information is stored in the MQ2Cast.INI file * 2/15/14 - MQ2Cast 10.x (does not require MQ2BagWindows) can be found here. MQ2NetBots (/cheer S0rcier for this plugin) Please use this copy for now. http://tools.assembla.com/kroak/export/474/plugs/MQ2NetBots.cpp The latest versions posted in the MQ2Netbots thread are stripped down copies that didn't address the real reason for the plugin locking up.</p> <ul> <li>The settings are located in _.ini in your MQ2 directory)</li> </ul> <p><code>/netbots on grab=on send=on</code></p> <p>MQ2Melee (/cheer S0rcier for this plugin) * The settings are located in _.ini in your MQ2 directory)</p> <p><code>/melee plugin=1</code></p> <p>MQ2Bandolier (/cheer wassup for this plugin)</p> <ul> <li>If you plan to use item swapping and spell foci items, you may need to configure \"sets\"</li> <li>2/15/14 - MQ2Exchange 3.00 and MQ2Bandolier 3.00 (no BagWindow) from Woobs can be found</li> </ul> <p>here. You may</p> <p>still need to use MQ2BagWindow and Moveitem.h to get MQ2Melee to compile.</p> <p>MQ2MoveUtils (/cheer outlander for this plugin)</p> <ul> <li>2/16/14 Current version maintained by PMS can be found</li> </ul> <p>here.</p> <p>MQ2Exchange (/cheer wassup for this plugin)</p> <ul> <li>2/15/14 - MQ2Exchange 3.00 and MQ2Bandolier 3.00 (no BagWindow) from Woobs can be found</li> </ul> <p>here. You may</p> <p>still need to use MQ2BagWindow and Moveitem.h to get MQ2Melee to compile.</p> <p>MQ2Twist (For Bards. /cheer Cr4zyb4rd and others for this plugin) (May also want to look at pages later in the thread.)</p> <ul> <li>2/15/14 - Current MQ2Twist Code from gse7en (use</li> </ul> <p>this or the one a few posts down from dewey2461)</p>","tags":["macro"]},{"location":"macros/gallery/modbot/#deprecated-plugins-no-longer-used-with-modbot","title":"Deprecated Plugins (no longer used with ModBot)","text":"<p>MQ2NetHeal (/cheer S0rcier for this plugin) (Elsewhere in the fourms it is frequently suggested to not use this plugin: /plugin mq2netheal unload then /plugin mq2netbots)</p> <ul> <li>The settings are located in _.ini in your MQ2 directory)</li> </ul> <p><code>/netheal on grab=on send=on</code> <code>/netcure on</code></p> <ul> <li>Note, the mq2netheal plugin is deprecated, and no longer needed for current release of modbot. It will, however</li> </ul> <p>continue to function the same with or without the plugin.. For heal related help, you must specify on the forums if</p> <p>you're using it.</p>","tags":["macro"]},{"location":"macros/gallery/modbot/#plugin-ini-examples","title":"Plugin INI Examples","text":"<p>Example _.INI for MQ2NetBots, MQ2NetHeal, MQ2Melee:</p> <p><code>[MQ2NetBots]</code> <code>Stat=1</code> <code>Grab=1</code> <code>Send=1</code></p> <p><code>[MQ2NetHeal]</code> <code>Stat=1</code> <code>Grab=1</code> <code>Send=1</code> <code>[MQ2NetCure]</code> <code>Watch=1</code></p> <p><code>[MQ2Melee]</code> <code>backstab=50</code> <code>disarm=1</code> <code>enrage=1</code> <code>evade=1</code> <code>facing=1</code> <code>hide=1</code> <code>infuriate=1</code> <code>melee=200</code> <code>meleepri=</code> <code>meleesec=</code> <code>petlock=1</code> <code>petmend=20</code> <code>petrange=75</code> <code>pickpocket=1</code> <code>plugin=1</code> <code>poker=</code> <code>resume=20</code> <code>sneak=1</code> <code>standup=1</code> <code>stickrange=200</code> <code>hideif=${If[${Select[${MakeCamp},off]} || !${Defined[CampStatus]},0,1]}</code> <code>sneakif=${If[${Select[${MakeCamp},off]} || !${Defined[CampStatus]},0,1]}</code> <code>stickcmd=hold ${If[${Target.Height}&lt;5,10,${Math.Calc[${Target.Height}+7].Int}]} ${If[!${Me.GroupSize} ||</code> <code>${Melee.AggroMode},moveback,${If[${Melee.BackStabbing},behind,!front]}]} ${If[${Me.Underwater},uw,]}</code> <code>version=3.999</code></p> <p>Example MQ2MoveUtils.INI for MQ2MoveUtils:</p> <p><code>[Defaults]</code> <code>AutoPause=on</code> <code>BreakOnWarp=on</code> <code>BreakDist=250.0</code> <code>BreakOnGate=on</code> <code>Verbosity=1</code> <code>stuckDist=0.8</code> <code>turnDirection=10.0</code> <code>stuckCheck=5</code> <code>StuckLogic=off</code></p> <p>Example MQ2Bandolier_.ini for MQ2Bandolier:</p> <p><code>[ThisSet]</code> <code>17=12345</code> <code>13=23456</code> <code>14=34567</code></p> <p>Example MQ2Cast.INI for MQ2Cast:</p> <p><code>[SpellSet..]</code> <code>ModBot2=123|1 456|2 789|3</code></p>","tags":["macro"]},{"location":"macros/gallery/modbot/#modbot-hud","title":"ModBot HUD","text":"<p><code>[_]</code> <code>Last=ModBotHUD</code> <code>SkipParse=7</code> <code>CheckINI=100</code> <code>UpdateInBackGround=on</code> <code>ClassHUD=on</code> <code>ZoneHUD=on</code></p> <p><code>[ModBotHUD]</code> <code>Target= 3,060,210,225,225,225,${If[${Target.ID},Dis:${Int[${Target.Distance}]}-Lvl:${Target.Level}-${Target.Class.ShortName}-${Target.PctHPs}%,]}</code> <code>Name1= 3,060,220,240,240,000,${If[${NetBots.Counts}&gt;=1,${NetBots.Client.Arg[1]} ${NetBots[${NetBots.Client.Arg[1]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[1]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[1]}].PctAAExp}]},NA]}</code> <code>HP1= 3,060,230,255,100,100,HP:${If[${NetBots.Counts}&gt;=1,${NetBots[${NetBots.Client.Arg[1]}].PctHPs},]}%</code> <code>Mana1= 3,105,230,100,100,255,M:${If[${NetBots.Counts}&gt;=1,${NetBots[${NetBots.Client.Arg[1]}].PctMana},]}%</code> <code>End1= 3,145,230,255,234,008,E:${If[${NetBots.Counts}&gt;=1,${NetBots[${NetBots.Client.Arg[1]}].PctEndurance},]}%</code> <code>Pet1= 3,185,230,255,255,255,Pet:${If[${NetBots.Counts}&gt;=1 &amp;&amp; ${NetBots[${NetBots.Client.Arg[1]}].PetID}&gt;0,${NetBots[${NetBots.Client.Arg[1]}].PetHP},]}%</code> <code>Name2= 3,060,240,240,240,000,${If[${NetBots.Counts}&gt;=2,${NetBots.Client.Arg[2]} ${NetBots[${NetBots.Client.Arg[2]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[2]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[2]}].PctAAExp}]},NA]}</code> <code>HP2= 3,060,250,255,100,100,HP:${If[${NetBots.Counts}&gt;=2,${NetBots[${NetBots.Client.Arg[2]}].PctHPs},]}%</code> <code>Mana2= 3,105,250,100,100,255,M:${If[${NetBots.Counts}&gt;=2,${NetBots[${NetBots.Client.Arg[2]}].PctMana},]}%</code> <code>End2= 3,145,250,255,234,008,E:${If[${NetBots.Counts}&gt;=2,${NetBots[${NetBots.Client.Arg[2]}].PctEndurance},]}%</code> <code>Pet2= 3,185,250,255,255,255,Pet:${If[${NetBots.Counts}&gt;=2 &amp;&amp; ${NetBots[${NetBots.Client.Arg[2]}].PetID}&gt;0,${NetBots[${NetBots.Client.Arg[2]}].PetHP},]}%</code> <code>Name3= 3,060,260,240,240,000,${If[${NetBots.Counts}&gt;=3,${NetBots.Client.Arg[3]} ${NetBots[${NetBots.Client.Arg[3]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[3]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[3]}].PctAAExp}]},NA]}</code> <code>HP3= 3,060,270,255,100,100,HP:${If[${NetBots.Counts}&gt;=3,${NetBots[${NetBots.Client.Arg[3]}].PctHPs},]}%</code> <code>Mana3= 3,105,270,100,100,255,M:${If[${NetBots.Counts}&gt;=3,${NetBots[${NetBots.Client.Arg[3]}].PctMana},]}%</code> <code>End3= 3,145,270,255,234,008,E:${If[${NetBots.Counts}&gt;=3,${NetBots[${NetBots.Client.Arg[3]}].PctEndurance},]}%</code> <code>Pet3= 3,185,270,255,255,255,Pet:${If[${NetBots.Counts}&gt;=3 &amp;&amp; ${NetBots[${NetBots.Client.Arg[3]}].PetID}&gt;0,${NetBots[${NetBots.Client.Arg[3]}].PetHP},]}%</code> <code>Name4= 3,060,280,240,240,000,${If[${NetBots.Counts}&gt;=4,${NetBots.Client.Arg[4]} ${NetBots[${NetBots.Client.Arg[4]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[4]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[4]}].PctAAExp}]},NA]}</code> <code>HP4= 3,060,290,255,100,100,HP:${If[${NetBots.Counts}&gt;=4,${NetBots[${NetBots.Client.Arg[4]}].PctHPs},]}%</code> <code>Mana4= 3,105,290,100,100,255,M:${If[${NetBots.Counts}&gt;=4,${NetBots[${NetBots.Client.Arg[4]}].PctMana},]}%</code> <code>End4= 3,145,290,255,234,008,E:${If[${NetBots.Counts}&gt;=4,${NetBots[${NetBots.Client.Arg[4]}].PctEndurance},]}%</code> <code>Pet4= 3,185,290,255,255,255,Pet:${If[${NetBots.Counts}&gt;=4 &amp;&amp; ${NetBots[${NetBots.Client.Arg[4]}].PetID}&gt;0,${NetBots[${NetBots.Client.Arg[4]}].PetHP},]}%</code> <code>Name5= 3,060,300,240,240,000,${If[${NetBots.Counts}&gt;=5,${NetBots.Client.Arg[5]} ${NetBots[${NetBots.Client.Arg[5]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[5]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[5]}].PctAAExp}]},NA]}</code> <code>HP5= 3,060,310,255,100,100,HP:${If[${NetBots.Counts}&gt;=5,${NetBots[${NetBots.Client.Arg[5]}].PctHPs},]}%</code> <code>Mana5= 3,105,310,100,100,255,M:${If[${NetBots.Counts}&gt;=5,${NetBots[${NetBots.Client.Arg[5]}].PctMana},]}%</code> <code>End5= 3,145,310,255,234,008,E:${If[${NetBots.Counts}&gt;=5,${NetBots[${NetBots.Client.Arg[5]}].PctEndurance},]}%</code> <code>Pet5= 3,185,310,255,255,255,Pet:${If[${NetBots.Counts}&gt;=5 &amp;&amp; ${NetBots[${NetBots.Client.Arg[5]}].PetID}&gt;0,${NetBots[${NetBots.Client.Arg[5]}].PetHP},]}%</code> <code>Name6= 3,060,320,240,240,000,${If[${NetBots.Counts}&gt;=6,${NetBots.Client.Arg[6]} ${NetBots[${NetBots.Client.Arg[6]}].Level} XP:${Int[${NetBots[${NetBots.Client.Arg[6]}].PctExp}]} AXP:${Int[${NetBots[${NetBots.Client.Arg[6]}].PctAAExp}]},NA]}</code> <code>HP6= 3,060,330,255,100,100,HP:${If[${NetBots.Counts}&gt;=6,${NetBots[${NetBots.Client.Arg[6]}].PctHPs},]}%</code> <code>Mana6= 3,105,330,100,100,255,M:${If[${NetBots.Counts}&gt;=6,${NetBots[${NetBots.Client.Arg[6]}].PctMana},]}%</code> <code>End6= 3,145,330,255,234,008,E:${If[${NetBots.Counts}&gt;=6,${NetBots[${NetBots.Client.Arg[6]}].PctEndurance},]}%</code> <code>Pet6= 3,185,330,255,255,255,Pet:${If[${NetBots.Counts}&gt;=6 &amp;&amp; ${NetBots[${NetBots.Client.Arg[6]}].PetID}&gt;0,${NetBots[${NetBots.Client.Arg[6]}].PetHP},]}%</code></p>","tags":["macro"]},{"location":"macros/gallery/modbot/#modbot-commands-syntax","title":"ModBot Commands &amp; Syntax","text":"<p>ModBot commands are executed in a few different ways:</p> <ul> <li>/bc</li> <li>/bc</li> <li>/bct</li> <li>/bct</li> </ul> <p>Are probably most common but check out the EQBC Forum thread for more methods / features.</p> <p>You can also configure an alias so you can run modbot on the character you control and execute ModBot commands.</p> <p>To create the alias you must run this from the EQ prompt:</p> <ul> <li>/alias /mb /echo mb-</li> </ul> <p>Or change the LoadAlias variable in MBCommon.inc [Settings] section from 0 to 1 if you've lost the alias in your Macroquest.ini</p> <p>With this alias you can tell your bot locally what to do:</p> <ul> <li>/mb makecamp</li> <li>/mb buffup</li> <li>/mb letsroll</li> <li>/mb</li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot/#command-reference","title":"Command Reference","text":"<p>Section Updated: June 7, 2009</p> <ul> <li>abort (Interrupts any cast in progress, Sets - DoHeals, DoDebuffs &amp; DoMelee FALSE and follows the sender</li> </ul> <p>closely, usefull when you want to RUN away)</p> <ul> <li>addbuff \"\\|\\\" ABSpellAlias ABTarType (Adds a new buff entry to the</li> </ul> <p>character's INI file.)</p> <ul> <li> <p>You must restart the ModBot macro after executing the addbuff command in order to complete the adding of the</p> <p>buff entry.</p> </li> <li> <p>The Spellname, etc. section can be entered directly (e.g. */mb addbuff \"Bone Mask of the Ancient Iksar|item\"</p> <p>iksar self_) or, if adding a clicky, by holding the item on your cursor (e.g._ /mb addbuff</p> <p>\"${Cursor.Name}|item\" iksar self*). Please note that the quotes around the spellname|gem section are required.</p> </li> <li> <p>ABTarType will accept multiple targets if quotes are used (e.g. */mb addbuff \"Levitiation|gem1\" levi \"war mnk</p> <p>rog\"*).</p> </li> <li> <p>addbuff execution will add ABGem, ABSpell, ABSpellAlias and ABTarType entries to the characters INI file. The</p> <p>remaining buff lines (ABSpellFociX, ABDurModX, etc.) will be added once you restart the ModBot macro (the array</p> <p>size change (ABCount) will also not increment until after re-start). For example, using these Bonemask example</p> <p>command, the following entires will be added to the INI file (where \"X\" is equal to whatever the next numbered</p> <p>entry is in your advbuff section):</p> </li> </ul> <p>ABGemX=item</p> <p>ABSpellX=Bone Mask of the Ancient Iksar</p> <p>ABSpellAliasX=iksar</p> <p>ABTarTypeX=self</p> <ul> <li>attack (Sets DoMelee TRUE and forces bot to attack the TankName's target)</li> <li>attack (Sets DoMelee TRUE and forces bot to attack the target)</li> </ul> <p>* Note: OffTank must be TRUE to use this option (I may remove this requirement though TBD)</p> <p>* Example 1 - /bc attack badguy</p> <p>* Example 2 = /bc attack badguy 100 20</p> <ul> <li>buffup (This will set DoBuffs &amp; DoEvents TRUE &amp; DoHeals FALSE)</li> <li>campout (Performs a /camp desktop and ends the macro)</li> <li>cast  &lt;on/off&gt; (This will disable or enable the spell associated with this alias)</li> <li>cast [&lt;spawnname/id&gt; \\&lt;%t&gt; ] [&lt;spawnname/id&gt; \\&lt;%t&gt; ] (infinte)</li> <li>If the spell is detrimental, CAST targets the requester's target.</li> <li>If the spell is beneficial, it targets the sender or, if grp is present, it casts buff on group members.</li> <li>If %t is present, it targets the requester's target.</li> <li> <p>The cast command will ignore INI settings for things like minmana, maxmana, recasts, buff debuff counters, etc.</p> <p>This command is mainly used for manual, \"one off\" type casts.</p> </li> </ul> <p><code>Example 1 - /bc cast buffhp grp haste bob haste jane dmgshld bob</code> <code>Example 2 - /bc cast dmgshld bob nuke tash</code> <code>Example 3 - /bc cast slow \"nasty add\"</code></p> <ul> <li>doafk [on, true, off, false, ]</li> <li>dobuffbot [on, true, off, false, ] (Places the bot in \"BuffBot Mode\".</li> </ul> <p>Currently once set to on or true, it will NOT turn off and you MUST restart the macro to \"quit\" this mode. It will</p> <p>cast any spell alias on the requesting target. The requester must be a \"master\". Example: /t buffhp</p> <ul> <li>dobuffs [on, true, off, false, ]</li> <li>docombines (Toggle that turns docombines on/off (default off). Docombines will check for an open tradeskill</li> </ul> <p>window with an enabled combine button (you have to select recipe), and will click the button. Upon a successful</p> <p>combine, Modbot's built in cursor handling takes over. Useful for tank to summon more arrows during fight. An</p> <p>associated event will fire and toggle docombines to FALSE when you run out of recipe components.)</p> <ul> <li>docures [on, true, off, false, ]</li> <li>dodebuffs [on, true, off, false, ]</li> <li>doevents [on, true, off, false, ]</li> <li>doforage [on, true, off, false, ]</li> <li>dofw [on, true, off, false, ]</li> <li>doheals [on, true, off, false, ]</li> <li>dolist (Used to /bc out the existing \"Do\" status)</li> <li>doloot [on, true, off, false, ]</li> <li>domelee [on, true, off, false, ]</li> <li>domount [on, true, off, false, ] (To cast a mount or not, used in conjunction</li> </ul> <p>with MountCast INI entry)</p> <ul> <li>dopet [on, true, off, false, ] (To cast a pet or not, used in conjunction</li> </ul> <p>with PetCast INI entry)</p> <ul> <li>dopull [on, true, off, false, ] (not fully production yet)</li> <li>dopull &lt;on/off/path&gt; (Self explanatory. See the instructions on forums.)</li> <li>doquest [on,true,off,false] (Default is TRUE. If set to FALSE, your looter will ignore items marked \"quest\"</li> </ul> <p>and still loot other items.)</p> <ul> <li> <p>Can be used to add quest items to your loot.ini file. For example, while holding an item on cursor, */mb doquest</p> <p>4 Hair of the Dog* will set the item you're holding to \"=Quest|4|Hair of the Dog|\" in loot.ini.</p> </li> <li> <p>Can also be used in conjunction with the QuestOnly variable (found in the setting section of the loot.ini</p> <p>file). If both doquest and QuestOnly are set to TRUE, your toon will only loot quest items. Also note that if</p> <p>QuestOnly is set to TRUE and doquest is set to FALSE, your toon will only loot cash off of mobs.</p> </li> <li> <p>Please see the modloot section found</p> <p>here for more information on the</p> <p>loot.ini file.</p> </li> <li> <p>dosit [on, true, off, false, ]</p> </li> <li>dosongs [on, true, off, false, ] (used for bards only)</li> <li>dotells [on, true, off, false, ] (Toggles a beep when tells are recieved from</li> </ul> <p>non-netbots toons. Useful for tells in background sessions)</p> <ul> <li>**exclude ** (Adds to alert list, to save list you must use the \"save\" option, otherwise</li> </ul> <p>it will not be written to the INI file)</p> <ul> <li>The exclude list is dynamic and will only exclude mobs that are present in the zone AND that are on the list.</li> <li> <p>If you want to force an exclude you must edit the INI file and place a \"#\" in front of the mobs name (e.g.</p> <p>ExcludeList=a dusty barrel|a dark coffin|#a bitten victim|a hollow tree|, this will always force \"a bitten</p> <p>victim\" to be on the exclude list)</p> </li> <li> <p>Use the following commands from a character to add mobs to the exclude list (Kroak suggested just tossing this</p> <p>in a two-line hotkey):</p> <ul> <li>/bcaa //mb exclude ${Target.CleanName} Will write the exclusion to a string that is checked through the</li> </ul> <p>debuff loop</p> <ul> <li>/bcaa //mb exclude save Will write the exclusion in the mbcommon.ini and that exclusion includes the zone</li> </ul> <p>id, so mobs of the same name in a different zone are NOT excluded. You shouldn't have to re-run the macro</p> <p>after an exclude but if you do this in the midst of comabat or something, while mobs are near, it may not</p> <p>\"take\" as quickly.</p> </li> <li> <p>For mob names with spaces in them, simply enter the name without any quotations. For example:</p> <ul> <li>''/bcaa //mb exclude a small bat</li> </ul> </li> <li> <p>See the Include command (found below) to temporarily remove a mob from the alert list</p> </li> <li> <p>follow (Follows the sender or )</p> </li> <li>follow close (Follows the sender within 3 steps, very close)</li> <li>give (Calls the sub GiveCheck to hand an item to a toon or NPC.)</li> <li>ItemCount is optional and will default to 1.</li> <li> <p>The give command can be used in conjunction with categories that have been defined in the loot.ini. For</p> <p>instance, if you have items marked 'SpellScroll' in your loot.ini, and the Category variable has \"SpellScroll\"</p> <p>included, you can issue the give command as follows: /mb give Bob SpellScroll TRUE. The result will be that</p> <p>all items on your toon that are marked with that category (SpellScroll) in your loot.ini will be handed to Bob.) * goto   (Bot will move to the loc given) * handin (Target an NPC or PC, get one item on your cursor, and all of that item will be handed to them and trade</p> </li> </ul> <p>or give button pressed.)</p> <ul> <li>holdup (This will set DoBuffs,DoDebuffs,DoEvents,DoMelee all to FALSE)</li> <li>include  (Removes  from alert list, this will not save to the INI file, see exclude save)</li> <li>letsroll (This will set DoBuffs,DoHeals,DoMelee,DoEvents,DoDebuffs TRUE)</li> <li>makecamp (This will Makecamp at existing location. Use /makecamp off or /mb stop to toggle makecamp</li> </ul> <p>functionality off)</p> <ul> <li>mana (Used to /bc out the existing Mana % of the bot)</li> <li>mbpause or mbp [on, true, off, false, ] (Used to pause or unpause the</li> </ul> <p>macro)</p> <ul> <li>mbwayplay (Used to playback previously recorded paths / waypoints, through zones, doors, chaining</li> </ul> <p>paths, etc.)</p> <ul> <li>mbwayrec (Used to record a path / waypoint.)</li> <li>Once started, ducking for each location will add a waypoint to the path.</li> <li>Sitting stops path recording and returns to modbot functions.</li> <li>To add doors, chains, pull locations, etc. you'll need to edit the MBWayPlay.INI file</li> <li> <p>Further information about mbwayplay and mbwayrec (along with examples) can be found</p> <p>here in the wiki. * offtank &lt;on/off&gt; (Toggles offtanking for dealing with adds.) * script (This will allow you to run custom commands while the macro is running, or</p> </li> </ul> <p>combine series of commands, see script examples in manual / rev notes)</p> <ul> <li>sell (You must be within range of a merchant in order to function, it will sell loot marked as</li> </ul> <p>\"=SELL\" in the loot.ini file)</p> <ul> <li>sell (With NPC targeted will attempt to sell all items marked \"sell\" in your lootIni file to</li> </ul> <p>target. Otherwise optional target name can be supplied.)</p> <ul> <li>setinivar (This will find and change any setting in your .ini)</li> <li> <p>Note that this command will have trouble with script settings if you have more than one (it will set the first</p> <p>C1= or whatever that it comes to.</p> </li> <li> <p>Variables changed in the .ini are /varset with the macro running</p> </li> <li> <p>Spells, gems, etc. will not be set unless you use the array correctly for . In other words,</p> <p>ADGem[1] is not the same as ADGem1:</p> <ul> <li>Use ADGem[1] and this will set the ADGem1 .ini setting and varset the change to memory.</li> <li>Use ADGem1 and it will only change the .ini.</li> </ul> </li> <li> <p>This still has a problem finding variables in very long sections. If /echo \\({Ini\\[\\),</p> <p>]} is over the MAX_STRING value - (You go LD typing that if it is). - Stuff like ABGem[20] is almost never found. (Still working on that.)</p> </li> </ul> <p>For example, Ligament Slice for a rogue was set up from in-game with these commands typed in to the MQ window (and the rogue was able to put it immediately to use):</p> <p>/mb setinivar ADCount 4</p> <p>(restart macro - had 0 count before)</p> <p>/mb setinivar ADGem[1] alt</p> <p>/mb setinivar ADSpell[1] Ligament Slice</p> <p>/mb setinivar ADTarBegHP[1] 40</p> <p>/mb setinivar ADTarCnt[1] 1</p> <p>/mb setinivar ADTarType[1] 1</p> <p>/mb setinivar ADAnnounce[1] /bc</p> <p>/mb setinivar ADSpellAlias[1] snare</p> <ul> <li>sing (Will sing this song and add the respective gem number to the Twist.List, it attempts to use</li> </ul> <p>detrimental as the qualifier to add it to combat songs, or rest songs)</p> <ul> <li>stop (Will stop following and/or stop in place)</li> <li>sung (Will remove this song from the respective Twist.List, it attempts to use detrimental as the</li> </ul> <p>qualifier to remove it from combat songs, or rest songs)</p>","tags":["macro"]},{"location":"macros/gallery/modbot/#modbot-in-game-usage-and-commands","title":"ModBot in game usage and commands","text":"<p><code>Example commands:</code> <code>/bc Bob follow me [This tells bob and only bob to follow me]</code> <code>/bc cast dd [this tells every bot to cast the spell alias dd]</code> <code>/bc shamandude cast buffsta grp buffhp focus grp buffhp %T [buffsta on the group, buffhp on the requester, focus on the group, buffhp on requesters target]</code> <code>/bc necroguy makecamp [this tells \"necroguy\" to makecamp]</code> <code>/bc campout [tells all bots to camp to desktop]</code> <code>/bc exclude ${Target.CleanName} [tells all bots to add your target to the exclude / ignore list, toons will not attack any spawn with that name.]</code> <code>/bc clericname dobuffs on [tells the cleric to set DoBuffs to true and will then begin buffing group]</code> <code>/bc pallyguy cast bmb %t buffhp grp [bmb on requesters target, buffhp on the group]</code></p> <p><code>Typical commands sequence for an EXP group:</code> <code>/bc letsroll</code> <code>/bc makecamp</code> <code>You then begin to pull mobs and they will react accordingly.</code></p> <p><code>Mobile Camp Example:</code> <code>/bc follow</code> <code>/bc buffup</code> <code>[once ready zone into the instance]</code> <code>/bc stop</code> <code>/bc letsroll</code> <code>[clear first room lets say]</code> <code>/bc follow</code> <code>[move to next room]</code> <code>/bc makecamp</code> <code>[etc, repeat]</code></p> <p><code>Example movement options with or without invis</code> <code>/bc mbp on</code> <code>/bc follow</code></p> <p><code>Make a EQBC Channel and do things like (using this technique you don't even have to be a master)</code> <code>/bct mycoolchannelname //mb letsroll</code> <code>/bct mycoolchannelname //mb campout</code></p>","tags":["macro"]},{"location":"macros/gallery/modbot/#modbot-ini-settings","title":"ModBot INI Settings","text":"","tags":["macro"]},{"location":"macros/gallery/modbot/#preface-notes","title":"PreFace Notes","text":"<ul> <li>Spell Alias's must be unique across all alias's</li> </ul> <p>Obsolete? 06272011 -Changed - ?</p> <p><code>\"cast\" command usage now allows for multiple aliases. If you have several spells with the same alias, using /bc castwill now cast all spells marked.</code> <code>Example, for shaman you can have Fo7, Talisman of Boar, Talisman of Wrulan, Talisman of Tribunal, ect.. all marked with \"fullgroup\". \"/mb cast fullgroup\" will</code> <code>cast each spell in the order they are found in the .ini file.</code> <code>Buffing -```Group buffs can now be seperated to different classes, and will allow keeping the spell on netbots members in seperate groups from the caster with the inclusion of keyword</code> \"raid\". Example -`</p> <pre><code>`ABSpell2=Focus of the Seventh`\n`ABSpellFoci2=`\n`ABDurMod2=50`\n`ABSpellAlias2=fo7|grpfocus|fullgroup`\n`ABAnnounce2=`\n`ABSpellMinMana2=20`\n`ABTarCnt2=2`\n`ABTarType2=war shd pal rng mnk rog brd bst ber shm dru wiz mag enc nec raid`\n`ABRecast2=FALSE`\n`ABSpellIcon2=`\n`ABPreCondition2=TRUE`\n````` Note from the above example that clr is not included in the TarType.. My clerics have the spell blocked. Attempting to cast on them will cause a chain loop of ```casting until the cleric gets self buff on that doesn't \"stack\" with focus. - so watch spell stacking and make sure to set your toons accordingly.``\n````` Old format of \"self\" will also work with no change if you don't want to buff other groups with the spell.\n</code></pre> <p><code>Commands -</code> <code>Tell commands will now check buff aliases, and don't need \"cast\" to ask for buffs.. \"/tellfullgroup\" from a non-master toon will make the shaman cast</code> <code>every spell with that alias on the sender of the tell. Masters still require use of \"cast\". - This does allow guildies or whoever else knows your aliases to get</code> <code>buffs easily.</code> <code>/say is not affected and is still not enabled for modbot.</code> <code>Added \"docommand\" -```Master toons that aren't in netbots can now directly command toons. \"/telldocommand /sit\" will make the receiving toon sit, or execute any command after</code> the \"docommand\" keyword. - Word of caution - You can cause macro errors with this if you aren't careful. The command sent is executed directly with /docommand in the macro.<code>`A tell received of \"/telldocommand /sit\" will locally execute \"/docommand /sit\" Watch extra characters and or brackets.. - Because of the nature of this one,</code> <code>the commanding toon MUST be listed in MasterList.</code></p> <ul> <li>You should be familiar or at least capable of making MQ2Bandolier sets as they are used by MQ2Cast for \"foci\"</li> </ul> <p>items</p> <ul> <li>Please treat the Buff, Debuff, Event, Heal INI sections as a first in first out (FIFO). Highest priority to lowest</li> </ul> <p>priority, you don't want mez or slow as ADSpell12 but as ADSpell1. You don't want AHHeal1 as Complete Heal, you want</p> <p>AHHeal1 to be DA/DB (those are examples, use common sense)</p> <ul> <li>If you want to add some visual zip to your announcements (things are easy to miss in /bc..), you can use color</li> </ul> <p>coding and the like in any of your Announce settings. For example, *ADAnnounce1=/bc [+r+]Group Mez[+x+]</p> <p>\\&lt;\\&lt;[+y+] %t &gt;&gt; with %s [+x+]* will produce a line in the MQ chat window that is MUCH easier to</p> <p>see than the regular fonts.</p> <ul> <li>Rk. XX Usage - Heals, buffs, debuffs, and cures have code added to check your book and find the correct version of</li> </ul> <p>the spell you're using on startup of modbot. Rk. II and Rk. III are not needed, but only for these sections. If you</p> <p>upgrade a normal spell in these sections to Rk. II or III, restarting the macro will make the new spell work. Please</p> <p>note that this does not apply to discs, potionbelt, abilities, or PetCast at this time (meaning you must include the</p> <p>Rk. XX in the spell name for these types).</p> <ul> <li>Setting spell duration modifications (AHDurMod, ADDurMod, ABDurMod, AEDurMod) - Use the following formula to</li> </ul> <p>determine what number to set your DurMod at:</p> <p>\\({Spell[X\\].Duration} \\* (\\)) == timer duration.}+${Spell[X].Duration</p> <p>So if you want a 25% extension on the timer, set durmod to 25 to make ${Spell[X].Duration} * 1.25 = timer. Modbot shouldn't re-cast if timer is still running.</p>","tags":["macro"]},{"location":"macros/gallery/modbot/#references","title":"References","text":"<ul> <li>tnt = TankName Target</li> <li>grp = group</li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot/#settings-section-settings","title":"Settings Section [Settings]","text":"<ul> <li>DoMelee=TRUE|FALSE</li> <li>DoHeals=TRUE|FALSE</li> <li>DoBuffs=TRUE|FALSE</li> <li>DoDebuffs=TRUE|FALSE</li> <li>DoEvents=TRUE|FALSE</li> <li>DoCures=TRUE|FALSE</li> <li>DoPull=TRUE|FALSE</li> <li>DoPet=TRUE|FALSE</li> <li> <p>Must have a buff entry for creating a pet (in the AdvBuff section - see note for ABTarType). Also see note for</p> <p>Cleric pets under PetCast below. * DoSit=TRUE|FALSE * DoLoot=TRUE|FALSE * DoFW=TRUE|FALSE   * Should I cast spells for food and water. (see FoodSpell and DrinkSpell entries) * DoForage=TRUE|FALSE * ForageIni=name of ini file for forage   * Defaults to forage.ini. Please see the Related include files page for more information on the Forage.ini file. * DoAfk=TRUE|FALSE * DoMount=TRUE|FALSE   * If set to TRUE, you must complete the MountCast entry below. * MountCast=Spell/Item name/AA name|gem #,item,alt   * Use MQ2Cast syntax without quotes. Examples: * MountCast=Collapsable Roboboar|item * MasterList=PC Name,PC Name   * Comma delimited list of names. Can also use ${NetBots.Client} to designate that any chars using NetBots can</p> <p>act as master. Examples:</p> <ul> <li>MasterList=Bigbob,Sooper</li> <li>MasterList=${NetBots.Client}</li> <li>TankName=PC Name,PC Name</li> <li>Comma delimited list of names. This variable will also be set when you designate a character using either the</li> </ul> <p>Main Tank or Main Assist group roles.</p> </li> <li> <p>Can also use ${Group.MainTank.Name} to auto set this to whomever is set in the group main tank role. Examples:</p> <ul> <li>TankName=Billytank,Larrytank</li> <li>TankName=${Group.MainTank.Name}</li> </ul> </li> <li>Radius=#</li> <li> <p>Radius that I will monitor for NPCs. If you are having issues with your characters not casting buffs, etc. while</p> <p>not in combat, try adjusting the Radius setting down a bit to make certain that they are not pickng non-aggro</p> <p>mobs in the surrounding area. Example:</p> <ul> <li>Radius=100</li> <li>ExcludeList=npcname|npcname|</li> <li>Pipe delimited names to exclude. Please note that you must have a Pipe \"|\" at the end. Example:</li> <li>ExcludeList=a hollow tree|a broken barrel|</li> <li>SitAggroRadiusCheck=#</li> <li>Radius to check for aggro to see if I can sit. Default is 75.</li> <li>AfkMessage=afk message</li> <li>Enter a custom AFK message if desired (leave blank for no AFK message).</li> <li>Default is \"Not now, thanks\".</li> <li>DeathSlot=TRUE|FALSE</li> <li>Will only be true if your bot needs to camp to desktop to save res timer. This way the macro will know if you</li> </ul> <p>died and had to camp out. * NetworkIni=Path and filename of ini file   * Option for a network based INI file for scripts and path playback (mbwayplay and mbwaypnt.ini file).   * File must be prefixed by \"Network-\" or \"Net-\"   * Example: NetworkINI=X:\\shared\\modbot\\mb_network.ini * TraderName=toon name|bazaar trader   * For use with the Campout command. Example: * /bc campout trader will log in whatever toon you have set in the TraderName variable.   * Second argument (|bazaar trader) will log in the toon and run the bazaar macro with the trader option (or any</p> <p>other mac+options you want there.) * FollowDistance=#   * Designates how far you will stay from followee.   * Default 20. * FollowStick=MQMoveUtils Options   * If using MQ2MoveUtils, enter the options that you would like to use. Default 20 hold uw. Example: * FollowStick=20 hold uw * PetAggro=TRUE|FALSE   * TRUE - pet taunt on   * FALSE - pet taunt off * PetAssist=[1]   * Assist and pet attack or not * PetFoci=[-bandolier|petfoci]   * Any spell foci you want to swap in for this spell using MQ2Cast syntax, you must have previously created the set</p> <p>via the MQ2Bandolier plugin /createset command. * PetShrinkSpell=pet shrink spell name|gem#   * Spell to be used to shrink your pet. Leave blank if you don't want your pet shrunk. Example: * PetShrinkSpell=Tiny Companion|gem9 * GoMNuke/GoRMNuke/GoERMNuke/GoDERMNuke=[]   * GoMNuke, GoRMNuke, GoERMNuke and GoDERMnuke will only appear if the toon has the AA available upon startup.</p> <p>These settings only require the * ALIAS * of the debuff you want to be \"cast\" on the MA's target when the</p> <p>event fires. No script required. * **SummonFood=spell name,item name,alt</p> </li> </ul> <p>name|gem#,item,alt&lt;/span&gt;**</p> <ul> <li> <p>These entries appear when DoFW is set to TRUE. Use MQ2Cast syntax for spell entry. Example:</p> <ul> <li>SummonFood=Summon Food|gem12</li> </ul> </li> <li> <p>**SummonDrink=spell name,item name,alt</p> </li> </ul> <p>name|gem#,item,alt&lt;/span&gt;**</p> <ul> <li>MQ2Cast syntax. Example:<ul> <li>SummonDrink=Summon Drink|gem8</li> </ul> </li> </ul> <p>Deprecated Entries</p> <ul> <li>DoAura=[TRUE,FALSE] (Must have a completed AuraCast entry below) DEPRICATED!! Set up aura as a buff with</li> </ul> <p>'self aura' as the ABTarType.</p> <ul> <li>AuraCast=[\\|\\,item,alt&gt;] (Example: Uber Aura|gem3) - DEPRICATED! Set up aura</li> </ul> <p>as a buff with 'self aura' as ABTarType. Use MQ2Cast syntax without quotes.</p> <ul> <li>PetCast=|gem\\&lt;#&gt;|(for Suspended Minion II)] (PLEASE NOTE: As of 3.499 beta, PetCast is</li> </ul> <p>no longer needed. You can now add pet to \"AB\" section by setting ABTarTypeX=petspell (or petcast). Pets won't be</p> <p>cast unless DoBuffs and DoPet are true. Also shouldn't cast if in combat unless \"cbt\" is included in ABTarType. When</p> <p>used with modbuff, Persistent Minion is also used automatically if you have it, and no extra entry needed. Original</p> <p>entry: Spell to cast to create / recall pet. Example: PetCast=Animate Dead|gem8|smii (Mainly MQ2Cast syntax</p> <p>without quotes))</p> <ul> <li> <p>Can also use for charming:</p> <ul> <li>[charm \\&lt;NPC type 0=any 1=undead,vampyre 2=animal 3=summoned 4=(specify name</li> </ul> <p>type)&gt; ]</p> <ul> <li>Example: PetCast=charm 4 4 \"lowland basilisk,a emerald drake\"</li> <li>For Cleric Hammer type pets that you only want to cast / have while in combat, you MUST have DoPet set to False</li> </ul> <p>AND have PetCast=|\\,item,alt&gt;)</p> </li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot/#advmelee-melee","title":"AdvMelee [Melee]","text":"<ul> <li>OffTank=TRUE|FALSE</li> <li>False - attack the MA target only</li> <li>True - assist MA and then not change targets</li> <li>ACLeash=#</li> <li> <p>The farthest the bot will move from where he is to engage a mob. However if \"TankName\" stays within 20 steps,</p> <p>the bot will exceed this leash. * ACAssistPct=#   * Assist when target HP is this or less. Melee characters will engage at this point and caster pets will be sent</p> <p>in. * ACManaPct=#   * Stop assisting when Mana drops below this. * Set to 0 for melee only * Set to 101 for non-melee casters * ACAnnounce=channel   * Channel to announce in, or leave blank for no announce. Example: * ACAnnounce=/bc Will announce in MQ/EQBC window * ACAnnounce=/g Will announce in group chat * ACMeleeCmd=command   * Use to set MQ2Melee commands. Example: * ACMeleeCmd=/melee plugin=1 * ACBefore=script   * Special script code to execute before you engage. Example: * *ACBefore=/if ({ACMATarget} &amp;&amp; {Spawn[{ACMATarget}].Type.Equal[NPC]} &amp;&amp;</p> <p>{Spawn[{ACMATarget}].Distance3D}\\&lt;={ACLeash} &amp;&amp; {Me.CombatAbilityReady[Sneak Attack]} &amp;&amp; {Me.Invis} &amp;&amp;</p> <p>{Me.Sneaking} &amp;&amp; {Me.PctEndurance}&gt;40 &amp;&amp; !{Me.Moving}) /call mbscript SneakAttack*</p> <ul> <li>ACBefore=/if (!{Me.Pet.ID}) /casting ''{PetCast}'' \\&lt;-- cleric pet hammer example</li> <li>ACAfter=script</li> <li>Special script code to execute after you leave combat. Uses same script format as ACBefore.</li> </ul> </li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot/#advheal-section-advheal","title":"AdvHeal Section [AdvHeal]","text":"<p>Please note that for FD class toons and ${Group.Puller} - If they are out of ACLeash range and not FD, they will not be healed (to prevent aggro on group), but only if healer is not in 'combat' combatstate. If you have the newest NetBots from SVN, another check will be done on the NetBots[].CombatState that needs healing. If not in combat they will be healed.</p> <p>For group heal spells, you must set the AHTarCnt to something greater than 1 in order for the spell to evaluate correctly (and be used as a \"group\" heal when more than one member of the group requires healing). For instance, if you have AHTarCnt=3, then at least 3 members of your group will need to be below the HP level that you set in the AHClass line. A possible issue may arise when the cleric is in a loop state where a single heal is being fired \\(AHHealMode\\) - it may take a bit for it to realize the single heal should be stopped and the group heal cast instead. Depending on how you have it configured, the use of AHHealMode can force it to not even check the your group heal spell as it's being told to only check one \\(the single heal\\). If this is the case (and not the desired result), perhaps use the group heal as the spell to check in AHHealMode.</p> <ul> <li>AHCount=#</li> <li>Number of heals you plan to have.</li> <li>AHCheckTime=#</li> <li>How often to check for heals in seconds.</li> <li>AHHealOOBC=TRUE|FALSE</li> <li>Do I heal characters outside of Netbots and EQBC (e.g. folks not running MQ2 or mercenaries.)</li> </ul> <p><code>AHHealOOBC</code> <code>Thinking of an english name for that setting, all that comes up is \"Heal Outside Of BC\".</code> <code>So, in other words, if the setting is FALSE, it won't heal anyone that's not on YOUR EQBC server with the netbots plugin set up correctly, even if they're in your group.</code> <code>That is why I recommend you connect all toons and run modbot on all of them at least once, even if you don't plan to run it as a regular thing for the other toons.. It assures the plugins are set correctly.</code> <code>If AHHealOOBC=TRUE, then modbot will heal group members and pets even if there's no netbots connection.</code> <code>Out of group healing can only be done by the macro if there's a netbots connection, or if the other toon is a master and uses the cast command via /tell.</code> <code>I do recommend AHHealOOBC=TRUE setting, but I still left the default FALSE so people could check their connections before setting TRUE.</code></p> <ul> <li>AHHealMode=#|#|#</li> <li>0 or 1 (off or on)|Heal #|Timer</li> <li> <p>This will keep the toon in the heal loop after casting  to check for additional heals for the duration</p> <p>of . * AHInterruptLevel=#   * Lowest interruptable spell. For example, AHHealSpell1 will never interrupt if this is set to 2. * AHClassPriority=class names   * Set class healing priority (e.g. if you're currently healing a chanter, you won't interrupt for a monk). * Allowed entires are: enc,wiz,mag,nec,clr,dru,shm,pal,shd,war,bst,rng,ber,rog,brd,mnk (or any combination</p> <p>thereof) * AHAllowDismount=TRUE|FALSE   * Designate whether your toon should dismount (or not) to interrupt a spell to cast a heal   * TRUE - allow toon to dismount if necessary to interrupt a spell cast in order to fire off a heal.   * FALSE - your toon will never dismount to interrupt a spell. * AHGem[x]=source   * Designate what the source of the spell is.   * Valid entries: gem number, alt, ability, item, script, potionbelt   * Note that 'potionbelt' does not require a slot number.   * Examples: * AHGem1=3 Cast this spell from gem 3 * AHGem1=alt This spell is an alternative advancement ability * AHSpell[x]=source name   * Valid entries: spell name, item name, alternate ability name, ability name, script name   * Examples: * AHSpell1=Superior Healing This would be generally be paired with an AHGem1 entry indicating which spell</p> <p>gem to cast Superior Healing from.</p> <ul> <li>AHSpell1=Healing Thingy of Uberness This would be generally be paired with an AHGem1 entry indicating that</li> </ul> <p>the source of this spell is an item. * AHSpellFoci[x]=setname   * Bandolier set name to swap in before casting this heal.   * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * AHDurMod[x]=##   * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%).   * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100%</p> <p>(e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the</p> <p>correct extension. * AHSpellMinMana[x]=#   * Minimum mana percentage to have in order to attempt this heal (e.g. 05 \\(for 5%\\), 25 (for 25%) * AHSpellAlias[x]=spell alias   * Alias name for the heal.   * Please note that you can NOT have spaces in your alias names. * AHAnnounce[x]=channel   * Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for</p> <p>further explanation. * AHTarCnt[x]=#   * Designate how many targets are required to cast this spell. * AHClass[x]=class name(s)   * Valid entries: pc pet group hp0 war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec tnt mypet self</p> <p>(or some combination there of). Please see the MQ2NetHeal plugin for full options. Please also note the</p> <p>following combination restrictions:</p> <ul> <li>pc \\&lt;-- will include pc's and mercs. Leave pet out to ONLY heal PC's and mercs.</li> <li>pet \\&lt;-- will include pets. Leave pc option out for pet only heals.</li> <li>group \\&lt;-- will exclude everyone that is not in your group</li> <li>hp0 \\&lt;-- set an overall health percentage for any named classes</li> <li>classnames (war, shd, etc.) \\&lt;-- used to declare which classes this heal should apply to. Can also be</li> </ul> <p>combined with a health persentage (e.g. bst50).</p> <ul> <li>mypet to be used by itself (e.g. set up a seperate heal for your pet)</li> <li>tnt \\&lt;-- Tankname target. Use for lifetap spells ONLY.</li> <li>self \\&lt;-- Only use self if the heal spell is SELF ONLY, or only to be cast on yourself. This setting is</li> </ul> <p>exclusive and other targets will not be checked for that spell. * AHPreCondition[x]=TRUE|FALSE|PR   * Defaults to TRUE   * PR (only to be used with NetBots) If AHPreCondition[x]=PR, then for that particular heal there will be a</p> <p>check on target (over NetBots) for any PR type spell. If target has a PR buff on, then the heal will be skipped.</p> <p>Please note that the PR setting does not currently account for the duration remaining of the PR buff.</p> <p>AHPreConditionX=PR will check for these spell ID's:</p> <ul> <li>9755 (Promised Renewal)</li> <li>9756 (Promised Renewal Rk. II)</li> <li>9757 (Promised Renewal Rk. III)</li> <li>18270 (Promised Recuperation)</li> <li>18271 (Promised Recuperation Rk. II)</li> <li>18272 Promised Recuperation Rk. III)</li> </ul> </li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot/#advdebuff-section-advdebuff","title":"AdvDebuff Section [AdvDebuff]","text":"<ul> <li>ADCount=#</li> <li>Number of debuffs you plan to have.</li> <li>ADMobMax=#</li> <li> <p>This is the array size where the valid mob ID's are stored after found. The loop to find valid mobs uses</p> <p>SpawnCount, then stores the mobs it \"finds\" in the array. Setting this to 20 or 30 should be way more than</p> <p>enough ever. It is best to keep this setting (and therefor the array) relative small for memory purposes (as</p> <p>well as for speed through the debuff loop).</p> </li> <li> <p>If your toons are ignoring NPCs, this number may be set too low. First thing to check!!</p> </li> <li>ADCheckTime=#</li> <li>How often to check for debuffs in seconds.</li> <li> <p>\"It's the forced delay or timer between allowing that section of the macro to execute again.. Set higher for</p> <p>toons you want to have more emphasis somewhere else.. Like a cleric can be 8 for debuffs and 0 for heals, but a</p> <p>shammy you'd want 0 for debuffs. 0 = no forced delay. Speed still varies depending on the size of the loops or</p> <p>how many heals, debuffs, ect are in each section.\" - toomanynames * ADAggroOnly=1|0   * 1 - only add mobs to the mob list if someone in your group or in netbots is the mob's target. Only use this</p> <p>option on bots that cast on targets that are NOT the main assist's target (e.g. chanter mezzing adds).</p> </li> <li> <p>Please note: ADAggroOnly is not terribly reliable at times. If you are having issues with one of your bots</p> <p>auto-aggroing mobs (when they are not the tank), try setting ADAggroOnly=0 and then ADTarType=1 or 11. * ADHold=0|1|1|   * 1=on 0=off|Debuff spell #|Time to wait for debuff|   * This is used much like the AHHealMode setting, but only for type 12 debuffs. Sets a timer to hold the toon in</p> <p>the debuff loop (no buffs or events) until the debuff is complete. * ADGem[x]=source   * Designate what the source of the spell is.   * Valid entries: gem number, alt, ability, item, script, potionbelt   * Note that 'potionbelt' does not require a slot number.   * Examples: * ADGem1=3 Cast this spell from gem 3 * ADGem1=alt This spell is an alternative advancement ability * ADSpell[x]=source name   * Valid entries: spell name, item name, alternate ability name, ability name, script name   * Examples: * ADSpell1=Ensnare This would be generally be paired with an ADGem1 entry indicating which spell gem to cast</p> <p>Ensnare from.</p> <ul> <li>ADSpell1=Bangy Thingy of Uberness This would be generally be paired with an ADGem1 entry indicating that</li> </ul> <p>the source of this spell is an item. * ADSpellFoci[x]=setname   * Bandolier set name to swap in before casting this spell. Please see MQ2Bandolier and MQ2Cast to understand how</p> <p>to use swap sets. * ADDurMod[x]=##   * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%).   * Due to how spell durations / extensions are calculated, you may need to enter extensions in excess of 100% (e.g.</p> <p>a 25% extension would be entered here as 125). Check your results in game to make sure you have set the correct</p> <p>extension. * ADSpellAlias[x]=spell alias   * Alias name for the spell. Please note that you can NOT have spaces in your alias names. * ADAnnounce[x]=channel   * Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for</p> <p>further explanation. * ADSpellMinMana[x]=#   * Minimum mana percentage to have in order to attempt this spell (e.g. 05 \\(for 5%\\), 25 \\(for 25%) * **ADSpellRecast[x]=\\#**   * Number of times to recast this spell for fizzles, interrupts, etc. * **ADSpellCastonResist[x]=spell alias**   * Should this spell be resisted, is there another alias to cast before another attempt of this spell.   * Please note that if ADSpellCastonResist is defined, ADSpellRecast must be at least 1. * **ADSpellDelay[x]=\\#**   * Number of seconds to wait between casts of this spell. * **ADTarCnt[x]=\\#**   * Number of targets required to be present to cast this spell. If set to 0, this spell will not be auto-casted\\) * ADTarType[x]=#   * Designate one target type to cast this debuff on.   * Valid target types: * 0 = All mobs * 1 = MA Target only * 2 = All except MA Target * 10 = All mobs before next spell * 11 = MA target only before next spell * 12 = All but MA target before next spell   * Priority Debuffs (10, 11, 12) should be placed first most (prior to non-priorities). Meaning - settings of 10,</p> <p>11, and 12 need to be in top spells slots (ADGem1, ADGem2, etc) * ADTarBegHP[x]=#   * The target must be equal or below this HP%. * ADTarEndHP[x]=#   * The target must be equal or above this HP% * ADIfSpellImmune[x]=script name   * This is meant to be a pointer to a quick, one line script that is executed when a mob is immune to the spell you</p> <p>have cast. If you need to do something complicated, other scripts can be called from it. 'Param1' is now passed</p> <p>as the immune target's ID. An example where this would be useful is for chanter mez:</p> <ul> <li>/bc {TankName} //multiline ; /varset ACMATarget {Param1};/target id {Param1} will make your</li> </ul> <p>toon target the immune mob even if he was on another mob at the time. * ADUseHoTT[x]=#   * This will cause the macro to /target the mob and check TargetOfTarget before casting and delay # seconds before</p> <p>checking again if mob is skipped. If not a raid or group member, the macro will move on and recheck that mob for</p> <p>that debuff after the time has expired. Note that this will default to casting the debuff anyways if HoTT isn't</p> <p>available. * ADPreCondition[x]=one line script   * Whatever statement you add to this line needs to /return TRUE. i.e. - ADPreCondition1=/if ({This} &amp;&amp; {That})</p> <p>/return TRUE. Only a TRUE return will allow the spell to cast, so script carefully, or leave the lines default.</p> </li> </ul> <p>Code:</p> <p><code>ADGem1=2</code> <code>ADSpell1=Turgur's Insects</code> <code>ADSpellFoci1=</code> <code>ADDurMod1=0</code> <code>ADSpellAlias1=slow</code> <code>ADAnnounce1=/bc Slowed &lt;&lt;[+y+] %t [+x+]&gt;&gt; with[+g+] %s [+x+]</code> <code>ADSpellMinMana1=10</code> <code>ADSpellRecast1=2</code> <code>ADSpellCastonResist1=malos</code> <code>ADSpellDelay1=0</code> <code>ADTarCnt1=1</code> <code>ADTarType1=11</code> <code>ADTarBegHP1=200</code> <code>ADTarEndHP1=15</code> <code>ADIfSpellImmune1=</code> <code>ADUseHoTT1=0</code> <code>ADPreCondition1=TRUE</code></p> <p>\"Notice the ADTarBegHP1 setting. I have the same spell set with ADTarType2=12 directly after this one to make sure he slows adds. (sometimes he pulls em too..) Everything else - mainly ACAssistPct is set to a lower value. Most around 95 or so. Buffs are a pita because if the debuff sub is called \\(it is called first\\) it won't cast the debuffs if there's any reason not to, then the macro runs through the whole buff loop before getting back to debuffs again.. Setting the ADTarBegHP at least over the level of all other functions at least attempts to keep the slow first. Also.. I find the macro works best if you always set your ACManaPct very low. Usually keep mine around 5 or so for every toon. I should change the default on that, but clearing targets and such is something your toon will do quite often if his mana is under that value.\" - Ptarp on the forums on Wed Mar 09, 2011 7:54 pm. (edited into Wiki by Arblis)</p>","tags":["macro"]},{"location":"macros/gallery/modbot/#advbuff-section-advbuff","title":"AdvBuff Section [AdvBuff]","text":"<p>If you want to cast single target buffs after group buffs, place all of your group buffs first.</p> <ul> <li>ABCount=#</li> <li>Number of buffs you plan to have.</li> <li>ABMobMax=#</li> <li>Max number of targets to track for buffs (do not include pets)</li> <li>ABCheckTime=#</li> <li>How often to check for buffs in seconds</li> <li>ABGem[x]=source</li> <li>Designate what the source of the spell is.</li> <li>Valid entries: gem number, alt, ability, item, script, potionbelt</li> <li>Note that 'potionbelt' does not require a slot number.</li> <li>Examples:<ul> <li>ABGem1=3 Cast this spell from gem 3</li> <li>ABGem1=alt This spell is an alternative advancement ability</li> </ul> </li> <li>ABSpell[x]=source name</li> <li>Valid entries: spell name, item name, alternate ability name, ability name, script name</li> <li> <p>Examples:</p> <ul> <li>ABSpell1=Minor Shielding This would be generally be paired with an ABGem1 entry indicating which spell gem</li> </ul> <p>to cast Minor Shielding from.</p> <ul> <li>ABSpell1=Uber Wand Thingy of Uberness This would be generally be paired with an ABGem1 entry indicating</li> </ul> <p>that the source of this spell is an item. * ABSpellFoci[x]=setname   * Bandolier set name to swap in before casting this spell.   * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * ABDurMod[x]=##   * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%).   * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100%</p> <p>(e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the</p> <p>correct extension. * ABSpellAlias[x]=spell alias   * Enter an \"alias\" for the spell. This is often a short, easier to use name (e.g. the alias for Spirit of the Wolf</p> <p>might be SoW).</p> </li> <li> <p>Please note that you can NOT have spaces in your alias names.</p> </li> <li>ABAnnounce[x]=channel</li> <li> <p>Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for</p> <p>further explanation.</p> </li> <li> <p>Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example:</p> <ul> <li>ABAnnounce1=/bc [+r+]Buffed \\&lt;\\&lt; %t &gt;&gt; with %s [+x+]</li> </ul> </li> <li>ABSpellMinMana[x]=#</li> <li>Minimum mana percentage to have in order to attempt this spell (e.g. 05 \\(for 5%\\), 25 (for 25%)</li> <li>ABTarCnt[x]=#</li> <li> <p>Designate how many targets are required to cast this spell.</p> <ul> <li>If set to 0, this spell will not be auto-casted. This is useful for spells that you want to call via alias</li> </ul> <p>to be cast manually.</p> <ul> <li>For single cast spells (e.g. Spirit of Eagle), ABTarCnt will most often be set to 1.</li> <li>For group spells (e.g. Flight of Eagles), you might set your ABTarCnt higher so that it only gets cast when</li> </ul> <p>there are more than 2 or 3 people in your group. * ABTarType[x]=target type   * Valid target types are as follows (please note which entries can be used with others and which are exclusive): * ShortClassName Used for class specific buffs (ie. haste on \"war\"). Valid entries are: war shd pal rng mnk</p> <p>rog brd bst ber shm clr dru wiz mag enc nec. Note that any or all of these entries can be used at the same</p> <p>time.</p> <ul> <li>self Used for self only spells.</li> <li>grp for Group spells (example needed, according to author self is mutually exclusive, so self grp won't</li> </ul> <p>work. grp can also not be the only target, so its safer to just list classes here!)</p> <ul> <li>pet used to cast buffs on all pets in the group.</li> <li>mypet used to cast on only your pet. Please note that pet and mypet are mutually exclusive.</li> <li>cbt for spells to be casted during combat (e.g. an entry for Yaulp would be ABTarType1=self cbt). Please</li> </ul> <p>note that any NPC within radius that is not on your exclude list will cause 'cbt' buffs to fire. If you want</p> <p>to buff next to NPCs (and don't plan to kill them), use the exclude command. If you later decide to kill</p> <p>whatever mob you've excluded, use the include command to remove it from list. The macro does not check</p> <p>combat state of the tank for buffs.</p> <ul> <li>idle used with cbt for spells to be casted when in or out of combat (e.g. if you wanted to keep Yaulp on</li> </ul> <p>at all times (in AND out of combat), your entry would be ABTarType1=self cbt idle). Please note that idle</p> <p>is only used in ABTarType when cbt is also used.</p> <ul> <li>aura used to cast an aura - must be used with self (e.g. ABTarType1=self aura)</li> <li> <p>Note that Bard auras *REQUIRE* ABSpellAlias to be set up to cast, and modbuff will use CastCall to</p> <p>actually cast the aura.     * tank used to cast only on the designated group tank. Tank designation is keyed from either the TankName</p> </li> </ul> <p>variable in the setting section (see above) or by setting a toon to Main Tank (Group.Maintank) using the</p> <p>Roles function.</p> <ul> <li>petspell used to set up an entry to create/cast a pet. Example:</li> </ul> </li> </ul> <p>''ABGem3=7</p> <p>ABSpell3=Shambling Minion</p> <p>ABSpellFoci3=</p> <p>ABDurMod3=0</p> <p>ABSpellAlias3=pet</p> <p>ABAnnounce3=/bc Cooking up a pet</p> <p>ABSpellMinMana3=10</p> <p>ABTarCnt3=1</p> <p>ABTarType3=petspell</p> <p>ABRecast3=FALSE</p> <p>ABSpellIcon3=</p> <p>ABPreCondition3=TRUE''</p> <ul> <li> <ul> <li>Default entry: *ABTarTypeX=tank war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self mypet grp</li> </ul> <p>pet cbt idle*</p> <ul> <li>Please note that the default entry includes settings that do not work together. Specifically, tank, self</li> </ul> <p>and mypet are meant to be used by themselves. If you want to cast the same buff on yourself, your pet and</p> <p>the tank, create them as seperate buff entries. * ABRecast[x]=TRUE|FALSE   * True is only really needed for single targets that are NOT in the group and/or on NetBots. Set ABRecast TRUE</p> <p>when you want the macro to use the spell worn off messages from EQ for the macro to know who to cast the buff</p> <p>on. This allows you to rebuff toons that are lower level for your normal buff set, or not in EQBC and not in</p> <p>group.</p> </li> <li> <p>For the most part this shouldn't be needed for rebuffing if all of your toons are NetBots members. The macro</p> <p>actually checks the other toons in netbots and knows what their buffs are, whether the one they're trying to</p> <p>cast will stack, and the duration of the buff if the toon still has it on. * ABSpellIcon[x]=icon name   * Use when the spell icon has a different name than the actual spell (e.g. the spell Unity of Spirits has a</p> <p>spell icon of Transcendent Foresight. In fact, you could use any one of the four spell icons/names that Unity</p> <p>creates).</p> <ul> <li>Please note that if the name you have in ABSpellIcon doesn't evaluate to a spell name, the buff will be</li> </ul> <p>skipped. In other words, leave it blank if your spell doesn't need it.</p> </li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot/#advevent-section-advevent","title":"AdvEvent Section [AdvEvent]","text":"<ul> <li>AECount=#</li> <li>Number of events you plan to have.</li> <li>AECheckTime=#</li> <li>How often to check for events in seconds</li> <li>AECustomX=watch text</li> <li>Custom emote-triggered events driven by scripts.</li> <li>Default is three blank entries (AECustom1=, AECustom2=, AECustom3=)</li> <li> <p>Please note that an earlier version of this variable populated AECustom1, AECustom2 and AECustom3 with random</p> <p>numbers in the ini file. The newwer version of AECustom now adds the three AECustomX entries but sets them as</p> <p>blank.)</p> </li> <li> <p>Each AECustomX entry, if defined, must have a corresponding script entry. For example, by defining</p> <p>AECustom1=greater bloodmoon healing in the AdvEvent section, you would need a corresponding script defined</p> <p>that might read something like:</p> </li> </ul> <p>[Script-AECustomEvent1]</p> <p>Commands=1</p> <p>C1=/bc cast stun</p> <ul> <li>AEGem[x]=source</li> <li>Designate what the source of the spell is.</li> <li>Valid entries: gem number, alt, ability, item, script, potionbelt</li> <li>Note that 'potionbelt' does not require a slot number.</li> <li>Examples:<ul> <li>AEGem1=3 Cast this spell from gem 3</li> <li>AEGem1=alt This spell is an alternative advancement ability</li> </ul> </li> <li>AESpell[x]=source name</li> <li>Valid entries: spell name, item name, alternate ability name, ability name, script name</li> <li> <p>Examples:</p> <ul> <li>AESpell1=Minor Shielding This would be generally be paired with an ABGem1 entry indicating which spell gem</li> </ul> <p>to cast Minor Shielding from.</p> <ul> <li>AESpell1=Uber Wand Thingy of Uberness This would be generally be paired with an AEGem1 entry indicating</li> </ul> <p>that the source of this spell is an item. * AESpellFoci[x]=setname   * Bandolier set name to swap in before casting this spell.   * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets. * AEDurMod[x]=##   * Any spell extension percentage, e.g. 05 (for 5%), 25 (for 25%).   * Due to how spell durations / extensions are calculated, you may need to enter extensions in excessive of 100%</p> <p>(e.g. a 25% extension would be entered here as 125). Check your results in game to make sure you have set the</p> <p>correct extension. * AEDelay[x]=#   * How many seconds do I wait between casts of this spell. * AEEventMinMana[x]=#   * My mana percentage must be at least this to complete this event. * AEEventMinHP[x]=#   * My HP percentage must be at least this to complete this event. * AEMinMana[x]=#   * The event target's mana percentage must be above this to complete this event. * AEMaxMana[x]=#   * The event target's mana percentage must be below this to complete this event. * AEMinHP[x]=#   * The event target's HP percentage must be above this to complete this event. * AEMaxHP[x]=#   * The event target's HP percentage must be below this to complete this event. * AETarType[x]=target type   * Valid entries: war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self tnt (Less is better!) * AESpellAlias[x]=event alias   * Enter an \"alias\" for the event. This is often a short, easier to use name (e.g. the alias for Spirit of the Wolf</p> <p>might be SoW).</p> </li> <li> <p>Please note that you can NOT have spaces in your alias names.</p> </li> <li>AEAnnounce[x]=channel</li> <li> <p>Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for</p> <p>further explanation.</p> </li> <li> <p>Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example:</p> <ul> <li>ABAnnounce1=/bc [+r+]Buffed \\&lt;\\&lt; %t &gt;&gt; with %s [+x+]</li> </ul> </li> <li>AETarCnt[x]=1|0</li> <li>Settings are *only* either 1 (on) or 0 (off).</li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot/#examples","title":"Examples","text":"<p>Shaman cannibalization example. In this case, settings like AEEventMinMana and AEMinMana both refer to the shaman as he is both the event triggerer as well as the target of the event:</p> <p><code>AEGem1=5</code> <code>AESpell1=Cannibalize III</code> <code>AESpellFoci1=</code> <code>AEDurMod1=0</code> <code>AEDelay1=0</code> <code>AEEventMinMana1=0</code> <code>AEEventMinHP1=30</code> <code>AEMinMana1=0</code> <code>AEMaxMana1=90</code> <code>AEMinHP1=50</code> <code>AEMaxHP1=100</code> <code>AETarType1=self</code> <code>AESpellAlias1=canni</code> <code>AEAnnounce1=</code></p> <p>Necromancer mana feed example (where the necro is feeding mana to another character). In this case, AEEventMinMana refers to the necro's mana and AEMinMana refer to the mana of the target (as defined by AETarType):</p> <p><code>AEGem2=4</code> <code>AESpell2=Rapacious Subvention</code> <code>AESpellFoci2=</code> <code>AEDurMod2=0</code> <code>AEDelay2=0</code> <code>AEEventMinMana2=50</code> <code>AEEventMinHP2=50</code> <code>AEMinMana2=20</code> <code>AEMaxMana2=45</code> <code>AEMinHP2=0</code> <code>AEMaxHP2=100</code> <code>AETarType2=clr enc</code> <code>AESpellAlias2=manafeed</code> <code>AEAnnounce2=/bc</code></p>","tags":["macro"]},{"location":"macros/gallery/modbot/#advcure-section-advcure","title":"AdvCure Section [AdvCure]","text":"<ul> <li>AQCount=#</li> <li>Number of cures you plan to have.</li> <li>AQCheckTime=#</li> <li>How often to check for cures in seconds</li> <li>AQGem[x]=source</li> <li>Designate what the source of the spell is.</li> <li>Valid entries: gem number, alt, ability, item, script, potionbelt</li> <li>Note that 'potionbelt' does not require a slot number.</li> <li>Examples:<ul> <li>AQGem1=3 Cast this spell from gem 3</li> <li>AQGem1=alt This spell is an alternative advancement ability</li> </ul> </li> <li>AQSpell[x]=source name</li> <li>Valid entries: spell name, item name, alternate ability name, ability name, script name</li> <li> <p>Examples:</p> <ul> <li>AQSpell1=Minor Shielding This would be generally be paired with an ABGem1 entry indicating which spell gem</li> </ul> <p>to cast Minor Shielding from.</p> <ul> <li>AQSpell1=Uber Wand Thingy of Uberness This would be generally be paired with an AQGem1 entry indicating</li> </ul> <p>that the source of this spell is an item. * AQSpellFoci[x]=setname   * Bandolier set name to swap in before casting this spell.   * Please see MQ2Bandolier and MQ2Cast to understand how to use swap sets (e.g. -bandolier|) * AQSpellCureType[x]=cure type   * Valid entries (type of cure needed): Cursed, Diseased, Poisoned, EnduDrain, LifeDrain, ManaDrain, Blinded,</p> <p>CastingLevel, Charmed, Feared, Healing, Mesmerized, Resistance, Rooted, Silenced, Slowed, Snared, SpellCost,</p> <p>SpellSlowed, SpellDamage, Trigger, All</p> </li> <li> <p>Set the cure type to the best match for the spell, but keep them in order of best cure first.</p> </li> <li> <p>The first cure in your .ini matching the cure type needed (or if you set to \"All\") will be the first attempted</p> <p>spell.</p> </li> <li> <p>Cures *can* always be interrupted by any heal spell, unless you're using a cure spell that's already listed in</p> <p>your heal section (e.g. Cleric's \"Word of XXX\" line of spells may or may not interrupt for heals depending on</p> <p>where they are in your heal section).</p> </li> <li> <p>Modcure.inc will cast once per loop and then return to the main loop, so setting group cures (like Radiant Cure)</p> <p>toward the top would be best</p> </li> <li> <p>Be specific on cure types to avoid recasting the same cure over and over if it won't cure you.</p> </li> <li>AQSpellMinMana[x]=#</li> <li>Minimum mana to have in order to attempt this cure.</li> <li>AQSpellRecast[x]=#</li> <li>Number of times to recast this spell for fizzles, interrupts, etc.</li> <li>AQTarCnt[x]=#</li> <li>How many targets should be present to cast this spell, if set to 0, this spell will not be auto-casted.</li> <li>AQTarType[x]=target type</li> <li> <p>Valid target types are as follows (please note which entries can be used with others and which are exclusive):</p> <ul> <li>ShortClassName Used for class specific buffs (ie. haste on \"war\"). Valid entries are: war shd pal rng mnk</li> </ul> <p>rog brd bst ber shm clr dru wiz mag enc nec. Note that any or all of these entries can be used at the same</p> <p>time.</p> <ul> <li>self Used for self only spells.</li> <li>grp for Group spells (e.g. ABTarType1=self grp)</li> <li>pet used to cast buffs on all pets in the group.</li> <li>mypet used to cast on only your pet. Please note that pet and mypet are mutually exclusive.</li> <li>cbt for spells to be casted during combat (e.g. an entry for Yaulp would be ABTarType1=self cbt). Please</li> </ul> <p>note that any NPC within radius that is not on your exclude list will cause 'cbt' buffs to fire. If you want</p> <p>to buff next to NPCs (and don't plan to kill them), use the exclude command. If you later decide to kill</p> <p>whatever mob you've excluded, use the include command to remove it from list. The macro does not check</p> <p>combat state of the tank for buffs.</p> <ul> <li>idle used with cbt for spells to be casted when in or out of combat (e.g. if you wanted to keep Yaulp on</li> </ul> <p>at all times (in AND out of combat), your entry would be ABTarType1=self cbt idle). Please note that idle</p> <p>is only used in ABTarType when cbt is also used.</p> <ul> <li>aura used to cast an aura - must be used with self (e.g. ABTarType1=self aura)</li> <li> <p>Note that Bard auras *REQUIRE* ABSpellAlias to be set up to cast, and modbuff will use CastCall to</p> <p>actually cast the aura.     * tank used to cast only on the designated group tank. Tank designation is keyed from either the TankName</p> </li> </ul> <p>variable in the setting section (see above) or by setting a toon to Main Tank (Group.Maintank) using the</p> <p>Roles function.   * Default entry: *ABTarTypeX=tank war shd pal rng mnk rog brd bst ber shm clr dru wiz mag enc nec self mypet grp</p> <p>pet cbt idle*</p> <ul> <li>Please note that the default entry includes settings that do not work together. Specifically, tank, self</li> </ul> <p>and mypet are meant to be used by themselves. If you want to cast the same buff on yourself, your pet and</p> <p>the tank, create them as seperate buff entries. * AQSpellAlias[x]=spell alias   * Enter an \"alias\" for the spell. This is often a short, easier to use name (e.g. the alias for Radiant Cure might</p> <p>be RC).</p> </li> <li> <p>Please note that you can NOT have spaces in your alias names.</p> </li> <li>AQAnnounce[x]=channel</li> <li> <p>Channel to announce in, or leave blank for no announce. See ACAnnounce description in the AdvMelee section for</p> <p>further explanation.</p> </li> <li> <p>Annoucements also support formatting (makes it a bit easier to see in the MQ window). For example:</p> <ul> <li>ABAnnounce1=/bc [+r+]Cured \\&lt;\\&lt; %t &gt;&gt; with %s [+x+]</li> </ul> </li> <li>'''AQSpellCntr[x]=</li> <li>Currently not used for anything, so don't worry about it :)</li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot/#advpull-section-advpull","title":"AdvPull Section [AdvPull]","text":"<p>This section is under development.</p> <ul> <li>APCheckTime=#</li> <li>Time (in seconds) to wait in between AdvPull executions. Default is 0.</li> <li>APRadius=#</li> <li> <p>The distance around your target to check for more mobs as defined by APMobMax (basically, a check for adds).</p> <p>Default is 40. * APMobMax=#   * The max amount of mobs (target + adds) you will allow before pulling. Default is 1. If there are less than</p> <p>APMobMax mobs within APRadius of your target, it will pull the mob. * APScript=Scriptname   * Name of script to define how you want to tag the mob (throw stone, ranged, item clicky, spell, etc) and executes</p> <p>when you have a mob targeted to pull. The script name must have at least 3 characters. Default is empty. **YOU</p> <p>MUST CREATE A SCRIPT TO TAG THE MOB!**</p> </li> <li> <p>Modbot Scripts</p> </li> <li>APPath=Pathname</li> <li> <p>The name of the path to run for pulling/movement, as defined in your MBWayPnt.ini (See</p> <p>ModMove for more details on creating</p> <p>a path). The path name must be at least 3 characters. Default is empty. * APRetPath=ReturnPathname   * The name of the path to use to move back to camp. The path must be defined in your MBWayPnt.ini file. The path</p> <p>name must be at least 3 characters. Default is empty.</p> </li> <li> <p>Mostly used for when the path back to camp is a different one than used to pull mobs (ie, you go through a</p> <p>one-way wall to pull or intentionally fall off a ledge and have to run the long way back). If you want to return</p> <p>the same way you came, you can just use WPLoop=TRUE in MBWayPnt.ini instead of having to set up a second path. * APBefore=   * Command or series of commands (with multiline) to execute before the rest of AdvPull section. Must be at least 3</p> <p>characters. Default is empty. * APAfter=   * Command or series of commands (with multiline) to execute after AdvPull has finished. Default is empty. * APAnnounce=   * A way to announce what you have pulled. Default is empty.   * Note: This is not just a chat channel, but a place to put a full incoming message, ie: * APAnnounce=/gsay Incoming -[ %t ]- * APRetries=1   * Number of times to attempt to pull a mob in case it fails the first try (line of site, etc). This will strafe</p> <p>left and right on subsequent attempts. Default is 1.</p> </li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot/#mbcommoninc-settings","title":"MBCommon.inc Settings","text":"<p>The location and name of MBCommon.inc can now be set by changing line 38 in Modbot.mac.</p> <p><code>/declare MBCommon string outer MBCommon.ini</code></p> <p>It defaults to the ./macros folder, but the line can be changed to any path.</p>","tags":["macro"]},{"location":"macros/gallery/modbot/#settings-section","title":"Settings Section","text":"<ul> <li>LoadAlias [1,0] This is an on / off setting to load the \"/alias /mb /echo MB-\" alias for commands. It is set</li> </ul> <p>to 0 after first run when alias should be loaded, but you can set to 1 to add it back to your Macroquest.ini file if</p> <p>it gets deleted.</p> <ul> <li>IniLocation Path to your MB_.ini files. Must end in / or  if changed from default.</li> <li>LootIni [Loot.ini] This setting can be used to change the location of your Loot.ini file as well as the name.</li> <li>MBWayPntLocation [MBWayPnt.ini] This setting can be used to change the location of your MBWayPnt.ini file as</li> </ul> <p>well as the name of the file.</p> <ul> <li>CheckTargetDebuffs [TRUE|FALSE] This setting toggles on/off the ${Target.Buff} checking for debuffs</li> </ul> <p>(essentially this checks if the spell \"Stacks\" before casting.)</p> <ul> <li> <p>Each debuff listed in MBCommon.ini now has an 'OverwritesID=' entry. This entry is meant for a list of debuffs</p> <p>that the spell doesn't 'Stack' with, but you want the debuff to overwrite.</p> </li> </ul>","tags":["macro"]},{"location":"macros/gallery/modbot/#spell-section","title":"Spell Section","text":"<ul> <li>Zone.ShortName - List of mobs excluded for that zone in a pipe -\"|\" delimited string. This setting is not</li> </ul> <p>present for any zones which you have nothing excluded.</p> <ul> <li> <p>Immune lists for each spell are saved in their own section along with a MaxLevel=[100] setting. Change to the</p> <p>max level of the spell.</p> </li> <li> <p>As the macro finds mobs that are immune to the spell, the zone shortname is added to the entry as a variable</p> <p>along with the mob names in pipe delimited format.</p> </li> <li> <p>Mobs that are marked immune to debuffs can be marked in MBCommon.ini with an asterisk to allow for some names</p> <p>that have only some immune, and some not. For example, Dreadspire has some body types with same names where some</p> <p>are immune to mez, and some not (e.g. an aid to the Seneschal - some body types with that mob name are immune</p> <p>to befuddle, and others aren't). By adding an asterisk to the end of the name in the exclude section, the macro</p> <p>will repeat attempts to mez, etc. that mob type (rather than just marking them immune and not casting at all):</p> <p>_DreadspireImmune=|an aid to the Seneschal_|*</p> </li> <li> <p>The ADIfSpellImmune script, if defined, will only run if the mob is found to be immune after cast, but the</p> <p>astrik will not be replaced, and the spell will only cast once allowing the spell to still attempt on the next</p> <p>mob it hasn't been cast on.</p> </li> <li> <p>Overwrites= list of debuffs that the spell doesn't 'Stack' with, but you want the debuff to overwrite. This</p> <p>does require user intervention, and there's no way to set it auto-set them.</p> </li> <li> <p>MaxLevel= maximum level of mob that can be affected by debuff</p> </li> </ul> <p>An entry in the spell section might look something like this:</p> <p><code>[Mystify]</code> <code>MaxLevel=83</code> <code>thalassius_bImmune=|a sea mephit defender||a sea mephit evoker|</code> <code>OverwritesID=|14569|14570|14530|</code></p>","tags":["macro"]},{"location":"macros/gallery/modbot/#modbot-class-ini-examples","title":"ModBot Class INI Examples","text":"<p><code>ModBot`` ``Class`` ``INI`` ``Examples`` ``linked`` ``to`` ``another`` ``page</code></p> <p><code>ModBot`` ``v4`` ``Class`` ``INI`` ``Examples`` ``linked`` ``to`` ``another`` ``page</code></p>","tags":["macro"]},{"location":"macros/gallery/modbot/#scripts-and-modbot-variable-usage","title":"Scripts and ModBot Variable Usage","text":"<p>ModBot allows VERY customizable sripts to such an extent you can actually program your own sub-procedures within your INI file. You can harness ANY global variable within ModBot to use with the scripts. Scripts match MQ2 code to every extent, below are several examples of scripts and common variables one would use to create complex scripts</p>","tags":["macro"]},{"location":"macros/gallery/modbot/#understanding-scripts-syntax-example-how-to","title":"Understanding scripts, syntax, example, how to","text":"<ul> <li>Scripts General Info</li> <li> <p>Scripts can be difficult and there are some MQ2 commands that give scripts trouble. Keep this in mind and</p> <p>prepare to post you script code should you have problems.</p> </li> <li> <p>No script can take more then 15 seconds to complete, however this can be modified in the code directly in the</p> <p>Sub MBScript or even changed in the script you create ({Timer} is the var)</p> </li> <li> <p>Scripts are executed from top to bottom and you are allowed to use a label :Top (e.g. /goto :Top), in your</p> <p>script. The /goto :Top option allows for complex loops to take place directly from code in the INI file</p> </li> <li> <p>If you use ANY INI generated ModBot global string variables that have spaces in your custom scripts they MUST be</p> <p>encapsulated by 2 apostrophies when used in the script, see PetCast example below. * Reserved Characters</p> </li> </ul> <p>:*These characters can not be used in scripts</p> <p>::*$ \"</p> <p>:*'' Two apostrophies are for passing variables with spaces in script code. Use them to replace quotes.</p> <ul> <li>Syntax</li> </ul> <p><code>[Script-]</code> <code>Commands=</code> <code>C1=</code> <code>.</code> <code>Cn=</code></p> <p>What does a script look like in your INI file:</p> <p><code>[Script-HelloWorld]</code> <code>Commands=2</code> <code>C1=/echo Hello World</code> <code>C2=/if ({Timer}&gt;50) /varset Timer 5s</code> <code>C3=/goto :Top</code></p> <p>In the example above it will echo to the MQ2ChatWindow \"Hello World\" for 5s. Notice how I do NOT use a $ to reference the \"Timer\" variable.</p> <ul> <li>How To use or launch a script</li> </ul> <p>:*/bc bob script HelloWorld</p> <p>:*You can set XXGem1=script and XXSpell=HelloWorld as a spell name for any of the spells you've configured in ModBot, and it will be triggered when that event, heal, etc would take place.</p> <p>Please see the below examples for complex script code.</p> <p>Common Variables (You can use ANY mq2 variable without the $, you can even CREATE new global vars and use them, all from the INI file via Scripts)</p> <p><code>{ACState} = If greater than 0, ModBot thinks you are in combat</code> <code>{ACMATarget} = The target of the main assist</code> <code>{CampStatus} = If greater than 0, means I've been given a /bc makecamp command</code> <code>{FollowFlag} = If greater than 0, means I should be following something</code> <code>{TankName} = The acting main assist</code> <code>{Me}, {Spawn}, etc = See MQ2 Manual</code></p> <p>Examples This example is triggered from an event OR a heal and it will remove the necro \"Lich\" spell:</p> <p><code>[AdvHeal]</code> <code>AHGem3=Script</code> <code>AHSpell3=DropLich</code> <code>AHSpellFoci3=</code> <code>AHDurMod3=0</code> <code>AHSpellAlias3=droplich</code> <code>AHSpellMinMana3=0</code> <code>AHAnnounce3=/bc</code> <code>AHTarCnt3=1</code> <code>AHClass3=pc hp40 nec</code></p> <p><code>[AdvEvent]</code> <code>AEGem3=Script</code> <code>AESpell3=DropLich</code> <code>AESpellFoci3=</code> <code>AEDurMod3=0</code> <code>AEDelay3=0</code> <code>AEEventMinMana3=100</code> <code>AEEventMinHP3=40</code> <code>AEMinMana3=20</code> <code>AEMaxMana3=100</code> <code>AEMinHP3=0</code> <code>AEMaxHP3=90</code> <code>AETarType3=tnt</code> <code>AESpellAlias3=</code> <code>AEAnnounce3=/bc</code></p> <p><code>[Script-DropLich]</code> <code>Commands=1</code> <code>C1=/if ({Me.Buff[Lich].ID}) /notify BuffWindow Buff{Math.Calc[{Me.Buff[Lich].ID}-1].Int} leftmouseup</code></p> <p>This example is launched via the ACBefore command from the [Melee] section, I've got Sneak Attack bound to hotkey 6. What the bot will do is to trigger Sneak Attack, attempt proper position, backstab the mob, then revert to \"normal\"</p> <p><code>[Script-SneakAttack]</code> <code>Commands=10</code> <code>C1=/if ({Melee.Enable}) /melee plugin=0</code> <code>C2=/if ({Me.CombatAbilityReady[Sneak Attack]}) /keypress 6</code> <code>C3=/if (!{Me.Moving} &amp;&amp; !{Stick.MoveBehind} &amp;&amp; {Stick.Distance}!={Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}+5]}) /stick {Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}+5]} behind id {ACMATarget}</code> <code>C4=/if ({Target.ID}!={ACMATarget}) /multiline ; /target id {ACMATarget};/delay 5</code> <code>C5=/if ({Melee.BackAngle}&gt;60 || {Melee.BackAngle}&lt;-60) /goto :Top</code> <code>C6=/if ({Target.Distance3D}&gt;={Spawn[{ACMATarget}].MaxRangeTo}) /stick {Math.Calc[{Spawn[{ACMATarget}].MaxRangeTo}-5]} hold behind id {ACMATarget}</code> <code>C7=/if ({Target.Distance3D}&gt;={Spawn[{ACMATarget}].MaxRangeTo}-3) /goto :Top</code> <code>C8=/delay 5</code> <code>C9=/if ({Me.AbilityReady[Backstab]}) /doability backstab</code> <code>C10=/melee plugin=1</code></p> <p>This example will confirm you are hidden and sneaking when I'm at \"camp\" and not sneaking when I'm in follow mode. It will also re-engage if MQ2Melee lost \"stick\" because of too much mob movement</p> <p><code>[Script-HideSneak]</code> <code>Commands=4</code> <code>C1=/if ({FollowFlag} &amp;&amp; {Me.Sneaking}) /multiline ; /doability sneak;/return</code> <code>C2=/if (!{FollowFlag} &amp;&amp; !{ACState} &amp;&amp; {Select[{MakeCamp},on]} &amp;&amp; {Me.AbilityReady[Hide]} &amp;&amp; !{Me.Moving} &amp;&amp; !{Melee.Combat}) /multiline ; /doability Hide;/delay 5</code> <code>C3=/if (!{FollowFlag} &amp;&amp; !{ACState} &amp;&amp; {Select[{MakeCamp},on]} &amp;&amp; {Me.AbilityReady[Sneak]} &amp;&amp; !{Me.AbilityReady[Hide]} &amp;&amp; !{Me.Moving} &amp;&amp; !{Melee.Combat}) /multiline ; /doability Sneak;/delay 5</code> <code>C4=/if ({ACState} &amp;&amp; {ACMATarget} &amp;&amp; {Target.ID} &amp;&amp; {Me.AbilityReady[Backstab]}) /keypress q</code></p> <p>Example of createing a new global var and an example of using it</p> <p><code>[Script-EventsOff]</code> <code>Commands=2</code> <code>C1=/if (!{Defined[CheckSlow]}) /declare CheckSlow int outer 1</code> <code>C2=/if ({DoEvents}) /multiline ; /varset DoEvents FALSE;/varset CheckSlow 1</code></p> <p><code>[Script-EventsOn]</code> <code>Commands=2</code> <code>C1=/if (!{Defined[CheckSlow]}) /declare CheckSlow int outer 3</code> <code>C1=/if (!{DoEvents}) /multiline ; /varset DoEvents TRUE;/varcalc CheckSlow {CheckSlow}+1</code></p> <p><code>[Script-IsSlowed]</code> <code>Commands=3</code> <code>C1=/if (!{Defined[CheckSlow]}) /multiline ; /varset DoEvents FALSE;/return</code> <code>C2=/if ({CheckSlow}&lt;=4) /varset DoEvents FALSE</code> <code>C3=/if ({CheckSlow}&gt;4) /varset DoEvents TRUE;/varset CheckSlow 1</code></p> <p>Example of using a ModBot global string. This will create a new pet, say when your existing pet is about to die</p> <p>:*Please note in the INI snippets below that the INI generated global string PetCast has a space so to pass this properly in the script,</p> <p>you must encapsulated in quotes, script code uses apostrophies in place of quotes.</p> <p><code>[Settings]</code> <code>PetCast=Invoke Death|gem1</code></p> <p><code>[Script-NewPet]</code> <code>Commands=4</code> <code>C1=/multiline ; /casting ''{PetCast}'' -maxtries|5;/delay 2s</code> <code>C2=/if ({Cast.Timing}&gt;600) /goto :Top</code> <code>C3=/multiline ; /if ({Me.Pet.ID}) /pet go away;/delay 2s !{Me.Casting.ID}</code> <code>C4=/if (!{Me.Pet.ID}) /goto :Top</code></p> <p>Example of using PetCast for a cleric hammer, to be called from a ACBefore command</p> <p><code>[Settings]</code> <code>DoPet=FALSE</code> <code>PetCast=Unswerving hammer of awesomeness|gem1</code> <code>[Melee]</code> <code>ACBefore=/if (!{Me.Pet.ID} &amp;&amp; {ACMATarget} &amp;&amp; {Spawn[{ACMATarget}].Type.Equal[NPC]} &amp;&amp; {Spawn[{ACMATarget}].Distance3D}&lt;={ACLeash}) /call MBScript SumHam</code> <code>[Script-SumHam]</code> <code>Commands=2</code> <code>C1=/if ({Target.ID}!={ACMATarget}) /multiline ; /target id {ACMATarget};/delay 5</code> <code>C2=/if (!{Me.Pet.ID}) /multiline ; /casting ''{PetCast}'' -maxtries|2;/delay 3s</code></p> <p>Example of a CH script to be run from a non cleric .ini (warrior)</p> <p><code>I figure I might as well be posting some of the script versions of other macros that I've been seeing around, but written my own thing so I could just keep modbot running.</code> <code>Modbot script version of CH chain that seems to work, though might have problems I haven't noticed.... I use this with a hotkey from my tank -```\"/mb script chain 50\" (yes it's in MB\\_tank.ini - NOT the cleric.ini.. ) It finds all clerics in netbots, then runs through the list telling each</code> to cast CH after the delay you specify. This script does require the clerics to all be running modbot with an alias of CH for complete heal spell,<code>`and connection to the same EQBCS server.</code></p> <pre><code>`Commands=13`\n`C1=/multiline ; /declare clrlist string local;/declare x int local 1;/declare StopLoop bool local FALSE`\n`C2=/if ({Spawn[{NetBots.Client.Arg[{x}]}].Class.ShortName.Equal[clr]}) /varset clrlist {clrlist} {NetBots.Client.Arg[{x}]}`\n`C3=/if ({x} &lt; {NetBots.Counts}) /multiline ; /varset a 1;/varcalc x {x}+1`\n`C4=/echo Clerics: {clrlist} casting {Math.Calc[{Param1}/10]}s apart`\n`C5=/varset x 0`\n`C6=/varset Timer 100`\n`C7=/varcalc x {x}+1`\n`C8=/if ((!{Spawn[{clrlist.Arg[{x}]}].ID} || {NetBots[{clrlist.Arg[{x}]}].PctMana} &lt; 3) &amp;&amp; {x} &lt;= {clrlist.Count[ ]}) /varset a 5`\n`C9=/if ((!{Spawn[{clrlist.Arg[{x}]}].ID} || {NetBots[{clrlist.Arg[{x}]}].PctMana} &lt; 3) &amp;&amp; {x} &gt; {clrlist.Count[ ]}) /varset a 4`\n`C10=/bc {clrlist.Arg[{x}]} cast ch`\n`C11=/delay {Param1}`\n`C12=/if ({x}&gt;{clrlist.Count[ ]}) /varset a 4`\n`C13=/if (!{StopLoop}) /varset a 5`\n`````  Posted By Ptarp Tue Apr 12, 2011 1:01 am. Moved to Wiki by Arblis\\`\n\n## Script Examples\n\n[```Script`` ``examples`` ``linked`` ``to`` ``another`` ``page```](https://macroquest.org/wiki/index.php/Script_Examples)\n\n## Related Include Files Information and Examples\n\n[```Related`` ``Include`` ``files`` ``(modloot,`` ``AAPurchase,`` ``modmove,`` ``etc.)`` ``information`` ``and`` ``INI`` ``examples`` ``linked`` ``to`` ``another`` ``page```](https://macroquest.org/wiki/index.php/Related_Include_Files)\n\n## Tips, Tricks and Troubleshooting\n\nHere you will find a collection of little gems pulled from the ModBot thread. At some point, this may morph in to a handy little troubleshooting flowchart, but for now it will serve as kind of a tidbit catchall for things that would otherwise get lost in the hundreds of thread pages...\n\nPlease note- when you are posting on the forum for help (after reading this wiki of course!\\) include the MQ2 version, winEQ version and the EQ install type \\(Titanium / sod / UF)\n\n`Although covered previously on the Wiki quite a few times - If you are having trouble with mobs keeping you from doing non combat things (buff, loot etc) try using the following:`\n`exclude &lt;mob name,save&gt;`\n````` \"What I do.. (while targeted on the mob you want to ignore)```On my tank I have a hotkey. I target the mob to exclude and press it.``\n`First line is /bcaa //mb exclude ${Target.CleanName}`\n`second line - /bcaa //mb exclude save`\n````` /echo ${ADMobCount} (use this after your exclude to see if the char in question has any mobs on the exclude list. Can be used with /bcaa to see all of your toons mobcounts)```If you fight near non-combatant mobs, always use the exclude command so the macro doesn't \"see\" them, and set your Radius= in your toon's .ini file to a minimum.``\n`I normally keep mine at around 60 to 80 depending on what I'm doing. Remember you can \"/varset Radius 50\" or something in game with the mac running to find a happy medium.\" -Ptap Mon Sep 20, 2010 1:18 pm`\n\n`It also sounds like an exclude hotkey, and pause hotkey would be your best friends.. Here's a few of the hotkeys I use.`\n\n`_EQTitan.ini in your everquest folder.`\n````` Code:```[Socials]``\n`Page10Button1Name=TankName`\n`Page10Button1Color=0`\n`Page10Button1Line1=/bcaa //varset TankName ${Me.Name}`\n`Page10Button7Name=Masters`\n`Page10Button7Color=0`\n`Page10Button7Line1=/bcaa //varset MasterList ${NetBots.Client}`\n`Page10Button5Name=pause`\n`Page10Button5Color=0`\n`Page10Button5Line1=/bcaa //mb mbpause on`\n`Page10Button11Name=unpause`\n`Page10Button11Color=0`\n`Page10Button11Line1=/bcaa //mb mbpause off`\n`Page10Button6Name=follow`\n`Page10Button6Color=0`\n`Page10Button6Line1=/bca follow`\n`Page10Button12Name=stop`\n`Page10Button12Color=0`\n`Page10Button12Line1=/bcaa //mb stop`\n`Page10Button10Name=letsroll`\n`Page10Button10Color=0`\n`Page10Button10Line1=/bcaa //mb letsroll`\n`Page2Button1Name=corpse`\n`Page2Button1Color=0`\n`Page2Button1Line1=/corpse`\n`Page2Button6Name=sellitem`\n`Page2Button6Color=0`\n`Page2Button6Line1=/ini loot.ini ${Cursor.Name.Left[1]} \"${Cursor.Name}\" Sell`\n`Page8Button1Name=include`\n`Page8Button1Color=0`\n`Page8Button1Line1=/bcaa //mb include ${Target.CleanName}`\n`Page8Button1Line2=/pause 5`\n`Page8Button1Line3=/bcaa //mb exclude save`\n`Page8Button7Name=exclude`\n`Page8Button7Color=0`\n`Page8Button7Line1=/bcaa //mb exclude ${Target.CleanName}`\n`Page8Button7Line2=/pause 5`\n`Page8Button7Line3=/bcaa //mb exclude save`\n`````\n</code></pre> <p><code>I normally just keep my keys on page 10 and click from there, but as you can see there's include and exclude keys on pg 8 and another on pg2 I use for setting items to</code> <code>\"sell\" in my loot.ini file.</code> <code>The /bcaa stuff might not work for some depending on plugin versions, so that cn be replaced with a /bca and /mb on a second line. I find it very handy to have some keys I can</code> <code>press quickly, and always either pause all my toons or exclude npcs before I go into areas that I don't want something attacked.</code></p> <p><code>Having trouble with your background session toons not moving properly? You might try this:</code> <code>WinEQ=on```to the [Defaults] section of your mq2moveutils.ini.</code> TrueHeading=off might help also in the same section, though I'm not sure if that's needed.`</p>","tags":["macro"]},{"location":"macros/gallery/modbot/#do-your-toons-wander-where-they-are-not-supposed-to","title":"Do your toons wander where they are not supposed to?","text":"<p>Thanks to Toomanynames for this tidbit:</p> <p>Those who have toon wandering issues or whatnot - when you say \"radius\", what radius do you mean, modbot, melee, makecamp? There are actually three things that work together to make certain that your bots fight and return to a certain area - MQ2MoveUtils, MQ2Melee and the MB_charname.ini file (from ModBot).</p> <ul> <li>/makecamp x x x</li> <li>This is a MQ2MoveUtils setting that needs to be properly configured. For example:<ul> <li>/makecamp radius x leash=on (or something like that)</li> </ul> </li> <li> <p>Please see the MQ2MoveUtils (PMS version)</p> <p>[http://www.macroquest2.com/phpBB3/viewtopic.php?f=31&amp;t=15909thread] and</p> <p>MQ2MoveUtils:v11 for more detailed information. * /melee x x x   * This is an MQ2Melee setting. Those ranges and settings come into play and must be set accordingly to work</p> <p>WITH modbot</p> </li> <li> <p>Please see the MQ2Melee [http://www.macroquest2.com/phpBB3/viewtopic.php?f=50&amp;t=17045thread] for more</p> <p>detailed information. * Modbot INI   * Radius = the max the toon will \"See\" thiings   * ACLeash = the max a toon will engage things</p> </li> </ul> <p>If you don't properly configure MQ2MoveUtils, MQ2Melee and ModBot and confirm those settings are within or compatible with ModBot \"ranges\" then you'll have issues.</p>","tags":["macro"]},{"location":"macros/gallery/necro-helper/","title":"Necro Helper","text":"<p>This is a simple helper macro I use when playing my necro toon. It does the following:</p> <p>At top left of display (under the lag-o-meter)</p> <ul> <li>Displays your state: Sitting, standing, feign etc (I wanted this mostly because the spectre animation when lich'ed</li> </ul> <p>isn't visibly different for sit/stand)</p> <ul> <li>Displays class, level and %HP of selected mob/npc</li> <li>Tracks regular and AA experience</li> <li>Displays name of first GM found in zone</li> <li>Shows personal tribute status on/off</li> <li>Can also do a /gsay to tell your group what spells you are casting</li> </ul> <p>In middle of screen</p> <ul> <li>Watches DoT spells cast on a mob and displays time left to run</li> </ul> <p>Important note. You need to update the code lines:</p> <p><code>/varset SpellInfo &gt;&gt;&gt; Your timer, your damage, your other text &lt;&lt;&lt;</code></p> <p>&lt;/code&gt; to your preferences e.g.:</p> <p><code>/varset SpellInfo 2 minutes, 68 dpt, 70% snare</code></p> <p>&lt;/code&gt;</p> <p>The macro code (for your Release\\Macros directory):</p> <p><code>|</code> <code>| NecroHelper.mac by pw</code> <code>|</code> <code>| Usage:</code> <code>|</code> <code>| /macro NecroHelper</code> <code>|</code> <code>| For group use (will report your casting to group in /gsay):</code> <code>|</code> <code>| /macro NecroHelper 1</code> <code>|</code> <code>| This macro will react to spells cast on your target.</code> <code>| It displays the time remaining on the spell cast, the</code> <code>| spell cast, and the mob cast upon.</code> <code>| - Tracks XP and AAXP gained.</code> <code>| - (Optionally) Keeps group informed of your casting.</code> <code>|</code> <code>| Currently it will display 6 DoTs at once.</code> <code>| It will refresh any identical buff recast on the same mob</code> <code>| It fills in timer slots from top to bottom as available</code> <code>| Displays timer list full when max timers are running</code> <code>|</code> <code>| DoT timer Code taken from HudTimer by seagreen</code> <code>| XP tracker Code taken from perfect XP tracker by Raebis (with tweaks from Phoenix)</code> <code>|</code></p> <p><code>#turbo 40</code></p> <p><code>#event Exp \"#*#party experience!!\"</code> <code>#event Exp2 \"You gain experience!!\"</code> <code>#event Casting \"You begin casting #1#\"</code> <code>#event Fizzle \"#*#Your spell fizzles#*#\"</code> <code>#event Interrupt \"#*#Your casting has been interrupted#*#\"</code> <code>#event Interrupt \"#*#Your spell is interrupted.#*#\"</code></p> <p><code>|</code> <code>| TODO: Need to add the full set of Necro Damage/debuff over time spells</code> <code>|</code> <code>| Each time an event is added for a new spell, you need a Sub Event_XXXX</code> <code>| below.</code> <code>|</code></p> <p><code>#event EmbracingDarkness \"#*#is engulfed in an embracing darkness#*#\"</code> <code>#event FPOK \"#*#is enveloped in a funeral pyre#*#\"</code> <code>#event Splurt \"#*#begins to splurt#*#\"</code> <code>#event SaryrnKiss \"#*#screams in torment#*#\"</code> <code>#event GreaterImmobilize \"#*#adheres to the ground#*#\"</code> <code>#event Shackle \"#*#is hindered by a shackle of spirit#*#\"</code> <code>#event DarkPlague \"#*#skin is covered in black spots#*#\"</code> <code>#event DesecratingDarkness \"#*#is covered in bubbling black shadows#*#\"</code> <code>#event FoD \"#*#is pierced by a dark fang#*#\"</code> <code>#event PoM \"#*#body is enveloped in the pyre of Mori#*#\"</code> <code>#event ChaosVenom \"#*#blood burns with the venom of chaos#*#\"</code> <code>#event DarkNightmare \"#*#mind is consumed in dark nightmares#*#\"</code> <code>#event NightFire \"#*#blood boils through#*#\"</code> <code>#event DeathSilence \"#*#stops moaning#*#\"</code> <code>#event BOT \"#*#veins turn a vile shade of green#*#\"</code> <code>#event ChaosPlague \"#*#muscles begin to decay#*#\"</code> <code>#event GripOfMori \"#*#staggers under the grip of Mori#*#\"</code> <code>#event TormentOfShadows \"#*#is gripped by shadows of fear and terror#*#\"</code> <code>#event DarkHold \"#*#stops moving#*#\"</code> <code>#event CurseOfMortality \"#*#recognizes their fragile mortality#*#\"</code> <code>#event SeveransRot \"#*#muscles begin to decay#*#\"</code> <code>#event CoruscatingDarkness \"#*#is covered in coruscating black shadows#*#\"</code> <code>#event AshengatePyre \"#*#body is consumed in a pyre of Ashengate#*#\"</code> <code>#event VakkdrasSicklyMists \"#*#chokes on a sickly green mist#*#\"</code> <code>#event WiltingFoliage \"#*#wilts#*#\"</code> <code>#event EranonDecay \"#*#muscles begin to decay#*#\"</code> <code>#event AuroralDarkness \"#*#is covered in coruscating black shadows#*#\"</code> <code>#event VisziajPallidHaze \"#*#chokes on a sickly green mist#*#\"</code> <code>#event AnathemaOfLife \"#*#recognizes their fragile mortality#*#\"</code> <code>#event PyreOfTheLifeless \"#*#is enveloped in the pyre of the lifeless#*#\"</code> <code>#event SearingShadow \"#*#is crossed by a searing shadow#*#\"</code> <code>#event ReaversPyre \"#*#in a pyre of cinders#*#\"</code> <code>#event VenonVenom \"#*#veins turn a vile shade of green#*#\"</code></p> <p><code>Sub Main</code> <code>/declare Exper float outer</code> <code>/declare AAExp float outer</code> <code>/declare LDRExp float outer</code></p> <p><code>/varset Exper ${Me.PctExp}</code> <code>/varset AAExp ${Me.PctAAExp}</code> <code>/varset LDRExp ${Me.PctGroupLeaderExp}</code></p> <p><code>/declare counter int outer</code> <code>/declare DebuffSpell string outer</code> <code>/declare LastSpell string outer</code> <code>/declare SpellType string outer</code> <code>/declare SpellInfo string outer</code></p> <p><code>/declare HudArrayNPCName[6] string outer</code> <code>/declare HudArrayID[6] int outer</code> <code>/declare HudArraySpell[6] string outer</code> <code>/declare HudArrayDuration[6] string outer</code> <code>/declare HudArrayTime[6] float outer</code> <code>/declare groupmode bool outer</code></p> <p><code>/for counter 1 to 6</code> <code>/varset HudArrayID[${counter}] -1</code> <code>/varset HudArraySpell[${counter}] none</code> <code>/varset HudArrayDuration[${counter}] none</code> <code>/varset HudArrayTime[${counter}] 0</code> <code>/varset HudArrayNPCName[${counter}] none</code> <code>/next counter</code> <code>```` /echo Necro Helper now ACTIVE \\</code></p> <p><code>/if (${Param0}) {</code> <code>/echo Group mode</code> <code>/varset groupmode 1</code> <code>} else {</code> <code>/echo Not Group mode</code> <code>/varset groupmode 0</code> <code>}</code></p> <p><code>:mainloop</code></p> <p><code>/doevents</code> <code>/call CheckTimer</code> <code>/delay 1s</code></p> <p><code>/goto :mainloop</code> <code>/return</code></p> <p><code>|-----------------------------------------</code> <code>| Here's our first sub, tracking only grouped xp....</code> <code>|-----------------------------------------</code></p> <p><code>Sub Event_Exp</code> <code>/varset AAExp ${Math.Calc[${Me.PctAAExp}-${AAExp}]}</code> <code>/varset Exper ${Math.Calc[${Me.PctExp}-${Exper}]}</code> <code>/varset LDRExp ${Math.Calc[${Me.PctGroupLeaderExp}-${LDRExp}]}</code></p> <p><code>/echo EXP: ${Exper} (${Me.PctExp}%) - AAXP: ${AAExp} (${Me.PctAAExp}%) - LDRXP: ${LDRExp} (${Me.PctGroupLeaderExp})</code> <code>/popup ${Exper} (${Me.PctExp}%) - AAXP: ${AAExp} (${Me.PctAAExp}%) - LDRXP: ${LDRExp} (${Me.PctGroupLeaderExp})</code> <code>/varset Exper ${Me.PctExp}</code> <code>/varset AAExp ${Me.PctAAExp}</code> <code>/varset LDRExp ${Me.PctGroupLeaderExp}</code> <code>/return</code></p> <p><code>|-----------------------------------------</code> <code>| Here's our second sub, tracking solo XP.</code> <code>| Since you dont get LExp when solo, removed the popup/echo.</code> <code>|-----------------------------------------</code></p> <p><code>Sub Event_Exp2</code> <code>/varset AAExp ${Math.Calc[${Me.PctAAExp}-${AAExp}]}</code> <code>/varset Exper ${Math.Calc[${Me.PctExp}-${Exper}]}</code> <code>/varset LDRExp ${Math.Calc[${Me.PctGroupLeaderExp}-${LDRExp}]}</code></p> <p><code>/echo EXP: ${Exper} (${Me.PctExp}%) - AAXP: ${AAExp} (${Me.PctAAExp}%)</code> <code>/popup ${Exper} (${Me.PctExp}%) - AAXP: ${AAExp} (${Me.PctAAExp}%)</code> <code>/varset Exper ${Me.PctExp}</code> <code>/varset AAExp ${Me.PctAAExp}</code> <code>/varset LDRExp ${Me.PctGroupLeaderExp}</code> <code>/return</code></p> <p><code>|</code> <code>| TODO: Need to add the full set of Necro Damage/debuff over time spells</code> <code>| When adding new ones, be sure to spell the spell's name correctly in</code> <code>| the /varset line, otherwise the timer will not be calculated correctly.</code> <code>|</code></p> <p><code>Sub Event_SaryrnKiss</code> <code>/varset DebuffSpell Saryrn's Kiss</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 1 minute timer, 198 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_DesecratingDarkness</code> <code>/varset DebuffSpell Desecrating Darkness</code> <code>/varset SpellType SNARE</code> <code>/varset SpellInfo 2 minute timer, 96 damage per tick, 75% movement reduction</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_EmbracingDarkness</code> <code>/varset DebuffSpell Embracing Darkness</code> <code>/varset SpellType SNARE</code> <code>/varset SpellInfo 2 minute timer, 70 damage per tick, 70% movement reduction</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_FPOK</code> <code>/varset DebuffSpell Funeral Pyre of Kelador</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 45 second timer, 310 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_BOT</code> <code>/varset DebuffSpell Blood of Thule</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 45 second timer, 350 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_Splurt</code> <code>/varset DebuffSpell Splurt</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 1.5 minute timer, 30-190 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_GreaterImmobilize</code> <code>/varset DebuffSpell Greater Immobilize</code> <code>/varset SpellType ROOT</code> <code>/varset SpellInfo 1 minute timer</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_Shackle</code> <code>/varset DebuffSpell Shackle of Spirit</code> <code>/varset SpellType SLOW</code> <code>/varset SpellInfo 3.5 minute timer, 70% attack speed reduction</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_DarkPlague</code> <code>/varset DebuffSpell Dark Plague</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 2 minute timer, 180 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_FoD</code> <code>/varset DebuffSpell Fang of Death</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 1 minute timer, 370 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_POM</code> <code>/varset DebuffSpell Pyre of Mori</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 1 minute timer, 419 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_ChaosVenom</code> <code>/varset DebuffSpell Chaos Venom</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 35 second timer, 460 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_DarkNightmare</code> <code>/varset DebuffSpell Dark Nightmare</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 30 second timer, 591 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_NightFire</code> <code>/varset DebuffSpell Night Fire</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 45 second timer, 335 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_DeathSilence</code> <code>/varset DebuffSpell Death's Silence</code> <code>/varset SpellType MEZZ</code> <code>/varset SpellInfo 30 second timer</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_ChaosPlague</code> <code>/varset DebuffSpell Chaos Plague</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 1.5 minute timer, 249 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_GripOfMori</code> <code>/varset DebuffSpell Grip of Mori</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 1 minute timer, 194 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_TormentOfShadows</code> <code>/varset DebuffSpell Torment of Shadows</code> <code>/varset SpellType SNARE</code> <code>/varset SpellInfo 1.5 minute timer, 75 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_DarkHold</code> <code>/varset DebuffSpell Dark Hold</code> <code>/varset SpellType MEZZ</code> <code>/varset SpellInfo Mezzed for up to 5 ticks</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_CurseOfMortality</code> <code>/varset DebuffSpell Curse of Mortality Rk. II</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 30 second timer, 727 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_SeveransRot</code> <code>/varset DebuffSpell Severan's Rot Rk. II</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 1 minute 30 second timer, 179-320 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_CoruscatingDarkness</code> <code>/varset DebuffSpell Coruscating Darkness Rk. II</code> <code>/varset SpellType SNARE</code> <code>/varset SpellInfo 2 minute timer, 118 damage per tick, 75% movement reduction</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_AshengatePyre</code> <code>/varset DebuffSpell Ashengate Pyre Rk. II</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 30 second timer, 1013 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_VakkdrasSicklyMists</code> <code>/varset DebuffSpell Vakk`dra's Sickly Mists Rk. II</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 45 second timer, 598 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_WiltingFoliage</code> <code>/varset DebuffSpell Wilting Foliage</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 30 second timer, 698 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_EranonDecay</code> <code>/varset DebuffSpell Eranon's Decay</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 1 minute 30 timer, 400 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_AuroralDarkness</code> <code>/varset DebuffSpell Auroral Darkness</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 2 minutes, 137 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_VisziajPallidHaze</code> <code>/varset DebuffSpell Visziaj's Pallid Haze</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 45 second timer, 695 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_AnathemaOfLife</code> <code>/varset DebuffSpell Anathema of Life Rk. II</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 30 second timer, 845 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_PyreOfTheLifeless</code> <code>/varset DebuffSpell Pyre of the Lifeless</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 54 second timer, 599 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_SearingShadow</code> <code>/varset DebuffSpell Searing Shadow</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 90 second timer, 720 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_ReaversPyre</code> <code>/varset DebuffSpell Reaver's Pyre</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 30 second timer, 1130 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub Event_VenonVenom</code> <code>/varset DebuffSpell Venonscale Venom</code> <code>/varset SpellType DOT</code> <code>/varset SpellInfo 42 second timer, 800 damage per tick</code> <code>/call SetupTimer</code> <code>/call ReportCast</code> <code>/return</code></p> <p><code>Sub ReportCast</code> <code>/if (${LastSpell.Equal[${DebuffSpell}]}) {</code> <code>/echo ${DebuffSpell}</code> <code>/if (${groupmode}==1) {</code> <code>/delay 1s</code> <code>/gsay ${SpellType} on --&gt; ${If[${Target.CleanName.NotEqual[\"NULL\"]},${Target.CleanName},\"Target\"]} &lt;-- with ${DebuffSpell}. ${SpellInfo}.</code> <code>}</code> <code>}</code> <code>/return</code> <code>\\|```\\| Store the last spell name we cast in ${spellname}</code> |<code>`Sub Event_Casting(String line, string spellname)</code> <code>/varset LastSpell ${spellname}</code> <code>/varset LastSpell ${LastSpell.Left[-1]}</code> <code>/return</code></p> <p><code>|</code> <code>| Clear the last spell name on a fizzle</code> <code>|</code> <code>Sub Event_Fizzle</code> <code>/varset LastSpell none</code> <code>/return</code></p> <p><code>|</code> <code>| Clear the last spell name on an interrupt</code> <code>|</code> <code>Sub Event_Interrupt</code> <code>/varset LastSpell none</code> <code>/return</code></p> <p><code>|</code> <code>| Set up timer with ${DebuffSpell} on ${Target}</code> <code>| Will re-use a timer slot if same spell found on same target</code> <code>|</code> <code>Sub SetupTimer</code> <code>/declare duration int local</code> <code>|</code> <code>| Skip if someone else's cast</code> <code>|</code> <code>/if (!${LastSpell.Equal[${DebuffSpell}]}) /return</code> <code>|</code> <code>| IF SAME DEBUFF IS BEING RECAST ON EXISTING NPC IN TIMER ARRAY, REFRESH</code> <code>|</code> <code>/for counter 1 to 6</code> <code>/if (${HudArrayID[${counter}]}==${Target.ID} &amp;&amp; ${DebuffSpell.Equal[${HudArraySpell[${counter}]}]}) {</code> <code>/varset HudArrayTime[${counter}] ${Math.Calc[${Time.SecondsSinceMidnight}+(${Spell[${DebuffSpell}].Duration}*6)]}</code> <code>/varset HudArraySpell[${counter}] ${DebuffSpell}</code> <code>/varset HudArrayNPCName[${counter}] ${Target.Name}</code> <code>/varset HudArrayID[${counter}] ${Target.ID}</code> <code>/return</code> <code>}</code> <code>/next counter</code> <code>|</code> <code>| SETUP NEW DEBUFF OF NPC IN OPEN SLOT</code> <code>|</code> <code>/varset counter 1</code> <code>:counterloop</code> <code>/if (${HudArrayID[${counter}]}==-1 &amp;&amp; !(${Math.Calc[${HudArrayTime[${counter}]}-${Time.SecondsSinceMidnight}].Int}&gt;0)) {</code> <code>/varset HudArrayTime[${counter}] ${Math.Calc[${Time.SecondsSinceMidnight}+(${Spell[${DebuffSpell}].Duration}*6)]}</code> <code>/varset HudArraySpell[${counter}] ${DebuffSpell}</code> <code>/varset HudArrayNPCName[${counter}] ${Target.Name}</code> <code>/varset HudArrayID[${counter}] ${Target.ID}</code> <code>} else {</code> <code>/if (${counter}&gt;5) {</code> <code>/echo Debuff timer slots are full</code> <code>/return</code> <code>}</code> <code>/varcalc counter ${counter}+1</code> <code>/goto :counterloop</code> <code>}</code> <code>/return</code></p> <p><code>|</code> <code>| Checks all timers</code> <code>| - clears timer slot when mob is dead or timer expired</code> <code>| - formats timer data to time left to run in hh:mm:ss format</code> <code>|</code> <code>Sub CheckTimer</code> <code>/declare duration int local</code> <code>/declare myhour string local</code> <code>/declare myminute string local</code> <code>/declare mysecond string local</code></p> <p><code>/for counter 1 to 6</code> <code>/if (!${Spawn[${HudArrayID[${counter}]}].State.Equal[HOVER]} &amp;&amp; ${Math.Calc[${HudArrayTime[${counter}]}-${Time.SecondsSinceMidnight}].Int}&gt;0) {</code> <code>|</code> <code>| FORMAT DURATION TO 00:00:00</code> <code>|</code> <code>/varset duration ${Math.Calc[${HudArrayTime[${counter}]}-${Time.SecondsSinceMidnight}].Int}</code> <code>/if (${duration}&amp;gt;3600\\) {``` /varset myhour ${Math.Calc[${duration}/3600\\].Int}</code> /varset duration \\({Math.Calc\\[\\(\\(\\)}/3600)-${myhour})*3600]<code>`} else {</code> <code>/varset myhour</code> <code>}</code></p> <p><code>/if (${duration}&gt;60) {</code> <code>/varset myminute ${Math.Calc[${duration}/60].Int}</code> <code>/varset duration ${Math.Calc[${Math.Calc[${Int[${duration}/60]}]} - ${Math.Calc[${myminute}]}*60]}</code> <code>/if (${myhour} &amp;&amp; ${myminute}&lt;0) /varset myminute 0${myminute}</code> <code>} else {</code> <code>/varset myminute</code> <code>}</code></p> <p><code>/if (${duration}&gt;=0) {</code> <code>/varset mysecond ${Int[${duration}/6]}</code> <code>/if (${myminute} &amp;&amp; ${mysecond}&lt;0) /varset mysecond 0${mysecond}</code> <code>} else {</code> <code>/varset mysecond 0</code> <code>}</code> <code>|</code> <code>| DISPLAY HH:MM:SS IF NEEDED</code> <code>|</code> <code>/if (${myhour.NotEqual[NULL]} &amp;&amp; ${Int[${myhour}]} !=0) {</code> <code>/varset HudArrayDuration[${counter}] ${myhour}:${myminute}m:${mysecond}s</code> <code>} else /if (${myminute.NotEqual[NULL]}&amp;&amp; ${Int[${myminute}]} !=0) {</code> <code>/varset HudArrayDuration[${counter}] ${myminute}m:${mysecond}s</code> <code>} else /if (${mysecond.NotEqual[NULL]}) {</code> <code>/varset HudArrayDuration[${counter}] ${mysecond}s</code> <code>}</code> <code>} else {</code> <code>/varset HudArrayTime[${counter}]</code> <code>/varset HudArraySpell[${counter}] none</code> <code>/varset HudArrayNPCName[${counter}]</code> <code>/varset HudArrayID[${counter}] -1</code> <code>/varset HudArrayDuration[${counter}]</code> <code>}</code> <code>/next counter</code> <code>/return</code></p> <p>&lt;/code&gt;</p> <p>You will also need these elements in your MQ2HUD.ini file (located in Release directory) NOTE: this file may not be present - create a new one with your favourite text editor (or notepad).</p> <p><code>[Elements]</code> <code>State=3,5,25,255,255,255,${Me.State}</code> <code>TargetLVLClass=3,5,35,255,255,255,${If[${Target.ID},${Target.Level} ${Target.Class} ${Target.PctHPs}%,]}</code> <code>RegExp=3,5,45,255,255,255,XP: ${Me.PctExp}%</code> <code>AAExp=3,5,55,255,255,255,AA: ${Me.PctAAExp}%</code> <code>Tribute=3,5,65,2,255,2,${If[${Me.TributeActive},Tribute is on,]}</code> <code>GM=3,5,75,255,2,2,${If[${Spawn[gm].ID},GM: ${Spawn[gm].Name},]}</code> <code>HudTimer1=1,480,240,050,255,255,${If[${HudArraySpell\\[1\\].Equal\\[none\\]},,${HudArrayDuration\\[1\\]}\\]}``` HudSpell1=1,530,240,255,255,255,${If\\[${HudArraySpell\\[1\\].Equal\\[none\\]},,${HudArraySpell\\[1\\]}\\]}</code> HudTarget1=1,630,240,255,255,050,\\({If\\[\\){HudArraySpell.Equal},,${HudArrayNPCName}]}`</p> <p><code>HudTimer2=3,480,250,050,255,255,${If[${HudArraySpell[2].Equal[none]},,${HudArrayDuration[2]}]}</code> <code>HudSpell2=3,530,250,255,255,255,${If[${HudArraySpell[2].Equal[none]},,${HudArraySpell[2]}]}</code> <code>HudTarget2=3,630,250,255,255,050,${If[${HudArraySpell[2].Equal[none]},,${HudArrayNPCName[2]}]}</code></p> <p><code>HudTimer3=3,480,260,050,255,255,${If[${HudArraySpell[3].Equal[none]},,${HudArrayDuration[3]}]}</code> <code>HudSpell3=3,530,260,255,255,255,${If[${HudArraySpell[3].Equal[none]},,${HudArraySpell[3]}]}</code> <code>HudTarget3=3,630,260,255,255,050,${If[${HudArraySpell[3].Equal[none]},,${HudArrayNPCName[3]}]}</code></p> <p><code>HudTimer4=3,480,270,050,255,255,${If[${HudArraySpell[4].Equal[none]},,${HudArrayDuration[4]}]}</code> <code>HudSpell4=3,530,270,255,255,255,${If[${HudArraySpell[4].Equal[none]},,${HudArraySpell[4]}]}</code> <code>HudTarget4=3,630,270,255,255,050,${If[${HudArraySpell[4].Equal[none]},,${HudArrayNPCName[4]}]}</code></p> <p><code>HudTimer5=3,480,280,050,255,255,${If[${HudArraySpell[5].Equal[none]},,${HudArrayDuration[5]}]}</code> <code>HudSpell5=3,530,280,255,255,255,${If[${HudArraySpell[5].Equal[none]},,${HudArraySpell[5]}]}</code> <code>HudTarget5=3,630,280,255,255,050,${If[${HudArraySpell[5].Equal[none]},,${HudArrayNPCName[5]}]}</code> <code>HudTimer6=3,480,290,050,255,255,${If[${HudArraySpell\\[6\\].Equal\\[none\\]},,${HudArrayDuration\\[6\\]}\\]}``` HudSpell6=3,530,290,255,255,255,${If\\[${HudArraySpell\\[6\\].Equal\\[none\\]},,${HudArraySpell\\[6\\]}\\]}</code> HudTarget6=3,630,290,255,255,050,\\({If\\[\\){HudArraySpell.Equal},,${HudArrayNPCName}]}<code>`[MQ2HUD]</code> <code>Last=Elements</code></p> <p>&lt;/code&gt;</p>","tags":["macro"]},{"location":"macros/gallery/ninjadvloot.inc/","title":"Ninjadvloot.inc","text":"","tags":["macro"]},{"location":"macros/gallery/ninjadvloot.inc/#description","title":"Description","text":"<p>Ninjadvloot.inc is an include file writen by A_Druid_00 available here.</p>","tags":["macro"]},{"location":"macros/gallery/ninjadvloot.inc/#usage","title":"Usage","text":"<p>Ninjadvloot.inc uses an ini(Loot.ini) which it will populate with items looted by the loot section of Autobot. Below is a start of some docummentation for the various possible INI file entries.</p>","tags":["macro"]},{"location":"macros/gallery/ninjadvloot.inc/#ini-file-entries","title":"INI File Entries","text":"<p>[Settings] LootMobs=TRUE Whether or not to do looting CorpseRadius=100 Radius in which to check for corpses to loot MobsTooClose=50 Radius in which to check for live NPCs so as to avoid looting while mobs are too close CorpseRotTime=440s The amount of time you want to wait before trying to loot a corpse that was previously unlootable due to the corpse timer ReportLoot=TRUE Whether or not to report items looted to $LootChannel? LootChannel=i say Channel into which to report looting issues [B] Start of section for items starting with \"b\" Blue Diamond=Keep ''Name of item and action to take. Possible actions are Keep, Ignore and Destroy. Ninjadvloot automatically adds droppable items as Keep and No Drop items as Ignore by default. It will not automatically set any items to Destroy. It reads the ini each time a loot decision is made, so you do not need to restart your macro in order to update the ini settings for any given item when you make a change. Just save the ini and the next time it encounters that item, it will use the new Keep/Ignore/Destroy setting.</p>","tags":["macro"]},{"location":"macros/gallery/puller.inc/","title":"Puller.inc","text":"","tags":["macro"]},{"location":"macros/gallery/puller.inc/#link","title":"Link","text":"<p>Click Here to go to the MQ2 forum thread</p>","tags":["macro"]},{"location":"macros/gallery/puller.inc/#features","title":"Features","text":"<ul> <li>Per toon customization logged in PULLER.INI which will be created by the include. Uses AdvPath for pre-pathed and nearest matching mob pulling.</li> <li>Pathed pulling you record a path to pull along then play that path back.</li> <li>Unpathed pulling will just target the nearest matching mob and go to it. If obsticles are hit it will use MoveStuck.inc to try and get around them. The entire time it's recording your path so when you do have a mob it will play the file back to get back to camp.</li> <li>Camp can be a location (where you enter the routine if not previously defined)</li> <li>Camp can be another Spawn (player or NPC) - Untested</li> <li>Camp can be changed via commands</li> <li>Bandoliear can be used with mele and ranged pulling</li> <li>Pull methods currently supported are spell (using spell_routines)</li> <li>Ranged</li> <li>Melee</li> <li>Pet - Untested</li> <li>Target aquired and tracked without targeting until the mob is tagged.</li> <li>If you get a target (you got hit) before you reach the perferred target you return with your add</li> <li>Targeting is based on alerts so new target types can be easily managed</li> <li>ie. /alert add 1 orc</li> <li>just look up /alert in TFM</li> </ul> <p>-Alert 2 is used to hold target's you DO NOT want to target. Let's say you want to kill any orc so /alert add 1 orc but you don't want to kill the wood elf named orcflayer so do /alert add 2 orcflayer to exclude him from potential targets</p>","tags":["macro"]},{"location":"macros/gallery/puller.inc/#required-includes","title":"REQUIRED Include's","text":"<p><code>#include spell_routines.inc</code> <code>#include advpath.inc</code> <code>#include system_events.inc</code> <code>#include outlander.inc</code></p>","tags":["macro"]},{"location":"macros/gallery/puller.inc/#initialization-calls","title":"Initialization Calls","text":"<p><code>/call InitAPFVars 1 15 20</code> <code>/call SysEventInit</code> <code>/call PullerInit</code> <code>/call MoveStuckInit</code></p>","tags":["macro"]},{"location":"macros/gallery/puller.inc/#to-do","title":"To Do:","text":"<ul> <li>Split Routine(s)</li> <li>Mob Avoidance (for both pulling and returning from pull)</li> </ul> <p>Stubbed in and partially coded.</p> <ul> <li>Auto Add to oE_BadTargetList if we just can't get to a mob in X amount of time and we are within Y distance.</li> </ul>","tags":["macro"]},{"location":"macros/gallery/quickbeg.inc/","title":"QuickBeg.inc","text":"","tags":["macro"]},{"location":"macros/gallery/quickbeg.inc/#description","title":"Description","text":"<p>QuickBeg.inc is an include file originally written by MacQ with subsequent additions by A_Druid_00. It manages the begging process for your buffs, cures, items and pet buffs. The macro can be configured for a many different conditions through its INI file.</p> <p>QuickBeg.inc can be found here.</p>","tags":["macro"]},{"location":"macros/gallery/quickbeg.inc/#usage","title":"Usage","text":"<p>QuickBeg.inc requires an INI (QuickBeg.ini) file and some configuration before it can be used.</p> <p>Refer to the Release Notes contained in the QuickBeg.inc source file for detailed instructions on how to integrate QuickBeg.inc into your macros.</p>","tags":["macro"]},{"location":"macros/gallery/rdcommon.ini/","title":"RDCommon.ini","text":"<p>RDCommon.ini is a bot-independent .ini file for AutoBot.mac(AutoBot documentation here). It will mostly handle itself. But it can be very useful to add your own settings here for spells not to cast ina given zone (mez in PoK or the Guild Lobby/Hall, for example).</p>","tags":["macro"]},{"location":"macros/gallery/rdcommon.ini/#possible-settings","title":"Possible settings","text":"<p>[ImmuneList] This section describes immunities on a per spellID basis. 5520Immune=|Gelidran Icekeeper| 5520 is the spellID for Euphoria. the Gelidran Icekeeper is immune to it. Autobot won't ever cast Euphoria at that mob. Also useful for excluding certain spells from certain mobs. Autobot will automatically add mobs here that give an immune message to any given spell. [RestrictedList] This section describes things not to do in a given zone. GukTop=|3185|NoMount| In Upper Guk, don't cast Flight of Eagles and don't use a mount. It is possible that you CAN'T use a mount and or cast FoE in Upper Guk, this section simply says AUtoBot Won't do that. This is also updated automagically based on in-game messages. [Settings] Version=4.5 Current AutoBot version. To force a rebuild of AB Aliases, set this value to 0.</p>","tags":["macro"]},{"location":"macros/gallery/related-include-files/","title":"Related Include Files","text":"","tags":["macro"]},{"location":"macros/gallery/related-include-files/#aapurchase","title":"AAPurchase","text":"<p>Most of this information was copied directly from the original AAPurchase thread (a big thanks to three-p-o for this handy function!) The orignial AAPurchase thread can be found Here.</p> <p>AAPurchase will do the following:</p> <ul> <li>Purchase AA's based on an array created from an ini file (this file is auto-created for you with the AAPurchase</li> </ul> <p>implementation in ModBot).</p> <ul> <li>Allow you to specify how many levels of a skill to purchase.</li> <li>Skip any AA that you are too low to purchase at your level.</li> <li>Inform you that it was not able to purchase the skill yet and tell you how much you have and how much it costs.</li> <li>Inform you of the skill it purchased and how much it cost.</li> <li>Inform you that you were not able to purchase a skill yet and what level is requires.</li> <li>Inform you when a skill you have defined is maxed, and will skip to the next in the list.</li> <li>Inform you to define new AA's you when all current defined AA's are maxed.</li> <li>Detect if you do not have Fast AA Purchase on and confirm you want to purchase the AA.</li> <li>Allow you to define your own ini section so that you can add shroud abilities to purchase without losing your</li> </ul> <p>characters list to purchase (more on this in a later wiki update).</p> <ul> <li>Warn you when you have 27+ AA's banked.</li> <li>Switch you to 100% level XP when ou reach 30 banked AA's</li> </ul> <p>How to use: An AA_CharName.ini should automatically be created for you in your \\Macros folder (using functionality created by spudman). The general layout of that file is:</p> <p><code>[AAtoBuy]</code> <code>AACount=[Number of AAs in the ini list]</code> <code>AA1=|#|M|S</code></p> <ul> <li>the name of the AA (e.g. Combat Stability)</li> <li># the maximum level of this AA to purchase (do not use in combination with the 'M' parameter)</li> <li>M indicates that you want to purchase this AA to its maximum level possible</li> <li>S indicates that you want to skip purchasing this AA (if you don't hae enough AA points saved) and check the next</li> </ul> <p>AA</p> <p>Example:</p> <p><code>[AAtoBuy]</code> <code>AACount=4</code> <code>AA1=Combat Agility|2</code> <code>AA2=Combat Stability|M</code> <code>AA3=Fury of Magic|M|S</code> <code>AA4=Teleport Bind|M</code></p> <ul> <li>AA1 would be the first AA you want to train. AA2 would be the second. Add more to your hearts content. There is no</li> </ul> <p>max limit, but it will take longer to run, especially if you do not clean up the list removing those you have</p> <p>already maxed.</p> <ul> <li>AA1 (Combat Agility) would purchase until it reached level 2 (of 28 possible) and then skip to the next AA to</li> </ul> <p>purchase in the list.</p> <ul> <li>The 'M' parameter for AA2 would tell it to purchase Combat Stability to the max ability level. AAPurchase will</li> </ul> <p>continue to save AAs and purchase levels until you have maxed out what you can buy of this AA. Only then will it</p> <p>move on to checking AAs further down the list.</p> <ul> <li>The 'M|S' parameters for AA3 would tell it to purchase Fury of Magic to its max level. If you don't have enough AA</li> </ul> <p>points to purchase the next level of Fury of Magic, the 'S' parameter would cause it to skip to the next AA to buy</p> <p>(Teleport Bind) and purchase that instead (assuming you have enough AA points saved for that).</p> <p>Additional Info:</p> <ul> <li>Change this to change which channel you send your notifications to (e.g. /bc , /echo , /mqlog): #define</li> </ul> <p>def_channel_ /echo</p> <ul> <li>From fearless: If you want to know who is training what when using /mqlog use this Code: #define def_channel_</li> </ul> <p>\"/mqlog $[Me.Name}\"</p> <ul> <li>If you want to see what your bots are up to (and you have Netbots loaded...), use the following command:</li> <li> <p>/echo ${NetBots[CharName].PctAAExp} (there's also a TypeMember(PctExp); in the plugin. Depending on the</p> <p>Netbots version you have there's also TotalAA, UsedAA, and UnusedAA.)</p> </li> </ul> <p>Return to main ModBot Wiki</p>","tags":["macro"]},{"location":"macros/gallery/related-include-files/#forage","title":"Forage","text":"<p>Note: More information needed for this section - feel free to add!!</p> <ul> <li>-1 means keep all no matter how many you have. 0 is destroy. Any positive number is how many to keep.</li> </ul>","tags":["macro"]},{"location":"macros/gallery/related-include-files/#modloot","title":"Modloot","text":"<p>Modloot was originally based on Forking's Loot.inc (original thread can be found here), but several sections have had complete rewrites and no longer even resemble the original (though they have been made to be backwards compatible for the older options).</p> <p>The creation of the initial Loot.ini file (found in the \\Macros folder) is triggered by setting 'DoLoot=TRUE' in your MB_CharName.ini file. The location of the Loot.ini file (as well as its name) can be changed using the 'Loot.ini=' section in MBCommon.ini.</p> <p>While looting is enabled (DoLoot=TRUE), your bot will automatically attempt to loot whenever there are corpses within CorpseRadius and no mobs within the MobsTooClose radius.</p> <p>Once activated, looting will start up with some default actions:</p> <ul> <li>The first time an item is found, it will be added to the Loot.ini file under it's associated alphabetical section.</li> <li>Depending on the item's particular flag type, it will be set to either Keep or Ignore:</li> <li>Nodrop items are set to Ignore (item will be left on corpse).</li> <li>Quest flag items are set to Ignore (item will be left on corpse).</li> <li>Most other items are set to Keep (item will be looted).</li> </ul> <p>The resulting Loot.ini file can be customized to loot and dispose of items in a more efficient manner (rather than just keeping or ignoring something).</p> <p>The basic format of the modloot 'Loot.ini' file is as follows:</p>","tags":["macro"]},{"location":"macros/gallery/related-include-files/#settings-section-settings","title":"Settings Section - [Settings]","text":"<ul> <li>LootMobs=[TRUE,FALSE] (set by DoLoot in MB_CharName.ini)</li> <li>CorpseRadius=[Radius #] (The default radius within which to search for corpses to loot. Default to 100.)</li> <li>MobsTooClose=[Radius #] (The default radius within which it will watch for other mobs before looting (prevents</li> </ul> <p>looting when there are still mobs in camp). Default to 50.)</p> <ul> <li>CorpseRotTime=[Corpse rot time in seconds] (The time before corpses rot. Default 440s.) ??</li> <li>ReportLoot=[TRUE,FALSE] (Report \\(or not\\) looting activities to the defined LootChannel)</li> <li>LootChannel=[desired loot channel] (Channel on which looting actions will be announced (e.g. \"bc\")</li> <li>Category=[cat1,cat2,etc.] (Used to specify loot categories. Each argument added to 'Category' will add a</li> </ul> <p>variable to modbot. For example, 'Category=Smithing,Tailoring' would result in two new entries in the loot.ini file</p> <p>on the next run of modbot:</p> <p><code>Category=Smithing,Tailoring</code> <code>Smithing=</code> <code>Tailoring=</code></p> <p>If desired, the new entries can then be modified to define which toons can loot which types of items. ${NetBots.Client} will make sure all toons will loot the item if the category is only to be used with other commands. Please note that you are not required to define toon names for this (thus allowing a single looter to loot all items):</p> <p><code>Category=Smithing,Tailoring</code> <code>Smithing=ToonName1,ToonName2</code> <code>Tailoring=ToonName1</code></p> <p>After the Category entires have been defined, items can be marked in the Items section as belonging to a particular category:</p> <p><code>Rhenium Ore=Smithing</code></p> <p>Categories can also be used with other commands. For instance:</p> <p>/mb getbank Smithing TRUE \\&lt;-- will search your bank for all items marked 'Smithing' and place them on your toon until you run out of room. The True|False option is Stacks or Singles.</p> <p>/mb give Smithing TRUE # \\&lt;-- will give # of Stacks (TRUE|FALSE) of Smithing items to .</p> <ul> <li>KeepScript=[ScriptName] (Allows you to define a full script that can be used to add extra options or checks</li> </ul> <p>before looting. You can now also set item names as =Script in your loot.ini file to use this option. Please note</p> <p>that the script will also run for all items marked 'Sell' to allow for checking values. If your script decides to</p> <p>loot the item, you will need to call the appropriate sub from your script. For example (this was meant only to run</p> <p>for 'Sell' option, but can be expanded.):</p> <p><code>[Script-ValueCheck]</code> <code>Commands=1</code> <code>C1=/if (!{Corpse.Item[{Param1}].Value} || {Corpse.Item[{Param1}].Value} &amp;&amp; {Corpse.Item[{Param1}].Value}&gt;1000) /call LootItem {Param1} Keep Right</code></p> <p>A '/call LootItem {Param1} Destroy Left' will destroy the item. Doing nothing, or exiting the script will result in item left on corpse</p> <ul> <li>QuestOnly=[TRUE,FALSE] (Defaults to FALSE. To be used with DoQuest so the toon will only loot quest items. If</li> </ul> <p>this is true and doquest is false, the bot will only loot cash off mob.)</p>","tags":["macro"]},{"location":"macros/gallery/related-include-files/#items-section-","title":"Items Section - []","text":"<ul> <li>=[|||] (Tells modloot what to do with the item.)</li> <li> <p>can equal Keep, Destroy, Ignore, Quest or CategoryName. Please note that | cannot be</p> <p>used at the same time as ToonName and/or Category.</p> <ul> <li>Raw Diamond=ToonName \\&lt;-- Only ToonName will loot Raw Diamonds (can be used in conjunction with Keep and</li> </ul> <p>Quantity).</p> <ul> <li>Raw Diamond=Keep \\&lt;-- Keeps all Raw Diamonds</li> <li>Raw Diamond=Keep|10 \\&lt;-- Keeps Raw Diamonds until you have 10 of them. After that it leaves them on the</li> </ul> <p>corpse.</p> <ul> <li>Raw Diamond=Destroy \\&lt;-- Loots Raw Diamonds and then destroys them.</li> <li>Raw Diamond=Ignore \\&lt;-- Does not loot Raw Diamonds (leaves them on the corpse).</li> <li>Crate of Supplies=Quest|10|Gathering from the Goblins \\&lt;--Specifies that the looter MUST have the quest</li> </ul> <p>'Gathering from the Goblins' in order to loot this item. In this case, the looter will only loot 10 'Crate</p> <p>of Supplies'. Note that the Quest action should be used in conjunction with the parameter</p> <p>(defined as 'Gathering from the Goblins' in the example).</p> <ul> <li>Raw Diamond=Script \\&lt;-- Runs the script that is defined in the 'KeepScript=' varible in the Settings</li> </ul> <p>section.</p> <ul> <li>Raw Diamond=Sell \\&lt;-- Item will be looted and, when told, will be sold to a vendor.</li> </ul> </li> <li> <p>Allows you to specify which toon you want to loot a particular item by using =.</p> </li> <li> <p>\\&lt;# of item to loot&gt; Used with the 'Quest' and 'Keep' actions and defines how many of the item to loot. Once you</p> <p>have looted this amount, you will not loot anymore of this item. It is possible to simply use</p> <p>'=Quest|10' without defining a quest name - this will produce an /echo about proper syntax for</p> <p>Quest|x| usage to include the quest name, but that is harmless, and item is still looted.</p> </li> <li> <p>Tells modloot to only loot this item if you have the quest named .</p> </li> </ul> <p>A typical Loot.ini file might look like:</p> <p><code>[Settings]</code> <code>LootMobs=TRUE</code> <code>CorpseRadius=100</code> <code>MobsTooClose=50</code> <code>CorpseRotTime=440s</code> <code>ReportLoot=FALSE</code> <code>LootChannel=bc</code> <code>Category=Tradeskill,Spellscroll</code> <code>Tradeskill=Toon1Name,Toon2Name</code> <code>Spellscroll=Toon1Name,Toon2Name</code> <code>KeepScript=</code> <code>QuestOnly=FALSE</code> <code>[C]</code> <code>Curzon=Destroy</code> <code>Crystallized Mephit Horn=Keep</code> <code>Crate of Supplies=Quest|10|Gathering from the Goblins</code> <code>[R]</code> <code>Rough Efreeti Beard=Keep</code> <code>Russet Oxide=Keep</code> <code>[S]</code> <code>Spell: Siphon Essence Rk. II=Spellscroll</code> <code>Spell: Phase March Rk. II=Spellscroll</code> <code>Spell: Halcyon Zephyr Rk. II=Spellscroll</code></p> <p>Return to main ModBot Wiki</p>","tags":["macro"]},{"location":"macros/gallery/related-include-files/#modmove","title":"ModMove","text":"<p>Use the functions in ModMove to run a path for pulling, selling, etc.</p> <p>As mentioned in the main wiki, the primary command for interacting with modmove is /mbwayplay</p>","tags":["macro"]},{"location":"macros/gallery/related-include-files/#modmove-commands","title":"ModMove Commands","text":"<p>mbwayplay (u,d,b,e) \\(t,f\\) \\(c\\) (Used to playback previously recorded paths / waypoints, through zones, doors, chaining paths, etc.)</p> <ul> <li>u: (up) enter at the closest \"waypoint\" and then go \"up\" it</li> <li>d: (down) enter at the closest \"waypoint\" and then go \"down\" it</li> <li>b: (begin) start at the first waypoint</li> <li>e: (end) start at the last waypoint</li> <li>t: zone (t)rue - zone at the end of the path</li> <li>f: zone (f)alse - do not zone at the end of the path</li> <li>c: look for another path to (c)hain (this is optional)</li> </ul> <p>mbwayrec (Used to record a path / waypoint. Once started, ducking at each location will add a waypoint to the path \\(note that you need to add at least two waypoints \\(start and finish?\\) while running the path or it will not record). Sitting stops path recording and returns to modbot functions. In order to add doors, chains, pull locations, etc. you'll need to edit the MBWayPlay.INI file)</p> <ul> <li>sell  (sell to the vendor - please see the section on modloot to know how to automate the sell process)</li> <li>door (open a door)</li> <li>pull (perform pull actions)</li> </ul> <p>An option exists for a network based INI file for scripts and path playback (mbwayplay and mbwaypnt.ini file), if you use this option, your commands must be prefixed by \"Network-\" or \"Net-\". Set the location of your network INI file [Settings] section of your modbot INI:</p> <p><code>NetworkINI=X:\\shared\\modbot\\mb_network.ini</code></p> <p>This would be an example of using your network based INI file:</p> <p><code>[DoPath]</code> <code>WPLoop=FALSE</code> <code>WPCount=1</code> <code>WP1=600 200</code></p> <p><code>[Script-GoThere]</code> <code>Commands=2</code> <code>C1=/call mbwayplay net-dopath u</code> <code>C2=/call Buy</code><code>water`` ``flask</code><code>75 yenny</code></p>","tags":["macro"]},{"location":"macros/gallery/related-include-files/#modmove-examples","title":"ModMove Examples","text":"","tags":["macro"]},{"location":"macros/gallery/related-include-files/#example-1","title":"Example 1","text":"<p><code>[example1]</code> <code>WPCount=5</code> <code>WP1=-912.25 2725.55</code> <code>WP2=-818.70 2627.16 sell magus</code> <code>WP3=-735.19 2674.32 door</code> <code>WP4=-805.75 2687.67 pull</code> <code>WP5=-912.25 2725.55</code> <code>[example2]</code> <code>WPCount=5</code> <code>WP1=-912.25 2725.55</code> <code>WP2=-818.70 2627.16 door</code> <code>WP3=-735.19 2674.32</code> <code>WP4=-805.75 2687.67 door</code> <code>WP5=-912.25 2725.55 example3 b t c</code> <code>[example3]</code> <code>WPCount=5</code> <code>WP1=-912.25 2725.55 example2 e</code> <code>WP2=-818.70 2627.16</code> <code>WP3=-735.19 2674.32 door</code> <code>WP4=-805.75 2687.67</code> <code>WP5=-912.25 2725.55 example4 e</code> <code>[example4]</code> <code>WPCount=5</code> <code>WP1=-912.25 2725.55</code> <code>WP2=-818.70 2627.16 door</code> <code>WP3=-735.19 2674.32 sell magus</code> <code>WP4=-805.75 2687.67</code> <code>WP5=-912.25 2725.55 example3 e t c</code></p> <p>An example mbwayplay command using the above sample ini file might be as follows:</p> <p><code>/mb mbwayplay example2 b t c</code></p> <p>This command would:</p> <ul> <li>(b)egin running a path called \"example2\".</li> <li>(t)rue to zone, so it looks to zone (by the way, this is the same code that is used to zone when a bot is following</li> </ul> <p>a master)</p> <ul> <li>(c)hain paths, so at the end of the path it looks for another path (in this case path:example3). The chained path</li> </ul> <p>would adhere to the same parameters you supplied for the original path (\\(b\\)egin, \\(t\\)rue to zone, and (c)hain at the</p> <p>end). So after the bot zones it looks for example3 and essentially runs this command: /mb mbwayplay example3 b t c</p>","tags":["macro"]},{"location":"macros/gallery/related-include-files/#example-2","title":"Example 2","text":"<p>You can run, zone, magus, doors, etc all through the mbwaypnt.ini file, here are some path examples, chaining path points together, and zone via a magus.</p> <p>Here is how I chain pull paths together, in this case my APPath=Temple, this paticular one goes through a zone and depending on what my war has available for AE agro it will change is next path to templec or templeb.</p> <p><code>[Temple]</code> <code>WPLoop=TRUE</code> <code>WPCount=8</code> <code>WP1=-487.57 84.80</code> <code>WP2=-457 135.50</code> <code>WP3=-376.89 134.42 pull</code> <code>WP4=-342.92 185.42 pull</code> <code>WP5=-416.90 134.60 pull</code> <code>WP6=-423 135.50 pull</code> <code>WP7=-457 135.50</code> <code>WP8=-487.57 84.80 pull ${If[${Me.AltAbilityReady[Rampage]},TempleC,TempleB]}</code> <code>[TempleB]</code> <code>WPLoop=TRUE</code> <code>WPCount=16</code> <code>WP1=-493.40 107.57 pull</code> <code>WP2=-472.93 80.30</code> <code>WP3=-473.26 -8.07</code> <code>WP4=-473.26 -46.44</code> <code>WP5=-511.04 -40.25</code> <code>WP6=-540.99 -39.14</code> <code>WP7=-558.42 -56.79</code> <code>WP8=-558.51 -142.49 pull</code> <code>WP9=-557.79 -89.31</code> <code>WP10=-557.40 -57.87</code> <code>WP11=-542.29 -40.36</code> <code>WP12=-509.79 -40.31</code> <code>WP13=-472.97 -46.15</code> <code>WP14=-472.37 -7.35</code> <code>WP15=-472.23 73.72</code> <code>WP16=-479.21 98.21 pull</code> <code>[TempleC]</code> <code>WPLoop=TRUE</code> <code>WPCount=20</code> <code>WP1=-493.40 107.57 pull</code> <code>WP2=-472.93 80.30</code> <code>WP3=-473.26 -8.07</code> <code>WP4=-473.26 -46.44</code> <code>WP5=-511.04 -40.25</code> <code>WP6=-540.99 -39.14</code> <code>WP7=-597.76 -30.52</code> <code>WP8=-597.92 10.08</code> <code>WP9=-597.92 76.81</code> <code>WP10=-597.92 116.82</code> <code>WP11=-586.76 158.24 pull</code> <code>WP12=-597.32 111.05</code> <code>WP13=-597.92 10.08</code> <code>WP14=-597.76 -30.52</code> <code>WP15=-540.99 -39.14</code> <code>WP16=-511.04 -40.25</code> <code>WP17=-473.26 -46.44</code> <code>WP18=-473.26 -8.07</code> <code>WP19=-472.93 80.30</code> <code>WP20=-493.40 107.57 pull</code></p>","tags":["macro"]},{"location":"macros/gallery/related-include-files/#example-3","title":"Example 3","text":"<p>For chaining across zones etc, this first one is one I used a lot doing LDoN's: /bct bob mbwayplay lfldongf b t c. To get him to go back you just /bct bob mbwayplay gftobb e t c</p> <p><code>[LFldonGF]</code> <code>WPCount=9</code> <code>WP1=-399.03 3640.92</code> <code>WP2=-387.84 1478.23</code> <code>WP3=-591.79 1209.10</code> <code>WP4=-379.89 -288.79</code> <code>WP5=335.06 -1134.56</code> <code>WP6=1976.01 -1141.98</code> <code>WP7=2109.76 -1113.65</code> <code>WP8=2156.90 -1209.03</code> <code>WP9=2166.85 -1206.41 GFtoBB b t c</code> <code>[GFtoBB]</code> <code>WPCount=8</code> <code>WP1=-2617.36 -1119.23 LFldonGF e</code> <code>WP2=-2251.29 -883.97</code> <code>WP3=-2028.63 -441.74</code> <code>WP4=-1747.35 1992.63</code> <code>WP5=-1541.93 2516.40</code> <code>WP6=-1571.55 2639.27</code> <code>WP7=-1636.02 2632.32</code> <code>WP8=-1637.63 2639.13 BBGFWayfarer e</code> <code>[BBGFWayfarer]</code> <code>WPCount=6</code> <code>WP1=-1101.67 -2476.26</code> <code>WP2=-1126.61 -2939.00</code> <code>WP3=-1125.30 -3054.35</code> <code>WP4=-1244.40 -3088.79</code> <code>WP5=-1315.14 -3053.25</code> <code>WP6=-1311.01 -3083.58 GFtoBB e t c</code></p>","tags":["macro"]},{"location":"macros/gallery/related-include-files/#example-4","title":"Example 4","text":"<p>Here is an example of using a magus: /bct bob mbwayplay tonedaria b t c nedaria</p> <p><code>[ToNedaria]</code> <code>WPCount=3</code> <code>WP1=625.62 -178.34</code> <code>WP2=537.80 -99.15</code> <code>WP3=604.30 7.34 nedaria b</code> <code>[Nedaria]</code> <code>WPCount=10</code> <code>WP1=1142.86 1135.75</code> <code>WP2=1391.06 704.39</code> <code>WP3=1285.54 -266.96</code> <code>WP4=1299.90 -388.21</code> <code>WP5=1362.44 -465.12</code> <code>WP6=1461.15 -475.80</code> <code>WP7=1546.51 -496.26</code> <code>WP8=1581.54 -567.51</code> <code>WP9=1597.32 -628.35</code> <code>WP10=1659.85 -625.32</code></p> <p>Return to main ModBot Wiki</p>","tags":["macro"]},{"location":"macros/gallery/rogue-helper-command-list/","title":"Rogue Helper Command List","text":"","tags":["macro"]},{"location":"macros/gallery/rogue-helper-command-list/#command-list-overview","title":"Command List Overview:","text":"<p>Presentation format for RH commands can be found in the section labeled \"Command List.\" Command names and parameters are capitalized for emphasis, but it should be noted that they are not case-sensitive. The format for each command is shown below:</p> <p>COMMAND</p> <p>Syntax: <code>/COMMAND &lt;parameters&gt;|&lt;or other parameters&gt; [&lt;optional parameter&gt;] LITERAL</code></p> <p>Description: Command description...</p> <p>Examples: Example usages...</p> <p>Within the syntax descriptions, a vertical line (or pipe) -- \"|\" indicates an either/or choice. Any parameters enclosed within \\&lt; &gt; symbols indicates a user-supplied value. Any parameters enclosed in [ ] symbols is optional. Any parameter information not enclosed within \\&lt; &gt; should be considered a literal expression (that is you enter THAT text, commonly this is the word \"ON\" or \"OFF\" in conjunction with various commands).</p>","tags":["macro"]},{"location":"macros/gallery/rogue-helper-command-list/#command-list","title":"Command List:","text":"<p>The following is a list of RH commands:</p> <p>ADDMASTER</p> <p>Syntax: <code>/addmaster &lt;name&gt;</code></p> <p>Description: This command adds a \"master\" (an authorized remote controller) given the supplied name to the master control list stored within the RHSettings.INI file. Whenever a \"master\" sends a tell to the rogue running RH, and the tell starts with a \"/\" character, RH will execute the entire line of the tell. A maximum of 20 masters can be stored; after the 20<sup>th</sup> master is stored, you'll be forced to delete one before you can add another.</p> <p>Examples: Add a master named Hootey: <code>/addmaster Hootey</code> Send a tell (as the master) to the rogue named Pokey, having the rogue target Mary and hug her and kiss her: <code>/tell pokey /multiline ; /target Mary ; /hug ; /kiss</code> Send a tell (as the master) to the rogue named Dokey, having the rogue camp: <code>/tell dokey /camp</code></p> <p>AUTOASSIST</p> <p>Syntax: <code>/autoassist ON|OFF|&lt;main assist&gt; [&lt;%health&gt;]</code></p> <p>Description: Allows you to activate or deactivate automatically assisting a PC or NPC, as well as setting the name of the PC or NPC you wish to assist. The \"% health\" parameter is a value from 1 to 99 designating the percentage health that your target must reach before you engage. The percentage health is an optional parameter that defaults to 98%</p> <p>Examples: Assist someone named \"Mywarriorfriend\" when his (and your) target has 97% health or less: <code>/autoassist Mywarriorfriend 97</code> Turn autoassisting on and off respectively: <code>/autoassist on</code> <code>/autoassist off</code></p> <p>AUTOCHICKEN</p> <p>Syntax: <code>/autochicken ON|OFF|&lt;nimble%&gt; [ESCAPE]</code></p> <p>Description: Provides you with automatic self-preservation. When activated, RH will execute the nimble discipline (if you have it) whenever your health percentage reaches the \"nimble%\" parameter. If the word \"Escape\" is optionally supplied, if nimble is unavailable (due to being blown or not purchased), this feature will cease combat and use your escape AA skill.</p> <p>Examples: Activate autochicken and try to use nimble if your health is at 20% or lower and escape if nimble used/blown: <code>/autochicken 20 escape</code> Turn autochicken on with default (previous) values or turn it off, respectively: <code>/autochicken on</code> <code>/autochicken off</code></p> <p>AUTODISC1</p> <p>Syntax: <code>/autodisc1 ON|OFF|&lt;\"discipline name\"&gt; &lt;end%&gt; &lt;reuse&gt;</code></p> <p>Description: Establish an optional discipline to employ while fighting. The specified discipline (enclosed within \" \" if it's more than one word!) will be executed any time you have at least \"end%\" amount of endurance. You must also specify the reuse time of the discipline (minutes) as this information is currently unknown to MQ2 for the original combat disciplines.</p> <p>Examples: Turn discipline #1 on, set it to employ the duelist discipline if it's ready and you have at least 40 endurance (and specify that the re-use time on duelist is 30 minutes): <code>/autodisc1 Duelist 40 30</code> Turn discipline #1 on, set it to employ the deadly precision discipline if it's ready and you have at least 60 endurance (and specify that the re-use time on deadly precision is 5 minutes): <code>/autodisc1 \"Deadly Precision\" 60 5</code> Turn off the disc1, but retain settings: <code>/autodisc1 off</code> Reactivate disc1 using existing settings: <code>/autodisc1 on</code></p> <p>AUTODISC2</p> <p>Syntax: <code>/autodisc2 ON|OFF|&lt;\"discipline name\"&gt; &lt;end%&gt; &lt;reuse&gt;</code></p> <p>Description: Establish an optional discipline to employ while fighting. The specified discipline (enclosed within \" \" if it's more than one word!) will be executed any time you have at least \"end%\" amount of endurance. You must also specify the reuse time of the discipline (minutes) as this information is currently unknown to MQ2 for the original combat disciplines.</p> <p>Examples: Turn discipline #2 on, set it to employ the duelist discipline if it's ready and you have at least 40 endurance (and specify that the re-use time on duelist is 30 minutes): <code>/autodisc2 Duelist 40 30</code> Turn discipline #2 on, set it to employ the deadly precision discipline if it's ready and you have at least 60 endurance (and specify that the re-use time on deadly precision is 5 minutes): <code>/autodisc2 \"Deadly Precision\" 60 5</code> Turn off the disc, but retain settings: <code>/autodisc2 off</code> Reactivate disc using existing settings: <code>/autodisc2 on</code></p> <p>AUTOEVADE</p> <p>Syntax: <code>/autoevade</code></p> <p>Description: Toggles automatic evade abilities while fighting on or off. If on, they'll be turned off (and vice versa).</p> <p>Examples: N/A</p> <p>AUTOFOLLOW</p> <p>Syntax: <code>/autofollow [&lt;name&gt;] [&lt;distance&gt;]</code></p> <p>Description: This command will activate autofollowing, which will stay active until your target changes (to nothing, yourself, or anything else). If an RH event is detected \\(such as a situation where autoassist is warranted, or looting, for example\\) autofollow will be deactivated automatically and the interrupting activity will take place. You need not specify range or target (it will use the current target if one isn't specified).</p> <p>Examples: Activate autofollow on Chichihooah and stay within 20 feet of her: <code>/autofollow chichihooah 20</code></p> <p>AUTOHS</p> <p>Syntax: <code>/autohs</code></p> <p>Description: Toggles automatic hide and sneak abilities while not fighting on or off. If on, they'll be turned off (and vice versa).</p> <p>Examples: N/A</p> <p>AUTONINJA</p> <p>Syntax: <code>/autoninja OFF|DROP|DROPABLE|ALL [&lt;range&gt;]</code></p> <p>Description: This command will activate automatic NPC corpse looting whenever you are awarded experience. The first parameter can be set to ALL (which will loot everything on a corpse), DROP or DROPABLE \\(which will only loot non-NODROP flagged items\\), or OFF \\(which disables corpse looting\\). The optional range parameter determines how far away RH will \"look\" for a corpse from your position at time of experience award (default is 50 feet).</p> <p>Examples: Turn on ninjalooting and get everything that drops (use default range): <code>/autoninja all</code> Turn on ninjalooting and get only tradable items; only seek corpses no farther than 20 feet away: <code>/autoninja drop 20</code> Turn off ninjalooting: <code>/autoninja off</code></p> <p>AUTOPICK</p> <p>Syntax: <code>/autopick</code></p> <p>Description: Toggles automatic pickpocketing abilities while fighting on or off. If on, they'll be turned off (and vice versa).</p> <p>Examples: N/A</p> <p>AUTOSTICK</p> <p>Syntax: <code>/autostick</code></p> <p>Description: Toggles automatic sticking to targets while fighting them. Autosticking implies staying behind the target as well, unless obstructed by an object preventing you from getting behind it or while tanking. Do not confuse /autoassist and /autostick--these are mutually exclusive features that may be used independently of each other.</p> <p>Examples: N/A</p> <p>AUTOTRAPS</p> <p>Syntax: <code>/autotraps</code></p> <p>Description: Toggles automatic trap negotiation while not in combat. This feature will look for both box and floor traps, and disarm them when it finds one. If the feature is on, it will be turned off (and vice versa).</p> <p>Examples: N/A</p> <p>CHANNEL</p> <p>Syntax: <code>/channel &lt;channel&gt;</code></p> <p>Description: With this command, you can control where RH directs it's output. Status information and general RH operations text will go to whatever channel you set. In essence, whatever text you supply here is suffixed after a \"/\" and then output strings are appended afterwards. \"Echo\" is the default channel. Creative users can use the IRC plugin and set the channel to \"I\" to send RH output to an existing IRC channel.</p> <p>Examples: Redirect RH output to chat channel 1: <code>/channel 1</code> Redirect RH output to an irc channel (assuming you've loaded the MQ2IRC plugin and already joined a channel): <code>/channel i</code> Restore RH output to the MQ2 window (echo channel): <code>/channel echo</code></p> <p>CLOSENESS</p> <p>Syntax: <code>/closeness &lt;%hitrange&gt;</code></p> <p>Description: With this command you can set the percentage of the maximum range used in order to reach your target while autosticking. For some zones (Kael for example) the reported range is incorrect and too large--for such zones, set the closeness range to a smaller value such as 20 or 30. For most zones, 70% is adequate.</p> <p>Examples: Set the closeness value to 30%: <code>/closeness 30</code></p> <p>DRAG</p> <p>Syntax: <code>/drag &lt;body1&gt; &lt;body2&gt; ... &lt;bodyN&gt;</code></p> <p>Description: Drag corpses. You must supply one or more player names as parameters (unlimited). In order to stop dragging bodies, target yourself (F1).</p> <p>Examples: Drag your friends Booger and Chooger: <code>/drag booger chooger</code></p> <p>DYNAGGRO</p> <p>Syntax: <code>/dynaggro</code></p> <p>Description: Toggles whether or not RH should be responsible for the your rogue's aggression level (only meaningful if you're using /autoassist). This feature will LOWER the percentage at which autoassist will fire by 1% if you were attacked during any given fight. If you were not attacked on the most recent fight, it will RAISE the percentage at which autoassist will fire by 1%. The assist percentage never stabilizes--it will always either go up or down after every fight. When using this command, if the feature is on, it will be turned off (and vice versa).</p> <p>Examples: N/A</p> <p>DYNCLOSE</p> <p>Syntax: <code>/dynclose</code></p> <p>Description: Toggles whether or not RH should be responsible for the temporary automatic adjustment of the closeness to target (requires /autostick to be on). This feature will move you 20% closer to the target every two seconds, until you're in swinging range. Original closeness value is restored when the current target is killed. When using this command, if the feature is on, it will be turned off (and vice versa).</p> <p>Examples: N/A</p> <p>ENDFLOOR</p> <p>Syntax: <code>/endfloor &lt;%endurance&gt;</code></p> <p>Description: With this command you can set the percentage of your endurance that is required in order for you to continue to initiate a fight with the strike discipline. When your endurance drops below this percentage value, you'll only autoattack when starting a fight.</p> <p>Examples: Set the strike endurance floor to 75%: <code>/endfloor 75</code></p> <p>IBOUNCE</p> <p>Syntax: <code>/ibounce &lt;itemalias&gt; &lt;\"Spell Name\"&amp;#62;</code></p> <p>Description: This command is part of a set of three commands used to manage clickable items and their effects. This particular command allows you to set and store which spell effects do not stack with the spell effect created by a given clickable item. You may store an unlimited number of spell effects that \"bounce off\" of a given clickable item's effect. When RH maintains your clickable buffs, it will consult your existing buffs looking for these bounce spells prior to trying to re-click the conflicting item. Enclose spell names in double quotes (\" \")! The item in question must be aliased with the /iset command prior to using this command.</p> <p>Examples: Set two bounce effects for an item aliased as simply \"ring\" (perhaps a Coldain's Hero Ring), particularly Shield of Spikes and Shield of Thorns: <code>/ibounce ring \"Shield of Spikes\"</code> <code>/ibounce ring \"Shield of Thorns\"</code></p> <p>ICLICK</p> <p>Syntax: <code>/iclick &lt;itemalias&gt;</code></p> <p>Description: This command is part of a set of three commands used to manage clickable items and their effects. This particular command allows you to request RH to invoke the clickable effect for a given item. If you're not wearing the item, RH will fetch it, click it, put it back in it's original container (in it's original spot) and close the container. The item in question must be aliased with the /iset command prior to using this command.</p> <p>Examples: Have RH fetch the item aliased as \"ring\" (perhaps a Coldain's Hero Ring), and click it to invoke it's effect: <code>/iclick ring</code></p> <p>ISET</p> <p>Syntax: <code>/iset &lt;itemalias&gt; KEEPUP|NOKEEPUP &lt;\"Item Name\"&gt;</code></p> <p>Description: This command is part of a set of three commands used to manage clickable items and their effects. This particular command allows you to set and store an item alias for a given clickable item. You also can specify whether or not you want RH to automatically try to maintain the spell effect of this item. If a superior spell effect doesn't stack with the item's effect, you should use the /ibounce command to specify said spells.</p> <p>Examples: Have RH alias \"ring\" for your Coldain's Hero Ring, and also indicate you wish RH to maintain the Shield of the Eighth, if possible: <code>/iset ring keepup \"Coldain Hero's Insignia Ring\"</code></p> <p>LEASH</p> <p>Syntax: <code>/leash OFF|&lt;distance&gt; &lt;master&gt;</code></p> <p>Description: With the leash command, you can dynamically create one of two types of leashes and tether yourself to it: a stake-bound leash or a master-bound leash. If you specify just a distance and no master, /leash will drive a \"stake\" in the ground at your current position, and return to this point after you finish a combat. If you specify both distance and a master, after combats you'll return to the \"master's\" side, regardless of where the master is located. If you indicate OFF as a parameter instead of a distance, leashing will be turned off.</p> <p>Examples: Create a 200 foot leash that is attached to a virtual stake: <code>/leash 200</code> Create a 250 foot leash that is attached to your warrior buddy named Booger: <code>/leash 250 booger</code> Turn all leashing off: <code>/leash off</code></p> <p>LEASHFLEX</p> <p>Syntax: <code>/leashflex &lt;%length&gt;</code></p> <p>Description: With this command you can set the threshold of when RH considers you to be \"close enough\" to the stake or master to stop moving toward it. If you set the leash flexibility very low (1), you'll return to the leash and nearly be on top of the stake or master. If you set the leash flexibility very high (100), you'll never return to the stake or master, but you won't go beyond your leash length when autosticking either.</p> <p>Examples: Set the leash flexibility to 50% of the leash's length: <code>/leashflex 50</code></p> <p>LOOTMYCORPSE</p> <p>Syntax: <code>/lootmycorpse</code></p> <p>Description: With this command, you request RH to loot your entire corpse. Be warned that it's not aware of whether or not you've received a resurrection yet or not! If you're body is too far away or lag is too intense, it will abort with an appropriate failure message.</p> <p>Examples: N/A</p> <p>MAINASSIST</p> <p>Syntax: <code>/mainassist &lt;player&gt;</code></p> <p>Description: This command is part of a set of three commands used to designate who you should autoassist, assuming you've activated the autoassist feature. This particular command sets the main assist (the main assist is also settable via /autoassist; however using autoassist both sets the main assist AND turns autoassist on--this command will only set the main assist).</p> <p>Examples: Make your buddy warrior \"Booger\" your main assist (but don't turn on autoassist): <code>/mainassist booger</code></p> <p>PAUSE</p> <p>Syntax: <code>/pause</code></p> <p>Description: The pause command suspends all of RH's operations. Use this if you want to temporarily disable RH without unloading it.</p> <p>Examples: N/A</p> <p>REMMASTER</p> <p>Syntax: <code>/addmaster &lt;name&gt;</code></p> <p>Description: This command removes a \"master\" (an authorized remote controller) given the supplied name from the master control list stored within the RHSettings.INI file. It is a complimentary function to the ADDMASTER command.</p> <p>Examples: Remove the master named Hootey: <code>/remmaster Hootey</code></p> <p>RHHELP</p> <p>Syntax: <code>/rhhelp</code></p> <p>Description: This command will give you a very terse list of all of RH's commands and their abbreviated syntax. It is NO substitute for this manual!</p> <p>Examples: N/A</p> <p>SECONDASSIST</p> <p>Syntax: <code>/secondassist &lt;player&gt;</code></p> <p>Description: This command is part of a set of three commands used to designate who you should autoassist, assuming you've activated the autoassist feature. This particular command sets the secondary assist. If the main assist dies, zones, or linkdies, RH will cascade to the secondary assist as a backup and will reinstate the main assist whenever they're alive or reconnect again.</p> <p>Examples: Make the dastardly shadowknight \"Drevil\" your secondary assist: <code>/secondassist drevil</code></p> <p>STATUS</p> <p>Syntax: <code>/status</code></p> <p>Description: The status command will show you the current state of all of RH's relevant functions (ON or OFF as TRUE or FALSE) as well as any user-defined values for those thresholds (endurance floors, stick distances, etc.)</p> <p>Examples: N/A</p> <p>STICKDIST</p> <p>Syntax: <code>/stickdist &lt;range_to_target&gt; &lt;range_to_tank&gt;</code></p> <p>Description: With this command, you can regulate how close you must be to both your current target or the main assist in order to continue (or begin) autosticking to a given target. If you find yourself farther than the specified range to target or you've wandered farther than the specified range to your tank/mainassist, you will stop sticking to the target. This command is mostly useful to prevent you from chasing down runners when the main assist does not (or should not) as well as not running after mobs that recently gated far, far away.</p> <p>Examples: Set the maximum distance you'll pursue a mob at to 50 feet and the maximum \"wander\" distance from the tank to 100 feet: <code>/stickdist 50 100</code></p> <p>STOPFIGHT</p> <p>Syntax: <code>/stopfight &lt;%health&gt;</code></p> <p>Description: With this command, you can control when RH turns off autoattack. Whenever your health reaches the specified percentage health parameter, RH will stop fighting.</p> <p>Examples: Cease combat when your health reaches 20% of it's maximum: <code>/stopfight 20</code></p> <p>STRIKEDISC</p> <p>Syntax: <code>/strikedisc &lt;strikeskill&gt;</code></p> <p>Description: This command allows you to set your best available strike skill. The default skill is Assassin's Strike, but should you be lower level or been lucky enough to obtain later strike discipline books, this is the command you use to set the appropriate strike skill name. The name of the skill only has to be unique enough to differentiate it from other strike skills (i.e. ancient, kyv, or assassin are all fine).</p> <p>Examples: Set the strike skill to be used to \"Kyv's Strike\": <code>/strikedisc kyv</code></p> <p>TARGETSWITCH</p> <p>Syntax: <code>/targetswitch</code></p> <p>Description: Toggles whether or not RH should automatically choose a new target if the main assist does, or if it should \"finish off\" the current target. If your main assist is also the puller, you may want target switching OFF, as it will be expected that you finish off the last one before the next one is arrives. When using this command, if the feature is on, it will be turned off (and vice versa).</p> <p>Examples: N/A</p> <p>THIRDASSIST</p> <p>Syntax: <code>/thirdassist &lt;player&gt;</code></p> <p>Description: This command is part of a set of three commands used to designate who you should autoassist, assuming you've activated the autoassist feature. This particular command sets the tertiary assist. If the main assist and secondary assist die, zone, or linkdie, RH will cascade to the tertiary assist as a backup's backup and will reinstate the main assist whenever they're alive or reconnect again.</p> <p>Examples: Make your friendly paladin \"Goodytwoshoes\" your tertiary assist: <code>/thirdassist goodytwoshoes</code></p> <p>VERBOSITY</p> <p>Syntax: <code>/verbosity 0|1|2</code></p> <p>Description: With this command, you determine the level of text output that RH generates. A verbosity level of '0' will only output command switching information, but RH operational output will be almost completely silent. Verbosity level 1 shows all major RH activity. Verbosity level 2 shows everything, including ancillary RH background operations. The default is 2.</p> <p>Examples: Make RH almost completely mute: <code>/verbosity 0</code> Have RH output all information possible: <code>/verbosity 2</code></p> <p>WEAPONSWITCH</p> <p>Syntax: <code>/weaponswitch OFF|&lt;weapon1&gt; &lt;\"switch text\"&gt; &lt;weapon2&gt;</code></p> <p>Description: With this command, you can have RH automatically choose between two different weapons, depending on a settable situation. At the end of a combat, RH will restore <code>weapon1</code> to your grasp. Whenever the supplied \"switch text\" is encountered (usually this the proc message, be it personal buff or target debuff) the weapon will be swapped out for <code>weapon2</code>. WEAPONSWITCH is also smart enough to determine if the weapon procs a buff (in which case you'd probably like it to only switch back to <code>weapon1</code> when the proc'ed buff wears off rather than after you finish off the mob. It handles this automatically. Make sure you do not typo the name of the weapons, or the switch text; also, the switch text does not need to be complete, but should be as complete as possible to not accidentally swap weapons around if someone speaks the trigger text. Weapons will be retrieved and deposited in any containers they come from (or on your character). Alternately, you can specify OFF as the first parameter to stop weaponswitching.</p> <p>Examples: Use Locustlure as your default weapon, but switch to the Horn of Hsagra if Locustlure procs: <code>/weaponswitch Locustlure \"yawns.\" \"The Horn of Hsagra\"</code> Use the Dart of Immobility as your default weapon, but switch to Ifir if your Dart procs: <code>/weaponswitch \"Dart of Immobility\" \"screams as poison\" \"Ifir, Dagger of Fire\"</code> Use a Primal Spear as your default weapon until you receive avatar, but switch to Ifir if your primal proc'ed and you still have avatar: <code>/weaponswitch \"Primal Velium Spear\" \"Your body screams\" \"Ifir, Dagger of Fire\"</code> Turn off weaponswitching: <code>/weaponswitch OFF</code></p>","tags":["macro"]},{"location":"macros/gallery/rogue-helper/","title":"Rogue Helper","text":"<p>RH.mac was originally designed to take some button mashing out of playing a rogue while raiding. This macro will execute \"smart\" backstabbing, constant evading (optionally), auto hiding and sneaking while not fighting, automatically avoid enrage riposte damage, stop fighting if you get below a certain health percentage, employ your chosen Strike discipline before wading into combat, and was later expanded to include a vast amount of other features.</p> <p>The latest versions of RH will also automatically assist specified tanks in a cascading fashion, automatically stick to a target (via internal code or using the MoveUtils plugin, smartly), will strafe in the most logical direction, display experience totals after combat, and optionally return after combat to a specified stake (or anchor) point.</p> <p>In addition to various combat abilities (along with their tunable parameters), RH also provides some rogue tools: multiple body dragging, self corpse looting, as well as a fully customizable item clicker (with the capability to automatically refresh self-clicked buffs), and automatic looting.</p> <p>A full list of features, their command syntax, and examples of how to use those commands is provided alphabetically below.</p>","tags":["macro"]},{"location":"macros/gallery/rogue-helper/#important-notice","title":"Important Notice:","text":"<p>RH will not function correctly, particularly in combat and more specifically with strike execution, unless you do the following things before using the macro:</p> <ol> <li>Make sure you have autoattack on assist OFF (/assist off)</li> <li>Modify your HOTKEY assist button to be ONLY an assist command and the following line:</li> </ol> <p><code>/echo Seeking a Victim...</code></p> <p>In other words, make a hotkey with the following two lines:</p> <p><code>/assist main</code> <code>/echo Seeking a Victim...</code></p> <p>If you fail to do these things, RH will function poorly!</p> <p>If your rogue still fails to assist your tank, try /Stick Off</p>","tags":["macro"]},{"location":"macros/gallery/rogue-helper/#features","title":"Features:","text":"<p>RH provides you, the rogue, with an enormous amount of power. RH can do just about anything a rogue would need to do and can do almost all of it automatically. The following section briefly lists the features and capabilities that RH provides.</p> <ul> <li>Backstab while autoattack is on.</li> <li>Evade (optional) whenever hide is available during combat.</li> <li>Hide and sneak (optional) while not fighting.</li> <li>Pick the pockets of your enemies while fighting.</li> <li>Avoid riposte damage by disabling autoattack whenever enrage is detected and you're facing the target (if autoassist</li> </ul> <p>is on, autoattack is turned back on after the enrage wears off).</p> <ul> <li>Cease fighting when the rogue's health drops below a certain point.</li> <li>Open combats with a strike discipline (if hiding and sneaking and sufficient endurance is available).</li> <li>Automatically stick (maneuver behind) engaged targets in a VERY human-like way.</li> <li>You can specify how near you stick to the mob as a percentage of the maximum range to hit the target.</li> <li>You will \"circle strafe\" around targets in the smallest arc to find the target's rear.</li> <li>RH will try to back up and randomly move around obstacles if it gets stuck.</li> <li> <p>If you suddenly find yourself tanking, sticking will be disabled to prevent you from dancing around the target</p> <p>indefinitely.</p> </li> <li> <p>Sticking will automatically take advantage of the MQ2MoveUtils plugin if it's loaded.</p> </li> <li>Experience changes in regular, AA, and Group Leadership are reported as a percentage delta (change) after every</li> </ul> <p>experience gain.</p> <ul> <li>Create a virtual leash for your rogue and attach it to an NPC or player or to a virtual stake in the ground.</li> <li>You can customize the length of the leash.</li> <li>If your (or RH) tries to move you beyond the leash length, you will be yanked back to the maximum length.</li> <li>When not fighting, you'll return to the stake or the leash holder.</li> <li>Automatically assist another player and make ready to strike or auto attack when the target reaches a certain health</li> </ul> <p>percentage.</p> <ul> <li>Up to three (3) assists can be specified..</li> <li> <p>RH will cycle through all three assists, trying to assist each and stop when it finds that one of them is</p> <p>targeting an NPC.</p> </li> <li> <p>You can specify \"main\" as the first or main assist, and RH will follow raid-set main assists instead.</p> </li> <li>Aggression level can optionally be controlled by RH (how soon to assist).</li> <li> <p>RH can stay on an existing target until it's dead, or optionally engage a new target if the main assist chooses</p> <p>one.</p> </li> <li> <p>Drag an unlimited number of corpses (command line driven).</p> </li> <li>Completely loot your own corpse.</li> <li>Automatically click items.</li> <li>You can define clickable items and use a command to have RH \"fetch\" them, use them, and put them back.</li> <li> <p>Specified clickable effects can be designated as persistent (KEEPUP), and RH will automatically find the item</p> <p>and activate it's effect when the previously employed effect wears off.</p> </li> <li> <p>You can define which spells don't stack with your clickable items to prevent persistent effects from bouncing</p> <p>off of superior spells. * Ninjaloot any NPC corpses that are around you (after something dies). * Automatically scan and disarm traps. * Improved autofollow (far better than EQ's) which actually allows you to follow players in dungeons or follow NPCs,</p> </li> </ul> <p>all at a specified range.</p> <ul> <li>Conditionally swap weapons after a specified proc-effect occurs in combat, be it a player buff or a detrimental</li> </ul> <p>target debuff.</p> <ul> <li>Fight in 3D-mode while swimming (target acquisition while underwater is inhumanly perfect).</li> <li>Determine when to take evasive action, including nimble discipline and potentially escape.</li> <li>Automatically employ two configurable disciplines of your choice (duelist, deadly precision, kinesthetics, etc.)</li> <li>Completely control macro output, both where it's displayed and the volume of text generated.</li> </ul>","tags":["macro"]},{"location":"macros/gallery/rogue-helper/#rogue-helper-command-listhttpsmacroquestorgwikiindexphprogue_helper_command_list","title":"[Rogue Helper Command List](https://macroquest.org/wiki/index.php/Rogue_Helper_Command_List","text":"","tags":["macro"]},{"location":"macros/gallery/script-examples/","title":"Script Examples","text":"<p>Following are examples of scripts that have been created by ModBot users over the years. Some work great, while others work pretty well, but they all at the very least will give you some solid examples from which you can start to create your own fantactis scripts (which you will, of course, post here as an example :)</p>","tags":["macro"]},{"location":"macros/gallery/script-examples/#heal-script-examples","title":"Heal Script Examples","text":"","tags":["macro"]},{"location":"macros/gallery/script-examples/#intelligent-use-of-promised-renewal","title":"Intelligent use of Promised Renewal","text":"<p>Please note: \"PR\" has been added as a precondition for heals, so this script is no longer needed (although it is being left here as a good example). Please see the AdvHeal section of the ModBot wiki for information on using PR with AHPreCondition.</p> <p>Unlike most other heal spells, Promised Renewal lands as a buff on the target that heals after it fades (~18 seconds). The challenge in the current incarnation of ModHeal is that Modheal calculates the mob's dps and along with your target's time to live \\(ttl\\) without taking into account the PR buff - the end result is that it will often cast a big (and mana expensive) fast heal on your target five seconds before the PR buff fades.</p> <p>This script, created by Kroak, works to use PR correctly.</p> <p><code>[Script-CHCheck]</code> <code>Commands=9</code> <code>C1=/declare vName string local {Spawn[{Param1}].Name}</code> <code>C2=/if ({NetBots[{vName}].ID} &amp;&amp; !{NetBots[{vName}].Buff.Find[9755]} || !{Me.LAInspectBuffs} &amp;&amp; !{NetBots[{vName}].ID} || {NetBots[{Spawn[{Param1}].Name}].Buff.Find[9755]} &amp;&amp; {NetBots[{vName}].Duration[{NetBots[{vName}].Buff.Left[{NetBots[{vName}].Buff.Find[9755]}].Count[ ]}]}&gt;2 &amp;&amp; {Spawn[{Param1}].PctHPs}&lt;55) /return TRUE</code> <code>C3=/if ({NetBots[{Spawn[{Param1}].Name}].Buff.Find[9755]} &amp;&amp; ({NetBots[{vName}].Duration[{NetBots[{vName}].Buff.Left[{NetBots[{vName}].Buff.Find[9755]}].Count[ ]}]}&lt;3 &amp;&amp; {Param2}==13 || {NetBots[{vName}].Duration[{NetBots[{vName}].Buff.Left[{NetBots[{vName}].Buff.Find[9755]}].Count[ ]}]}&lt;2 &amp;&amp; {Param2}!=13)) /return FALSE</code> <code>C4=/if ({NetBots[{vName}].ID}) /return FALSE</code> <code>C5=/if ({Target.ID}!={Param1}) /target id {Param1}</code> <code>C6=/delay 2s {Target.ID}=={Param1} &amp;&amp; {Target.Buff[1].ID} || {Me.TargetOfTarget.ID}</code> <code>C7=/if ({Target.BuffDuration[Promised Renewal]}&lt;3) /return FALSE</code> <code>C8=/return TRUE</code></p> <p>Kroak notes the following about this script:</p> <ul> <li>Parts of this I did in an attempt to be sure non-netbots toons are checked also, but Netbots toons are checked</li> </ul> <p>first, and the rest is untested, and I think turned off by line 4. There's a couple of reasons this isn't the</p> <p>perfect solution - Rk. II versions of the spell will require a change in the ID checked. I don't have Rk. II, so</p> <p>this just checks for buff id 9755. Also, the PctHps\\&lt;55 is a very important check. For harder fights you might want</p> <p>that a bit higher.</p> <ul> <li>The second line checks if you're attempting to cast CH and checks the duration of the buff against cast time of your</li> </ul> <p>heal.</p> <ul> <li>If you notice how long some of the lines are, you might guess why I'd like Netbots[X].Duration[Y] to take a</li> </ul> <p>spell name or ID instead of only listing by buff number.</p> <ul> <li>Anyways, my goal was to set this in my NetworkINI file, then AHPreCondition8=net-CHCheck on any toon that heals. It</li> </ul> <p>semi-works.</p> <p>Return to main ModBot Wiki</p>","tags":["macro"]},{"location":"macros/gallery/script-examples/#disc-and-item-examples","title":"Disc and Item Examples","text":"","tags":["macro"]},{"location":"macros/gallery/script-examples/#procure-sap-rogue-disc","title":"Procure Sap Rogue Disc","text":"<p>Rogues get a disc Procure Sap that summons a potion called Mugger's Sap - this item goes in your potion belt, and once right-clicked on a humanoid, can pickpocket an item on a separate loot table. Recast on potion belt item is approximately 20 minutes.</p> <p><code>ABGem3=script</code> <code>ABSpell3=summugger</code> <code>ABSpellFoci3=</code> <code>ABDurMod3=0</code> <code>ABSpellAlias3=</code> <code>ABAnnounce3=</code> <code>ABSpellMinMana3=20</code> <code>ABTarCnt3=4</code> <code>ABTarType3=self cbt idle</code> <code>ABRecast3=FALSE</code> <code>ABSpellIcon3=</code></p> <p><code>[Script-summugger]</code> <code>Commands=3</code> <code>C1=/if (!{FindItemCount[Mugger's Sap]}) /disc Procure Sap Rk. II</code> <code>C2=/if (!{FindItemCount[Mugger's Sap]}==0) /delay 1s {Me.Casting.ID}</code> <code>C3=/if (!{FindItemCount[Mugger's Sap]}==0) /delay 7s !{Me.Casting.ID}</code></p> <p>Return to main ModBot Wiki</p>","tags":["macro"]},{"location":"macros/gallery/script-examples/#nuking-and-attack-examples","title":"Nuking and Attack Examples","text":"","tags":["macro"]},{"location":"macros/gallery/script-examples/#wizard-script-for-setting-nuke-order","title":"Wizard Script for Setting Nuke Order","text":"<p>Thanks to Bartab for this one. Bartab explains how this script works as follows:</p> <p>Basically my wizard has 5 nukes, I want him to cast it in the following order : 1 3 1 3 2 ----&gt; 1 3 1 3 2 ----&gt; ..... *knowing that when I cast 1 or 3 I can have a song in my song window, in that case I want to cast 4.</p> <ul> <li>I also want to cast 5 if I get a GoM.</li> <li>And if I cast 4 or 5 I always want to cast 2 just after.</li> </ul> <p><code>[Script-setNormalOrder]</code> <code>Commands=13</code> <code>C1=/if (!{Defined[nextCast]}) /declare nextCast int outer 0;</code> <code>C2=/if (!{Defined[CastOne]}) /declare CastOne int outer 0;</code> <code>C3=/if (!{Defined[CastTwo]}) /declare CastTwo int outer 0;</code> <code>C4=/if (!{Defined[CastThree]}) /declare CastThree int outer 0;</code> <code>C5=/if (!{Defined[CastFour]}) /declare CastFour int outer 0;</code> <code>C6=/multiline ; /varset ADTarCnt[1] 0 ; /varset ADTarCnt[2] 0 ; /varset ADTarCnt[3] 0 ; /varset ADTarCnt[4] 0 ; /varset ADTarCnt[5] 0</code> <code>C7=/if ({nextCast}==0) /multiline ; /varset nextCast 1 ; /varcalc CastOne {CastOne}+1 ; /varset ADTarCnt[1] 1 ; /echo 1 ; /return</code> <code>C8=/if ({nextCast}==1) /multiline ; /varset nextCast 3 ; /varcalc CastThree {CastThree}+1 ; /varset ADTarCnt[3] 1 ; /echo 3 ; /return</code> <code>C9=/if ({nextCast}==3 &amp;&amp; {CastOne}&lt;=1) /multiline ; /varset nextCast 1 ; /varcalc CastOne {CastOne}+1 ; /varset ADTarCnt[1] 1 ; /echo 1 ; /return</code> <code>C10=/if ({nextCast}==3 &amp;&amp; {CastOne}&gt;1) /multiline ; /varset nextCast 2 ; /varcalc CastTwo {CastTwo}+1 ; /varset ADTarCnt[2] 1 ; /echo 2 ; /return</code> <code>C11=/if ({nextCast}==2 &amp;&amp; {Me.Song[Flashblaze Singe].ID}) /multiline ; /varset nextCast 4 ; /varcalc CastFour {CastFour}+1 ; /varset ADTarCnt[4] 1 ; /echo 4 ; /return</code> <code>C12=/if ({nextCast}==2) /multiline ; /varset nextCast 3 ; /varset CastOne 0 ; /varset CastTwo 0 ; /varset CastThree 0 ; /varset ADTarCnt[3] 1 ; /echo 3 ; /return</code> <code>C13=/if ({nextCast}==4) /multiline ; /varset nextCast 2 ; /varset CastOne 0 ; /varset CastTwo 0 ; /varset CastThree 0 ; /varset CastFour 0 ; /varset ADTarCnt[2] 1 ; /echo 2 ; /return</code></p> <p>An important addition to this script is to reset all of the variables after a mob dies (otherwise the ordering will get screwed up). This is best accomplished using the ACAfter setting in the INI:</p> <p><code>ACAfter=/multiline ; /varset nextCast 0;/varset CastOne 0;/varset CastTwo 0;/varset CastThree 0;/varset CastFour 0</code></p> <p>Note: Please see the Level 85 Wizard INI example found here to see the nukes that Bartab is referring to (this will provide a bit of context for his desired casting order).</p>","tags":["macro"]},{"location":"macros/gallery/script-examples/#enchanter-script-for-using-mana-reiterate","title":"Enchanter Script for Using Mana Reiterate","text":"<p>Thanks to Kzboray for posting his working script (with some help from Kroak :). Kzboray says that this script can also be used for any other Enchanter damage buff!:</p> <p><code>ADGem4=script</code> <code>ADSpell4=ddbuff</code> <code>ADSpellFoci4=</code> <code>ADDurMod4=0</code> <code>ADSpellAlias4=manar</code> <code>ADAnnounce4=/bc</code> <code>ADSpellMinMana4=20</code> <code>ADSpellRecast4=0</code> <code>ADSpellCastonResist4=</code> <code>ADSpellDelay4=0</code> <code>ADTarCnt4=1</code> <code>ADTarType4=1</code> <code>ADTarBegHP4=100</code> <code>ADTarEndHP4=20</code> <code>ADIfSpellImmune4=</code> <code>ADUseHoTT4=0</code> <code>ADPreCondition4=TRUE</code></p> <p><code>[Script-ddbuff]</code> <code>Commands=5</code> <code>C1=/if ({Me.Buff[Mana Reiterate Rk. II].ID} || {Me.PctMana}&lt;30) /return</code> <code>C2=/if (!{Me.Gem[Mana Reiterate Rk. II]}) /memorize</code><code>Mana`` ``Reiterate`` ``Rk.`` ``II|gem7</code> <code>C3=/if ({Me.Casting.ID}) /delay {Math.Calc[({Cast.Timing}/100)+1]}s {Cast.Ready}</code> <code>C4=/if ({Cast.Ready} &amp;&amp; !{Cast.Ready[Mana Reiterate Rk. II]} || {NetBots[WizName].Buff.Find[{Spell[Mana Reiterate Rk. II].ID}]}) /return</code> <code>C5=/call Mq2Cast</code><code>Mana`` ``Reiterate`` ``Rk.`` ``II</code><code>gem7 30s CastCheck -targetid|{Group.Member[{Group.Member[WizName]}].ID}</code></p> <p>Simply change WizName (2 places in the C4 and C5 lines) to the name of the toon you want to be buffed and your done. Hope this helps someone else.</p> <p>Return to main ModBot Wiki</p>","tags":["macro"]},{"location":"macros/gallery/script-examples/#utility-scripts","title":"Utility Scripts","text":"","tags":["macro"]},{"location":"macros/gallery/script-examples/#creating-campfires-and-getting-to-them","title":"Creating Campfires and Getting to Them","text":"<p>Thanks to Toomanynames for this gem :). The first script will set up the campsite fire for you and the second script will get you to the campsite (note that there are some class specific items in the second script \\(bard\\)).</p> <p><code>[Script-MakeSite]</code> <code>Commands=15</code> <code>C1=/varset Timer 120s</code> <code>C2=/windowstate FellowshipWnd open</code> <code>C3=/nomodkey /notify FellowshipWnd FP_Subwindows tabselect 2</code> <code>C4=/delay 1s</code> <code>C5=/nomodkey /notify FellowshipWnd FP_RefreshList leftmouseup</code> <code>C6=/delay 2s</code> <code>C7=/nomodkey /notify FellowshipWnd FP_CampsiteKitList listselect 1</code> <code>C8=/delay 1s</code> <code>C9=/nomodkey /notify FellowshipWnd FP_CampsiteKitList leftmouse 1</code> <code>C10=/delay 1s</code> <code>C11=/nomodkey /notify FellowshipWnd FP_CreateCampsite leftmouseup</code> <code>C12=/delay 2s</code> <code>C13=/windowstate FellowshipWnd close</code> <code>C14=/if ({NearestSpawn[any radius 30 zradius 30 fsp].ID}) /multiline ; /bc Campsite looks good;/return</code> <code>C15=/bc Not sure about the Campsite</code></p> <p><code>[Script-ToSite]</code> <code>Commands=7</code> <code>C1=/if ({NearestSpawn[any radius 30 zradius 30 fsp].ID}) /multiline ; /bc Looks like I'm at the campsite;/return</code> <code>C2=/if ({Select[{Me.Class},bard]}) /twist off</code> <code>C3=/if ({Me.Sneaking} || {Me.Invis}) /attack</code> <code>C4=/delay 10s !{Me.Casting.ID}</code> <code>C5=/casting ''Fellowship Registration Insignia|item''</code> <code>C6=/delay 5s {Me.Casting.ID}</code> <code>C7=/delay 10s !{Me.Casting.ID}</code></p>","tags":["macro"]},{"location":"macros/gallery/script-examples/#magician-pet-kits","title":"Magician Pet Kits","text":"","tags":["macro"]},{"location":"macros/gallery/script-examples/#example-1-from-banderas","title":"Example 1 from Banderas","text":"<p>Before using this, you need to make room so make sure you have only 7 bags and one slot free. Make certain that you have the PetKit script entry before all other pet toy \"buffs\" in the AdvBuff section so that the bag goes to the free slot (then you can have frigid paradox stuff and others below the petkit entry).</p> <p><code>ABGem10=script</code> <code>ABSpell10=PetKit</code> <code>ABSpellFoci10=</code> <code>ABDurMod10=0</code> <code>ABSpellAlias10=petkit</code> <code>ABAnnounce10=</code> <code>ABSpellMinMana10=0</code> <code>ABTarCnt10=1</code> <code>ABTarType10=self</code> <code>ABRecast10=FALSE</code></p> <p><code>[Script-PetKit]</code> <code>Commands=9</code> <code>C1=/if (!{Defined[PKPetName]}) /declare PKPetName string outer</code> <code>C2=/if ({Target.ID}!={Me.Pet.ID} &amp;&amp; {Spawn[{Target.ID}].Type.Equal[pet]}) /varset PKPetName {Target.CleanName}</code> <code>C3=/if ({PKPetName.Length}&lt;4 &amp;&amp; {Me.Pet.ID}) /varset PKPetName {Me.Pet.CleanName}</code> <code>C4=/if ({PKPetName.Length}&lt;4) /return</code> <code>C5=/varset Timer 10m</code> <code>C6=/multiline ; /autoinventory;/call CastCall {Me.CleanName}</code><code>cast`` ``petwep</code><code>C7=/multiline ; /delay 5s;/autoinventory ```C8=/call GiveCheck {PKPetName}``_```Summoned:`` ``Tonfa`` ``of`` ``the`` ``North`` ``Wind|Summoned:`` ``Blazing`` ``Brand```_</code> C9=/varset ABTarCnt[10] 0 `</p> <ul> <li>Modify C8 to chose the wep you like for pet.</li> <li>C9 will make the script stop redoing it again and again, so if your pet dies, simply re-start the macro or make a</li> </ul> <p>hotkey to do only petkit ones as /varset ABTarCnt[10] 1</p>","tags":["macro"]},{"location":"macros/gallery/script-examples/#example-2-from-lunason","title":"Example 2 from Lunason","text":"<p>Just for fun I did up a level 85 mage pet kit script. Works pretty well. I borrowed a lot of it and assembled it to my own liking. Only uses 1 inventory slot to do all of it's work and cleans up after itself.</p> <p>Theoretically it should give a pet kit to any pet it has targeted. That's untested.</p> <p><code>[Script-PetKit]</code> <code>Commands=51</code> <code>;need to check for empty inventory slot</code> <code>;/if (!${InvSlot[22 - 29].Item.ID})</code> <code>;this requires 4 events to be setup</code> <code>;event names</code> <code>; pet</code> <code>; petweap</code> <code>; petarmor</code> <code>; petfocus</code> <code>C1=/if (!{Defined[PKPetName]}) /declare PKPetName string outer</code> <code>C2=/varset PKPetName null</code> <code>;if we have a pet targeted we'll equip it</code> <code>C3=/if ({Spawn[{Target.ID}].Type.Equal[pet]}) /varset PKPetName {Target.CleanName}</code> <code>;if no pet targeted and we have a pet we'll equip it</code> <code>C4=/if ({Me.Pet.ID} &amp;&amp; {PKPetName.Equal[null]}) /varset PKPetName {Me.Pet.CleanName}</code> <code>;if no pet targeted and no pet of our own make one</code> <code>C5=/if (!{Me.Pet.ID}) /call CastCall {Me.CleanName}</code><code>cast`` ``pet</code> <code>C6=/if (!{Me.Pet.ID}) /delay 3s</code> <code>;if no pet defined yet set the var to the new pet</code> <code>C7=/if ({PKPetName.Equal[null]} &amp;&amp; {Me.Pet.ID}) /varset PKPetName {Me.Pet.CleanName}</code> <code>;if still no pet let them know and exit</code> <code>C8=/if ({PKPetName.Equal[null]}) /bc Unable to find a pet to equip</code> <code>C9=/if ({PKPetName.Equal[null]}) /return</code> <code>;check for an empty inventory slot</code> <code>C10=/bc equipping {PKPetName}</code> <code>C11=/if (!{Defined[EmptySlot]}) /declare EmptySlot string outer false</code> <code>C12=/if (!${InvSlot[22].Item.ID}) /varset EmptySlot true</code> <code>C13=/if (!${InvSlot[23].Item.ID}) /varset EmptySlot true</code> <code>C14=/if (!${InvSlot[24].Item.ID}) /varset EmptySlot true</code> <code>C15=/if (!${InvSlot[25].Item.ID}) /varset EmptySlot true</code> <code>C16=/if (!${InvSlot[26].Item.ID}) /varset EmptySlot true</code> <code>C17=/if (!${InvSlot[27].Item.ID}) /varset EmptySlot true</code> <code>C18=/if (!${InvSlot[28].Item.ID}) /varset EmptySlot true</code> <code>C19=/if (!${InvSlot[29].Item.ID}) /varset EmptySlot true</code> <code>C20=/if (${EmptySlot.Equal[false]}) /echo no empty slots, sorry no pet kit right now.</code> <code>C21=/if (${EmptySlot.Equal[false]}) /return 0</code> <code>;Allow for more than 30 seconds by setting the timer to 10minutes</code> <code>C22=/varset Timer 10m</code> <code>;cast the pet armor</code> <code>C23=/bc giving pet armor</code> <code>C24=/call CastCall {Me.CleanName}</code><code>cast`` ``petarmor</code> <code>C25=/multiline ; /delay 1s;/autoinventory</code> <code>C26=/call GiveCheck {PKPetName}</code><code>Prime`` ``Plate`` ``Helm|Prime`` ``Plate`` ``Breastplate|Prime`` ``Plate`` ``Bracers|Summoned:`` ``Prime`` ``Belt</code> <code>C27=/call GiveCheck {PKPetName}</code><code>Prime`` ``Plate`` ``Vambraces|Prime`` ``Plate`` ``Gauntlets|Prime`` ``Plate`` ``Greaves|Prime`` ``Plate`` ``Boots</code> <code>;delete the phanton sachel</code> <code>C28=/nomodkey /itemnotify {FindItem[Phantom Satchel].InvSlot} leftmouseup</code> <code>C29=/delay 5</code> <code>C30=/if ({Cursor.Name.Equal[Phantom Satchel]}) /destroy</code> <code>;cast the pet weapons</code> <code>C31=/echo giving pet weapons</code> <code>C32=/multiline ; /autoinventory;/call CastCall {Me.CleanName}</code><code>cast`` ``petwep</code> <code>C33=/multiline ; /delay 1s;/autoinventory</code> <code>C34=/call GiveCheck {PKPetName}</code><code>Summoned:`` ``Winterbane|Summoned:`` ``Winterbane</code> <code>;delete the phanton sachel</code> <code>C35=/nomodkey /itemnotify {FindItem[Phantom Satchel].InvSlot} leftmouseup</code> <code>C36=/delay 5</code> <code>C37=/if ({Cursor.Name.Equal[Phantom Satchel]}) /destroy</code> <code>C38=/echo destroyed phanton satchel</code> <code>C39=/delay 1s</code> <code>;cast pet focus items</code> <code>C40=/bc giving pet focus items</code> <code>C41=/call CastCall {Me.CleanName}</code><code>cast`` ``petfocus</code> <code>C42=/multiline ; /delay 1s;/autoinventory</code> <code>C43=/call GiveCheck {PKPetName}</code><code>Zabella's`` ``Linked`` ``bracelet|Zabella's`` ``Jade`` ``Bracelet|Zabella's`` ``Ridged`` ``Earhoop|Zabella's`` ``Gold`` ``Ring</code> <code>;delete the phanton sachel</code> <code>C44=/nomodkey /itemnotify {FindItem[Phantom Satchel].InvSlot} leftmouseup</code> <code>C45=/delay 5</code> <code>C46=/if ({Cursor.Name.Equal[Phantom Satchel]}) /destroy</code> <code>;cast the muzzle</code> <code>C47=/echo giving pet muzzle</code> <code>C48=/call CastCall {Me.CleanName}</code><code>cast`` ``muzzle</code> <code>C49=/delay 1s</code> <code>C50=/call GiveCheck {PKPetName}</code><code>Summoned:`` ``Muzzle`` ``of`` ``Mowcha</code> <code>C51=/bc pet {PKPetname} ready for battle!</code></p>","tags":["macro"]},{"location":"macros/gallery/script-examples/#example-3-from-three-p-o","title":"Example 3 from three-p-o","text":"<p>Update of Lunason's script to work with 10 inventory slots and level 86+ spells. This will summon the folded packs and unfold them for you prior to giving out the items. Also, I can confirm that the theoretical part about it giving the petkit to any targeted pet does work.</p> <p><code>[Script-PetKit]</code> <code>Commands=64</code> <code>; this requires 8 events to be setup with AETarType=self cbt idle</code> <code>; event names - description</code> <code>; pet</code> <code>; petweap - this summons the folded pack - example spell Grant Frightforged Armaments</code> <code>; weapbag - this unfolds the pack - example item Folded Pack of Frightforged Plate</code> <code>; petarmor - this summons the folded pack - example spell Grant Frightforged Plate</code> <code>; armorbag - this unfolds the pack - example item Folded Pack of Frightforged Armaments</code> <code>; petfocus - this summons the folded pack - example spell Grant Nint's Heirlooms</code> <code>; focusbag - this unfolds the pack - example item Folded Pack of Nint's Heirlooms</code> <code>; visor</code> <code>C1=/if (!{Defined[PKPetName]}) /declare PKPetName string outer</code> <code>C2=/varset PKPetName null</code> <code>; if we have a pet targeted we'll equip it</code> <code>C3=/if ({Spawn[{Target.ID}].Type.Equal[pet]}) /varset PKPetName {Target.CleanName}</code> <code>; if no pet targeted and we have a pet we'll equip it</code> <code>C4=/if ({PKPetName.Equal[null]} &amp;&amp; {Me.Pet.ID}) /varset PKPetName {Me.Pet.CleanName}</code> <code>; if no pet targeted and no pet of our own make one</code> <code>C5=/if (!{Me.Pet.ID}) /call CastCall {Me.CleanName}</code><code>cast`` ``pet</code> <code>C6=/if (!{Me.Pet.ID}) /delay 3s</code> <code>; if no pet defined yet set the var to the new pet</code> <code>C7=/if ({PKPetName.Equal[null]} &amp;&amp; {Me.Pet.ID}) /varset PKPetName {Me.Pet.CleanName}</code> <code>; if still no pet let them know and exit</code> <code>C8=/if ({PKPetName.Equal[null]}) /bc Unable to find a pet to equip</code> <code>C9=/if ({PKPetName.Equal[null]}) /return</code> <code>; check for an empty inventory slot</code> <code>C10=/bc equipping {PKPetName}</code> <code>; need to check for empty inventory slot</code> <code>; /if (!${InvSlot[23 - 32].Item.ID}) - updated to check 10 slots</code> <code>C11=/if (!{Defined[EmptySlot]}) /declare EmptySlot string outer false</code> <code>C12=/if (!{InvSlot[23].Item.ID}) /varset EmptySlot true</code> <code>C13=/if (!{InvSlot[24].Item.ID}) /varset EmptySlot true</code> <code>C14=/if (!{InvSlot[25].Item.ID}) /varset EmptySlot true</code> <code>C15=/if (!{InvSlot[26].Item.ID}) /varset EmptySlot true</code> <code>C16=/if (!{InvSlot[27].Item.ID}) /varset EmptySlot true</code> <code>C17=/if (!{InvSlot[28].Item.ID}) /varset EmptySlot true</code> <code>C18=/if (!{InvSlot[29].Item.ID}) /varset EmptySlot true</code> <code>C19=/if (!{InvSlot[30].Item.ID}) /varset EmptySlot true</code> <code>C20=/if (!{InvSlot[31].Item.ID}) /varset EmptySlot true</code> <code>C21=/if (!{InvSlot[32].Item.ID}) /varset EmptySlot true</code> <code>C22=/if (${EmptySlot.Equal[false]}) /bc no empty slots, sorry no pet kit right now.</code> <code>C23=/if (${EmptySlot.Equal[false]}) /return 0</code> <code>; Allow for more than 30 seconds by setting the timer to 10 minutes</code> <code>C24=/varset Timer 10m</code> <code>; summon the pet armor</code> <code>C25=/bc giving pet armor</code> <code>C26=/call CastCall {Me.CleanName}</code><code>cast`` ``petarmor</code> <code>C27=/multiline ; /delay 1s ; /autoinventory ; /delay 1s</code> <code>; unfold the armorbag</code> <code>C28=/call CastCall {Me.CleanName}</code><code>cast`` ``armorbag</code> <code>C29=/multiline ; /delay 1s ; /autoinventory ; /delay 1s</code> <code>; hand armor to pet</code> <code>; adjust the armor below to match those summoned in the bag</code> <code>C30=/call GiveCheck {PKPetName}</code><code>Frightforged`` ``Plate`` ``Helm|Frightforged`` ``Plate`` ``Breastplate|Frightforged`` ``Plate`` ``Bracers|Summoned:`` ``Frightforged`` ``Belt</code> <code>C31=/call GiveCheck {PKPetName}</code><code>Frightforged`` ``Plate`` ``Vambraces|Frightforged`` ``Plate`` ``Gauntlets|Frightforged`` ``Plate`` ``Greaves|Frightforged`` ``Plate`` ``Boots</code> <code>; delete the Phantom Satchel</code> <code>; **DANGER** if you are using any Phantom Satchels to store items this could be disastrous</code> <code>C32=/nomodkey /itemnotify {FindItem[Phantom Satchel].InvSlot} leftmouseup</code> <code>C33=/delay 5</code> <code>C34=/if ({Cursor.Name.Equal[Phantom Satchel]}) /destroy</code> <code>C35=/echo destroyed Phantom Satchel</code> <code>C36=/delay 1s</code> <code>;summon the pet weapons</code> <code>C37=/echo giving pet weapons</code> <code>C38=/call CastCall {Me.CleanName}</code><code>cast`` ``petweap</code> <code>C39=/multiline ; /delay 1s ; /autoinventory ; /delay 1s</code> <code>; unfold the weapbag</code> <code>C40=/call CastCall {Me.CleanName}</code><code>cast`` ``weapbag</code> <code>C41=/multiline ; /delay 1s ; /autoinventory ; /delay 1s</code> <code>; hand weapon to pet</code> <code>; adjust the weapons below to match those summoned in the bag</code> <code>C42=/call GiveCheck {PKPetName}</code><code>Summoned:`` ``Frightforged`` ``Iceblade|Summoned:`` ``Frightforged`` ``Iceblade</code> <code>; delete the Pouch of Quellious</code> <code>; **DANGER** if you are using any Pouch of Quellious' to store items this could be disastrous</code> <code>C43=/nomodkey /itemnotify {FindItem[Pouch of Quellious].InvSlot} leftmouseup</code> <code>C44=/delay 5</code> <code>C45=/if ({Cursor.Name.Equal[Pouch of Quellious]}) /destroy</code> <code>C46=/echo destroyed Pouch of Quellious</code> <code>C47=/delay 1s</code> <code>; summon pet focus items</code> <code>C48=/bc giving pet focus items</code> <code>C49=/call CastCall {Me.CleanName}</code><code>cast`` ``petfocus</code> <code>C50=/multiline ; /delay 1s ; /autoinventory ; /delay 1s</code> <code>; unfold the focusbag</code> <code>C51=/call CastCall {Me.CleanName}</code><code>cast`` ``focusbag</code> <code>C52=/multiline ; /delay 1s ; /autoinventory ; /delay 1s</code> <code>; hand focus items to pet</code> <code>; adjust the focus items below to match those summoned in the bag</code> <code>C53=/call GiveCheck {PKPetName}</code><code>Nint's`` ``Linked`` ``Bracelet|Nint's`` ``Jade`` ``Bracelet|Nint's`` ``Ridged`` ``Earhoop|Nint's`` ``Gold`` ``Ring</code> <code>C54=/call GiveCheck {PKPetName}</code><code>Nint's`` ``Woven`` ``Shawl|Nint's`` ``Satin`` ``Choker</code> <code>; delete the Phantom Satchel</code> <code>; **DANGER** if you are using any Phantom Satchels to store items this could be disastrous</code> <code>C55=/nomodkey /itemnotify {FindItem[Phantom Satchel].InvSlot} leftmouseup</code> <code>C56=/delay 5</code> <code>C57=/if ({Cursor.Name.Equal[Phantom Satchel]}) /destroy</code> <code>C58=/echo destroyed Phantom Satchel</code> <code>C59=/delay 1s</code> <code>; summon the visor</code> <code>C60=/echo giving pet visor</code> <code>C61=/call CastCall {Me.CleanName}</code><code>cast`` ``visor</code> <code>C62=/multiline ; /delay 1s ; /autoinventory ; /delay 1s</code> <code>; hand the visor to pet</code> <code>; adjust the below to match summoned visor</code> <code>C63=/call GiveCheck {PKPetName}</code><code>Summoned:`` ``Visor`` ``of`` ``Gobeker</code> <code>C64=/bc pet {PKPetName} ready for battle!</code></p>","tags":["macro"]},{"location":"macros/gallery/script-examples/#buying-items","title":"Buying Items","text":"<p>A \"buy\" procedure was recently added to Modbot.inc. The syntax is: Buy</p> <p><code>[Script-BuyStuff]</code> <code>Commands=1</code> <code>C1=/call Buy ''water flask'' 75 yenny</code></p>","tags":["macro"]},{"location":"macros/gallery/script-examples/#dropping-group-out-of-task","title":"Dropping group out of task","text":"<p><code>[Script-droptask]</code> <code>Commands=6</code> <code>C1=/if (!{Defined[k]}) /declare k int local 1</code> <code>C2=/if (!{Group.Member[{k}].CleanName.Equal[{Me.CleanName}]}) /multiline ; /taskremove {Group.Member[{k}]};/delay 1s</code> <code>C3=/varset k {Math.Calc[{k}+1]}</code> <code>C4=/if ({k}&lt;={Group.Members}) /varset a 1</code> <code>C5=/delay 6</code> <code>C6=/taskquit</code></p>","tags":["macro"]},{"location":"macros/gallery/script-examples/#clearing-your-bots-target","title":"Clearing your Bot's Target","text":"<p>Sometimes your bots remain fixated on a target (e.g. after you switch targets, kill a mob and decide to mez/blur the rest \\(think Old Man McKenzie instances\\)). Here is a line that you can toss on a hot key that will clear the target from all of your ModBot bots:</p> <p><code>/bcaa //multiline ; /varset ACMATarget 0;/target clear</code></p>","tags":["macro"]},{"location":"macros/gallery/sk.mac-nytemyst/","title":"Sk.mac - nytemyst","text":"","tags":["macro"]},{"location":"macros/gallery/sk.mac-nytemyst/#forum-link","title":"Forum Link","text":"<ul> <li>sk.mac - Nytemyst</li> </ul>","tags":["macro"]},{"location":"macros/gallery/sk.mac-nytemyst/#description","title":"Description","text":"<p>This macro is mainly for high level shadow knights, but possible for low levels to use. this macro is designed with the toon having the ROF Expansion. This macro is not meant to go out and pull but instead more like \"guard\" the camp that you're currently at. Will attempt to use aggro spells and range items to aggro mobs from a distance that you have set.</p>","tags":["macro"]},{"location":"macros/gallery/sk.mac-nytemyst/#required-plugins","title":"Required Plugins","text":"<ul> <li>MQ2Exchange</li> <li>MQ2MoveUtils</li> <li>MQ2Melee This one is optional and not really needed but</li> </ul> <p>the macro will not do little things like bash,or put pet on hold. You will need to turn off all stick settings on</p> <p>the plugin as they will interfere with the macro.</p> <ul> <li>MQ2BagWindow This is required to</li> </ul> <p>cast items in bags without having the bag opened.</p>","tags":["macro"]},{"location":"macros/gallery/sk.mac-nytemyst/#required-include-files","title":"Required Include Files","text":"<p>General.inc - All the macros made/updated by me will use this include. Contains common features all the macros use to ease in updating functions and features to all the macros instead of updating each macro seperatly. Will be included with the zip.</p> <ul> <li>Spell_Routines.inc</li> <li>Ninjadvloot.inc</li> </ul> <p>If you don't want to use Ninjadvloot.inc you can comment out or delete these lines.</p> <p><code>#include ninjadvloot.inc - Line 11</code> <code>/call SetupAdvLootVars- Line 35</code> <code>/if (${DoLoot} &amp;&amp; !${Me.Moving} &amp;&amp; !${Me.Invis}) /call LootMobs - Line 54</code></p> <ul> <li>AAPurchase.inc</li> </ul> <p>If you don't want to use AAPurchase.inc You can comment out or delete these lines.</p> <p><code>#include AAPurchase.inc - Line 10</code> <code>/call AAInit - Line 37</code></p>","tags":["macro"]},{"location":"macros/gallery/sk.mac-nytemyst/#updates","title":"Updates","text":"","tags":["macro"]},{"location":"macros/gallery/sk.mac-nytemyst/#commands","title":"Commands","text":"<ul> <li>/radius # - Sets the distance for checking mobs</li> <li>/aggro On/Off - If this is set to off then the macro will not aggro anything and just do buffs.</li> <li>/usepet On/Off - If this is on, then the macro will create a pet and haste it.</li> <li>/dps On/Off - If this on then it will not cast any aggro spells or try to taunt and just do dps spells. Must set an</li> </ul> <p>MA on this mode.</p> <ul> <li>/ma name - This changes the ma to the person designated when in dps mode.</li> <li>/sticksetting # - This changes the stick range you will stick at. DPS MODE ONLY.</li> <li>/assistdistance # - This changes how close the mob must be before you engage. DPS MODE ONLY</li> <li>/assistat # - This changes at what % of health before engaging. DPS MODE ONLY</li> <li>/doloot On/Off - This changes where you will loot corpses or not.</li> <li>/checknames On/Off - This changes whether you want to check for a name or a mezz immuned mob that went in to camp</li> </ul> <p>while currently fighting something else. If it's on it will change target to the name or mezzimmune. If it's off it</p> <p>won't target the name or mezzimmune until the current target is dead.</p> <ul> <li>/Dot On/Off - Turns dotting on or off.</li> <li>/leash On/Off - If this is set to off the toon will not leash back to the current stake point.</li> <li>/leashlength # - This changes how far away you have to be from the stake to leash back.</li> <li>/autoadjustexp On/Off - This turns on or off whether you want it to monitor your XP level and switch between Level</li> </ul> <p>and AA.</p> <ul> <li>/maintexplvl # - This changes the amount of Level xp that is required before the toon is automatically switched over</li> </ul> <p>to AA - Autoadjustexp Open is require to be turned on.</p> <ul> <li>/autosit On/Off - Turns auto sitting on or off.</li> </ul>","tags":["macro"]},{"location":"macros/gallery/sk.mac-nytemyst/#ini-samples","title":"Ini Samples","text":"<p><code>NameList</code> <code>[Discord_raid]</code> <code>Name=|Pallorax the soul slayer|a gelidran rift slave|a pyrilen rift slave|Venom Lord Ksathrax|Mindshear Acolyte|Venomous projection|a venom protector|Mindshear Avatar|</code></p> <p><code>MezzImmuneList</code> <code>[korascian_raid]</code> <code>MezzImmune=|a crystalline nexiont|</code></p> <p><code>IgnoreList</code> <code>[Oldcommons]</code> <code>Exclude=|Peron ThreadSpinner|Innkeep Dolman|Innkeep Olissa|Innkeep Redthorn|</code></p> <p>Tip for adding mobs into this list without manually into the INI. Create a hotkey like so.</p> <p><code>/named ${Target.CleanName}</code> <code>/exclude ${Target.CleanName}</code> <code>/mezzimmune ${Target.CleanName}</code></p> <p>This allows you to add to those lists for any mob you're target while the macro is running.</p> <p>-Note No spell below requires you to put in the Ranks unless it's mentioned to do so. With the exception of buffs no spell is membed before hand. You must have it already memed if you want to use it.</p> <p><code>SK_Bobby.ini</code> <code>[Settings]</code> <code>RangeItem=Huntsman's Ethereal Quiver - This is the item that does the actually summoning</code> <code>RangeItemSummon=Ethereal Arrow - This is the item that is actually summoned.</code> <code>MobRadius=10 - How far you want to look for mobs.</code> <code>Aggro=0 - Whether to aggro mobs or not.</code> <code>ItemShrink=Earring of Diminutiveness - Item you use to shrink yourself.</code> <code>CheckNames=1 - If set to 0 the macro will not switch targets if a name, or mezzimmune mob comes into camp after you already are fighting a mob.</code> <code>UsePet=0 - Whether to summon a pet.</code> <code>DpsMode=0 - If set to 1 will turn on DPS Mode. In Dps mode it will assist another toon and not try to aggro and only do dps type abilities.</code> <code>MainAssist=somebody - Main person you will assist while in DPS Mode</code> <code>SecondAssist=somebody - If main person is not in zone or dead.</code> <code>TrippleAssist=somebody - If second person is not in zone or dead.</code> <code>EventsMaster=somebody - If you are using my events.inc. This is the person you will send a tell to saying you just received and emote. This is meant for raids.</code> <code>StickSetting=35 - Sets how close you want to stick to the mob - DPS MODE ONLY</code> <code>AssistDistance=80 - How close the mob must be before you will assist - DPS MODE ONLY</code> <code>AssistAt=97 - What % of HP the mob must before you attack. - DPS MODE ONLY</code> <code>UseIRC=0 - Whether to join IRC or not.</code> <code>DoLoot=0 - Turns on autolooting if you are using ninjaadvloot.inc</code> <code>DoDot=0 - Turns Dotting on or off</code> <code>NumOfDots=1 - How many Dots you will be casting.</code> <code>[Spells]</code> <code>SteelyStance=Steely Stance - Temporary HP buff you want to cast during combat.</code> <code>SkinBuff=Malarian Skin - Skin proc buff you want to cast during combat.</code> <code>WithStand=WithStand - Withstand style Disc to use right before mob comes into camp.</code> <code>BladeStrike=Gouging Blade - Blade strike style disc to use during combat.</code> <code>CrimesonBlade=Crimson Blade - Crimson Blade style disc to use during names.</code> <code>DefensiveDisc=Malarian Carapace - Defensive disc to use when fighting a name.</code> <code>HateSpell1=Terror of Jelvalak - Main hate spell and hate spell used to do initial aggro.</code> <code>HateSpell2=Terror of the Soulbleeder - Second hate spell.</code> <code>HateSpell3=Terror of Vergalid - 3rd Hate spell.</code> <code>AeHateSpell1=Burst of Spite - Main AE aggro spell.</code> <code>AeHateSpell2=Revile - Second AE Aggro spell.</code> <code>AeHateSpell3=Vilify - Third AE Aggro spell.</code> <code>AeHateSpell4=Dread Gaze - Fourth AE aggro Spell.</code> <code>NukeSpell1=Malarian Spear - Main Nuke Spell.</code> <code>NukeSpell2=Rotmarrow Spear - Second Nuke Spell.</code> <code>ChallengeSpell=Charge for Power - Spell used For temporary aggro and AC</code> <code>ChallengeSpellRecourse=Charge for Power Recourse rk. ii - This is the resource you get when you challengespell is successful. You must put the RANK here if version 2 or 3.</code> <code>LifeTapSpell1=Touch of Tharoff - Main lifetap spell</code> <code>LifeTapSpell2=Touch of Kildrukaun - Second Lifetap spell</code> <code>LifeTapSpell3=Touch of Severan - Third lifetap spell</code> <code>DireImplication=Dire Implication - Emergency Lifetap Spell</code> <code>HpTapSpell=Touch of Lanys - Lifetap spell that increases your aggro and Max Health Temporarily.</code> <code>HpTapSpellRecourse=Gift of Lanys - The resource you receive by casting your HpTapSpell. You must put in the RANK here if version 2 or 3</code> <code>BondSpell=Bond of Laarthik - LifeTap Dot Spell.</code> <code>BondSpellRecourse=Bond of Laarthik recourse rk. iii - Resource you receive by casting your Lifetap Dot. You must put in the RANK here if version 2 or 3.</code> <code>ManaTapSpell1=Laarthik's bite - Main Manatap Spell</code> <code>ManaTapSpell2=Ancient: Bite of Muram - Second ManaTap Spell</code> <code>PetSpell=Minion of Sebilis - Spell to summon your pet.</code> <code>PetSpellHaste=Gift of Sathir - Spell to haste your pet.</code> <code>RespiteDisc=Rest - Disc using when low on endurance</code> <code>Dot1=Changeme - Name of the Dot you will be casting</code> <code>BuffGem=12 - Gem where you want all your buff spells to use when buffing</code> <code>[SelfBuffs]</code> <code>NumSelfBuff=1 - Amount of self buffs you will be casting</code> <code>SelfBuff1=ChangeMe - Name of the Spell,item, or alt.</code> <code>SelfType1=ChangeMe - can gem1,1,alt,or item</code> <code>[ITEMS]</code> <code>ClickyBP=Elegant Soulrender Breastplate - The name of the Group or Raid BP for that expansion.</code> <code>[GeneralSettings]</code> <code>DoLeash=1 - Turns leashing on or off.</code> <code>Leashlength=25 - How far away from the stake you must be before it leashes back.</code> <code>AutoExpAdjust=1 - Whether to switch to AA or level automatically.</code> <code>MaintExpLvl=20 - What % of level XP before switching to AA</code> <code>MaxLevel=100 - Max level the toon can reach</code> <code>MasterList=NULL - What toons are allowed to send the bot a tell with a / command such as /say hi and the bot will do the command.</code> <code>Autosit=1 - Turns auto sitting on or off.</code> <code>RelayTells=0 - Turns relaying tells to BC on or of</code> <code>AutoBalance=0 - Turns autobalancing of a group of Mobs HP - DPS MODE ONLY - Leave off currently doesn't work.</code> <code>AutoBalanceHPCheck=5 - % of health differemce before considered unbalanced.</code> <code>DoFood=0 - Turns summoning turkey or milk on or off.</code></p>","tags":["macro"]},{"location":"macros/gallery/sk.mac-nytemyst/#bot-flow","title":"Bot Flow","text":"<p>After starting the macro if you do not have Aggro turned on or dps mode turned on it will just buff itself. If you have aggro on it's first going to look for mobs in a 50 radius range. It will automatically choose a name,mezzimmune, or the lowest HP mob within that radius.</p> <p>If there are no mobs in a 50 range radius then the macro will check if it has rez affects on. If so the macro will just buff itself and not try to aggro anything beyond the 50 radius. For mobs beyond the 50 radius it will look for mobs at a distance you set under \"Mobradius\". It will grab the highest level ,Named,mezzimmune mob and work it's way down.</p> <p>Macro does the initial aggro in 2 ways and both will be attempted to use. Will try to cast the first hate spell you have set in the ini and will try to use any range item like bow and arrow. If a mob goes into camp before you pulled enters camp it will switch to mob that's in camp. If the mob takes more then 20 seconds the camp the macro will clear the target, ignore that mob from pulling for 60 seconds and look for something else. If that mob eventually makes it into camp it will aggro the mob whether the timer is up or not.</p> <p>Once mob in camp it will stick to the mob. Use numerous Discs and spells such as demand for power,withstand,bite aa. Will constantly monitor health and will do lifetaps to keep it's self up. Will also nuke and dot. If it encounters a name it will using all tanking disciplines as well as dps disciples that stack with the tanking ones. Will use AA snare on any mobs that are trying to flee. Will keep any Skin or steely stance buffs up during combat.</p> <p>If more then one mop is in camp it will use ae aggro. If more then 3 mobs in camp and the health drops to low it will attempt to use deflection disc.</p>","tags":["macro"]},{"location":"macros/gallery/snare/","title":"Snare","text":"<p>Macro to automatically snare target</p> <p>Works by: Checks to see if target has been snared since based upon if it is an NPC, % of health and checking the variable. When any mob dies, it resets the variable and only when a mob dies (or it wears off, which is extremely rare).</p> <pre><code>#include spell_routines.inc\n\n#Event EnsnareWornOff \"#*#ensnare spell has worn off#*#\" \n#Event Exp \"#*#party experience!#*#\" \n#Event Exp \"#*#gain experience!#*#\"\n#Event Exp \"#*#slain#*#\"\n\n\nSub Main\n    /echo 1...\n    /declare Ensnared bool outer FALSE\n    :loop\n    |Snare check\n    |/assist &lt;&lt;&lt;&lt;tank name&gt;&gt;&gt;&gt;\n    /if (${Target.ID} &amp;&amp; ${Target.PctHPs}&lt;99 &amp;&amp; !${Ensnared}) /call Ensnare \n    /doevents\n    /delay 1s\n    /goto :loop\n/return\n\nSub Ensnare\n    /call Cast \"Ensnare\" gem3 10s\n    /if (${Macro.Return.Equal[CAST_SUCCESS]} || ${Macro.Return.Equal[CAST_IMMUNE]}) /varset Ensnared TRUE \n/return\n\nSub Event_Exp \n   /varset Ensnared FALSE \n/return \n\nSub Event_EnsnareWornOff \n   /varset Ensnared FALSE \n/return\n</code></pre>","tags":["macro"]},{"location":"macros/gallery/spell-routines.inc/","title":"Spell Routines.inc","text":"","tags":["macro"]},{"location":"macros/gallery/spell-routines.inc/#introduction","title":"Introduction","text":"<ul> <li>Spell_Routines.inc is an incredibly useful snippet which casts spells, clicks items and activates AAs reliably,</li> </ul> <p>deals with fizzles, and provides a wealth of return code information for use in the calling macro.</p> <ul> <li>It was originally written by ~rusty and later improved by A_Druid_00 (VIP version), and is probably the most-used</li> </ul> <p>inc file today. It's the de-facto standard include for any macro which requires the casting of a spell, an AA, or</p> <p>clicking of an item.</p> <ul> <li>As with many of the inc files on the forums, there are 2 versions of spell_routines.inc:</li> <li>Non-VIP. This is the original from ~rusty.</li> <li>VIP. This is the updated version, maintained by A_Druid_00.</li> <li>The VIP version has been improved slightly and it a bit smaller (and thus faster). It also improves speed by making use of the MQ2Exchange plugin which is available in the VIP area. Both versions are interchangeable, and there are only minor differences between them. Both are fully functional.</li> </ul>","tags":["macro"]},{"location":"macros/gallery/spell-routines.inc/#usage","title":"Usage","text":"<p>To make use of the Spell_Routines.inc file, save it to your main Macros directory and then add this to the top of your macro:</p> <p><code>#include Spell_Routines.inc</code></p> <p>After this, you can use the commands/functions listed below.</p>","tags":["macro"]},{"location":"macros/gallery/spell-routines.inc/#call-cast","title":"/call Cast","text":"<p>/call Cast \"spellname|itemname|AAname|AA#\" [item|alt|gem#]   [\"Number of resist recasts\"]</p> <p>Note: Any of the above fields must use quotes if they are more than one word.</p> <p>This will cast a spell or AA, or click an item.</p> <p>Examples:</p> <p><code>/call Cast \"Complete Healing\" | Cast Complete Healing if it is memmed</code> <code>/call Cast \"Arcane Rune\" gem5 7s | Cast Arcane Rune, memorizing it in gem5 if not already, and keep casting for 7s in case of interrupts</code> <code>/call Cast \"Eldritch Rune\" alt | Cast Eldritch Rune</code> <code>/call Cast \"173\" alt | Cast Eldritch Rune</code></p> <p>The most useful part about this routine is the custom subroutine. Take the following example:</p> <p><code>/call Cast \"Complete Healing\" gem1 10s CheckHP</code></p> <p>The CheckHP subroutine is as follows:</p> <p><code>Sub CheckHP</code> <code>/if ( ${Target.PctHPs}&gt;=80 ) /call Interrupt</code> <code>/return</code></p> <p>This will continuously /call the CheckHP subroutine while the spell is casting, and if the target's HPs rise above 80% (ie. they got a heal from someone else), it will interrupt the casting.</p>","tags":["macro"]},{"location":"macros/gallery/spell-routines.inc/#call-swapitem","title":"/call SwapItem","text":"<p>/call SwapItem \"item name\" slotname</p> <p>This will swap an item into a specific slot.</p> <p><code>/call SwapItem \"Darkblade of the Warlord\" mainhand</code></p> <p>This will swap your Darkblade of the Warlord into your main hand.</p>","tags":["macro"]},{"location":"macros/gallery/spell-routines.inc/#call-equipitem","title":"/call EquipItem","text":"<p>/call EquipItem \"item name|slotname\"</p> <p>This will equip an item into the slot you specify. It returns \"old item|slotname\", so that you can use the same function to swap the original item back.</p> <p><code>/call EquipItem \"Sharp Ended Broken Lever\" | This returns \"Staff of Vindication|mainhand\"</code></p> <p>Note the following example:</p> <p><code>/call EquipItem \"Sharp Ended Broken Lever\"</code> <code>/declare olditem string outer ${Macro.Return}</code> <code>| Do something with your new main hand...</code> <code>/call EquipItem \"${Macro.Return}\"</code></p>","tags":["macro"]},{"location":"macros/gallery/spell-routines.inc/#call-interrupt","title":"/call Interrupt","text":"<p>/call Interrupt</p> <p>This will interrupt whatever spell/item/AA is currently being cast.</p> <p>Essentially it dismounts if you're on a horse, and then does a /stopcast.</p> <p>Note: if you don't want to interrupt a spell while mounted, put this at the top of your macro:</p> <p><code>/declare noInterrupt int outer 1</code></p>","tags":["macro"]},{"location":"macros/gallery/spell-routines.inc/#return-codes","title":"Return Codes","text":"<p>/call Cast returns the following:</p> CAST_CANCELLED Spell was cancelled by ducking (either manually or because mob died) CAST_CANNOTSEE You can't see your target CAST_IMMUNE Target is immune to this spell CAST_INTERRUPTED Casting was interrupted and exceeded the given time limit CAST_INVIS You were invis, and noInvis is set to true CAST_NOTARGET You don't have a target selected for this spell CAST_NOTMEMMED Spell is not memmed and you gem to mem was not specified CAST_NOTREADY AA ability or spell is not ready yet CAST_OUTOFMANA You don't have enough mana for this spell! CAST_OUTOFRANGE Target is out of range CAST_RESISTED Your spell was resisted! CAST_SUCCESS Your spell was cast successfully! (yay) CAST_UNKNOWNSPELL Spell/Item/Ability was not found","tags":["macro"]},{"location":"macros/gallery/spell-routines.inc/#other","title":"Other","text":"<ul> <li>If you don't want this to cast spells while you're invis, in your main macro have this at the top:</li> </ul> <p><code>/declare noInvis int outer 1</code></p> <p>This will make it return CAST_INVIS if you're invis</p> <ul> <li>Below is a list of outer scope variables you can access in your macros:</li> </ul> <p><code>refreshTime | How much time is left till you're done recovering from casting</code> <code>castEndTime | How much time left till you're done casting the current spell... usable in custom spell Subs</code> <code>spellNotHold | 1 if your last spell didn't take hold, 0 otherwise</code> <code>spellRecastTime1-9 | How much time left until the spell is back up</code></p>","tags":["macro"]},{"location":"macros/gallery/spell-skill-trainer/","title":"Spell Skill Trainer","text":"<p>This macro was originally published in the Macro Depot 3.0 Forum, and has been successfully used to max out spell casting skills (abjuration, alteration, channeling, conjuration, divination, evocation, meditation and specializations).</p> <p>Instructions</p> <p>Paste this code into a file called practice.mac in your \\macros directory.</p> <p>Memorize the spells you wish to cast to work on skill. I recommend using the highest level spell with the least amount of mana. I also suggest acquiring the following buffs from an enchanter: clarity (or clarity 2), gift of magic, insight \\(+12wis +6int\\) or brilliance \\(+6wis +12int\\), and intellectual superiority \\(cuts down on fizzles\\). Note, at level 46, the first 3 spells are replaced by Koadic's Endless Intellect (aka KEI).</p> <p>I've also found it very helpful to work on these skills in the guild hall \"jacuzzi\" since a) your buffs won't fade, and b) the jacuzzi nearly double your mana regen.</p> <p>Damage spells do not \"take\" on you for the most part, and if you should be working on conjuration with a summoning spell(such as Halo of Light), you do NOT need to delete the item! You cannot summon a 2<sup>nd</sup> halo, for example, however you will still get skillups.</p> <p><code>|/////////////////////////////////////////////////////////////////////////////////</code> <code>|</code> <code>| Spell Practice Macro</code> <code>| practice.mac</code> <code>| Author : JP5</code> <code>| Date : 2004-08-05 21:03pm GMT</code> <code>| Useage : /macro practice [gem#] [target]</code> <code>| Example : /macro practice 5 Gobartik</code> <code>| Description :</code> <code>| -&gt; Target is optional. Default target is ${Me} when not defined.</code> <code>|</code> <code>| -&gt; If you wish to stop practicing, hit ESC.</code> <code>|</code> <code>| -&gt; When macro ends (with ESC or skill max), you will be given a report of your</code> <code>| skillups.</code> <code>|</code> <code>| -&gt; As long as your DD doesn't do over 20% damage to yourself, you won't die</code> <code>| from nuking yourself...</code> <code>|</code> <code>|/////////////////////////////////////////////////////////////////////////////////</code></p> <p><code>#event NotTakeHold \"Your spell did not take hold.\"</code> <code>#event ClarityFades \"The cool breeze fades.\"</code> <code>#event SkillUp \"You have become better at #1#! (#2#)\"</code> <code>#event ESC \"You no longer have a target.\"</code></p> <p><code>Sub Main</code> <code>/declare GemNumber int outer</code> <code>/declare PTarget string outer</code></p> <p><code>/if (${Defined[Param0]}) {</code></p> <p><code>/varset GemNumber ${Param0}</code> <code>/echo Practicing ${Spell[${Me.Gem[${GemNumber}]}].Skill}. Hit ESC at any time to end and see results.</code> <code>} else {</code> <code>/echo Usage: /macro practice [gem\\#\\] \\[target]``` /echo Which spell would you like to practice?</code> /endmacro<code>`}</code></p> <p><code>/if (${Defined[Param1]}) {</code> <code>/varset PTarget ${Param1}</code> <code>} else {</code> <code>/echo No target defined. Defaulting to ${Me}.</code> <code>/varset PTarget ${Me}</code> <code>}</code></p> <p><code>/declare MainSkillUp int outer 0</code> <code>/declare SecSkillUp int outer 0</code></p> <p><code>:start</code> <code>/stand</code> <code>/target ${PTarget}</code></p> <p><code>:bleh</code> <code>/doevents</code> <code>/if (${Me.SpellReady[${GemNumber}]}) {</code> <code>/if (${Me.Gem[${GemNumber}].Mana} &gt; ${Me.CurrentMana}) {</code> <code>/sit</code> <code>/goto :medup</code> <code>}</code> <code>/if (${Me.PctHPs}&lt;20) {</code> <code>/sit</code> <code>/echo Ending Macro. HPs are too low.</code> <code>/call Results</code> <code>}</code> <code>/if (${Me.State.NotEqual[STAND]}) {</code> <code>/stand</code> <code>/delay 1</code> <code>}</code> <code>/if (${Math.Calc[${Me.Level}*5+5]}==${Me.Skill[${Spell[${Me.Gem[${GemNumber}]}].Skill}]}) {</code> <code>/call Results</code> <code>}</code> <code>/goto :cast</code> <code>} else {</code> <code>/goto :bleh</code> <code>}</code></p> <p><code>:cast</code> <code>/cast ${GemNumber}</code> <code>/goto :bleh</code></p> <p><code>:medup</code> <code>/doevents</code> <code>/if (${Me.State.NotEqual[SIT]}) {</code> <code>/delay 10</code> <code>/sit</code> <code>}</code> <code>/if (${Me.CurrentMana}==${Me.MaxMana}) {</code> <code>/goto :start</code> <code>} else {</code> <code>/goto :medup</code> <code>}</code></p> <p><code>/return</code></p> <p><code>|-- Sub Event_ClarityFades</code> <code>Sub Event_ClarityFades</code> <code>:test</code> <code>/if (${Me.Class.Name.Equal[Enchanter]}) {</code> <code>/if (${Me.SpellReady[Clarity]}) {</code> <code>/if (${Me.CurrentMana}&gt;${Spell[Clarity].Mana}) {</code> <code>/stand</code> <code>/cast Clarity</code> <code>} else {</code> <code>/sit</code> <code>/goto :test</code> <code>}</code> <code>} else {</code> <code>/goto :test</code> <code>}</code> <code>}</code> <code>/return</code></p> <p><code>|-- Sub Event_NotTakeHold</code> <code>Sub Event_NotTakeHold</code> <code>/echo Macro ended. Invalid Target.</code> <code>/call Results</code> <code>/return</code></p> <p><code>Sub Event_ESC</code> <code>/echo Macro Ended by user.</code> <code>/call Results</code> <code>/return</code></p> <p><code>|-- Sub Event_SkillUp</code> <code>Sub Event_SkillUp(string Line, string SkillType, int SkillValue)</code></p> <p><code>/if (${Spell[${Me.Gem[${GemNumber}]}].Skill.Equal[${SkillType}]}) {</code> <code>/varcalc MainSkillUp ${MainSkillUp}+1</code> <code>}</code> <code>/if (${Spell[${Me.Gem[${GemNumber}]}].Skill.NotEqual[${SkillType}]}) {</code> <code>/varcalc SecSkillUp ${SecSkillUp}+1</code> <code>}</code></p> <p><code>/if (${Spell[${Me.Gem[${GemNumber}]}].Skill.Equal[${SkillType}]}) {</code> <code>/if (${Math.Calc[${Me.Level}*5+5]}==${SkillValue}) {</code> <code>/call Results</code> <code>}</code> <code>}</code> <code>/return</code></p> <p><code>|-- Sub Results</code> <code>Sub Results</code> <code>/echo Results: ${Spell[${Me.Gem[${GemNumber}]}].Skill} (${Me.Skill[${Spell[${Me.Gem[${GemNumber}]}].Skill}]}) -- Total of ${MainSkillUp} skillups!</code> <code>/echo Total other skillups (not ${Spell[${Me.Gem[${GemNumber}]}].Skill}) -- ${SecSkillUp}.</code> <code>/endmacro</code></p> <p><code>/return</code></p>","tags":["macro"]},{"location":"macros/gallery/wait4rez.inc/","title":"Wait4Rez.inc","text":"<p>Wait4Rez.inc by A_Druid_00 (originally written by fantum409) is a snippet which handles the following:</p> <ul> <li>Consents group, guild and raid</li> <li>Waits for the Rez box to pop up</li> <li>Accepts the rez</li> <li>Loots your corpse</li> </ul> <p>There are 2 versions of Wait4Rez.inc on the MQ2 message boards:</p> <ol> <li>The Non-VIP version is located here.</li> <li>The VIP version is distributed with AutoBot.mac. A link to the main Autobot macro post on</li> </ol> <p>the forums is here.</p>","tags":["macro"]},{"location":"main/","title":"Getting Started","text":""},{"location":"main/#startingstopping","title":"Starting/Stopping","text":"<p>Once you have built MQ successfully, you can launch it by changing to the Releases directory and opening MacroQuest.exe. It doesn't matter if MQ is started while EverQuest is running or not.</p> <p>If you do start it after you start EverQuest, you will have to wait a few seconds before it finishes loading and you see the results in-game.</p> <p>MQ can be stopped from within game, by typing /unload. If you are running multiple sessions, you will have to do this in each session. After unloading, you can close the tray icon by right-clicking on it and chosing Exit.</p>"},{"location":"main/#multiple-sessions","title":"Multiple Sessions","text":"<p>MacroQuest becomes part of EverQuest when you play, and anything you do inside one session is physically and logically separate from all others (just like your two copies of EverQuest dont blend together). This means that if you load a plugin in one session, it's not going to automatically load in the other. However, when you load a plugin, it will automatically load the next time a MacroQuest session begins. If that happens to be a second EQ session launching, then it may appear to your untrained eye as applying the plugin loading to all running sessions. Likewise, if you run a macro in one session, it's not going to automatically load in others. And if you run a command in one session, it's not going to automatically run in others.</p>"},{"location":"main/#eq-commands-that-are-enhanced","title":"EQ Commands that are enhanced","text":"<p>The following common EverQuest slash commands are enhanced by MacroQuest:</p> <ul> <li>/cast</li> <li>/charinfo</li> <li>/help</li> <li>/location</li> <li>/target</li> <li>/who</li> <li>/whotarget</li> </ul> <p>A full list is available in the Slash Commands page.</p>"},{"location":"main/#mq-only-commands","title":"MQ-only Commands","text":"<p>The following commonly used slash commands are added by MacroQuest:</p> <ul> <li>/destroy</li> <li>/drop</li> <li>/echo</li> <li>/face</li> <li>/identify</li> <li>/itemtarget</li> <li>/macro</li> <li>/memspell</li> <li>/mqfont</li> <li>/mqpause</li> <li>/multiline</li> <li>/popup</li> <li>/plugin</li> <li>/ranged</li> <li>/skills</li> <li>/whofilter</li> <li>/unload</li> </ul> <p>A full list is available on the Slash Commands page.</p>"},{"location":"main/#macroquestini","title":"MacroQuest.ini","text":"<ul> <li>NamingSpawn Article about manipulating the ini</li> </ul>"},{"location":"main/#macros-plugins-and-lua","title":"Macros, Plugins, and Lua","text":""},{"location":"main/#macros","title":"Macros","text":"<p>You can load a macro with the following command:</p> <p><code>/macro &lt;arguments&gt;</code> e.g. <code>/macro autobot</code></p> <p>To end a macro, use this command:</p> <p><code>/endmacro</code></p> <p>See the Getting Startaed section for further information on macros, and /macro and /endmacro for starting and stopping.</p>"},{"location":"main/#plugins","title":"Plugins","text":"<p>MQ plugins are modular and can be loaded and unloaded on demand.</p> <p>To load a plugin, type:</p> <p><code>/plugin</code> <code>eg. /plugin mq2melee</code></p> <p>To unload a plugin:</p> <p><code>/pluginunload</code> <code>eg. /plugin mq2melee unload</code></p> <p>See the Plugins section for further information on plugins, and /plugin for starting and stopping.</p>"},{"location":"main/#lua","title":"Lua","text":"<p>You can start a Lua script with the following command:</p> <p><code>/lua run &lt;arguments&gt;</code> e.g. <code>/lua run eval</code></p> <p>You can stop a Lua script with the following command:</p> <p><code>/lua stop &lt;arguments&gt;</code> e.g. <code>/lua stop eval</code></p> <p>Lua is a more advanced scripting language than Macros, and is capable of running multiple scripts simultaneously.</p> <p>For more information on Lua, see the Lua page.</p>"},{"location":"main/#custom-uis","title":"Custom UIs","text":"<p>The EverQuest UI can also be enhanced through the use of MQ2 information. Things like your Target's level and class can be added to your Target Window, buff timers to your Buffs Window and other stats like mana regen, HP regen, Accuracy and Strikethrough to your Player Window.</p> <p>See the Custom UIs page for further information on what you can add, and how to do so.</p>"},{"location":"main/#huds","title":"HUDs","text":"<p>MacroQuest can enable a custom Heads Up Display to show almost any kind of data on top of your UI. Instructions for configuration as well as further information can be found on the MQ2HUD page.</p>"},{"location":"main/#cfg-files","title":"CFG Files","text":"<p>See the CFG Files section for further information.</p>"},{"location":"main/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>**I don't see anything on the map, even though I compiled with no errors and I can see other MQ2 windows like the</li> </ul> <p>Chat window.**</p> <p>You need to load the MQ2Map plugin using the command \"/plugin MQ2Map\" in-game.</p> <ul> <li>When you execute /mapfilter with any options, all layers that were previously visible disappear.</li> </ul> <p>Krust UI issue, or bad mapfilter options.</p> <ul> <li>**With MQ2 running, Monk's \"Projection\" ability cannot be seen and its title (xxxxxx's projection) is also not</li> </ul> <p>displayed**</p> <p>Use /showpet command to disable the pet filter.</p>"},{"location":"main/about-docs/","title":"Working with the Documentation","text":""},{"location":"main/about-docs/#making-edits","title":"Making Edits","text":"<p>TODO</p>"},{"location":"main/about-docs/#searching-for-content","title":"Searching for Content","text":"<p>Tags can be used to assist in searching for specific things. Here are some examples of tags that are in use:</p> <ul> <li>tlo</li> <li>datatype</li> <li>command</li> <li>plugin</li> <li>macro</li> <li>lua</li> </ul>"},{"location":"main/about-docs/#tags","title":"Tags","text":"<p>[TAGS]</p>"},{"location":"main/building/","title":"Building MacroQuest","text":""},{"location":"main/building/#download-install-visual-studio-2022","title":"Download &amp; Install Visual Studio 2022","text":"<p>Links and instructions can be found at: https://visualstudio.microsoft.com/downloads/</p> <p>Be sure to install <code>MSVC v143 - VS2022 c++ x86/x64 build tools</code> as part of the installation.</p>"},{"location":"main/building/#how-to-build","title":"How to Build","text":""},{"location":"main/building/#download-install-git-for-windows","title":"Download &amp; Install Git for Windows","text":"<p>Links and instructions can be found at: https://git-scm.com</p> <p>The recommended way to build MacroQuest is from a source code checkout using Git. There are many how to guides for installing and setting up git. Here is one of them</p>"},{"location":"main/building/#check-out-the-latest-source-code","title":"Check Out the Latest Source Code","text":"<p>Clone (create a local copy) the repository. This will create the subfolder <code>macroquest</code> that containes a copy of the source code.</p> <pre><code>git clone https://github.com/macroquest/macroquest.git\n</code></pre> <p>Initialize the submodules. Move (cd) to the newly created <code>macroquest</code> folder before executing this command. If you have run this step before, you can skip it.</p> <pre><code>git submodule init\n</code></pre> <p>Update the submodules to the newest versions. Ensure you are in the newly created <code>macroquest</code> folder before executing this command.</p> <pre><code>git submodule update\n</code></pre> <p>If this is your first time downloading the source code, proceed to Build Steps.</p>"},{"location":"main/building/#updating-an-existing-checkout","title":"Updating an Existing Checkout","text":"<p>MacroQuest is updated often, especially after a patch. Make sure before you build that you have the latest source code for MacroQuest and all of its dependencies.</p> <p>If you already have the source, it is a good idea to make sure that you pull all the latest changes.</p> <pre><code>git pull --rebase\n</code></pre> <p>Update Submodules. This ensures that dependencies have the latest code.</p> <pre><code>git submodule update\n</code></pre> <p>At this point, the source should be ready to compile. Proceed to Build Steps.</p>"},{"location":"main/building/#build-steps-livetest","title":"Build Steps (Live/Test)","text":"<ol> <li>Open the <code>MacroQuest.sln</code> file in the <code>src</code> directory. Double clicking this file should open Visual Studio.</li> <li>Make sure your eqlib branch is on <code>live</code> or <code>test</code></li> <li>Select the <code>Release</code> and <code>(x64)</code>configuration from the drop-down menu near the top of the window.</li> <li>Since the project moved to 64-bit, ensure all project configurations are set to <code>(x64)</code> in the Solution Macroquest Property Pages. From the Visual Studio main menu, select Build then Configuration Manager then ensure the Platform column for each project is set to <code>(x64)</code>.</li> <li>Select <code>Build -&gt; Build Solution</code> from the menu.</li> </ol> <p>The built files will be placed in <code>build/bin/Release</code>. To start MacroQuest, run <code>MacroQuest.exe</code>. This will launch the application to the tray, and install MacroQuest into any running EverQuest processes.</p>"},{"location":"main/building/#build-steps-emu","title":"Build Steps (Emu)","text":"<ol> <li>Open the <code>MacroQuest.sln</code> file in the <code>src</code> directory. Double clicking this file should open Visual Studio.</li> <li>Make sure your eqlib branch is on <code>emu</code></li> <li>Select the <code>Release</code> and <code>Win32</code>configuration from the drop-down menu near the top of the window.</li> <li>Select <code>Build -&gt; Build Solution</code> from the menu.</li> </ol> <p>The built files will be placed in <code>build/bin/Release</code>. To start MacroQuest, run <code>MacroQuest.exe</code>. This will launch the application to the tray, and install MacroQuest into any running EverQuest processes.</p>"},{"location":"main/building/#building-livetestemu-from-the-same-folder","title":"Building Live/Test/Emu from the same folder","text":"<p>By default MacroQuest does not separate build outputs.  Regardless whether you are building for Live or Test or Emu, all release outputs go to <code>build/bin/release</code>.  However, macroquest does provide an option to separate these out further by setting the environment variable MQ_BUILD_SEPARATE to 1.  When this environment variable is set to 1, the Client Target is added to your build path.  For example, when building for Live your output path would be <code>build/Live/bin/release</code> while when building for Emu your output path would be <code>build/Emu/bin/release</code>.  This allows you to share the same macroquest directory and just swap eqlib when you want to change client builds.</p>"},{"location":"main/building/#adding-your-own-plugins","title":"Adding Your Own Plugins","text":"<p>Note: If you have any custom plugins you want to build, put the sources for them in the <code>plugins</code> folder, for example: <code>plugins/MQ2Foo/MQ2Foo.cpp</code> Do not put them in <code>src/plugins</code>, this path is reserved for the MacroQuest developers.</p> <p>To add any personal plugins to the solution:</p> <ol> <li>Right-click the solution in the Solution Explorer and click <code>Add -&gt; Add Existing Project...</code> </li> <li>Select your <code>.vcxproj</code>file</li> <li>Repeat as necessary</li> </ol>"},{"location":"main/building/#updating-plugins-from-legacy-macroquest","title":"Updating Plugins from Legacy MacroQuest","text":"<p>If you are converting plugins over from Legacy MacroQuest (e.g. MQ2), it is recommended that you re-run the plugin generator first, and then copy your source files into the generated project.</p> <p>For example:</p> <pre><code>cd plugins\nmkplugin MQ2Foo\n</code></pre> <p>This will generate a <code>MQ2Foo.vcxproj</code>, <code>MQ2Foo.cpp</code> and several other files in a MQ2Foo folder. You can now add this project to the solution and add/replace the sources with your own.</p>"},{"location":"main/building/#directory-structure","title":"Directory Structure","text":"Folder Name Purpose build Build artifacts. This is where you can find the output when you compile MacroQuest and your plugins. contrib Third-Party source code. data Additional non-source code files used by MacroQuest. docs Documentation extras Optional files that are not required, but may be useful. This includes sources for plugins that are no longer maintained. include Public header files that are used for building MacroQuest and plugins. plugins This folder is reserved for you to add your own personal plugins. src The source code for the MacroQuest executable and its core plugins. tools Source code and additional tools that are used for MacroQuest development, but not part of the main project."},{"location":"main/building/#additional-files-of-interest","title":"Additional Files of Interest","text":"<p><code>plugins/mkplugin.exe</code> Generates a new plugin from the template. Use this when creating a new plugin, or when converting an existing plugin from legacy MacroQuest.</p> <p><code>src/MacroQuest.sln</code>  The main MacroQuest solution file. Use this to build the project.</p>"},{"location":"main/cheat-classifications/","title":"Cheat Classifications","text":"<p>When the VIP forums opened, Lax posted a little system of classifying cheats or \"hacks\".</p> <ul> <li>Passive hacks are those that show different information without really changing the rules. For example, \"fish eyes\" or \"ultravision\" would simply show how you can see things. It doesn't require you to modify properties of a character or item to do so, this can be done just by telling the display to show you things differently.</li> <li>Active hacks are those that could warp you around or otherwise really change the rules of how the game plays. \"mounts without models\" is an \"active\" hack. It's modifying the rules of the game by allowing you to use a horse without having models on but is not going to give the server the impression that you are cheating because the server doesn't know if you have models on or not.</li> <li>Server-Active hacks broadcasting information to the server that could possibly give you away if they wanted to put in a check for it. \"Warping\" is an example of a Server-Active hack.</li> </ul> <p>Note that our Rules allow for most Passive hacks, but NOT Active or Server-Active hacks.</p>"},{"location":"main/credits/","title":"Credits","text":"<p>Warning</p> <p>This section is out of date and hasn't been updated for a really long time.</p>"},{"location":"main/credits/#people-associated-with-the-macroquest-project","title":"People Associated with the MacroQuest Project","text":"<p>People are not listed within a section in any particular order.</p> <p>Recent developers</p> <ul> <li>brainiac</li> <li>knightly</li> <li>dannuic</li> </ul> <p>Past developers</p> <ul> <li>Plazmic</li> <li>dont_know_at_all</li> <li>Lax</li> <li>Amadeus</li> <li>EqMule</li> <li>Ohmz_cc</li> <li>ieatacid</li> <li>rswiders</li> </ul> <p>Other administration and/or minor developers</p> <ul> <li>Rizwank</li> <li>L124RD</li> <li>Mckorr</li> <li>Tuxracer</li> <li>Wassup</li> </ul> <p>Major Wiki contributors</p> <ul> <li>Terramantian</li> </ul> <p>Terramantian was given an honorary VIP for his numerous contributions to the Wiki</p> <p>Major plugin developers</p> <ul> <li>A_Enchanter_00 (MQ2AdvPath, MQ2VoiceCommand, MQ2CastTimer)</li> <li>s0rcier (MQ2Melee, MQ2Cast)</li> <li>CyberTech, Cr4zyb4rd (MQ2Twist)</li> <li>koad (MQ2Timer), MQ2Twist)</li> <li>Shire (MQ2DPS)</li> <li>tonio (MQ2MoveUtils)</li> <li>brainiac (MQ2Nav)</li> </ul> <p>Major \"macro\" developers</p> <ul> <li>GrimJack (GenBot)</li> <li>ml2517 (advbot)</li> </ul> <p>Other notable users</p> <ul> <li>aChallenged1 (noob's best friend)</li> <li>eqjoe</li> <li>MacroFiend</li> <li>vzmule</li> <li>TheWarden</li> <li>Imperfect</li> </ul>"},{"location":"main/hacker-stuff/","title":"Hacker Stuff","text":"<ul> <li>ASM Instruction Reference</li> <li>C/C++ Tutorial</li> <li>C++ Video Tutorials</li> <li>dbgview</li> <li>Nmap</li> </ul>"},{"location":"main/history-of-macroquest/","title":"History Of MacroQuest","text":""},{"location":"main/history-of-macroquest/#macroquest","title":"MacroQuest","text":"<p>In 1999, a site called HackersQuest opened its doors with public forums. It is interesting to note that many popular projects (black hat as well as white hat) seem to have been born there, or at least been somehow associated. Of note: WyvernX (also known as Admin) of XUnleashed, Ratt of ShowEQ, just some dude of EQWindows, and Mapfiend of RPG-Toolbox were some of the first registered users at HackersQuest.</p> <p>Plazmic first publicly announced what would be come MacroQuest in a post dated May 11<sup>th</sup>, 2002, the date he joined HackersQuest.</p> <p>I'm currently working on a truely intelligent macro subsystem for EverQuest that can run while EQ is NOT the forground process.</p> <p>I have a test character that has levelled from 1 to 5 in North Qeynos chasing snakes and other things around, runs back to the gate to rest when low on health, and head to the merchants when low on packspace.</p> <p>Another character was running around Shadowhaven making and selling Pickled Gator meat for a small profit (really not worth the time)</p> <p>Would anyone be interested in this type of a macro program? I'm not sure fully what Xylobot offers, but I figure background macroing would be a hit nevertheless.</p> <p>A poll attached to the post turned up 3 votes -- one for \"I'd rather use Xylobot\", one for \"Running a macro in the background would be cool\", and one for \"Sign me up for the beta!\".</p> <p>A little bit less than a month later he posted again, this time with a link to a new site at sourceforge. The project was called MacroQuest, and would later become the most successful and popular tool for automating EverQuest_._ This new utility was originally only available for Windows 2000 and XP users, but later adapted for Windows 98 and ME. It boasted new commands that could be used directly in EverQuest, with variables and a macro language -- and even came with some macros, including a fletching macro to make arrows.</p> <p>Note: Credit for writing the above text goes to Feonix762.</p>"},{"location":"main/history-of-macroquest/#macroquest-2","title":"MacroQuest 2","text":"<p>Macroquest2 was developed from the existing MacroQuest project, initially by Lax. You may find the original post about MacroQuest2 replacing MacroQuest here.</p> <p>Post subject: Nonbelievers of Lax soon to be disproven!</p> <p>In the last 3 days I have been working hard to redefine the future of Macroquest. The people who have seen the work this far are pleased, and the time draws near to actually allow public beta testing. Please note that nothing in the current MQ will be changed, or broken. This will be an entirely new distribution, from the same place. For now the project is dubbed MQ2.</p> <p>So what is MQ2?</p> <p>MQ2 is an EverQuest development platform, with some default functionality. The development platform is so good, in fact, that it is second only to having the current EQ source code. Gone are the days for inline assembly (99% of it anyway) in MQ. Now we have a much cleaner and easier method of stealing! What was previously 10 lines of inline assembly, is now 1 line that looks like pEverQuest-&gt;dsp_chat(Line,Color);...</p> <p>MQ2 is plugin-based. There is a main DLL, MQ2Main, which contains the API needed to create plugins that do pretty much anything. Plugins simply include a \"MQ2Plugin.h\" header file and instantly gain access to everything in MQ2Main, all of the data structures, etc. To add custom commands, you use AddCommand. To add custom ParseMacroParameters parms, like $char, you use AddParm. To add a detour, you use AddDetour. To execute code on every MQ pulse, you make copy the plugin template function OnPulse(). And so on. It's incredibly simple.</p> <p>Many people have great ideas like bazaar functionality.. .. and many have things they do not want to share, and don't want to have to diff in their changes every time they get a new source. Now, instead of the cumbersome \"EQLib_Custom.cpp\", you simply make a plugin and it's independent.</p> <p>What sort of plugins...?</p> <p>Several features of \"old\" Macroquest are removed from the main system. Namely: FPS Limiter, Chat (including the windows), Map labelling, UI Labels, Item display mods, Telnet. Plugins can handle all of these and more. In fact, most of the features just listed already have been developed in plugin form. A little more testing by developers and things will be ready.</p> <p>Can my plugin use another plugin as an API?</p> <p>Sure. You probably shouldn't try to use things from plugins that arent designed to be API. Export things from the API plugin, and import them in the functional plugin, and make sure the functional plugin is using the .lib from the API plugin in addition to the others needed.</p> <p>What does this mean for us right NOW, not tomorrow when we can get this?</p> <p>MQ2 is a couple days behind as far as new features and fixes implemented in the \"old\" macroquest CVS. Anything implemented since a few days ago will have to be re-done into MQ2. I'm working fast to keep this delta as small as possible.</p> <p>WHEN DOES BETA START</p> <p>It should not be long before we have a zip for you to download for beta testing. Beta testing will last as long as it takes to get the plugins tested, which will not be long.</p> <p>Once the default set of plugins is working, we can call it a \"stable\" release.</p>"},{"location":"main/macroquest-launcher/","title":"MacroQuest Launcher","text":"<p>Also known as MacroQuest.exe</p> <p>MacroQuest.exe is an open-source project and is known as the MacroQuest injector.</p> <p>Running MacroQuest.exe is the way to start MacroQuest.  Note, that once MacroQuest has been loaded in all of the EQ instances you'd like it to load -- MacroQuest.exe is no longer required to be running.  However, it does handle profile launching and hotkey switching, so closing it will lose these functions.</p>"},{"location":"main/macroquest-launcher/#usage","title":"Usage","text":"<p>MacroQuest.exe [/injectonce] [/noappcompat] [/spawnedprocess]</p> Switch Function /injectonce Tells MacroQuest to only inject one time and then exit.  This is only useful for platforms that only allow running one instance of EQ. /noappcompat Disabled application compatibility checks when starting up.  Normally these checks will tell you if something MQ related was added to your application compatibility list (which should be fixed by you) /spawnedprocess Tells MacroQuest that this is a spawned process and you want it to keep the same name.  This isn't useful outside of debugging."},{"location":"main/macroquest.ini/","title":"MacroQuest.ini","text":""},{"location":"main/macroquest.ini/#overview","title":"Overview","text":"<p>MacroQuest.ini is the configuration file used by MacroQuest. By default it is stored in the config folder in your MacroQuest directory.</p>"},{"location":"main/macroquest.ini/#ini-sections","title":"INI Sections","text":""},{"location":"main/macroquest.ini/#macroquest","title":"[MacroQuest]","text":"<ul> <li>Example</li> </ul> <pre><code>[MacroQuest]\nMacroQuestWinClassName=__MacroQuestTray\nMacroQuestWinName=MacroQuest\nToggleConsoleKey=ctrl+`\nBossMode=\nCycleNextWindow=\nCyclePrevWindow=\nParserEngine=1\nShowMacroQuestConsole=1\n</code></pre>"},{"location":"main/macroquest.ini/#crash-handler","title":"[Crash Handler]","text":"<ul> <li>Example</li> </ul> <pre><code>[Crash Handler]\nEnableCrashSubmissions=1\n</code></pre>"},{"location":"main/macroquest.ini/#itemdisplay","title":"[ItemDisplay]","text":"<ul> <li>Example</li> </ul> <pre><code>[ItemDisplay]\nLootButton=1\nLucyButton=1\n</code></pre>"},{"location":"main/macroquest.ini/#aliases","title":"[Aliases]","text":"<ul> <li>Example</li> </ul> <pre><code>[Aliases]\n/tloc=/echo ${If[${Target.ID},${Target.DisplayName}'s Location is ${Target.Y} ${Target.X} ${Target.Z},You do not have a target!]}\n/yes=/multiline ; /squelch /notify LargeDialogWindow LDW_YesButton leftmouseup ; /squelch /notify LargeDialogWindow LDW_OKButton leftmouseup ; /squelch /notify ConfirmationDialogBox CD_Yes_Button leftmouseup ; /squelch /notify ConfirmationDialogBox CD_OK_Button leftmouseup ; /squelch /notify TradeWND TRDW_Trade_Button leftmouseup ; /squelch /notify GiveWnd GVW_Give_Button leftmouseup ; /squelch /notify ProgressionSelectionWnd ProgressionTemplateSelectAcceptButton leftmouseup ;\n</code></pre>"},{"location":"main/macroquest.ini/#plugins","title":"[Plugins]","text":"<ul> <li>Example</li> </ul> <pre><code>[Plugins]\n; MacroQuest Defaults\nmq2autologin=1\nmq2bzsrch=1\nmq2chatwnd=0\nmq2custombinds=1\nmq2eqbugfix=1\nmq2itemdisplay=1\nmq2labels=1\nmq2lua=1\nmq2map=1\n</code></pre>"},{"location":"main/macroquest.ini/#key-binds","title":"[Key Binds]","text":"<ul> <li>Example</li> </ul> <pre><code>[Key Binds]\nRANGED_Nrm=clear\nRANGED_Alt=clear\nMQ2CHAT_Nrm=.\nMQ2CSCHAT_Nrm=/\nNAVKEY_forward_Nrm=W\nNAVKEY_forward_Alt=Up\nNAVKEY_back_Nrm=S\nNAVKEY_back_Alt=Down\nNAVKEY_left_Nrm=A\n</code></pre>"},{"location":"main/macroquest.ini/#internal","title":"[Internal]","text":"<ul> <li>Example</li> </ul> <pre><code>[Internal]\nSpawnedProcess=aSdFOgl.exe\n</code></pre>"},{"location":"main/macroquest.ini/#caption-colors","title":"[Caption Colors]","text":"<ul> <li>Example</li> </ul> <pre><code>[Caption Colors]\nPC=OFF\nPC-Color=ff00ff\nPCCon=OFF\nPCPVPTeam=OFF\nPCRaid=OFF\nPCRaid-Color=ff7f\nPCClass=OFF\n</code></pre>"},{"location":"main/macroquest.ini/#framelimiter","title":"[FrameLimiter]","text":"<ul> <li>Example</li> </ul> <pre><code>[FrameLimiter]\nEnable=1\nRenderInBackground=0\nSaveByChar=1\n</code></pre>"},{"location":"main/macroquest.ini/#overlay","title":"[Overlay]","text":"<ul> <li>Example</li> </ul> <pre><code>[Overlay]\nEnableViewports=0\nCursorAttachment=1\n</code></pre>"},{"location":"main/macroquest.ini/#achievementsinspector","title":"[AchievementsInspector]","text":"<ul> <li>Example</li> </ul> <pre><code>[AchievementsInspector]\nShowCategories=1\nShowOpen=1\nShowLocked=1\nShowCompleted=1\nShowHidden=1\n</code></pre>"},{"location":"main/macroquest.ini/#console","title":"[Console]","text":"<ul> <li>Example</li> </ul> <pre><code>[Console]\nPersistentCommandHistory=1\n</code></pre>"},{"location":"main/multiboxing/","title":"Multiboxing","text":"<p><code>Multiboxing</code> is not to be confused with <code>botting</code>. This article has been updated to describe the differences.</p> <ul> <li><code>Multiboxing</code> describes the act of playing and controlling multiple characters at the same time, usually in an</li> </ul> <p>MMORPG. **Multiboxing, even with specialized Multiboxing Software like ISBoxer, is a EULA-safe</p> <p>activity as long as it is not combined with unsafe activity like botting or hacking.** See the main</p> <p>Multiboxing wiki article on isboxer.com for more information about licit</p> <p>multiboxing.</p> <ul> <li><code>Botting</code> describes the act of automating a character, generally such that the character is capable of interpreting</li> </ul> <p>and responding to game events without human control. **Botting is prohibited by the EULA in EverQuest and other</p> <p>MMORPGs.**</p> <p>The remainder of the article continues to focus on botting and multi-botting, rather than multiboxing.</p>"},{"location":"main/multiboxing/#controlling-bots","title":"Controlling bots","text":"<p>Prior to MQ controlling bots was best handled by the creation of many specific hotkeys and moving between instances of EQ to click those hotkeys. MQ provides several macros such as AutoBot.mac and ModBot and a plugin or two like MQ2Melee that provide some ability for bots to act on their own.</p>"},{"location":"main/multiboxing/#communication-between-eq-instances","title":"Communication between EQ instances","text":"<p>There are several ways that bots can communicate between EQ instances. You can set up a shared chat channel in EQ. One character can write a formatted message to the channel that bots can read and respond. You can also use MQ2IRC, MQ2Telnet or MQ2EQBC that all keep the communication outside of EQ.</p> <p>Once your bots are setup and running you can use Custom UIs or MQ2HUD to see information about each of your bots. You can use EQ HotKeys to send commands to your bots.</p>"},{"location":"main/plugin-quick-list/","title":"Plugin repository Quick List","text":"<p>Below you will find a command listing to clone the repositories of many public open-source plugins.</p> <p>The commands below are provided as a quick way to download them from Git. Some plugins may have submodules, so also make sure th run the submodule update command to initialize any submodules.</p> <p>Tip</p> <p>You can initialize submodules of any plugin which has them with:</p> Git BashPowershell <pre><code>find ./plugins -maxdepth 1 -type d -exec git -C {} submodule update --init --recursive \\;\n</code></pre> <pre><code>Get-ChildItem -Directory -Force -Recurse *.git | ForEach-Object { cd $_.Parent.FullName; Write-Host $_.Parent.FullName; git submodule update --init --recursive }\n</code></pre> <p>Tip</p> <p>You can quickly update your plugins with:</p> Git BashPowershell <pre><code>find ./plugins -maxdepth 1 -type d -exec git -C {} pull \\;\n</code></pre> <pre><code>Get-ChildItem -Directory -Force -Recurse *.git | ForEach-Object { cd $_.Parent.FullName; Write-Host $_.Parent.FullName; git pull }\n</code></pre> <p>The solution file with all of these in it is here: MacroQuestCustom.sln (place this file in the src folder beside MacroQuest.sln)</p> <pre><code># All\ngit clone -b master https://github.com/RedGuides/MQ2AASpend.git plugins/MQ2AASpend\ngit clone -b master https://github.com/RedGuides/MQ2AdvPath.git plugins/MQ2AdvPath\ngit clone -b master https://github.com/RedGuides/MQ2AutoAccept.git plugins/MQ2AutoAccept\ngit clone -b master https://github.com/RedGuides/MQ2AutoCamp.git plugins/MQ2AutoCamp\ngit clone -b master https://github.com/RedGuides/MQ2AutoClaim.git plugins/MQ2AutoClaim\ngit clone -b master https://github.com/RedGuides/MQ2AutoForage.git plugins/MQ2AutoForage\ngit clone -b master https://github.com/RedGuides/MQ2AutoGroup.git plugins/MQ2AutoGroup\ngit clone -b master https://github.com/RedGuides/MQ2AutoSize.git plugins/MQ2AutoSize\ngit clone -b master https://github.com/RedGuides/MQ2Bandolier.git plugins/MQ2Bandolier\ngit clone -b master https://github.com/RedGuides/MQ2BardSwap.git plugins/MQ2BardSwap\ngit clone -b master https://github.com/RedGuides/MQ2Boxr.git plugins/MQ2Boxr\ngit clone -b master https://github.com/brainiac/MQ2Camera.git plugins/MQ2Camera\ngit clone -b master https://github.com/RedGuides/MQ2Cast.git plugins/MQ2Cast\ngit clone -b master https://github.com/RedGuides/MQ2Clipboard.git plugins/MQ2Clipboard\ngit clone -b master https://github.com/RedGuides/MQ2Collections.git plugins/MQ2Collections\ngit clone -b master https://github.com/RedGuides/MQ2CPULoad.git plugins/MQ2CPULoad\ngit clone -b master https://github.com/RedGuides/MQ2Cursor.git plugins/MQ2Cursor\ngit clone -b master https://github.com/dannuic/MQ2Dan.git plugins/MQ2Dan\ngit clone -b master https://github.com/RedGuides/MQ2Debuffs.git plugins/MQ2Debuffs\ngit clone -b master https://gitlab.com/alynel/MQ2Discord.git plugins/MQ2Discord\ngit clone -b master https://github.com/projecteon/MQ2DotNet.git plugins/MQ2DotNet\ngit clone -b master https://github.com/RedGuides/MQ2DPSAdv.git plugins/MQ2DPSAdv\ngit clone -b master https://github.com/brainiac/MQ2EasyFind.git plugins/MQ2EasyFind\ngit clone -b master https://github.com/RedGuides/MQ2EQBC.git plugins/MQ2EQBC\ngit clone -b master https://github.com/RedGuides/MQ2Events.git plugins/MQ2Events\ngit clone -b master https://github.com/RedGuides/MQ2Exchange.git plugins/MQ2Exchange\ngit clone -b master https://github.com/RedGuides/MQ2FarmTest.git plugins/MQ2FarmTest\ngit clone -b master https://github.com/RedGuides/MQ2FeedMe.git plugins/MQ2FeedMe\ngit clone -b master https://github.com/MMOBugs/MQ2GMCheck.git plugins/MQ2GMCheck\ngit clone -b master https://github.com/RedGuides/MQ2GroupInfo.git plugins/MQ2GroupInfo\ngit clone -b master https://github.com/RedGuides/MQ2HeadShot.git plugins/MQ2HeadShot\ngit clone -b master https://github.com/RedGuides/MQ2HUDMove.git plugins/MQ2HUDMove\ngit clone -b master https://github.com/RedGuides/MQ2Ice.git plugins/MQ2Ice\ngit clone -b main https://github.com/RedGuides/MQItemColor.git plugins/MQItemColor\ngit clone -b master https://github.com/RedGuides/MQ2ItemScore.git plugins/MQ2ItemScore\ngit clone -b master https://github.com/RedGuides/MQ2KillTracker.git plugins/MQ2KillTracker\ngit clone -b master https://github.com/RedGuides/MQ2KissTemplate.git plugins/MQ2KissTemplate\ngit clone -b master https://github.com/RedGuides/MQ2LinkDB.git plugins/MQ2LinkDB\ngit clone -b master https://github.com/RedGuides/MQ2Log.git plugins/MQ2Log\ngit clone -b master https://github.com/RedGuides/MQ2Medley.git plugins/MQ2Medley\ngit clone -b master https://github.com/RedGuides/MQ2Melee.git plugins/MQ2Melee\ngit clone -b main https://github.com/wired420/MQ2MeshManager.git plugins/MQ2MeshManager\ngit clone -b master https://github.com/RedGuides/MQ2MoveUtils.git plugins/MQ2MoveUtils\ngit clone -b master https://github.com/RedGuides/MQ2MyButtons.git plugins/MQ2MyButtons\ngit clone -b master https://github.com/brainiac/MQ2Nav.git plugins/MQ2Nav\ngit clone -b master https://github.com/RedGuides/MQ2NetBots.git plugins/MQ2NetBots\ngit clone -b master https://github.com/RedGuides/MQ2Notepad.git plugins/MQ2Notepad\ngit clone -b master https://github.com/RedGuides/MQ2OTD.git plugins/MQ2OTD\ngit clone -b master https://github.com/RedGuides/MQ2Paranoid.git plugins/MQ2Paranoid\ngit clone -b master https://github.com/RedGuides/MQ2PlatTracker.git plugins/MQ2PlatTracker\ngit clone -b master https://github.com/RedGuides/MQ2PluginManager.git plugins/MQ2PluginManager\ngit clone -b master https://github.com/RedGuides/MQ2PortalSetter.git plugins/MQ2PortalSetter\ngit clone -b master https://github.com/RedGuides/MQ2Posse.git plugins/MQ2Posse\ngit clone -b master https://github.com/RedGuides/MQ2RaidUtils.git plugins/MQ2RaidUtils\ngit clone -b master https://github.com/RedGuides/MQ2Rand.git plugins/MQ2Rand\ngit clone -b master https://github.com/RedGuides/MQ2React.git plugins/MQ2React\ngit clone -b master https://github.com/RedGuides/MQ2RelayTells.git plugins/MQ2RelayTells\ngit clone -b master https://github.com/RedGuides/MQ2Relocate.git plugins/MQ2Relocate\ngit clone -b master https://github.com/RedGuides/MQ2Rewards.git plugins/MQ2Rewards\ngit clone -b master https://github.com/RedGuides/MQ2Rez.git plugins/MQ2Rez\ngit clone -b master https://github.com/RedGuides/MQ2Say.git plugins/MQ2Say\ngit clone -b master https://gitlab.com/Knightly1/MQ2ShellCmd.git plugins/MQ2ShellCmd\ngit clone -b master https://github.com/RedGuides/MQ2SpawnMaster.git plugins/MQ2SpawnMaster\ngit clone -b master https://github.com/RedGuides/MQ2Spawns.git plugins/MQ2Spawns\ngit clone -b master https://github.com/RedGuides/MQ2SpawnSort.git plugins/MQ2SpawnSort\ngit clone -b master https://gitlab.com/Knightly1/MQ2SQLite.git plugins/MQ2SQLite\ngit clone -b master https://github.com/RedGuides/MQ2Status.git plugins/MQ2Status\ngit clone -b master https://github.com/MMOBugs/MQ2Targets.git plugins/MQ2Targets\ngit clone -b main https://github.com/Knightly1/MQTextToSpeech.git plugins/MQTextToSpeech\ngit clone -b master https://github.com/RedGuides/MQ2ToolTip.git plugins/MQ2ToolTip\ngit clone -b master https://github.com/RedGuides/MQ2Tracking.git plugins/MQ2Tracking\ngit clone -b master https://github.com/RedGuides/MQ2TributeManager.git plugins/MQ2TributeManager\ngit clone -b master https://github.com/RedGuides/MQ2TSTrophy.git plugins/MQ2TSTrophy\ngit clone -b master https://github.com/RedGuides/MQ2Twist.git plugins/MQ2Twist\ngit clone -b master https://github.com/RedGuides/MQ2Vendors.git plugins/MQ2Vendors\ngit clone -b master https://github.com/MMOBugs/MQ2WinTitle.git plugins/MQ2WinTitle\ngit clone -b master https://github.com/RedGuides/MQ2WorstHurt.git plugins/MQ2WorstHurt\ngit clone -b master https://github.com/RedGuides/MQ2XAssist.git plugins/MQ2XAssist\ngit clone -b master https://github.com/RedGuides/MQ2XPTracker.git plugins/MQ2XPTracker\n# Live/Test only\ngit clone -b master https://github.com/RedGuides/MQ2AutoLoot.git plugins/MQ2AutoLoot\ngit clone -b master https://github.com/RedGuides/MQ2AutoLootSort.git plugins/MQ2AutoLootSort\ngit clone -b master https://github.com/jessebevil/MQ2LootManager.git plugins/MQ2LootManager\n# Emu only\ngit clone -b main https://github.com/Knightly1/MQMountClassicModels.git plugins/MQMountClassicModels\n</code></pre>"},{"location":"main/rules/","title":"Rules","text":"<p>The most controversial rule we enforce on our forums has to do with Cheat Classifications. Many users feel that because using MacroQuest 2 in the first place is cheating, that all forms of cheating should be discussed and allowed on our forums. We disagree, and have drawn a line indicating what is allowed, and what is not allowed. The line is drawn at \"passive hacks\".</p> <p>There are serveral reasons for this.</p> <ul> <li> <p>Self preservation -- The more blatant hacks that are exposed to the general EQ public, the greater the outcry for DBG to attack us. If DBG changes their antihacking efforts, it might take months for us to recover.</p> </li> <li> <p>Game preservation -- Some of us still play the game and it seems that active hacks always fall into the hands of idiots.</p> </li> <li> <p>Hack preservation -- Once the hack is out, everyone will abuse it and it will get nerfed.</p> </li> </ul>"},{"location":"main/developing/","title":"Developing MacroQuest","text":"<p>Warning</p> <p>This content is outdated or incomplete.</p> <p>placeholder</p>"},{"location":"main/developing/buff-predicates/","title":"Buff Predicates","text":""},{"location":"main/developing/buff-predicates/#buff-predicates","title":"Buff Predicates","text":"<p>Added a system to simplify the code when searching for buffs. You can generate a function that takes a template buff (nominally of <code>EQ_Affect</code>, <code>CachedBuff</code>, or <code>EQ_Spell*</code> types) that can be passed into a function to count or get buffs. Four useful classes that inherit from <code>SpellAttribute&lt;T&gt;</code> were created:</p> <ul> <li><code>SpellAffect(eEQSPA, (optional) isIncrease = true)</code></li> <li><code>SpellCategory(eEQSPELLCAT)</code></li> <li><code>SpellSubCat(eEQSPELLCAT)</code></li> <li><code>SpellClassMask(PlayerClass...)</code></li> </ul> <p>These objects can be chained together with normal boolean operators (&amp;&amp;, ||, and the unary ! for <code>SpellClassMask</code>) to create a predicate function. Use of this is something like:</p> Example (C++)<pre><code>auto buffslot = GetSelfBuff(SpellAffect(SPA_AC, true)\n    &amp;&amp; SpellCategory(SPELLCAT_HP_BUFFS)\n    &amp;&amp; (SpellSubCat(SPELLCAT_AEGOLISM) || SpellSubCat(SPELLCAT_SYMBOL))\n    &amp;&amp; SpellClassMask(Cleric));\n</code></pre> <p>As part of this change, the following functions have been deprecated, as their functionality has been replaced by this new system:</p> <ul> <li>GetTargetBuffByCategory()</li> <li>GetTargetBuffBySubCat()</li> <li>GetTargetBuffBySPA()</li> <li>HasCachedTargetBuffSubCat()</li> <li>HasCachedTargetBuffSPA()</li> <li>GetSelfBuffByCategory()</li> <li>GetSelfBuffBySubCat()</li> <li>GetSelfBuffBySPA()</li> <li>GetSelfShortBuffBySPA()</li> </ul>"},{"location":"main/developing/debugging/","title":"Crash To Desktop","text":"<p>Warning</p> <p>this information is obsolete and needs to be revised!</p>"},{"location":"main/developing/debugging/#necessary-information","title":"Necessary Information","text":"<ol> <li>We need to know the actual error. The address, the address that was probably trying to be read, etc. Copy and paste from the debugger.</li> <li>We need to know if the crash itself was in EVERQUEST, or MACROQUEST. If it was in MacroQuest, the debugger will show you the source line. If not, it will show you some disassembly and an offset in eqgame.exe (most likely).</li> <li>a. Inside MacroQuest - The error information from #1 as well as the source line that caused the crash. If you can, copy and paste us the surrounding code block and let us know which source file it was in (e.g. MQ2Utilities.cpp)</li> <li>b. Inside EverQuest - The error information #1 including the offset in eqgame.exe, copy and paste a couple lines of the disassembly if you can, AND GET THE FUNCTION CALL STACK. If we get the function call stack, it may be VERY easy to fix the problem. If not, may be very DIFFICULT to fix the problem.</li> </ol> <p>If you cannot get this information, you might as well not report the bug.</p>"},{"location":"main/developing/debugging/#debuggers","title":"Debuggers","text":"<p>Stuff you need to know about debuggers:</p> <ol> <li>How to attach a debugger to the process, and how to enable trapping of the 0xC0000005 exception (the majority of crash bugs)</li> <li>Where to find the debug spew as well as crash information (for info #1) when eqgame.exe crashes</li> <li>Where to find the source line (for info #2a only) when eqgame crashes inside macroquest</li> <li>Where to find the disassembly (for info #2b only) when eqgame crashes</li> <li>Where to find the function call stack (for info #2b only) when eqgame crashes</li> </ol>"},{"location":"main/developing/debugging/#visual-studio-net","title":"Visual Studio .Net","text":"<ol> <li>Debug menu-&gt;Processes option. In the \"Available Processes\" list select eqgame.exe. Click \"Attach\". In the \"Attach to Process\" box that pops up, select only \"Native\" in the list. Hit OK. The popup closes and the debugger attaches; click \"Close\" in the processes window. To enable trapping of the 0xC0000005 exception, open Debug-&gt;Exceptions (alternatively ctrl+alt+E). Expand \"Win32 Exceptions\". Select \"c0000005 Access violation\". Select the two \"Break into the debugger\" options. Hit OK.</li> <li>Debug spew can be found in the \"Output window\" by hitting ctrl+alt+O, or by going View-&gt;Other Windows-&gt;Output. The crash information will be displayed there when eqgame crashes.</li> <li>VS.NET will automatically point to the source file and put a green arrow by the source line that caused the problem, assuming macroquest was compiled on the computer you are running this on.</li> <li>If the disassembly does not show up, you can switch to the disassembly window by hitting alt+8 or by going debug-&gt;windows-&gt;disassembly</li> <li>The function call stack can be found in the toolbar that contains \"Program\", \"Thread\" and \"Stack Frame\". The call stack will be seen in the \"stack frame\" combo box. Pull it down and take note of the top few if not the entire list.</li> </ol>"},{"location":"main/developing/debugging/#visual-studio-6","title":"Visual Studio 6","text":"<ol> <li>Build menu-&gt;Start Debug-&gt;Attach to process... Check the \"Show System Processes\" button. Select \"eqgame\" in the list. Hit OK. The c0000005 exception trapping can be enabled by going Debug-&gt;Exceptions. Select c0000005 Access violation.</li> </ol> <p>Click \"Stop always\". Hit \"Change\". Hit \"OK.</p> <ol> <li>Debug spew can be found in the \"Output window\" by hitting alt+2, or by going View-&gt;Output. The crash information will be displayed there when eqgame crashes.</li> <li>VS6 should automatically point to the source file and put a green arrow by the source line that caused the problem, assuming MacroQuest was compiled on the computer you are running this on.</li> <li>If the disassembly does not show up, you can switch to the disassembly window by hitting alt+8 or by going View-&gt;Debug Windows-&gt;Disassembly</li> <li>The function call stack can be found in the \"Call Stack\" window, found by pressing alt+7 or by going View-&gt;Debug Windows-&gt;Call Stack</li> </ol>"},{"location":"main/developing/debugging/#windbg","title":"WINDBG","text":"<ol> <li>Build MQ2 (nmake or VS are both fine)</li> <li>Make sure that the PDB files created have the same date as DLLs</li> <li>Download windbg (http://www.microsoft.com/whdc/devtools/debugging/installx86.mspx#a) and install it</li> <li>Make sure that the PDB files are in the same directory as where you start MQ.</li> <li>Start MQ, EQ, and windbg. (wineq or eqw will work too)</li> <li>On windbg, press F6 and choose eqgame.exe. Once it has broken in, press F5 to continue. If you don't press F5</li> </ol> <p>quickly enough (a few seconds or so), there is a chance that you will be disconnected. This is because the game is</p> <p>stopped while you are in the debugger and it is not responding to the server.</p> <ol> <li>In EQ, take the steps that normally crash.</li> <li>When the debugger breaks in, goto to the command window of windbg</li> <li>Enter this command: .sympath SRV*c:\\winnt\\symbols*http://msdl.microsoft.com/download/symbols</li> <li>or Enter this command: !symfix</li> <li>Enter the command 'r' for registers.</li> <li>Enter the command 'kv' for stack backtrace.</li> <li>If the crash is in MQ code, you should see the source file open and show the line that caused the problem (if you compiled it on the same machine as you are running on). Alt-3 brings up the local variables. See if there is anything of interest there.</li> <li>Post the output from those commands here: http://www.macroquest2.com/phpBB3/viewforum.php?f=28.</li> </ol>"},{"location":"main/developing/debugging/#visual-studio-2005-express","title":"Visual Studio 2005 Express","text":"<ol> <li>Tools-&gt;Attach to Process-&gt;Select instance of EQ to debug and click 'Attach\" Should automatically detect \"Native Code\". Debug-&gt;Exceptions expand the \"Win 32 Exceptions\" tree and select \"c0000005 Access violation\" and hit ok.</li> <li>When eqgame crashes the debug spew is in the output window usually in the upper right window, but can be foiund by Debug-&gt;Windows-&gt;Output.</li> <li>When EQ crashes VS2005 will popup a box with \"break\", \"ignore\", or \"continue\" to choose from. Select \"Break\" or all your debug information will be wiped out. It should then open up the source file and place an error next to the line it crashed at.</li> <li>Dissasembly can be found at alt+8, or Debug-&gt;Windows-&gt;Dissasembly.</li> <li>Call stack may pop up on its own in lower window as a tab, but if not alt+7 or debug-&gt;windows-&gt;Call Stack</li> </ol>"},{"location":"main/developing/vcpkg/","title":"Using Vcpkg in MacroQuest","text":"<p>MacroQuest incorporates the vcpkg library manager for C and C++ to make installing and maintaining third party libraries easier. Microsoft's vcpkg is a compile-from-source library manager that uses cmake to compile the library on the system it is needed. This has the benefits of both distributing a lib AND distributing source to make it easy to compile libs so that you don't have to worry about which directories to include and setup.</p> <p>For MacroQuest, we have slightly modified the way that vcpkg works.</p>"},{"location":"main/developing/vcpkg/#installation-of-vcpkg","title":"Installation of vcpkg","text":"<p>While you can bootstrap and install vcpkg yourself and it will work, it is easier to let MacroQuest's build scripts handle this for you. The first time that you build MacroQuest from the sln file, vcpkg will bootstrap itself.</p> <p>From that point, the vcpkg.exe will exist in contrib/vcpkg and this is the file that can be used to search for packages. Because of the modifications for MacroQuest, you do not need to run vcpkg integrate or vcpkg integrate install.</p>"},{"location":"main/developing/vcpkg/#installation-of-packages","title":"Installation of packages","text":"<p>vcpkg_mq is setup to use custom manifests to install required packages. These manifests are automatically set with the static triplet to match your architecture.</p> <p>Including packages with your plugin or project requires that you create a manifest file next to your vcxproj. In that same directory, you'll create <code>vcpkg_mq.txt</code> with a list of the packages that your project requires. The packages are separated by line breaks and mimic the format that you would use on the command line to install a package. The triplet is only required if it is different from your architecture or if you don't want it to be static.</p> <p>For example, if you wanted yaml-cpp and sleepy-discord, but you wanted the websocketpp feature of sleepy-discord, your vcpkg_mq.txt manifest would look like:</p> vcpkg_mq.txt<pre><code>yaml-cpp\nsleepy-discord[websocketpp]\n</code></pre> <p>Next time that you build, these packages will be automatically installed.</p>"},{"location":"main/developing/vcpkg/#inclusion-of-libraries-in-your-project","title":"Inclusion of libraries in your project","text":"<p>If you are building a plugin or one of the core projects, the include paths for headers and libraries are already set. Just <code>#include \"yourlibrary.h\"</code> as you normally would and add any .lib file to your dependency list. You do not need to add the paths unless your library installs to a non-standard location or a subdirectory. This can be done through the Visual Studio interface, but below is an example of what a vcxproj might look like when adding yaml-cpp to the list of dependencies:</p> <pre><code>  &lt;ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\"&gt;\n    &lt;Link&gt;\n      &lt;AdditionalDependencies&gt;libyaml-cppmdd.lib;%(AdditionalDependencies)&lt;/AdditionalDependencies&gt;\n    &lt;/Link&gt;\n  &lt;/ItemDefinitionGroup&gt;\n  &lt;ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\"&gt;\n    &lt;Link&gt;\n      &lt;AdditionalDependencies&gt;libyaml-cppmd.lib;%(AdditionalDependencies)&lt;/AdditionalDependencies&gt;\n    &lt;/Link&gt;\n  &lt;/ItemDefinitionGroup&gt;\n</code></pre> <p>If you do need to set specific paths, make sure that those paths are relative.</p>"},{"location":"main/developing/vcpkg/#updates","title":"Updates","text":"<p>When you update the repository, vcpkg_mq will update itself if you have git installed in your path. When the git hash for the submodule changes, vcpkg_mq will manage its own updates both for the executable and for any installed packages, there is nothing you need to do.</p> <p>To force an update of vcpkg, delete the following file:</p> <ul> <li>contrib/vcpkg/vcpkg_mq_last_bootstrap.txt</li> </ul> <p>This typically only needs to be done when the vcpkg repo is updated, but is also helpful for testing.</p>"},{"location":"main/developing/vcpkg/#removing-packages","title":"Removing packages","text":"<p>Prebuilt packages are not removed, only updated as needed. To uninstall a package, use <code>vcpkg remove</code> as you would normally.</p>"},{"location":"main/features/anonymize/","title":"Anonymize","text":""},{"location":"main/features/anonymize/#reason-for-existence","title":"Reason for Existence","text":"<p>MQ2Anonymize has the singular purpose of filtering text displayed to the user. It is mostly useful in streaming/recording applications with the hope that any identifying information is not visible to others. This, of course, is an intractable problem so the best that we can do is filter words and hope it works. It is by no means a perfect safety tool and if the user cares about anonymity, should be used in service of supporting a larger anonymization strategy.</p>"},{"location":"main/features/anonymize/#word-of-warning","title":"Word of Warning","text":"<p>This plugin will only filter in game. What that means is that any text at server select, character select, login, etc will not be filtered. Please make any considerations necessary to prevent visibility of the client outside of actual in-game experiences.</p>"},{"location":"main/features/anonymize/#how-your-plugin-can-anonymize","title":"How Your Plugin Can Anonymize","text":"<p>MQ2Anonymize cannot control what plugin authors do, so instead we provide the API to anonymize any text that the plugin may render if anonymization is turned on. We are able to anonymize central points of text display (such as writing the the MQ2 console with <code>WriteChatColor</code> and variants of it), but anything that renders text outside those plugins will need to have explicit API calls to <code>Anonymize()</code>. For plugin authors: when in doubt make sure to test that anonymization works in game with your plugin before releasing it!</p>"},{"location":"main/features/anonymize/#api","title":"API","text":"<p>The API is very simple: <code>CXStr&amp; Anonymize(CXStr&amp; Text)</code> The signature is such that it satisfies 2 things: can be linked via C-style linkage for use externally, and can be called in-line. The function uses <code>Text</code> as a buffer and returns it as a result. This means that the plugin writer will need to allocate the <code>CXStr</code> passed to the appropriate scope (usually on the stack is fine), but since it's not a c-string, we don't need to support <code>MAX_STRING</code> allocations on the stack anymore. This also has the advantage of using EQ's native string class (<code>CXStr</code>) so it should be very easy to integrate.</p>"},{"location":"main/features/anonymize/#example","title":"Example","text":"<pre><code>CXStr text(text_to_anonymize);\ntext = Anonymize(text);\n</code></pre>"},{"location":"main/features/anonymize/#end-user-instructions","title":"End-User Instructions","text":"<p>In order to enable anonymization, the end-user (player) needs to do some setup. Turning it on and off is simple: <code>/mqanon</code> will simply toggle the active state of anonymization. All interaction with this functionality is done with arguments to this command, here is a brief summary.</p> <p>Important Note: Due to the quirky nature of how EQ sets bone sprite text, we have implemented anon into the captions code. If you want name sprites to anonymize, you must turn captions on with <code>/caption MQCaptions on</code>!</p>"},{"location":"main/features/anonymize/#command-reference","title":"Command Reference","text":"<ul> <li>no arguments: toggle on/off state of anonymization</li> <li><code>/mqanon asterisk &lt;name&gt;</code></li> <li>add a filter for <code>name</code> and replace it with asterisks</li> <li><code>/mqanon class &lt;name&gt;</code></li> <li>add a filter for <code>name</code> and replace it with class information</li> <li><code>/mqanon custom &lt;name&gt; &lt;text&gt;</code></li> <li>add a filter for <code>name</code> and replace it with custom <code>text</code></li> <li><code>/mqanon drop &lt;name&gt;</code></li> <li>remove the filter for <code>name</code></li> <li><code>/mqanon alias &lt;name&gt; &lt;alternate&gt;</code></li> <li>add an alternate for <code>name</code></li> <li>will use the same replacement strategy as <code>name</code></li> <li><code>/mqanon unalias [name] &lt;alternate&gt;</code></li> <li>remove an alternate from <code>name</code></li> <li>specifying the name is optional here</li> <li><code>/mqanon me [asterisk|class|me|none]</code></li> <li>set self anonymization to strategy</li> <li>if no argument is specified, will use the <code>me</code> strategy</li> <li><code>/mqanon group &lt;asterisk|class|none&gt;</code></li> <li>set group anonymization to strategy</li> <li><code>/mqanon fellowship &lt;asterisk|class|none&gt;</code></li> <li>set fellowship anonymization to strategy</li> <li><code>/mqanon guild &lt;asterisk|class|none&gt;</code></li> <li>set guild anonymization to strategy</li> <li><code>/mqanon raid &lt;asterisk|class|none&gt;</code></li> <li>set raid anonymization to strategy</li> <li><code>/mqanon save</code></li> <li>save the current configuration</li> <li><code>/mqanon load</code></li> <li>load the configuration from file</li> <li>for use when editing the config externally</li> <li><code>/mqanon [command] -h</code> or <code>/mqanon [command] --help</code></li> <li>display help</li> <li>commands that take arguments also allow this switch</li> </ul>"},{"location":"main/features/anonymize/#replacement-priority","title":"Replacement Priority","text":"<p>Since the same character can exist in multiple groupings (guild/group/raid, etc) and each grouping can have a separate strategy, there is a defined order in which text replacing is done. That means that a name that exists in multiple groupings will use the highest priority replacement strategy. The priority is as follows: 1) Custom 2) Self 3) Group 4) Guild 5) Raid</p>"},{"location":"main/features/anonymize/#replacement-strategies","title":"Replacement Strategies","text":"<p>There are some pre-built strategies that are commonly used (as seen in the command reference):  - asterisk    - replaces the middle characters in the name with asterisks    - <code>Myname</code> becomes <code>M****e</code>  - class</p> <ul> <li> <p>replaces the name with <code>\"[${{Spawn[pc {0}].Level}}] ${{Spawn[pc {0}].Race}} ${{Spawn[pc {0}].Class}} ${{Spawn[pc {0}].Type}}\"</code></p> </li> <li> <p>note that this assumes a pc</p> </li> <li> <p>me</p> </li> <li> <p>replaces the name with <code>\"[${Me.Level}] ${Me.Race} ${Me.Class} ${Me.Type}\"</code></p> </li> <li> <p>only appropriate when anonymizing the client's character</p> </li> <li>where</li> <li>this keyword allows completely generic anonymization</li> <li>the string will be processed as macro text at the time of replacement</li> </ul>"},{"location":"main/features/cached-buffs/","title":"Cached Buffs","text":""},{"location":"main/features/cached-buffs/#cached-buffs","title":"Cached Buffs","text":"<p>-Previously Added: .CachedBuffCount to the spawn tlo. it returns -1 if no buffs are cached for the spawn or number of buffs cached.</p> <p>-Previously Added: .CachedBuff[x] to the spawn tlo where x is a spellid if its a number and a spell name if not. It returns a MQ2CachedBuffType.</p> <p>-Previously Added: .CachedBuff[#x] to the spawn tlo where #x is a buffslot between 1-97. It returns a MQ2CachedBuffType.</p> <p>-Previously Added: .CachedBuff[*x] to the spawn tlo where *x is a index (buffslots are not sorted). It returns a MQ2CachedBuffType.</p> <p>-Previously Added: .CachedBuff[^x] to the spawn tlo where ^x is a keyword. It returns a MQ2CachedBuffType.</p> <p><code>^x keywords: Slowed Rooted Mezzed Crippled Maloed Tashed Snared and Beneficial</code></p> <p>-Using CachedBuff to get buff info on targets, group members etc, only requires you to target the entity once. after thats done, buffs are cached. The upside is obviously that we don't have to target back and forth constantly.</p>"},{"location":"main/features/cached-buffs/#examples","title":"Examples","text":"<p><code>${Group.Member[2].CachedBuff[Spirit of Wolf].Duration}</code></p> <p>This will show the duration of the spirit of wolf on the second member of the group.</p> <p><code>${Target.Clarity.Name}</code></p> <p>This will show you the name of the clarity spell on your target</p> <p><code>/cachedbuffs reset</code></p> <p>This will clear the cached buffs for all targets.</p> <p>For more information on the <code>/cachedbuffs</code> command see here.</p> <p>For more information on the <code>cachedbuff</code> datatype see here</p>"},{"location":"main/features/cfg-files/","title":"CFG Files","text":""},{"location":"main/features/cfg-files/#introduction","title":"Introduction","text":"<p>CFG files are files which contain commands to be run at certain times. The file must contain commands the same as you would use them normally. Each command will be executed in order, however there are NO macro blocks, events, etc, in a CFG file.</p> <p>CFG files may be present in .\\Configs, in . (Release), or potentially in the EverQuest directory. Note that the Release would be the same as wherever your Macroquest.ini is.</p> <p>You can manually load a CFG file while in-game using the /loadcfg command.</p> <p>The following CFG files will be loaded at the following times:</p> autoexec.cfg Executed on the first pulse (when you reach character select, or when you are in game) charselect.cfg Executed when you reach character select ingame.cfg Executed when you enter the game zoned.cfg Executed after you finish zoning, but right before the map-specific config is executed server_character.cfg Executed when a certain character enters the world classname.cfg Executed when char of 'classname' enters world. e.g., bard.cfg mapshortname.cfg Executed when you zone into this zone pluginname-autoexec.cfg Executed when this plugin is loaded (after its initialization is complete)"},{"location":"main/features/cfg-files/#examples","title":"Examples","text":"<ul> <li> <p>Example use of zoned.cfg:</p> <p>* You have a macro that wants to summon a mount (or cast SoW, etc), but should only attempt this in outdoor zones.</p> <p>In zoned.cfg, set a global variable to automatically set the zone to outdoor. Modify your macro to attempt to</p> <p>summon a horse at some appropriate point and capture a failed summon via /doevents. Reset the value of the variable</p> <p>to indoor and it will hold until you zone again.</p> <ul> <li>The newbie zones on the Progression servers have 100s of corpses all over, creating a lot of lag.</li> </ul> </li> </ul> <pre><code>/if (${SpawnCount[corpse]}&gt;150) /hidecorpse all\n</code></pre> <ul> <li>Example of a CFG file entry for a specific character:</li> </ul> <pre><code>/custombind add lootcorpse\n/custombind set lootcorpse /multiline ; /target corpse radius 17; /loot\n/bind lootcorpse f\n</code></pre> <ul> <li>Example of a specific zone CFG:</li> </ul> <p>This will fix UI Corruption in The Devastion zone due to a massive (800+) number of spawns on the map.</p> <p>devastation.cfg</p> <pre><code>/maphide npc 49\n</code></pre>"},{"location":"main/features/custom-uis/","title":"Custom UIs","text":""},{"location":"main/features/custom-uis/#introduction","title":"Introduction","text":"<p>MacroQuest has several built-in EQTypes that can be used to customize your UI. These EQTypes function the same as those in EQ, however allow you to display information in your UI that you normally would not be able to see. Alternatively, if there is no built-in EQType, you can use Tooltips to display custom MQ2 information (including data/variables from plugins).</p> <p>See the MQ2Labels page for the EQType definitions and examples.</p>"},{"location":"main/features/custom-uis/#list-of-custom-uis","title":"List of Custom UIs","text":"<p>This is a list of the most popular Custom UIs:</p> <ul> <li>krust UI</li> <li>AYA Strike</li> <li>Quartz UI</li> <li>Frequency UI</li> </ul>"},{"location":"main/features/framelimiter/","title":"Frame Limiter","text":"<p>Frame limiter is a built-in feature of MacroQuest that helps control the resource usage of EverQuest by limiting how often the game renders frames.</p>"},{"location":"main/features/framelimiter/#configuration","title":"Configuration","text":"<p>Frame lmiter settings can be modified in the MacroQuest Settings window.</p> <p></p>"},{"location":"main/features/framelimiter/#commands","title":"Commands","text":"<p><code>/framelimiter [COMMAND] {OPTIONS}</code></p> <p>Frame limiter tool: allows adjusting internal frame limiter settings.</p> <pre><code>enable -- turn the framelimiter on (background)\non -- turn the framelimiter on (background)\ndisable -- turn the rendering client off\noff -- turn the rendering client off\ntoggle -- set/toggle the framelimiter functionality\nenablefg -- turn the framelimiter on (foreground)\nonfg -- turn the framelimiter on (foreground)\ndisablefg -- turn the framelimiter off (foreground)\nofffg -- turn the framelimiter off (foreground)\ntogglefg -- set/toggle the framelimiter (foreground)\nsavebychar -- set/toggle saving settings by character\nbgrender -- set/toggle rendering when client is in background\nimguirender -- set/toggle rendering ImGui when rendering is otherwise disabled\nuirender -- set/toggle rendering the UI when rendering is otherwise disabled\nclearscreen -- set/toggle clearing (blanking) the screen when rendering is disabled\nbgfps -- set the FPS rate for the background process\nfgfps -- set the FPS rate for the foreground process\nsimfps -- sets the minimum FPS the simulation will run\nreloadsettings -- reload settings from ini\n-h, -?, help -- displays this help text\n</code></pre>"},{"location":"main/features/framelimiter/#top-level-objects","title":"Top-Level Objects","text":""},{"location":"main/features/framelimiter/#framelimiter","title":"FrameLimiter","text":""},{"location":"main/features/framelimiter/#members","title":"Members","text":""},{"location":"main/features/framelimiter/#BackgroundFPS","title":"float <code>BackgroundFPS</code>","text":"Value of the target background fps setting."},{"location":"main/features/framelimiter/#ClearScreen","title":"bool <code>ClearScreen</code>","text":"Value of the clear screen when not rendering setting."},{"location":"main/features/framelimiter/#CPU","title":"float <code>CPU</code>","text":"Current CPU usage as %"},{"location":"main/features/framelimiter/#Enabled","title":"bool <code>Enabled</code>","text":"TRUE if the frame limiter feature is currently active."},{"location":"main/features/framelimiter/#ForegroundFPS","title":"float <code>ForegroundFPS</code>","text":"Value of the target foreground fps setting."},{"location":"main/features/framelimiter/#MinSimulationFPS","title":"float <code>MinSimulationFPS</code>","text":"Value of the minimum simualtion rate setting."},{"location":"main/features/framelimiter/#RenderFPS","title":"float <code>RenderFPS</code>","text":"Current graphics scene frame rate (visible fps)."},{"location":"main/features/framelimiter/#SaveByChar","title":"bool <code>SaveByChar</code>","text":"TRUE if settings for the frame limiter are being saved by character."},{"location":"main/features/framelimiter/#SimulationFPS","title":"float <code>SimulationFPS</code>","text":"Current simulation frame rate (game updates per second)."},{"location":"main/features/framelimiter/#Status","title":"string <code>Status</code>","text":"Either \"Foreground\" or \"Background\"."},{"location":"main/features/namingspawn/","title":"NamingSpawn","text":"<p>So this topic doesn't have it's own Forum catagory that I saw. So I'm creating a thread in Macro Mania because it's to do with coding logic that follows along the same guidelines as the MQ2HUD.ini in a way.</p> <p>I'm talking about the [Captions] section of Macroquest.ini that most people don't even know exists. The [Captions] section uses a little known TLO that's not echoable in MQ2 that inherits the \"Spawn\" datatype to display information on NPC's and players. It's the code that shows you the details of player/NPC/pet spawns in MQ2.</p> <p>Why do you care? Well recently I created a HUD that got a lot of positive attention. the logic used to create the HUD is a lot like the logic that will be used to explain the captions section of Macroquest.ini</p> <p>What can you do with [Captions] section of the Macroquest2.ini, well. See for yourself what I've done in a few minutes of coding using the ${NamingSpawn} TLO.</p> <p>This is an altered form of the [Captions] section of the macroquest.ini</p> <p>I've changed NPC= section to display the information I want to see.</p> <p>The ${NamingSpawn} inherits the spawn data type. https://macroquest.org/wiki/index.php/DataType:spawn</p> <p>While the wiki is certainly dated, just with that link alone you can find a lot of information. Basically anything you see in that list should be allowed to attach to the end of ${NamingSpawn}. You can test them with ${Target.datamember} IE: ${NamingSpawn.Body} will display \"Humaniod\", \"Animal\", \"Plant\", \"Undead\", etc so you can just look at the targets name and see if you can use your body specific spells/banestrike. I've added distance using ${NamingSpawn.Distance} and there is a lot more that you can add that I just haven't done yet.</p> <p>Limitations - You're only allowed two lines. So while you can \\n to go to a next line, you can only do this once as two lines is the maximum.</p> <p>Player1, Player2, Player3, etc......what does it mean? The players are directly attached to /shownames 1, 2, 3, 4 etc in game. This only applies to player information.</p> <p>So if you want /shownames 1 to not show anything at all, you can do something like. Player1=\\({If[\\)},,]</p> <p>Someone recently mentioned mobs Feigning Death in EQ. Well perhaps you want to add ${NamingSpawn.Feigning} to the display of NPC's? \\({If[\\) will display FD if the NPC is FD.},FD,]</p> <p>Want to know what spell a player is casting? Add \\({If[\\) to the Player# you want to show that information. Great for PVP when you want to stop a player from casting a heal by stunning them but don't want to waste your bash/stun on a trivial spell that won't save their life. /evil grin.}, Casting: ${NamingSpawn.Casting},]</p> <p>So as you can see this is a very powerful feature that most players either don't know exists or don't know how to edit.</p> <p>Got your captions setup already? type /captions anon on, then take a screenshot and post it along with the associated code!</p> <p>~Chatwiththisname</p> <p>--Update-- [QUOTE=KingArthur;348346] And is there anyway to reload the settings other than a totally relog?? is there any slash command like /reload or something? Ty'''</p> <p>I completely overlooked this question. The answer is YES~!</p> <p>So if you make changes and want to test them you have to type</p> <pre><code>/unload\n</code></pre> <p>Then right click on the tray icon for MQ2 and hit \"Refresh injections\"</p> <p>That will effectively reload the MacroQuest.ini and update your [Captions]</p> <p>I don't know of any other way other than this.</p> <p>How does an ${If[,,,]} statement work?</p> <p>The following is how an ${If[,,,]} statement works.</p> <pre><code>${If[ThisIsTrue,DoThis,ElseDoThis]}\n</code></pre> <p>How does a ${Select[,]} statement work?</p> <p>The following is how a ${Select[,]} statement works.</p> <pre><code>${Select[CompareThis,toThis,andThis,andThis]}\n</code></pre> <p>if CompareThis is equal toThis, OR andThis, OR andThis then it evaluates TRUE.</p> <p>Example of a Select statement.</p> <pre><code>${Select[${NamingSpawn.ID},${Group.Member[1].ID},${Group.Member[2].ID},${Group.Member[3].ID}]}\n</code></pre> <p>The above code evaluates true if the Spawn's ID is the first, second, or third group member in your group window.</p> <p>How do I nest an ${Select[,]} inside an ${If[,,,]}</p> <p>You would do</p> <pre><code>${If[${Select[CompareThis,toThis,andThis,andThis]},IfTrueDoThis,IfFalseDoThis]}\n</code></pre> <p>What if I don't want it to do anything if it's false?</p> <p>You leave the Else portion blank.</p> <pre><code>${If[ThisIsTrue,DoThis,]}\n</code></pre> <p>What can I do with ${NamingSpawn}</p> <p>NamingSpawn appears to inherit all members of ${Spawn[]} TLO. Therefore the following list should be available to ${NamingSpawn}. Some things may only apply to the current character you are playing.</p> <pre><code>[spawn]\nMember1=ID\nMember2=Name\nMember3=Level\nMember4=X\nMember5=Y\nMember6=Z\nMember7=DistanceX\nMember8=DistanceY\nMember9=DistanceZ\nMember10=Distance\nMember11=Distance3D\nMember12=DistancePredict\nMember13=Next\nMember14=Prev\nMember15=Heading\nMember16=Speed\nMember17=Levitating\nMember18=Sneaking\nMember19=HeadingTo\nMember20=Light\nMember21=Body\nMember22=State\nMember23=CurrentHPs\nMember24=MaxHPs\nMember25=PctHPs\nMember26=Deity\nMember28=Type\nMember29=CleanName\nMember30=Surname\nMember31=Guild\nMember32=GuildStatus\nMember33=Master\nMember34=Pet\nMember35=Race\nMember36=Class\nMember38=Gender\nMember39=GM\nMember40=Height\nMember41=MaxRange\nMember42=AARank\nMember43=Casting\nMember44=Mount\nMember45=FeetWet\nMember46=Underwater\nMember48=Animation\nMember49=Holding\nMember50=Look\nMember51=N\nMember52=W\nMember53=U\nMember54=S\nMember55=E\nMember56=D\nMember57=DistanceN\nMember58=DistanceW\nMember59=DistanceU\nMember60=Invis\nMember61=Linkdead\nMember62=LFG\nMember63=Trader\nMember64=AFK\nMember65=ConColor\nMember67=Standing\nMember68=Sitting\nMember69=Ducking\nMember70=Feigning\nMember71=Binding\nMember72=Invited\nMember73=NearestSpawn\nMember74=MaxRangeTo\nMember75=DisplayName\nMember76=AATitle\nMember77=GroupLeader\nMember78=Mark\nMember79=Assist\nMember80=Anonymous\nMember81=Roleplaying\nMember82=LineOfSight\nMember83=HeadingToLoc\nMember84=Title\nMember85=Suffix\nMember86=Fleeing\nMember87=Named\nMember88=Buyer\nMember89=Moving\nMember90=StandState\nMember91=Dead\nMember92=Stunned\nMember93=Hovering\nMember94=CurrentMana\nMember95=MaxMana\nMember96=CurrentEndurance\nMember97=PctEndurance\nMember98=MaxEndurance\nMember99=Loc\nMember100=LocYX\nMember101=LocYXZ\nMember102=Owner\nMember103=Following\nMember104=Address\nMember105=Inviter\nMember106=MercID\nMember107=ContractorID\nMember108=PctMana\nMember109=Primary\nMember110=Secondary\nMember111=Equipment\nMember112=Targetable\nMember113=PlayerState\nMember114=Stuck\nMember115=Aggressive\nMember116=CanSplashLand\nMember117=IsBerserk\nMember118=pTouchingSwitch\nMember119=bShowHelm\nMember120=CorpseDragCount\nMember121=bBetaBuffed\nMember122=CombatSkillTicks\nMember123=FD\nMember124=InPvPArea\nMember125=bAlwaysShowAura\nMember126=GMRank\nMember127=WarCry\nMember128=IsPassenger\nMember129=LastCastTime\nMember130=DragNames\nMember131=DraggingPlayer\nMember132=bStationary\nMember133=BearingToTarget\nMember134=bTempPet\nMember135=HoldingAnimation\nMember136=Blind\nMember137=LastCastNum\nMember138=CollisionCounter\nMember139=CeilingHeightAtCurrLocation\nMember140=AssistName\nMember141=SeeInvis\nMember142=SpawnStatus\nMember143=bWaitingForPort\nMember144=EQLoc\nMember145=MQLoc\nMember146=TimeBeenDead\nMember147=FloorZ\nMember148=IsSummoned\nMember149=TargetOfTarget\n</code></pre> <p>Mez Detection for NPC's.</p> <pre><code>${If[${Select[${NamingSpawn.Animation},110,26,32,71,72,111]} &amp;&amp; ${Select[${NamingSpawn.ID},${Me.XTarget[1].ID},${Me.XTarget[2].ID},${Me.XTarget[3].ID},${Me.XTarget[4].ID},${Me.XTarget[5].ID},${Me.XTarget[5].ID},${Me.XTarget[6].ID},${Me.XTarget[7].ID},${Me.XTarget[8].ID},${Me.XTarget[9].ID},${Me.XTarget[10].ID},${Me.XTarget[11].ID},${Me.XTarget[12].ID},${Me.XTarget[13].ID},${Me.XTarget[14].ID},${Me.XTarget[15].ID}]},&gt;&gt;&gt;Mezzed&lt;&lt;&lt;,]}\n</code></pre> <p>Group Role Detection for Main Tank, Main Assist, and Puller to go on Player#</p> <pre><code>${If[${NamingSpawn.ID}==${Group.MainAssist.ID}, MA,]}\n${If[${NamingSpawn.ID}==${Group.MainTank.ID}, MT,]}\n${If[${NamingSpawn.ID}==${Group.Puller.ID}, Puller,]}\n</code></pre>"},{"location":"main/features/parser/","title":"Macro Parser Explained","text":""},{"location":"main/features/parser/#explanation-without-colors","title":"Explanation without Colors","text":"<p>For this explanation, <code>${Me.Name}</code> will return \"Knightly\" and <code>${Me.Class}</code> will return \"Programancer.\"  I'm also going to reference the Spawn ID of Knightly with <code>${Spawn[=Knightly].ID}</code> returning \"007\" even though this is meaningless outside of the context of this explanation.</p> <p>The MacroQuest parser first parses from left to right to tokenize the variables that need to be parsed.  That means in the command:</p> <pre><code>/echo My name is ${Me.Name} and my class is ${Me.Class}.\n</code></pre> <p>MacroQuest first parses <code>${Me.Name}</code> so that the above becomes:</p> <pre><code>My name is Knightly and my class is ${Me.Class}.\n</code></pre> <p>And then parses <code>${Me.Class}</code> so that the above returns:</p> <pre><code>[MQ2] My name is Knightly and my class is Programancer.\n</code></pre> <p>Nested queries are processed from right to left AFTER it has been tokenized.  What this means is that in:</p> <pre><code>/echo My ID is ${Spawn[=${Me.Name}].ID} and my class is ${Me.Class}.\n</code></pre> <p>MacroQuest first tokenizes to get <code>${Spawn[=${Me.Name}].ID}</code> and then parses <code>${Me.Name}</code> becoming:</p> <pre><code>My ID is ${Spawn[=Knightly].ID} and my class is ${Me.Class}.\n</code></pre> <p>Since there are still items to parse it continues to the left to get:</p> <pre><code>My ID is 007 and my class is ${Me.Class}.\n</code></pre> <p>And finally returns:</p> <pre><code>[MQ2] My ID is 007 and my class is Programancer\n</code></pre> <p>The exception to this is when you override the parser with the <code>${Parse[]}</code> functionality.  This tells the parser to \"START HERE\" on any tokenized string.  The outermost Parse function always wins.  The number after the brace tells the Parse override how many times to iterate.  This means in the command:</p> <pre><code>/echo My ID is ${Parse[0,${Spawn[=${Me.Name}].ID}]} and my class is ${Me.Class}.\n</code></pre> <p>MacroQuest first tokenizes to get <code>${Parse[0,${Spawn[=${Me.Name}].ID}]}</code> and, because there is a  <code>${Parse[]}</code> that gets evaluated first.  In this case, the parse is 0 which means \"do not parse\" so this becomes:</p> <pre><code>My ID is ${Spawn[=${Me.Name}].ID} and my class is ${Me.Class}.\n</code></pre> <p>And MacroQuest moves on to evaluating the <code>${Me.Class}</code> token to output:</p> <pre><code>[MQ2] My ID is ${Spawn[=${Me.Name}].ID} and my class is Programancer.\n</code></pre> <p>You can use this to stop the parsing after one iteration:</p> <pre><code>/echo My ID is ${Parse[1,${Spawn[=${Me.Name}].ID}]} and my class is ${Me.Class}.\n</code></pre> <p>MacroQuest first tokenizes to get <code>${Parse[1,${Spawn[=${Me.Name}].ID}]}</code> and because there is a <code>${Parse[]}</code> that gets evaluated first.  In this case, the parse is 1 which means \"parse one time\" so this becomes:</p> <pre><code>My ID is ${Parse[0,${Spawn[=Knightly].ID}]} and my class is ${Me.Class}.\n</code></pre> <p>Which then becomes:</p> <pre><code>My ID is ${Spawn[=Knightly].ID} and my class is ${Me.Class}.\n</code></pre> <p>And MacroQuest moves on to evaluating the <code>${Me.Class}</code> token to output:</p> <pre><code>[MQ2] My ID is ${Spawn[=Knightly].ID} and my class is Programancer.\n</code></pre> <p>Setting this to higher numbers allows you to iterate as many times as necessary, but each iteration only parses the innermost variable.  That means, too many iterations will end up as if you hadn't used <code>${Parse[]}</code> at all.  In this same scenario consider if we used 2 iterations:</p> <pre><code>/echo My ID is ${Parse[2,${Spawn[=${Me.Name}].ID}]} and my class is ${Me.Class}.\n</code></pre> <p>Again, starting with the first token <code>${Parse[2,${Spawn[=${Me.Name}].ID}]}</code> the line becomes:</p> <pre><code>My ID is ${Parse[1,${Spawn[=Knightly].ID}]} and my class is ${Me.Class}.\n</code></pre> <p>And then the next iteration it becomes:</p> <pre><code>My ID is ${Parse[0,007]} and my class is ${Me.Class}.\n</code></pre> <p>And then:</p> <pre><code>My ID is 007 and my class is ${Me.Class}.\n</code></pre> <p>Until, finally, the Parse section is done and the parser moves on to <code>${Me.Class}</code> and outputs:</p> <pre><code>[MQ2] My ID is 007 and my class is Programancer.\n</code></pre> <p>So you can see that in this case <code>${Parse[2,${Spawn[=${Me.Name}].ID}]}</code> and <code>${Spawn[=${Me.Name}].ID}</code> are functionally equivalent.</p> <p>Parse priority is also true for NESTED parses, so the outermost parse gets evaluated first and the action on that determines how the inner parses will get handled.  Consider for example:</p> <pre><code>/echo This test is ${Parse[0,${Parse[1,${Me.Name}]}]}.\n</code></pre> <p>Which will return:</p> <pre><code>[MQ2] This test is ${Parse[1,${Me.Name}]}.\n</code></pre> <p>Changing the first 0 to a 1 to make the command:</p> <pre><code>/echo This test is ${Parse[1,${Parse[1,${Me.Name}]}]}.\n</code></pre> <p>Will become:</p> <pre><code>This test is ${Parse[0,${Parse[0,Knightly]}]}.\n</code></pre> <p>Which will return:</p> <pre><code>[MQ2] This test is ${Parse[0,Knightly]}\n</code></pre> <p>Finally, swapping the 0 and 1 from the first command will make the command:</p> <pre><code>/echo This test is ${Parse[1,${Parse[0,${Me.Name}]}]}.\n</code></pre> <p>Which will become:</p> <pre><code>This test is ${Parse[0,${Me.Name}]}.\n</code></pre> <p>And then output:</p> <pre><code>[MQ2] This test is ${Me.Name}\n</code></pre>"},{"location":"main/features/parser/#explanation-colorized-requires-latex-viewer","title":"Explanation Colorized (requires LaTeX viewer)","text":"<p>For this explanation, \\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\) will return \"\\(<code>\\textcolor{teal}{\\text{Knightly}}</code>\\)\" and \\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\) will return \"\\(<code>\\textcolor{green}{\\text{Programancer}}</code>\\).\"  I'm also going to reference the Spawn ID of Knightly with \\(<code>\\textcolor{purple}{\\text{\\$\\{Spawn[=Knightly].ID\\}}}</code>\\) returning \"\\(<code>\\textcolor{purple}{\\text{007}}</code>\\)\" even though this is meaningless outside of the context of this explanation.</p> <p>The MacroQuest parser first parses from left to right to tokenize the variables that need to be parsed.  That means in the command:</p> <p><code>/echo My name is</code>\\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\)<code>and my class is</code>\\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\)<code>.</code></p> <p>MacroQuest first parses \\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\) so that the above becomes:</p> <p><code>My name is</code>\\(<code>\\textcolor{teal}{\\text{Knightly}}</code>\\)<code>and my class is</code>\\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\)<code>.</code></p> <p>And then parses \\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\) so that the above returns:</p> <pre><code>[MQ2] My name is Knightly and my class is Programancer.\n</code></pre> <p>Nested queries are processed from right to left AFTER it has been tokenized.  What this means is that in:</p> <p><code>/echo My ID is</code>\\(<code>\\textcolor{purple}{\\text{\\$\\{Spawn[=}}</code>\\)\\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\)\\(<code>\\textcolor{purple}{\\text{].ID\\}}}</code>\\)<code>and my class is</code>\\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\)<code>.</code></p> <p>MacroQuest first tokenizes to get \\(<code>\\textcolor{purple}{\\text{\\$\\{Spawn[=}}</code>\\)\\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\)\\(<code>\\textcolor{purple}{\\text{].ID\\}}}</code>\\) and then parses \\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\) becoming:</p> <p><code>My ID is</code>\\(<code>\\textcolor{purple}{\\text{\\$\\{Spawn[=}}</code>\\)\\(<code>\\textcolor{teal}{\\text{Knightly}}</code>\\)\\(<code>\\textcolor{purple}{\\text{].ID\\}}}</code>\\)<code>and my class is</code>\\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\)<code>.</code></p> <p>Since there are still items to parse it continues to the left to get:</p> <p><code>My ID is</code>\\(<code>\\textcolor{purple}{\\text{007}}</code>\\)<code>and my class is</code>\\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\)<code>.</code></p> <p>And finally returns:</p> <pre><code>[MQ2] My ID is 007 and my class is Programancer\n</code></pre> <p>The exception to this is when you override the parser with the (<code>\\textcolor{red}{\\text{\\$\\{Parse[]\\}}}</code>\\) functionality.  This tells the parser to \"START HERE\" on any tokenized string.  The outermost Parse function always wins.  The number after the brace tells the Parse override how many times to iterate.  This means in the command:</p> <p><code>/echo My ID is</code>\\(<code>\\textcolor{red}{\\text{\\$\\{Parse[0,}}</code>\\)\\(<code>\\textcolor{purple}{\\text{\\$\\{Spawn[=}}</code>\\)\\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\)\\(<code>\\textcolor{purple}{\\text{].ID\\}}}</code>\\)\\(<code>\\textcolor{red}{\\text{]\\}}}</code>\\)<code>and my class is</code>\\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\)<code>.</code></p> <p>MacroQuest first tokenizes to get \\(<code>\\textcolor{red}{\\text{\\$\\{Parse[0,}}</code>\\)\\(<code>\\textcolor{purple}{\\text{\\$\\{Spawn[=}}</code>\\)\\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\)\\(<code>\\textcolor{purple}{\\text{].ID\\}}}</code>\\)\\(<code>\\textcolor{red}{\\text{]\\}}}</code>\\) and, because there is a \\(<code>\\textcolor{red}{\\text{\\$\\{Parse[]\\}}}</code>\\) that gets evaluated first.  In this case, the parse is 0 which means \"do not parse\" so this becomes:</p> <p><code>My ID is</code>\\(<code>\\textcolor{red}{\\text{\\$\\{Spawn[=\\$\\{Me.Name\\}].ID\\}}}</code>\\)<code>and my class is</code>\\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\)<code>.</code></p> <p>And MacroQuest moves on to evaluating the \\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\) token to output:</p> <pre><code>[MQ2] My ID is ${Spawn[=${Me.Name}].ID} and my class is Programancer.\n</code></pre> <p>You can use this to stop the parsing after one iteration:</p> <p><code>/echo My ID is</code>\\(<code>\\textcolor{red}{\\text{\\$\\{Parse[1,}}</code>\\)\\(<code>\\textcolor{purple}{\\text{\\$\\{Spawn[=}}</code>\\)\\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\)\\(<code>\\textcolor{purple}{\\text{].ID\\}}}</code>\\)\\(<code>\\textcolor{red}{\\text{]\\}}}</code>\\)<code>and my class is</code>\\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\)<code>.</code></p> <p>MacroQuest first tokenizes to get \\(<code>\\textcolor{red}{\\text{\\$\\{Parse[1,}}</code>\\)\\(<code>\\textcolor{purple}{\\text{\\$\\{Spawn[=}}</code>\\)\\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\)\\(<code>\\textcolor{purple}{\\text{].ID\\}}}</code>\\)\\(<code>\\textcolor{red}{\\text{]\\}}}</code>\\) and because there is a \\(<code>\\textcolor{red}{\\text{\\$\\{Parse[]\\}}}</code>\\) that gets evaluated first.  In this case, the parse is 1 which means \"parse one time\" so this becomes:</p> <p><code>My ID is</code>\\(<code>\\textcolor{red}{\\text{\\$\\{Parse[1,}}</code>\\)\\(<code>\\textcolor{purple}{\\text{\\$\\{Spawn[=}}</code>\\)\\(<code>\\textcolor{teal}{\\text{Knightly}}</code>\\)\\(<code>\\textcolor{purple}{\\text{].ID\\}}}</code>\\)\\(<code>\\textcolor{red}{\\text{]\\}}}</code>\\)<code>and my class is</code>\\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\)<code>.</code></p> <p>Which then becomes:</p> <p>My ID is \\(<code>\\textcolor{red}{\\text{\\$\\{Spawn[=Knightly].ID\\}\\}}}</code>\\)<code>and my class is</code>\\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\)<code>.</code></p> <p>And MacroQuest moves on to evaluating the \\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\) token to output:</p> <pre><code>[MQ2] My ID is ${Spawn[=Knightly].ID} and my class is Programancer.\n</code></pre> <p>Setting this to higher numbers allows you to iterate as many times as necessary, but each iteration only parses the innermost variable.  That means, too many iterations will end up as if you hadn't used (<code>\\textcolor{red}{\\text{\\$\\{Parse[]\\}}}</code>\\) at all.  In this same scenario consider if we used 2 iterations:</p> <p><code>/echo My ID is</code>\\(<code>\\textcolor{red}{\\text{\\$\\{Parse[2,}}</code>\\)\\(<code>\\textcolor{purple}{\\text{\\$\\{Spawn[=}}</code>\\)\\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\)\\(<code>\\textcolor{purple}{\\text{].ID\\}}}</code>\\)\\(<code>\\textcolor{red}{\\text{]\\}}}</code>\\)<code>and my class is</code>\\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\)<code>.</code></p> <p>Again, starting with the first token \\(<code>\\textcolor{red}{\\text{\\$\\{Parse[2,}}</code>\\)\\(<code>\\textcolor{purple}{\\text{\\$\\{Spawn[=}}</code>\\)\\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\)\\(<code>\\textcolor{purple}{\\text{].ID\\}}}</code>\\)\\(<code>\\textcolor{red}{\\text{]\\}}}</code>\\) the line becomes:</p> <p><code>My ID is</code>\\(<code>\\textcolor{red}{\\text{\\$\\{Parse[1,}}</code>\\)\\(<code>\\textcolor{purple}{\\text{\\$\\{Spawn[=}}</code>\\)\\(<code>\\textcolor{teal}{\\text{Knightly}}</code>\\)\\(<code>\\textcolor{purple}{\\text{].ID\\}}}</code>\\)\\(<code>\\textcolor{red}{\\text{]\\}}}</code>\\)<code>and my class is</code>\\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\)<code>.</code></p> <p>And then the next iteration it becomes:</p> <p><code>My ID is</code>\\(<code>\\textcolor{red}{\\text{\\$\\{Parse[0,}}</code>\\)\\(<code>\\textcolor{purple}{\\text{007}}</code>\\)\\(<code>\\textcolor{red}{\\text{]\\}}}</code>\\)<code>and my class is</code>\\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\)<code>.</code></p> <p>And then:</p> <p><code>My ID is</code>\\(<code>\\textcolor{purple}{\\text{007}}</code>\\)<code>and my class is</code>\\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\)<code>.</code></p> <p>Until, finally, the Parse section is done and the parser moves on to \\(<code>\\textcolor{green}{\\text{\\$\\{Me.Class\\}}}</code>\\) and outputs:</p> <pre><code>[MQ2] My ID is 007 and my class is Programancer.\n</code></pre> <p>So you can see that in this case \\(<code>\\textcolor{red}{\\text{\\$\\{Parse[2,}}</code>\\)\\(<code>\\textcolor{purple}{\\text{\\$\\{Spawn[=}}</code>\\)\\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\)\\(<code>\\textcolor{purple}{\\text{].ID\\}}}</code>\\)\\(<code>\\textcolor{red}{\\text{]\\}}}</code>\\) and \\(<code>\\textcolor{purple}{\\text{\\$\\{Spawn[=}}</code>\\)\\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\)\\(<code>\\textcolor{purple}{\\text{].ID\\}}}</code>\\) are functionally equivalent.</p> <p>Parse priority is also true for NESTED parses, so the outermost parse gets evaluated first and the action on that determines how the inner parses will get handled.  Consider for example:</p> <p><code>/echo This test is</code>\\(<code>\\textcolor{orange}{\\text{\\$\\{Parse[0,}}</code>\\)\\(<code>\\textcolor{red}{\\text{\\$\\{Parse[1,}}</code>\\)\\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\)\\(<code>\\textcolor{red}{\\text{]\\}}}</code>\\)\\(<code>\\textcolor{orange}{\\text{]\\}}}</code>\\)<code>.</code></p> <p>Which will return:</p> <pre><code>[MQ2] This test is ${Parse[1,${Me.Name}]}.\n</code></pre> <p>Changing the first 0 to a 1 to make the command:</p> <p><code>/echo This test is</code>\\(<code>\\textcolor{orange}{\\text{\\$\\{Parse[1,}}</code>\\)\\(<code>\\textcolor{red}{\\text{\\$\\{Parse[1,}}</code>\\)\\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\)\\(<code>\\textcolor{red}{\\text{]\\}}}</code>\\)\\(<code>\\textcolor{orange}{\\text{]\\}}}</code>\\)<code>.</code></p> <p>Will become:</p> <p><code>This test is</code>\\(<code>\\textcolor{orange}{\\text{\\$\\{Parse[0,}}</code>\\)\\(<code>\\textcolor{red}{\\text{\\$\\{Parse[0,}}</code>\\)\\(<code>\\textcolor{teal}{\\text{Knightly}}</code>\\)\\(<code>\\textcolor{red}{\\text{]\\}}}</code>\\)\\(<code>\\textcolor{orange}{\\text{]\\}}}</code>\\)<code>.</code></p> <p>Which will return:</p> <pre><code>[MQ2] This test is ${Parse[0,Knightly]}\n</code></pre> <p>Finally, swapping the 0 and 1 from the first command will make the command:</p> <p><code>/echo This test is</code>\\(<code>\\textcolor{orange}{\\text{\\$\\{Parse[1,}}</code>\\)\\(<code>\\textcolor{red}{\\text{\\$\\{Parse[0,}}</code>\\)\\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\)\\(<code>\\textcolor{red}{\\text{]\\}}}</code>\\)\\(<code>\\textcolor{orange}{\\text{]\\}}}</code>\\)<code>.</code></p> <p>Which will become:</p> <p><code>This test is</code>\\(<code>\\textcolor{red}{\\text{\\$\\{Parse[0,}}</code>\\)\\(<code>\\textcolor{teal}{\\text{\\$\\{Me.Name\\}}}</code>\\)\\(<code>\\textcolor{red}{\\text{]\\}}}</code>\\)<code>.</code></p> <p>And then output:</p> <pre><code>[MQ2] This test is ${Me.Name}\n</code></pre>"},{"location":"main/other-applications/eqemu/","title":"EQEmu","text":""},{"location":"main/other-applications/eqemu/#general","title":"General","text":"<p>EQEmu (or EQEmulator) is a free (under GNU GPL) open source EverQuest server emulator. Using EQEmu you can create and run your own EverQuest server, or play on servers other people have created. Some servers play exactly like EQLive, while others have custom content such as zones, NPCs, equipment, allowing players to do what they want, or giving them access to GM commands.</p>"},{"location":"main/other-applications/eqemu/#use-with-mq","title":"Use with MQ","text":"<p>Currently, MQ is supported on some emulated servers.</p>"},{"location":"main/other-applications/eqemu/#external-links","title":"External links","text":"<ul> <li>EQEmulator.net</li> <li>MQEmulator.net</li> <li>ProjectEQ Fork</li> <li>Project 1999</li> </ul>"},{"location":"main/other-applications/text-editors/","title":"Text Editors","text":""},{"location":"main/other-applications/text-editors/#visual-studio-code","title":"Visual Studio Code","text":"<p>Visual Studio Code (Download) VSCode Syntax Extension</p>"},{"location":"main/other-applications/text-editors/#crimson-editor","title":"Crimson Editor","text":"<p>Crimson Editor (Download) Crimson Editor Syntax</p>"},{"location":"main/other-applications/text-editors/#notepad","title":"Notepad++","text":"<p>Notepad++ (Download) Notepad++ Syntax File</p>"},{"location":"main/other-applications/text-editors/#textpad","title":"TextPad","text":"<p>TextPad (Download) Textpad Syntax</p>"},{"location":"main/other-applications/text-editors/#ultraedit","title":"UltraEdit","text":"<p>UltraEdit (Download) UltraEdit Syntax File</p>"},{"location":"main/other-applications/text-editors/#neovim","title":"NeoVim","text":"<p>NeoVim (Download) NeoVim Syntax File</p>"},{"location":"main/other-applications/text-editors/notepadplusplus-syntax-file/","title":"Notepad++ Syntax File","text":""},{"location":"main/other-applications/text-editors/notepadplusplus-syntax-file/#pre-requesites","title":"Pre-requesites","text":"<ul> <li>Notepad++ version 8.2 or higher notepad-plus.sourceforge.net</li> </ul>"},{"location":"main/other-applications/text-editors/notepadplusplus-syntax-file/#installation","title":"Installation","text":"<p>Current Versions of notepad will allow you to import languages  Open notepad++ and select language-&gt;User Defined language-&gt;Define your language Download the two language files: DarkModeMQLang.xml LightModeMQLang.xml</p> <p>To Select Dark Mode in Notepad++ Select Settings-&gt;Preferences-&gt;Dark Mode and select enable dark mode.</p> <p>I would only install one of the two but you can always remove/change the  Ext. in User Defined Languages to disable them.</p>"},{"location":"main/other-applications/text-editors/nvim-syntax-file/","title":"NeoVim Syntax File","text":""},{"location":"main/other-applications/text-editors/nvim-syntax-file/#pre-requisites","title":"Pre-Requisites","text":"<ul> <li>Neovim</li> <li>A Language Server Protocol (LSP) Extension such as lua-ls.</li> </ul>"},{"location":"main/other-applications/text-editors/nvim-syntax-file/#installation","title":"Installation","text":"<ul> <li>Download the latest syntax files from here.</li> <li>Place the extracted files in a sub-directory of your neovim configuration directory.<ul> <li>e.g. <code>~/.config/nvim/mq-syntax/</code> on Linux or <code>c:\\users\\&lt;user&gt;\\AppData\\Local\\nvim\\mq-syntax</code> on Windows</li> </ul> </li> <li>Modify the configuration of your LSP to load your third party syntax files and enable them.</li> </ul> <pre><code>lua_ls = function()\n    local lspconfig = require(\"lspconfig\")\n    lspconfig.lua_ls.setup({\n        capabilities = capabilities,\n        settings = {\n            Lua = {\n                workspace = {\n                    preloadFileSize = 1000,\n                    checkThirdParty = true,\n                    library = {\n                        \"C:/Users/&lt;user&gt;/AppData/Local/nvim/lua/mq-syntax\",\n                    },\n                },\n\n                runtime = { version = \"Lua 5.2\" },\n                diagnostics = {\n                    globals = {\n                        \"bit\",\n                        \"vim\",\n                        \"it\",\n                        \"describe\",\n                        \"before_each\",\n                        \"after_each\",\n                        \"mq\",\n                        \"Mq\",\n                        \"ImGui\",\n                    },\n                },\n            },\n        },\n    })\nend,\n</code></pre>"},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/","title":"UltraEdit Syntax File","text":""},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/#pre-requesites","title":"Pre-requesites","text":"<ul> <li>Windows 98, Windows Me, Windows 2000, Windows XP</li> <li>Ultraedit 11.10 or higher from www.ultraedit.com</li> </ul>"},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/#installing-the-highlighting-syntax-definition","title":"Installing the Highlighting Syntax Definition","text":"<ol> <li>Open your WORDFILE.TXT file. It is installed in the same directory as UltraEdit, usually C:\\Program</li> </ol> <p>Files\\UltraEdit\\Wordfile.txt.</p> <ol> <li>Copy/paste the section below into the bottom of the file.</li> <li>Look for the next available section number to use. Section headings begin with /LXX\"Language\"</li> </ol> <p>where XX is a number from 1 to 20.</p> <ol> <li>Change the section number of the code below to the next available number and it's ready to use!</li> </ol>"},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/#install-highlighting-syntax-for-ultraedit-v15","title":"Install Highlighting Syntax for UltraEdit v15+","text":"<ol> <li>Simply copy/paste the section below into a NEW .uew file in the %appdata%\\IDMComp\\UltraEdit\\wordfiles directory.</li> <li>Open UltraEdit (or close/reopen, new definitions are not available until UE is restarted.)</li> </ol> <p>Select: View &gt; View as (Highlighting File Type) &gt; [whatever you named the file as from step 1 above.]</p>"},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/#highlighting-syntax-definition","title":"Highlighting Syntax Definition","text":"<pre><code>/L12\"MacroQuest2\" Line Comment Preceding Chars = [~*)|] Line Comment Num = 2|  Block Comment On = |* Block Comment Off = *| Escape Char = \\ String Chars = \" File Extensions = MAC INC\n/Delimiters = .~ !@%^&amp;*()+=|\\[]{}:;\"&lt;&gt;,    ?\n/Function String = \"%Sub[ ^t*]+^([a-zA-Z_0-9]+^)\" \n/Indent Strings = \"/for\" \"} else {\" \"{\"\n/Unindent Strings = \"/next\" \"} else /\" \"} else {\" \"}\"\n/Open Brace Strings =\"{\" \"(\" \"[\"\n/Close Brace Strings =\"}\" \")\" \"]\"\n/Ignore Strings SOL = \"|*\" \"*|\" \n/Open Fold Strings = \"sub\"\n/Close Fold Strings = \"/return\" \n/C1\"Macroquest2 Commands\"\n// /aa /alert /alias /altkey\n// /banklist /beep /bind\n// /call /caption /captioncolor /cast /charinfo /cleanup /clearerrors /click /combine /ctrlkey /custombind\n// /defaulthud /delay /destroy /docommand /doors /doortarget /dosocial /drop /dumpbinds /declare /deletevar /doevents\n// /echo /endmacro\n// /face /filter /for\n// /goto\n// /help /hud /highlight\n// /identify /ini /itemnotify /items /itemtarget /if\n// /keepkeys /keypress\n// /loadcfg /loadspells /location /loginname /look /listmacros /loadhud\n// /memspell /mouseto /mqfont /mqlog /mqpause /multiline /macro /mapclick /mapfilter /maphide /mapnames /mapshow\n// /nomodkey /noparse /notify /next\n// /plugin /popup\n// /ranged /return\n// /sellitem /setautorun /shiftkey /skills /spew /squelch /substitute /seterror\n// /target /timed\n// /unload /updateitems\n// /varset /varcalc /vardata\n// /where /who /whofilter /whotarget /windows /windowstate\n// /stick /circle /moveto\nbool\narray\ndownto \nelse\nglobal \nint\nlocal\nmain \nnext\nouter \nstring\nto timer   \n/C2\"EQ Commands\"\n// /anon /a /afk /assist /attack /auction /autojoin /autosplit\n// /book /bug /b\n// /camp /cast /channel /chatfontsize /consent /corpse\n// /decline /disband /dismount /doability /duel /d /dynamiclights\n// /em /exit\n// /facepick /fastdrop /feedback /filter /follow /friend\n// /gems /gsay /g /guild /guildsay /guildinvite /guildremove /guilddelete /guildstatus /guildleader /guildwar /guildpeace /guildmotd\n// /help /hidecorpses /ignore /inspect /invite /invwinlabels\n// /language /lfg /log /location /loc /loot /lootnodrop\n// /mcicontrol /me /mousespeed /msg\n// /note\n// /ooc\n// /pet /petition /played\n// /quit\n// /random /reply /report /resetwindows /reverb /reversesound /roleplay\n// /serverfilter /shout /shownames /showspelleffects /sit /split /stopsong /surname\n// /targetgroupbuff /tell /time /trackfilter /trackplayers /tracksort\n// /usercolor\n// /vrdelay\n// /who /whotarget /wincolor /yell\n/C3\"EQ Emotes\"\n// /agree /amaze /apologize /applaud\n// /bite /bleed /blink /blush /boggle /bonk /bored /bow /brb /burp /bye\n// /cackle /calm /cheer /clap /comfort /congratulate /cough /cringe /cry /curious\n// /dance /drool /duck\n// /eye\n// /fidget /flex\n// /gasp /giggle /glare /grin /groan /grovel\n// /happy /hungry\n// /introduce\n// /jk\n// /kneel\n// /lost\n// /massage /moan /mourn\n// /nod /nudge\n// /panic /pat /peer /plead /point /ponder /purr /puzzle\n// /raise /ready /roar /rofl\n// /salute /shiver /shrug /sigh /smack /smirk /snarl /snicker /stare\n// /tap /tease /thank /thirsty\n// /veto\n// /wave /welcome /whine /whistle\n// /yawn\n/C4\"TLOs\"\nAltAbility\nBool\nCorpse Cursor\nDefined\nFindItemBankCount FindItemBank FindItemCount FindItem Float Foreground FPS\nGameTime Ground GroupLeaderName GroupLeader\nHeading HUD\nIf Ini Int InvSlot Irc\nLastSpawn\nMacroQuest Macro MapSpawn Math MaxFPS Merchant Me\nNearestSpawn\nParam0 Param1 Param2 Param3 Param4 Param5 Param6 Param7 Param8 Param9 P0 P1 P2 P3 P4 P5 P6 P7 P8 P9 Plugin\nRaid\nSelect SelectedItem Skill SpawnCount Spawn Spell Switch\nTarget Time Type\nWindow\nZone\n/C5\"Members\"\nA AAExp AAPoints AARank AARankRequired AATitle Abs Ability AbilityReady Accuracy AccuracyBonus Acos AERange AFK AltAbility AltAbilityReady AltAbilityTimer AltTimer AltTimerReady AGI AmIGroupLeader Animation Anonymous Arg Asin Assist Atan AttackBonus AttackSpeed AverageLevel AvoidanceBonus\nB Base Basic Bank bazaaritem BGColor Binding Body Book Buddy Buddies Buff BuildDate BuyPrice\nCalc CanCast CareerFavor Cash CashBank CastOnAnother CastOnYou Casting CastTime Centi CHA Child Channel Charges Children Class CleanName Checked ClericType Clock Combat CombatAbility CombatAbilityReady CombatAbilityTimer CombatEffectsBonus Compare CompareCS ConColor Container Connected Copper CopperBank Cos Cost Count CountBuffs CurrentFavor CurrentHPs CurrentMana CurrentWeight\nD DamageShieldBonus Dar Date Day DayOfWeek Dec Deci DefaultX DefaultY DefaultZ Degrees DegreesCCW Description DEX Diety Dimensions Distance DistanceX DistanceY DistanceZ Distance3D DistancePredict DistanceW DistanceN DistanceU DMGBonus Done DoTShieldBonus DruidType Ducking Duration\nE EffectType Enabled Endurance EnduranceBonus EnduranceRegen Error Exp\nFeedWet Feigning Find FirstChild FizzleTime Float Foreground FreeBuffSlots FreeInventory\nG GameState Gem Gender GM Gold GoldBank Group Gravity GroupAssistTarget Grouped GroupLeader GroupLeaderExp GroupLeaderPoints GroupList GroupMarkNPC GukEarned Guild GuildStatus\nHeading HeadingTo HeadingToLoc Height Hex Highlighted Holding Hour Hours HPBonus HPRegen HPRegenBouns HScrollMax HScrollPos HscrollPct HUD Hunger\nInt INT Inventory Invis Invited Items Item ItemID\nLanguage LargestFreeInventory LastCommand LastTell LastSeen LDoNPoints LDoNTheme Leader Left Length Level Levitating LFG Light LineOfSight LinkDead List LoginName Look Looter Looters LootTypeLore Lower\nMagic ManaBonus ManaRegen ManaRegenBonus Mark Markup Master MaxEndurance MaxRank Max MaxClip MaxHPs MaxMana MaxRange MaxRangeTo Member Members Mid Milli MinClip MinLevel Minute Minutes MirEarned MMEarned Mod Month Mount MouseX MouseY MouseOver Moving MQ2DataError MyCastTime\nN Name NearestSpawn NecromancerType Next Nick Night NoDrop NoRent\nOpen\nPack Params Parent PctAAExp PctEndurance PctExp PctGroupLeader PctHPS PctMana PctRaidLeaderExp Pet PetBuff PetClass Platinum PlatinumBank PlatinumShared Port Precision Prev Price PureCaster PushBack\nQuantity\nR Race RaidAssistTarget RaidLeader RaidLeaderExp RaidLeaderPoints RaidMarkNPC Rand Range RangedReady Rank RecastTime RecastType RecoveryTime RequiresAbility RequiresAbilityPoints Return ReuseTime ResistAdj Reverse Right Roleplaying RujEarned Running RunTime\nS ScreenID Second Seconds SecondsSinceMidnight SellPrice Server ShieldingBonus ShamanType ShortName Siblings Silver SilverBank Sin Sitting Size Skill SkillCapPre50 SkillCapPost50 SkyType Slot Spell Song Spawn Speed SpellReady SpellShieldBonus SpellType Sqrt STA Stack Stackable Standing StartingSkill State Status StatusID STR StrikeThroughBonus Stunned StunResistBonus Style Suffix Surname svCold svDisease svFire svMagic svPoison Swimming SyntaxError\nTakEarned Tan TargetOfTarget Target TargetType Team Text Thirst Ticks Time TimeHMS Time12 Time24 Token Tooltip TotalLevels TotalMinutes TotalSeconds Trader Tribute Type\nU Underwater Upper\nValue VScrollMax VScrollPos VScrollPos VScrollPct\nW WIS Weight WornSlots WornSlot\nX\nY Year\nZ\n/C6\"Pre-Processor\"\n#turbo\n#define\n#include\n#event\n#chat\nSub\n** : Event_ \n/C7\"Inventory Slots\"\nammo arms\nback\ncharm chest\nface feet\nhands head\nleftear leftfinger leftwrist legs\nmainhand\nneck\noffhand\nranged rightear rightfinger rightwrist\nshoulder\nwaist\n** bank bazaar enviro inspect loot merchant pack sharedbank trade\n/C8\"Operators\"\n.Equal\n.NotEqual\n.EqualCS\n.NotEqualCS\n.Not\n*\n+\n-\n=\n//\n%\n&amp;\n&gt;\n&lt;\n=\n!\n&lt;\n&gt;\n~\n\\\n^\n$\n|\n{\n}\n</code></pre>"},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/#using-ultraedit-with-the-syntax-highlighting","title":"Using UltraEdit with the Syntax Highlighting","text":""},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/#what-highlighted-syntax-looks-like","title":"What Highlighted Syntax Looks Like","text":"<p>A simple example of a highlighted macro:</p> <p><code>&lt;font color=\"green\"&gt;``\\| _- EventTest.mac -`&lt;/font&gt;` `&lt;font color=\"green\"&gt;` Demo for /doevents`&lt;/font&gt;` `&lt;font color=\"green\"&gt;` Chat and YouSay are handled every loop`&lt;/font&gt;` `&lt;font color=\"green\"&gt;` JudgesYou and Rude are only handled when YouSay`&lt;/font&gt;` `&lt;font color=\"green\"&gt;` calls /doevents for all_ \\|`&lt;/font&gt;````  \\#turbo```````&lt;font color=\"red\"&gt;````\\#chat`&lt;/font&gt;` say</code>#eventYouSay\"You say, '#1#'\"<code>`\\#eventJudgesYou\"(\\#1\\#\\) judges you amiably\"`&lt;font color=\"red\"&gt;```\\#event`&lt;/font&gt;` Rude `&lt;font color=\"purple\"&gt;`\"\\(\\#1\\#\\) makes a rude gesture\\#\\*\\#\"`&lt;/font&gt;` ```Sub Main</code> <code>/declareConCheckint</code><code>outer`&lt;/font&gt;` `&lt;font color=\"#ff0000\"&gt;`0`&lt;/font&gt;` `&lt;font color=\"red\"&gt;`:Loop`&lt;/font&gt;` `&lt;font color=\"blue\"&gt;`/doevents`&lt;/font&gt;` `&lt;font color=\"#0000ff\"&gt;`/delay`&lt;/font&gt;` `&lt;font color=\"#ff0000\"&gt;`2`&lt;/font&gt;` `&lt;font color=\"#0000ff\"&gt;`/goto`&lt;/font&gt;` `&lt;font color=\"#ff0000\"&gt;`:Loop`&lt;/font&gt;` `&lt;font color=\"#0000ff\"&gt;`/return`&lt;/font&gt;`</code>Sub Event_Chat<code>`/echoYou got a${Param0}from${Param1}:`&lt;font color=\"#ff0000\"&gt;```${`&lt;/font&gt;&lt;font color=\"#0000ff\"&gt;`Param2`&lt;/font&gt;&lt;font color=\"#ff0000\"&gt;`}`&lt;/font&gt;` `&lt;font color=\"#0000ff\"&gt;`/return`&lt;/font&gt;` ```Sub Event_YouSay(stringline,stringfirstword)</code> <code>/echoin YouxxxSay${firstword}</code><code>${`&lt;/font&gt;`firstword`&lt;font color=\"#ff0000\"&gt;`.NotEqual`&lt;/font&gt;`[Hail\\]`&lt;font color=\"#ff0000\"&gt;`}`&lt;/font&gt;` `&lt;font color=\"#0000ff\"&gt;`/if`&lt;/font&gt;` \\(`&lt;font color=\"#ff0000\"&gt;`${`&lt;/font&gt;`firstword`&lt;font color=\"#ff0000\"&gt;`.NotEqual`&lt;/font&gt;`\\[Hail]`&lt;font color=\"#ff0000\"&gt;`}`&lt;/font&gt;`) `&lt;font color=\"#ff0000\"&gt;`{`&lt;/font&gt;` `&lt;font color=\"#0000ff\"&gt;`/varset`&lt;/font&gt;` ConCheck `&lt;font color=\"#ff0000\"&gt;`0`&lt;/font&gt;` `&lt;font color=\"#0000ff\"&gt;`/return`&lt;/font&gt;` `&lt;font color=\"#ff0000\"&gt;`}`&lt;/font&gt;` `&lt;font color=\"#0000ff\"&gt;`/echo`&lt;/font&gt;` You con'd amiable `&lt;font color=\"#ff0000\"&gt;`${`&lt;/font&gt;`ConCheck`&lt;font color=\"#ff0000\"&gt;`}`&lt;/font&gt;` times since you last hailed.``````/return``     ````` `&lt;font color=\"#ff0000\"&gt;`Sub Event\\_JudgesYou`&lt;/font&gt;`(`&lt;font color=\"#0000ff\"&gt;`string`&lt;/font&gt;` line, `&lt;font color=\"#0000ff\"&gt;`string`&lt;/font&gt;` who)`````` /echoYou con'd amiable to${who}```````&lt;font color=\"#0000ff\"&gt;````/varcalc`&lt;/font&gt;` ConCheck `&lt;font color=\"#ff0000\"&gt;`${`&lt;/font&gt;`ConCheck}`&lt;font color=\"#ff0000\"&gt;`+1`&lt;/font&gt;` `&lt;font color=\"#0000ff\"&gt;`/return`&lt;/font&gt;`</code>Sub Event_Rude(stringline,stringwho)<code>`/echo`&lt;font color=\"#ff0000\"&gt;```${`&lt;/font&gt;`who`&lt;font color=\"#ff0000\"&gt;`}`&lt;/font&gt;` flipped someone off!``` /return</code> <p>You may want to change the default colors that UltraEdit chooses for the different categories. To do that navigate to: Advanced \u2192 Configuration \u2192 Editor Display \u2192 Syntax Highlighting and you can change the colors to your own choosing.</p>"},{"location":"main/other-applications/text-editors/ultraedit-syntax-file/#indenting","title":"Indenting","text":"<p>Ultraedit will also perform automatic indenting for you. It will create an indent whenever it see you have an open \"{\" and will unindent whenever it see a closing \"}\". You can also manually reformat any section by highlighting it then choosing Format \u2192 Indent Section from the UltraEdit Menu.</p> <p>Note: There is currently one bug in how indenting works. It currently does not properly unindent /elseif statements. UltraEdit will also not bring the final \"}\" back to the beginning of the first if like it is supposed to.</p> <p>Example 1: What UltraEdit Should do</p> <p><code>Sub ChatOut(string ChatTarget,string ChatText)</code> <code>/if (${ChatIn.Equal[tell]}) {</code> <code>/tell ${ChatInChannel} ${ChatText}</code> <code>} else /if (${ChatIn.Equal[Group]}) {</code> <code>/g ${ChatText}</code> <code>} else /if (${ChatIn.Equal[Raid]}) {</code> <code>/rs ${ChatText}</code> <code>} else /if (${ChatIn.Equal[Say]}) {</code> <code>/say ${ChatText}</code> <code>} else /if (${ChatIn.Equal[Channel]}) {</code> <code>/chat #${ChatInChannel} ${ChatText}</code> <code>} else /if (${ChatIn.Equal[IRC]}) {</code> <code>/irc ${ChatText}</code> <code>} else /if (${ChatIn.Equal[GUILD]}) {</code> <code>/gu ${ChatText}</code> <code>} else /if (${ChatIn.Equal[Auction]}) {</code> <code>/auc ${ChatText}</code> <code>} else {</code> <code>/e Incorrect Arguments: Chatin: ${ChatIn} ChatinChanel: ${ChatinChannel}</code> <code>/call ShowHelp</code> <code>}</code> <code>/return</code></p> <p>Example 2: What UltraEdit Does</p> <p><code>Sub ChatOut(string ChatTarget,string ChatText)</code> <code>/if (${ChatIn.Equal[tell]}) {</code> <code>/tell ${ChatInChannel} ${ChatText}</code> <code>} else /if (${ChatIn.Equal[Group]}) {</code> <code>/g ${ChatText}</code> <code>} else /if (${ChatIn.Equal[Raid]}) {</code> <code>/rs ${ChatText}</code> <code>} else /if (${ChatIn.Equal[Say]}) {</code> <code>/say ${ChatText}</code> <code>} else /if (${ChatIn.Equal[Channel]}) {</code> <code>/chat #${ChatInChannel} ${ChatText}</code> <code>} else /if (${ChatIn.Equal[IRC]}) {</code> <code>/irc ${ChatText}</code> <code>} else /if (${ChatIn.Equal[GUILD]}) {</code> <code>/gu ${ChatText}</code> <code>} else /if (${ChatIn.Equal[Auction]}) {</code> <code>/auc ${ChatText}</code> <code>} else {</code> <code>/e Incorrect Arguments: Chatin: ${ChatIn} ChatinChanel: ${ChatinChannel}</code> <code>/call ShowHelp</code> <code>}</code> <code>/return</code></p>"},{"location":"main/other-applications/text-editors/vscode-syntax-file/","title":"Visual Studio Code Syntax File","text":""},{"location":"main/other-applications/text-editors/vscode-syntax-file/#pre-requesites","title":"Pre-requesites","text":"<ul> <li>Visual Studio Code</li> </ul>"},{"location":"main/other-applications/text-editors/vscode-syntax-file/#installation","title":"Installation","text":"<p>From the Extensions menu on the side bar of Visual Studio Code search for mq-defs and install it.</p> <p>It can also be installed from the Marketplace.</p>"},{"location":"main/other-applications/text-editors/vscode-syntax-file/#source-code","title":"Source Code","text":"<p>The source for these syntax files can be found here.</p>"},{"location":"plugins/","title":"Plugins","text":""},{"location":"plugins/#introduction","title":"Introduction","text":"<p>Plugins extend the functionality of MQ, usually at a lower level than macros do. For example, a macro may help you do automatically mez mobs within a certain range, or auto-attack mob within a certain range. A plugin may control lower level functions like casting the mez spell for you (ie. making sure you have the right target, auto-recasting if you fizzle, etc) or control movement to your intended victim and activating attack (ie. moving you to melee range, turning on attack, automatically backstabbing, turning off attack on enrage, etc).</p> <p>The functionality of plugins and macros often overlap, and in the above example its completely possible to do all the above using just a macro with no plugins.</p> <p>Plugins are written in C++ whereas macros use MQ2's internal scripting language. The internal scripting language is a lot easier to use and manipulate than C++, which is why you'll find a lot more macros than plugins on the MQ2 message boards.</p>"},{"location":"plugins/#finding-plugins","title":"Finding Plugins","text":"<p>Plugins can be found in the following forum:</p> <p>MQ2::Development::Plugins (VIP Only)</p> <p>ImaNoob posted a very helpful thread here. (VIP Only) Titled appropriately \"The Complete Idiots Guide to MQ2 and plugins\"</p>"},{"location":"plugins/#compiling-plugins","title":"Compiling Plugins","text":"<p>Say you've seen an interesting looking plugin on the forums and you'd like to try it out, how exactly do you go about doing it?</p> <ul> <li>Open up a command prompt (Windows key + R, type \"cmd\" without quotation marks, press enter) and navigate to your MQ2</li> </ul> <p>source directory (eg. <code>cd \\mq2-latest</code>).</p> <ul> <li>Type \"<code>mkplugin</code>\". Use the name of the plugin from the forum post (eg. \"<code>mkplugin MQ2Melee</code>\").</li> <li>This will create the directory under your MQ2 source root and add a few files in there. Go to this directory in</li> </ul> <p>Explorer and open the .cpp file (eg. MQ2Melee.cpp) in your favourite text editor (notepad will work</p> <p>just fine). If you don't have any file extensions on your files (ie. none of them end with .cpp), then in Explorer</p> <p>go to Tools - Folder Options - View tab and untick \"Hide file extensions for known file types\".</p> <ul> <li>Replace the contents of this file with the code copied from the forum post. This code will generally start with</li> </ul> <p>a header indicating the name of the plugin, author, and maybe a brief description of the function of the plugin. An</p> <p>example of the first few lines of the MQ2Melee plugin are below:</p> <pre><code>//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//\n// MQ2Melee.cpp |\n// Author: s0rCieR |\n// Version: 3.000 |\n// Date: 20060213 |yes it should be\n//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//\n// #define aabug when alt abilities broken!\n// #define cabug when combat abilities broken!\n//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//\n\n#include &lt;mq/Plugin.h&gt;\n\nPreSetup(\"MQ2Melee\");\nPLUGIN_VERSION(3.000);\n</code></pre> <ul> <li>Some plugins require additional files to be included as well (eg. .ccp, .h or .inc). Just create these files in the</li> </ul> <p>plugin directory with the names as given in the forum post. **Make sure to save them as plain text documents with</p> <p>the correct extension (ie. do not save them with .txt extension) otherwise the plugin will not find them.**</p> <ul> <li>After you've got the plugin created and all the files copied, open up the main MacroQuest2 project and add your</li> </ul> <p>newly created project:</p> <ul> <li>In VS 6, Go to Projects-&gt;Insert Projects into workspace, then select .dsp (eg. MQ2Melee.dsp).</li> <li> <p>In VS .NET, go to File-&gt;Add Project-&gt;Existing project, and select the .vcproj (eg.</p> <p>MQ2Melee.vcproj).</p> </li> <li> <p>In VS 2005 AND NEWER, go to File-&gt;Add-&gt;Existing project, and select the .vcproj (or .vcxproj in</p> <p>newer versions of VS} (eg. MQ2Melee.vcproj or MQ2Melee.vcxproj).</p> </li> <li> <p>Compile the plugin:</p> </li> <li> <p>In VS 2005 and newer, click on the plugin name in the Solution Explorer window, then click Build-&gt;Build</p> <p>.</p> </li> </ul>"},{"location":"plugins/#using-plugins","title":"Using Plugins","text":"<p>MQ2 plugins are modular and can be loaded and unloaded on demand.</p> <p>See /plugin for information on loading and unloading plugins.</p> <ul> <li>If you need help with the plugin, you can most often find it within the main forum post or within the Wiki entry for</li> </ul> <p>that plugin. Some plugins have a built in help which can often be accessed in-game by typing the name of the</p> <p>plugin's slash command(s) followed by help, or just the slash command\\(s\\) by itself. (more examples?)</p> <ul> <li> <p>For example, in the MQ2MoveUtils plugin, the plugin adds the /moveto and /makecamp slash commands. Typing</p> <p>\"<code>/moveto help</code>\" and \"<code>/makecamp help</code>\" will bring up a list of current options for that part of the</p> <p>MQ2MoveUtils plugin.</p> </li> </ul>"},{"location":"plugins/#plugins-included-with-macroquest2","title":"Plugins included with MacroQuest2","text":"<ul> <li>MQ2Bzsrch -- a bazaar search plug-in</li> <li>MQ2Chat -- Directs MQ2 output to the regular chat window</li> <li>MQ2ChatWnd -- Directs MQ2 output to a special chat window (safer)</li> <li>MQ2CustomBinds -- Allows you to specify custom commands to execute on a key combination</li> <li>MQ2EQBugFix -- Currently nothing, but reserved for fixing bugs in EQ itself</li> <li>MQ2EQIM -- EQIM</li> <li>MQ2HUD -- Provides additional functionality to the HUD included with MQ2</li> <li>MQ2IRC -- IRC plugin</li> <li>MQ2ItemDisplay -- Add extra data to item windows</li> <li>MQ2Labels -- allows custom UI labels</li> <li>MQ2Map -- enhanced map</li> <li>MQ2Telnet -- act as a telnet server for macro output</li> </ul>"},{"location":"plugins/#list-of-plugins-with-wiki-pages","title":"List of Plugins with wiki pages","text":"<ul> <li>MQ2AAPurchase </li> <li>MQ2AdvPath </li> <li>MQ2AutoForage </li> <li>MQ2AutoGroup </li> <li>MQ2AutoLogin </li> <li>MQ2AutoSize </li> <li>MQ2AutoSkills </li> <li>MQ2Bandolier </li> <li>MQ2BuffTool </li> <li>MQ2Cast </li> <li>MQ2Chat </li> <li>MQ2ChatEvents </li> <li>MQ2ChatWnd </li> <li>MQ2Cursor </li> <li>MQ2CustomBinds </li> <li>MQ2Debuffs </li> <li>MQ2DPSAdv </li> <li>MQ2EQBC </li> </ul> <ul> <li>MQ2EQBugFix </li> <li>MQ2EQIM </li> <li>MQ2Events </li> <li>MQ2Exchange </li> <li>MQ2EQBC </li> <li>MQ2FakeLink </li> <li>MQ2FeedMe </li> <li>MQ2FPS </li> <li>MQ2GMCheck </li> <li>MQ2HUD </li> <li>MQ2HUDMove </li> <li>MQ2IRC </li> <li>MQ2ItemDisplay </li> <li>MQ2Labels </li> <li>MQ2Linkdb </li> <li>MQ2Map </li> <li>MQ2Melee </li> <li>MQ2Medley </li> <li>MQ2Melee </li> </ul> <ul> <li>MQ2Missing </li> <li>MQ2MoveUtils </li> <li>MQ2MoveUtils:v11 </li> <li>MQ2NetBots </li> <li>MQ2NetHeal </li> <li>MQ2PQ </li> <li>MQ2RelayTells </li> <li>MQ2Rez </li> <li>MQ2Sound </li> <li>MQ2Spawn </li> <li>MQ2SpawnMaster </li> <li>MQ2Targets </li> <li>MQ2Telnet </li> <li>MQ2Timestamp </li> <li>MQ2Tracking </li> <li>MQ2Twist </li> <li>MQ2Vendors </li> <li>MQ2Web </li> <li>MQ2XPTracker </li> </ul>"},{"location":"plugins/#troubleshooting","title":"Troubleshooting","text":"<p>See General Help for troubleshooting plugin problems.</p>"},{"location":"plugins/#writing-your-own-plugins","title":"Writing Your Own Plugins","text":"<p>See Developing Plugins for further information.</p>"},{"location":"plugins/#unloading-a-plugin-from-within-a-plugin","title":"Unloading a plugin from within a plugin","text":"<p>Because call UnloadMQ2Plugin(name) from within a plugin will crash, you must use a macro command to unload the plugin. DoCommand(NULL, \"/timed 20 /plugin unload\"); will queue the macro command to unload after two seconds.</p>"},{"location":"plugins/general-help/","title":"Help Plugins","text":""},{"location":"plugins/general-help/#general-plugin-help","title":"General Plugin Help","text":"<ul> <li>First off, do you have the latest version of your plugin. Many plugins, especially the popular ones, are updated</li> </ul> <p>regularly. Always check back to the main forum post where you found your plugin to see if a later version is</p> <p>available.</p> <ul> <li>Have you got the latest MQ2 source files? Check the download page</li> </ul> <p>and make sure that you have have the latest MQ2 source. Some plugins depend on very recent changes to MQ2 to</p> <p>function/compile correctly.</p> <ul> <li>Have you read all the documentation on the plugin: 1. The initial forum post usually has some documentation in it, and most likely a link to further documentation</li> </ul> <p>(quite often a wiki page).</p> <ol> <li> <p>If you still have no luck, read through every page on the forum post (it's sometimes quicker to read backwards,</p> <p>as the information is often more relevant to current problems).</p> </li> <li> <p>Some plugins require other plugins to function, but usually you are warned about these when starting the plugin.</p> </li> </ol> <p>Check to make sure you have any other pre-requisite plugins, and that these plugins are configured correctly.</p>"},{"location":"plugins/general-help/#plugin-problems","title":"Plugin Problems","text":""},{"location":"plugins/community-plugins/","title":"Community Plugins","text":"<ul> <li>MQ2AdvPath</li> <li>MQ2AutoForage</li> <li>MQ2AutoSize</li> </ul>"},{"location":"plugins/community-plugins/mq2aapurchase/","title":"MQ2AAPurchase","text":""},{"location":"plugins/community-plugins/mq2aapurchase/#description","title":"Description","text":"<p>by demonstar55:</p> <p>Mainly I wanted to have a plugin version of the include, but I wanted to make use of some new client functions exported to MQ2 (so requires MQ2-20151122)</p> <p>It works similar to MQ2AASpend that you can get with some precompiled MQ2 releases, but is missing the \"brute\" feature.</p> <p>Source at https://github.com/mackal/MQ2AAPurchase zip download also included in this post, but the github will always be up-to-date.</p> <p>You can find the latest version of MQ2AAPurchase here.</p>"},{"location":"plugins/community-plugins/mq2aapurchase/#commands","title":"Commands","text":"<p><code>/aapurchase help</code> -- List commands, aka this <code>/aapurchase now</code> -- start buying now <code>/aapurchase add \\\"AA Name\\\" rank</code> -- M for max instead of a rank <code>/aapurchase bank #</code> -- set the amount of points to bank <code>/aapurchase load</code> -- Reload INI</p>"},{"location":"plugins/community-plugins/mq2aapurchase/#ini","title":"INI","text":"<pre><code>[MQ2AAPurchase_Settings]\nBankPoints=40\nAutoSpend=1\n[MQ2AAPurchase_List]\n1=New Tanaan Crafting Mastery|3\n2=Combat Stability|M\n3=General Sturdiness|M\n</code></pre> <p>This says I want to start buying once I have 40 points banked and is on. It will buy up to rank 3 of New Tanaan Crafting Mastery, and will buy max ranks of Combat Stability and General Sturdiness.</p> <p>It's worth noting that in the MQ2AAPurchase_List section the order of entries is important, not the key, so you can just write a macro to build a INI, move entries around to the order you want without having to worry about changing the keys.</p> <p>It will also try to spend all your points each time it is triggered (like the skip option in the include) so if that's not the behavior you want, you'll have to convince me I should add it :P</p>"},{"location":"plugins/community-plugins/mq2advpath/","title":"MQ2AdvPath","text":"","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#description","title":"Description","text":"<p>This plugin allows you to record and playback player movement.</p>","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#commands","title":"Commands","text":"","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#play","title":"<code>/play</code>","text":"<pre><code>/play [pathName|off] [stop] [pause|unpause] [loop|noloop] [normal|reverse] [smart|nosmart] [flee|noflee] [door|nodoor] [fast|slow]\n[eval|noeval] [zone|nozone] [list] [listcustom] [show] [help] [setflag1]-[setflag9] y/n [resetflags]\nThe /play command will execute each command on the line. The commands that should be used single, or at the end of a line:\n[off] [list] [listcustom] [show] [help]\n\nsetflag1-setflag9 can be used anywhere in the line and uses the following format:\n/play setflag1 n pathname or /play pathname setflag n (n can be any single alpha character)\nAdvPath flags can be accessed using ${AdvPath.Flag1} - ${AdvPath.Flag9}\n/play resetflags resets all flags(1-9) to 'y'\n</code></pre>","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#record","title":"<code>/record</code>","text":"<pre><code>/record\n/record save &lt;PathName&gt; ##\n/record Checkpoint &lt;checkpointname&gt;\n/record help\n## is the distance between checkpoints to force checkpoints to be writen to the path file\n</code></pre>","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#afollow","title":"<code>/afollow</code>","text":"<pre><code>/afollow [on|off] [pause|unpause] [slow|fast] [intercept]\n/afollow spawn # [slow|fast] - default=fast\n/afollow help\n</code></pre>","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#top-level-object","title":"Top-Level Object","text":"","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#advpath","title":"<code>AdvPath</code>","text":"","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#members","title":"Members","text":"","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#Active","title":"bool <code>Active</code>","text":"Plugin loaded and ready","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#State","title":"int <code>State</code>","text":"FollowState, 0 = off, 1 = Following, 2 = Playing, 3 = Recording","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#Waypoints","title":"int <code>Waypoints</code>","text":"Total Number of Waypoints","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#NextWaypoint","title":"int <code>NextWaypoint</code>","text":"Number of NextWaypoint","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#Y[Waypoint","title":"string <code>Y[Waypoint Name|#]</code>","text":"Y Location of Waypoint","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#X[Waypoint","title":"string <code>X[Waypoint Name|#]</code>","text":"X Location of Waypoint","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#Z[Waypoint","title":"string <code>Z[Waypoint Name|#]</code>","text":"Z Location of Waypoint","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#Monitor","title":"spawn <code>Monitor</code>","text":"Spawn you're Following","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#Idle","title":"int <code>Idle</code>","text":"Idle time when following and not moving","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#Length","title":"float <code>Length</code>","text":"Estimated length of the follow PathName","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#Following","title":"bool <code>Following</code>","text":"Following Spawn","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#Playing","title":"bool <code>Playing</code>","text":"Playing path","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#Recording","title":"bool <code>Recording</code>","text":"Recording path","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#Status","title":"int <code>Status</code>","text":"Status 0 = off , 1 = on , 2 = Paused","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#Paused","title":"bool <code>Paused</code>","text":"Paused","tags":["plugin"]},{"location":"plugins/community-plugins/mq2advpath/#ini","title":"INI","text":"<pre><code>[settings.server.ToonName]\nAutoStopFollow=0\nAutoStopPath=0\nUseStuckLogic=1\n</code></pre> <pre><code>AutoStopFollow=0/1/2 - how it works now/pause/turns off\nAutoStopPath=0/1/2 - how it works now/pause/turns off\nUseStuckLogic= 0/1 = off/on\n</code></pre>","tags":["plugin"]},{"location":"plugins/community-plugins/mq2autoforage/","title":"MQ2AutoForage","text":""},{"location":"plugins/community-plugins/mq2autoforage/#description","title":"Description","text":"<p>MQ2AutoForage Created by Bl!ng</p> <p>Simple plugin to automate the task of foraging (and eventually fishing).</p> <p>You can find the latest version of MQ2AutoForage here.</p>"},{"location":"plugins/community-plugins/mq2autoforage/#commands","title":"Commands","text":"<p><code>/startforage</code> - commence autoforaging. <code>/stopforage</code> - stop autoforaging. <code>/keepitem [item]</code> - add/change the item in the .ini file to auto-keep. <code>/destroyitem [item]</code> - add/change the item in the .ini file to auto-destroy.</p>"},{"location":"plugins/community-plugins/mq2autogroup/","title":"MQ2AutoGroup","text":""},{"location":"plugins/community-plugins/mq2autogroup/#description","title":"Description","text":"<p>Like it says this will autogroup, or auto accept raid invites from the names you have in your ini. Big thanks to Psycotic for the coding help. And to the other coders who's code i borrowed to try and put this thing together. Hopefully someone finds this plugin semi usefull.</p> <p>You can find the latest version of MQ2AutoGroup here.</p>"},{"location":"plugins/community-plugins/mq2autogroup/#commands","title":"Commands","text":"<p><code>/autogroup [help | on | off \\| guild | load | save | add | del | clear | list ]</code></p> <ul> <li>help = list of ingame options</li> <li>on = turn plugin on</li> <li>off = turn plugin off</li> <li>guild = toggles automatic guild/raid invite accept from your guild members</li> <li>load = loads options and names from ini file</li> <li>(any current unsaved names will be lost)</li> <li>save = updates .ini to match current options and names</li> <li>add = add a new character name (ex: /autogroup add bubbawar)</li> <li>del = delete a character name (ex: /autogroup del 15 , deletes name number 15)</li> <li>clear = clears all character names</li> <li>list = lists current character names</li> </ul>"},{"location":"plugins/community-plugins/mq2autogroup/#ini-entries","title":"INI Entries","text":"<p><code>[Settings]</code> <code>AutoGroup=on</code> <code>[Names]</code> <code>Name0=bob</code> <code>Name1=fred</code> <code>Name2=harry</code></p>"},{"location":"plugins/community-plugins/mq2autosize/","title":"MQ2AutoSize","text":""},{"location":"plugins/community-plugins/mq2autosize/#description","title":"Description","text":"<p>This plugin will automatically shrink everyone within range down to minimum allowed size. They will automatically resize back to normal when they move out of range. (Current range is set at 50' - Can be changed in MQ Settings -&gt; plugin -&gt; AutoSize) NOTE: These effects are CLIENT SIDE ONLY!</p> <p>You can find the latest version of MQ2AutoSize here.</p>"},{"location":"plugins/community-plugins/mq2autosize/#commands","title":"Commands","text":"<p><code>/autosize [on | off]</code> - Toggles AutoSize functionality or set the functionality on or off directly <code>/autosize [pc | npc | pets | mercs | mounts | corpse | everything | self ] [on | off]</code> - Toggles AutoSizing for the specified type or set the functionality on or off directly <code>/autosize dist [on | off]</code> - Toggles distance-based (on) vs Zonewide (off) or set the functionality with on or off. <code>/autosize [ range |  sizepc | sizenpc | sizepets | sizemercs | sizemounts | sizecorpse | sizetarget | sizeself ]  ### (1-250)</code> <code>/autosize [help | status | autosave | save | load ]</code></p>"},{"location":"plugins/community-plugins/mq2autosize/#mqsettings","title":"MQSettings","text":"<p>Settings for AutoSize can be modified in MQ Settings -&gt; plugin -&gt; AutoSize</p> <p></p> Setting Values Description AutoSave on/off Whether the plugin should autosave or not ZoneWide/Distance Distance (50) Distance-based or zonewide resizing Synchronize Clients None/MQ2DanNet/MQ2EQBC Synchronize with other clients Setting Default Value Default Size Value Description ResizeSelf off 1 Whether the plugin should resize self and to what size ResizePC off 1 Whether the plugin should resize PCs (including mounted) and to what size ResizePets off 1 Whether the plugin should resize pets and to what size ResizeMercs off 1 Whether the plugin should resize mercanaries and to what size ResizeMounts off 1 Whether the plugin should resize mounts (and the player(s) on them) and to what size ResizeCorpse off 1 Whether the plugin should resize corpses and to what size ResizeNPC off 1 Whether the plugin should resize NPCs and to what size Resize Everything button Sets all resize types to on"},{"location":"plugins/community-plugins/mq2autosize/#top-level-object-autosize","title":"Top-Level Object: ${AutoSize}","text":"Type Member Name Description bool Enabled Whether the plugin is enabled or not bool AutoSave Whether the plugin should autosave or not bool Active Whether the plugin is actively resizing something or not int Range Distance within which the plugin will resize enabled types bool ResizeCorpse Whether the plugin should resize corpses or not bool ResizeMercs Whether the plugin should resize mercanaries or not bool ResizeMounts Whether the plugin should resize mounts or not bool ResizeNPC Whether the plugin should resize NPCs or not bool ResizePC Whether the plugin should resize PCs or not bool ResizePets Whether the plugin should resize pets or not bool ResizeSelf Whether the plugin should resize self or not int SizeCorpse Size of corpses int SizeMercs Size of mercanaries int SizeMounts Size of mounts int SizeNPC Size of NPCs int SizePC Size of PCs int SizePets Size of pets int SizeSelf Size of self"},{"location":"plugins/community-plugins/mq2autoskills/","title":"MQ2AutoSkills","text":""},{"location":"plugins/community-plugins/mq2autoskills/#description","title":"Description","text":"<p>MQ2AutoSkills, developed by Cr4zyb4rd, is a plugin that attempts to use combat or other skills whenever they're available \\(and the pre-requisite conditions are met\\). It also has the ability to turn off attack during ENRAGE or Infuriate.</p> <p>Currently supported skills are:</p> <ul> <li>Backstab</li> <li>Bash</li> <li>Begging</li> <li>Disarm</li> <li>Dragon Punch</li> <li>Eagle Strike</li> <li>Flying Kick</li> <li>Frenzy</li> <li>Evade</li> <li>Forage</li> <li>Feign Death</li> <li>Intimidation</li> <li>Kick</li> <li>Mend</li> <li>Pick Pockets</li> <li>Round Kick</li> <li>Sense Traps</li> <li>Slam</li> <li>Taunt</li> <li>Tiger Claw</li> </ul> <p>The plugin can be downloaded from here.</p> <p>Note: This plugin was developed many years ago and has been superceded by other more fully-featured plugins, the most popular being MQ2Melee.</p>"},{"location":"plugins/community-plugins/mq2autoskills/#commands","title":"Commands","text":"<p>In order for MQ2AutoSkills to use any of your skills, you must have the skill mapped to an ability button.</p> <p><code>/autoskills help</code> - This lists all options <code>/autoskills list</code> - List available skills and whether they are enabled <code>/autoskills settings</code> - List settings/thresholds <code>/autoskills backoff [#]</code> - %HP at which to not re-engage after FD/Evade <code>/autoskills melee [#]</code> - Range to be considered \"in melee range\" <code>/autoskills mendhp [#]</code> - %HP at which to use the mend ability <code>/autoskills [skill]</code> - Toggle a skill on/off and update the INI <code>/autoskills [skill] [on|off]</code> - Enable/disable a skill</p>"},{"location":"plugins/community-plugins/mq2autoskills/#examples","title":"Examples","text":"<ul> <li>For a Warrior, you could use something like the following</li> </ul> <p><code>/autoskills taunt</code> <code>/autoskills bash</code> <code>/autoskills melee 15</code></p> <ul> <li>For a Berserker , trying to optimize dps while watching cooldown timers</li> </ul> <p><code>/autoskills Frenzy</code> <code>/autoskills Volley</code> <code>/autoskills War Cry</code></p>"},{"location":"plugins/community-plugins/mq2autoskills/#bugs","title":"Bugs","text":"<p>Trade/Vendor windows and possibly some other events may cause some skills to fire when not appropriate and spam you.</p>"},{"location":"plugins/community-plugins/mq2bandolier/","title":"MQ2Bandolier","text":""},{"location":"plugins/community-plugins/mq2bandolier/#description","title":"Description","text":"<p>MQ2Bandolier, written by Wassup, is an extension of the EQ Bandolier which allows you to swap items in any of your inventory slots.</p> <ul> <li>It requires MQ2Exchange in order to perform the item swapping.</li> </ul> <p>You can find the source to the plugin in the VIP forums here.</p>"},{"location":"plugins/community-plugins/mq2bandolier/#commands","title":"Commands","text":"<p><code>/createset  [slotname1 | slotnumber1 slotname2 | slotnumber2 ... slotname21|slotnumber22]</code> - Creates a set in MQ2Bandolier_.ini using the selected equipment slots. If you use the name of an existing set, it will be over-written. <code>/deleteset</code> - Deletes the specified setname from the characters ini. <code>/equipset</code> - Equips all items in the specified set.</p>"},{"location":"plugins/community-plugins/mq2bandolier/#examples","title":"Examples","text":"<p><code>/createset ThisSet chest mainhand offhand</code> <code>/createset ThisSet 17 13 14</code></p> <p>Both of the above examples will create the following INI entry:</p> <p><code>[ThisSet]</code> <code>17=12345</code> <code>13=23456</code> <code>14=34567</code></p>"},{"location":"plugins/community-plugins/mq2bufftool/","title":"MQ2BuffTool","text":""},{"location":"plugins/community-plugins/mq2bufftool/#description","title":"Description","text":"<p>MQ2BuffTool was written by s0rcier and is found in the VIP forums here. This plugin was written a replacement for his previous work, MQ2BuffUtils, offering an easier approach to buff management for the end user and less robotic interaction to be less detectable by others.</p>"},{"location":"plugins/community-plugins/mq2bufftool/#features","title":"Features","text":"<ul> <li>XML Windows: fully resizable, cloasable, movable, lockable that remember their save location and states</li> <li>Buff Window List \\(Self &amp; Pet\\): sorted by remaining duration on buff, with colorful visual effects (red=detrimental,</li> </ul> <p>white=less then 1min, teal=less then 3mins, blue=less then 6mins or green if time left greater then 6mins), toggle</p> <p>option to include songs or not in visual buff list, Buffs Free and Max Slot display and same for Short Duration,</p> <p>right or left clicking on the Self Buff window will add or remove buff to the block list</p> <ul> <li>Block Window List: sorted by buff name, colorful \\(green means buff that will always been blocked, white for others\\),</li> </ul> <p>toggle options for On/Off state and popups, Load and Save button to save or load settings, right or left clicking on</p> <p>selected buff will increase or decrease # of free slots attached to it (if number of free slots reach -1 it will</p> <p>remove that blocked buff)</p>"},{"location":"plugins/community-plugins/mq2bufftool/#commands","title":"Commands","text":""},{"location":"plugins/community-plugins/mq2bufftool/#general","title":"General","text":"<p>The following parameters may be used by any of the three primary commands. For example purposes /block will be used.</p> <ul> <li>'''/block  </li> </ul> <p>Displays help output</p> <ul> <li>'''/block  </li> </ul> <p>Loads settings and blocked spells list from configuration file.</p> <ul> <li>'''/block  </li> </ul> <p>Saves settings and blocked spells list to configuration file.</p> <ul> <li>'''/block  </li> </ul> <p>Toggles scanning for blocked buffs on and off</p> <ul> <li>'''/block  </li> </ul> <p>Displays a list of spells currently being blocked</p> <ul> <li>'''/block  </li> </ul> <p>Toggles display of popup messages</p> <ul> <li>'''/block  </li> </ul> <p>Popups XML windows</p>"},{"location":"plugins/community-plugins/mq2bufftool/#block","title":"/block","text":"<ul> <li>**/block [ ## | -##</li> </ul> <p>] **</p> <p>Blocks spell in buff slot ## \\(for short duration use slot -\\#\\#\\), always \\(0\\) or only if free slots/optionally \\(1\\)</p> <ul> <li>/block  </li> </ul> <p>Blocks spell matching Name , always \\(0\\) or only if free slots/optionally \\(1\\)</p> <ul> <li>_'/block  </li> </ul> <p>Blocks spells from list setname in configuration file</p>"},{"location":"plugins/community-plugins/mq2bufftool/#unblock","title":"/unblock","text":"<ul> <li>**/unblock [ ## |</li> </ul> <p>-## ]**</p> <p>Removes blocked spell in buff slot ## \\(for short duration use slot -\\#\\#\\)</p> <ul> <li>/unblock </li> </ul> <p>Removes blocked spell matching Name</p> <ul> <li>/unblock </li> </ul> <p>Removes blocked spells from list setname in configuration file</p>"},{"location":"plugins/community-plugins/mq2bufftool/#clickoff","title":"/clickoff","text":"<ul> <li>**/clickoff [ ## |</li> </ul> <p>-## ]**</p> <p>Clicks off spell in buff slot ## \\(for short duration use slot -\\#\\#\\)</p> <ul> <li>/unblock </li> </ul> <p>Clicks off spell matching Name</p> <ul> <li>/unblock </li> </ul> <p>Clicks off buffs from list setname in configuration file</p>"},{"location":"plugins/community-plugins/mq2bufftool/#top-level-object-block","title":"Top-Level Object: ${Block}","text":"Type Member Name Description int Avail Number of free buff slots in n \\(where _n_ can be 1=buffs, 2=short duration, 3=pets\\) int Count Number of buffs in blocked list int Maxim Number of total buff slots in n \\(where _n_ can be 1=buffs, 2=short duration, 3=pets\\) bool Popup TRUE if popups are enabled bool Quiet Always TRUE if plugin is loaded bool Ready TRUE if plugin loaded, INGAME, and blocking active int Spell Number of available buff slots for n \\(where _n_ spell ID or spell name\\), returns -1 if none found int Total Total number of buffs blocked by plugin this session string To String TRUE if INGAME"},{"location":"plugins/community-plugins/mq2cast/","title":"MQ2Cast","text":""},{"location":"plugins/community-plugins/mq2cast/#introduction","title":"Introduction","text":"<p>MQ2Cast by s0rCieR and A_Enchanter_00 is a plugin to handle most things related to spell casting, item clicking and activating of AAs.</p> <p>The official forum thread for MQ2Cast is here (VIP Only).</p>"},{"location":"plugins/community-plugins/mq2cast/#features","title":"Features","text":"<ul> <li>Reliably casts spells (auto-recasts on fizzles or gate collapses). Will attempt to immobilize you before casting. Will cast immediately a spell is available, before the gem is even fully ready.</li> <li>Intelligently and reliably memorizes spells and allows saving and loading of custom spell sets. Will attempt to immobilize you before memorizing.</li> <li>Clicks items and activates AAs. Will equip items in bags before clicking, and then return them once clicked.</li> <li>Utilizes MQ2Bandolier to swap in sets of items before casting (ie. Focus items).</li> <li>Auto-pause Stick and/or Advpath if detected and resume when complete.</li> <li>Custom interrupt function, to interrupt spells during casting (includes dismounting).</li> <li>Returns control to the macro immediately after it has started (ie. while the spell is casting), to allow the macro to perform other checks. Eg. while casting a heal spell, you could get the macro to check if the target has already been healed and then interrupt your spell if his HPs are above a certain amount.</li> </ul>"},{"location":"plugins/community-plugins/mq2cast/#requirements","title":"Requirements","text":"<p>MQ2Bandolier For swapping in sets of items before casting (ie. focus items)</p> <p>MQ2Exchange For equipping clickies before using them</p>"},{"location":"plugins/community-plugins/mq2cast/#commands","title":"Commands","text":""},{"location":"plugins/community-plugins/mq2cast/#casting","title":"/casting","text":"<p>Syntax:</p> <p><code>/casting \"Name\" [type] [options]</code></p> <p>Although the [type] is optional, it's always recommended to specify if you're casting a spell (specify the gem or number), clicking an item (specify \"item\" or the slot name/slot number) or activating an AA (specify \"alt\"), since there are AAs which have the same name as spells and spells and items can have the same IDs.</p> <p>The /casting command requires only 1 argument, the name of the spell you wish to cast. If the spell is not memmed, it will try and mem it in gem5 (this is the default if no gem is specified). If the spell has more than one word, make sure to surround it with quotes. For example:</p> <p><code>/casting \"Minor Shielding\"</code></p> <p>This will cast the Minor Shielding spell if it is already memmed, or if not, will attempt to memorize it in gem5 before casting.</p> <p>You can also include the gem number (or just the number) after the name of the spell, to indicate which gem it should be memmed into. For example:</p> <p><code>/casting \"Minor Shielding\" 1</code> <code>/casting \"Minor Shielding\" gem1</code></p> <p>These will both cast Minor Shielding if memmed, or memorize it in gem1 before casting.</p> <p>The gem number can also be appended to the end of the spell name, separated by a pipe command, like so:</p> <p><code>/casting \"Minor Shielding|gem1\"</code> <code>/casting \"Minor Shielding|1\"</code></p> <p>You can also use the ID of the spell you wish to mem/cast. The following 4 examples all do the same thing:</p> <p><code>/casting 288|gem1</code> <code>/casting 288|1</code> <code>/casting 288 gem1</code> <code>/casting 288 1</code></p> <p>All of the above will cast \"Minor Shielding\" (ID 288) and mem it in gem1 if not already memmed.</p> <p>When clicking items you use the same syntax, except the \"name\" of the spell is the name of the item or the item's ID. It's always recommended to specify the type as \"item\" or specify the slot name/slot ID if you are clicking an item. For example:</p> <p><code>/casting \"Fabled Journeyman's Boots\" item</code> <code>/casting 68239|item</code> <code>/casting \"Shrunken Goblin Skull Earring\" leftear</code></p> <p>Options: The following optional parameters can be added to the /casting line:</p> <p>-bandolier|&lt;#&gt; Equip the bandolier with before casting. Useful for focus effects.</p> <p>-invis With this parameter, it will not cast if you are invisible.</p> <p>-kill Keep casting this spell until the target dies.</p> <p>-maxtries|&lt;#&gt; Cast the spell this many times until successful.</p> <p>-recast|&lt;#&gt; Recast the spell this many times.</p> <p>-setin Same as bandolier (left here for backwards-compatibility purposes).</p> <p>-targetid|&lt;#&gt; Target this ID before casting.</p> <p>Examples:</p> <p><code>/casting \"Wunshi's Focusing\" gem4 -invis</code> <code>/casting \"Complete Heal|gem1\" -kill -targetid|1234</code> <code>/casting \"Fizzle a Lot|gem4\" -maxtries|5</code> <code>/casting \"uber nuke|9\" -kill</code> <code>/casting \"cannibalize\" gem3 -recast|5</code></p>"},{"location":"plugins/community-plugins/mq2cast/#interrupt","title":"/interrupt","text":"<p>This will just interrupt the current spell/item/AA that is casting. It's the same as doing /stopcast, or /dismount then /stopcast if you're mounted at the time.</p>"},{"location":"plugins/community-plugins/mq2cast/#memorize","title":"/memorize","text":"<p>Syntax:</p> <p><code>/memorize \"name\" [gem]</code></p> <p>As with the /casting command above, the /memorize command can take spell names or IDs, and can use gem# or just the numbers themselves. The gem# or number can also be appended to the end of the name.</p> <p>See the following examples:</p> <p><code>/memorize \"Minor Shielding\"</code> <code>/memorize \"Minor Shielding\" 1</code> <code>/memorize 288|gem1</code></p> <p>Multiple spells can be memorized with the same line, such as the following example:</p> <p><code>/memorize \"1234|1\" \"gate|2\" \"cannibalize|gem4\"</code></p> <p>As with /casting, the plugin will attempt to immobilize you before memorizing the spell.</p>"},{"location":"plugins/community-plugins/mq2cast/#sss","title":"/sss","text":"<p>''Spell Set Save'' - This will save your any number of your currently memmed spells into a spell set. Syntax:</p> <p><code>/sss \"name\" [gems]</code></p> <p>Name is what you want your spell set to be called. If no gems are specified, all your gems are saved (ie. 123456789ABC). You can specify a smaller subset if needed.</p> <p><code>/sss dps 1238</code> <code>/sss dps 12ABC</code> <code>/sss wunshi 5</code></p>"},{"location":"plugins/community-plugins/mq2cast/#ssm","title":"/ssm","text":"<p>Spell Set Memorize - This will memorize a previously saved spell set.</p> <p><code>/ssm dps</code></p>"},{"location":"plugins/community-plugins/mq2cast/#ssl","title":"/ssl","text":"<p>Spell Set List - This will list all spell sets that have been saved.</p> <p><code>/ssl</code></p>"},{"location":"plugins/community-plugins/mq2cast/#ssd","title":"/ssd","text":"<p>Spell Set Delete - This will delete a spell set from the ini file.</p> <p><code>/ssd wunshi</code></p>"},{"location":"plugins/community-plugins/mq2cast/#top-level-object-cast","title":"Top Level Object: ${Cast}","text":"Type Member Name Description bool ${Cast} Same as ${Cast.Active} (see below). bool Active Return TRUE if plugin is loaded and you are in-game. spell Effect Returns the name of the spell being casted, or a NULL string if not casting. bool Ready Return TRUE if ready to cast a spell, item or AA. bool Ready[M] Return TRUE if ready to memorize a spell. bool Ready[#] Return TRUE if gem # is ready to cast. bool Ready[X] Return TRUE if spell, item, gem, ID, AA, etc is ready to cast. (See examples below) string Result Returns a string containing the result of the /casting command. (See possible results below) string Return Returns the result of the casting/memorize/interrupt request. string Status Returns a string containing all the pending events. This string often contains multiple events (See possible events below) spell Stored Returns the last spell that was cast, or NULL if no spell has been cast. bool Taken Return TRUE if last spell cast didn't take hold on target. int Timing Returns the estimated number of miliseconds remaining until the spell finished casting."},{"location":"plugins/community-plugins/mq2cast/#castready-examples","title":"${Cast.Ready} Examples","text":"<p><code>${Cast.Ready[spellname or spellid]}</code> <code>${Cast.Ready[aaname or aaid]}</code> <code>${Cast.Ready[itemname or itemid]}</code> <code>${Cast.Ready[1460]}</code> <code>${Cast.Ready[Death Peace]}</code> <code>${Cast.Ready[Death Peace|alt]}</code> <code>${Cast.Ready[Death Peace|gem]}</code> <code>${Cast.Ready[Death Peace|gem3]}</code></p>"},{"location":"plugins/community-plugins/mq2cast/#castresult-results","title":"${Cast.Result} Results","text":"<ul> <li>CAST_ABORTED: Casting Aborted (/interrupt)</li> <li>CAST_CANCELLED: Casting was aborted</li> <li>CAST_CANNOTSEE: Cannot see target</li> <li>CAST_COLLAPSE: Your Gate collapsed</li> <li>CAST_COMPONENTS: Missing Component</li> <li>CAST_DISTRACTED: You were distracted</li> <li>CAST_FIZZLE: Your cast fizzled</li> <li>CAST_IMMUNE: Target is immune the spell's effect</li> <li>CAST_INTERRUPTED: Casting was interupted</li> <li>CAST_INVISIBLE: You are invisible</li> <li>CAST_NOTARGET: No target</li> <li>CAST_NOTREADY: Not ready to cast</li> <li>CAST_OUTOFMANA: Not enough mana to cast spell</li> <li>CAST_OUTOFRANGE: Target is out of range</li> <li>CAST_OUTDOORS: Spell not working here (on mount ect..)</li> <li>CAST_PENDING: Casting is in progress</li> <li>CAST_RECOVER: Spell is not ready</li> <li>CAST_RESIST: Cast was resisted</li> <li>CAST_STANDING: Not standing</li> <li>CAST_STUNNED: You are stunned</li> <li>CAST_SUCCESS: The cast was a success</li> <li>CAST_TAKEHOLD: The spell did not take hold</li> <li>CAST_UNKNOWN: Unknown Spell</li> </ul>"},{"location":"plugins/community-plugins/mq2cast/#caststatus-results","title":"${Cast.Status} Results","text":"<ul> <li>I: idle and waiting for you</li> <li>A: advpath pause</li> <li>F: stick pause</li> <li>S: immobilize in progress</li> <li>M: memorize in progress</li> <li>E: item swapped</li> <li>D: ducking casting</li> <li>T: targeting</li> <li>C: spell casting in progress</li> </ul>"},{"location":"plugins/community-plugins/mq2cast/#mq2casttimer","title":"MQ2CastTimer","text":"<p>MQ2CastTimer is a plugin which allows you to check timers on active spells, and adds a Timer Window that can be used to monitor spells you have cast on others.</p>"},{"location":"plugins/community-plugins/mq2cast/#commands_1","title":"Commands","text":""},{"location":"plugins/community-plugins/mq2cast/#timer","title":"/timer","text":"<p>Syntax:</p> <p><code>/timer [on|off]</code></p> <p>Turns timer Window on / off</p> <p><code>/timer clear [all|target|pc|npc|pet]</code></p> <p>Clear Spell timers</p> <p><code>/timer autorecast [#]</code></p> <p>Set Number of seconds left on spell before recasting Default:20</p>"},{"location":"plugins/community-plugins/mq2cast/#top-level-object-spelltimer","title":"Top Level Object: ${SpellTimer}","text":"Type Member Name Description int ${SpellTimer[SpawnID,Caster,Spell Name]} Returns time (in seconds) left on the spell. Caster can be me(default), other, or any. (See examples below) <p>Examples:</p> <p><code>${SpellTimer[${Target.ID},Euphoria]}</code> <code>${SpellTimer[${Target.ID},me,Euphoria]}</code></p> <p>This will give the time remaining on the Euphoria spell that you cast on your current target (both examples do the same thing).</p> <p><code>${SpellTimer[${Target.ID},other,Euphoria]}</code></p> <p>This will give the time remaining on Euphoria on your current target, only if someone else cast it.</p> <p><code>${SpellTimer[${Target.ID},any,Euphoria]} OR ${SpellTimer[${Target.ID},All,Euphoria]}</code></p> <p>This will give the time remaining on Euphoria on your current target, no matter who cast the spell.</p> <p><code>/if (${SpellTimer[${Target.ID},Euphoria]} &lt; 15) {</code> <code>/call mq2cast Euphoria gem1 20s</code> <code>}</code></p> <p>Cast Euphoria on target if you originally cast the spell, and it has less than 15 sec left.</p> <p><code>${SpellTimer[${Target.ID},any,\"Sha's Legacy\",\"Forlorn Deeds\",\"Desolate Deeds\",\"Turgur's Insects\",\"Balance of Discord\"]}</code></p> <p>If you want to check if a target is slowed you may use somthing like this. NOTE: this is just an example</p>"},{"location":"plugins/community-plugins/mq2cast/#timer-window","title":"Timer Window","text":"<p>An example of what the Timer Window looks like is (NOTE: Links removed as they are both dead.) (DarkDevil)</p> <p>The Timer Window shows the following information:</p> <ul> <li>Time Left</li> </ul> <p>The amount of time left on the spell, in HH:MM:SS format. Eg. 00:15:32.</p> <ul> <li>Tags</li> </ul> <p>Some information on the target.</p> <ul> <li>T: This is your current target.</li> <li>N: Spell did not take hold on this target.</li> <li>I: Target is immune to this spell.</li> <li>E: Event (Show that the timer is an Event)</li> <li>GA: This target is the Group Assist.</li> <li>G1-3: This target is group marked 1-3.</li> <li>RA: This target is the Raid Assist.</li> <li> <p>R1-3: This target is raid marked 1-3.</p> </li> <li> <p>Spell Name</p> </li> </ul> <p>The name of the spell.</p> <ul> <li>Spawn Name</li> </ul> <p>The unique name of the spawn.</p> <p>The buttons/comboboxes at the bottom of the window do the following:</p> <ul> <li>Button</li> </ul> <p>Pauses and unpauses the Timer Window.</p> <ul> <li>Combobox 1</li> </ul> <p>Select what you want to do when left-clicking the line in the window:</p> <ul> <li>Target</li> <li>TargetNAB (Target nearest spawn without this spell)</li> <li>Recast spell (if memmed)</li> <li> <p>Clear (removes timer). You cannot remove an event.</p> </li> <li> <p>Combobox 2</p> </li> </ul> <p>Select what you want to do when right-clicking the line. Same choices as above.</p> <p>The Timer Settings Tab:</p> <ul> <li>Target (Current Target)</li> </ul> <p>Show Target Timers</p> <ul> <li>NPC</li> </ul> <p>Show Npc and Npc Pet Timers</p> <ul> <li>PC</li> </ul> <p>Show Pc Timers</p> <ul> <li>PET</li> </ul> <p>Show Pc Pet Timers</p> <ul> <li>Events (All Events)</li> </ul> <p>Show Events</p> <ul> <li>My Spells (Show Your Spells)</li> </ul> <p>Show My Spells</p> <ul> <li>Other's Spells (Show Other Spells)</li> </ul> <p>Show Other Spells</p> <p>An example INI entry created by the MQ2CastTimer Window is below. This contains the location, size and colors of the window.</p> <p><code>[Settings..]</code> <code>ChatTop=58</code> <code>ChatBottom=233</code> <code>ChatLeft=58</code> <code>ChatRight=580</code> <code>Locked=0</code> <code>WindowTitle=Timers</code> <code>Fades=1</code> <code>Delay=0</code> <code>Duration=500</code> <code>Alpha=255</code> <code>FadeToAlpha=255</code> <code>BGType=1</code> <code>BGTint.red=93</code> <code>BGTint.green=83</code> <code>BGTint.blue=93</code> <code>ActorModeLeft=0</code> <code>ActorModeRight=2</code> <code>DefaultGem=gem8</code> <code>ShowTarget=0</code> <code>ShowNpc=1</code> <code>ShowPC=0</code> <code>ShowPet=0</code> <code>ShowEvent=1</code> <code>ShowMySpells=1</code> <code>ShowOtherSpells=0</code></p>"},{"location":"plugins/community-plugins/mq2cast/#custom-events","title":"Custom Events","text":"<p>You can add Custom Events to the INI file in the following format:</p> <p><code>[Name of Event]</code> <code>duration=&lt;#&gt;</code> <code>event=&lt;\" event text\"&gt;</code> <code>spawntype=&lt;1=pc|2=npc&gt;</code></p> <p>The duration is in seconds. The event is the text that you see on the screen when you want the event to occur. An example is below:</p> <p><code>[NPC Gating]</code> <code>duration=5</code> <code>event=\"#SpawnName# begins to cast the gate spell.\"</code> <code>spawntype=2</code></p> <p><code>[NPC Complete Healing]</code> <code>duration=10</code> <code>event=\"#SpawnName# begins to cast a spell.\"</code> <code>spawntype=2</code></p> <p><code>[PC Complete Healing]</code> <code>duration=10</code> <code>event=\"#SpawnName# begins to cast a spell.\"</code> <code>spawntype=1</code></p> <p><code>[Redfang Despawn]</code> <code>duration=240</code> <code>event=\"An ear-piercing screech reverberates throughout the surreal cavernous Demi-Plane of Blood, announcing the arrival of Redfang.\"</code></p>"},{"location":"plugins/community-plugins/mq2chatevents/","title":"MQ2ChatEvents","text":""},{"location":"plugins/community-plugins/mq2chatevents/#description","title":"Description","text":"<p>MQ2ChatEvents The purpose of this plugin is to handle chat events in various ways. When a string (and optionally a corresponding color) is matched, several possible actions can be taken. Events are defined in the .ini file and can be enabled per character_server. I've used this as a general replacement for in-game macros, Audio Triggers, and even some tasks I wanted available outside of a running MQ macro. I realize there are other plugins that do these various pieces individually, but I liked the idea of having it all under one configuration. Parts of the code were pieced together from other plugins and I tried to give credit where appropriate.</p> <p>You can find the latest version of MQ2ChatEvents here.</p>"},{"location":"plugins/community-plugins/mq2chatevents/#features","title":"Features","text":"<p>Match strings and perform an event</p> <p><code>Play a sound</code> <code>Up to 100 different matchable strings per event</code> <code>Use in-game variables in matchable strings</code> <code>Handy for generating custom voice sound files:</code><code>https://ttsmaker.com/</code> <code>Display a popup</code> <code>Define popup text, including the full text of the matched string</code> <code>Define popup color</code> <code>Define popup duration</code> <code>Execute Commands</code> <code>Up to 100 commands per event</code> <code>Use in-game variables in commands.</code> <code>One command executed per pulse</code> <code>Display chat that gets lost while zoning</code></p> <p>This information used to be seen by OnIncomingChat() even though it was not displayed to the screen by the client. At that time, the messages could be captured and then printed after zoning was complete. Unfortunately, it looks like those messages are no longer seen by OnIncomingChat() --- It's amazing that SOE has never fixed this. I left the functionality in the plugin, but turned the default options off since it no longer works as it originally did.</p>"},{"location":"plugins/community-plugins/mq2chatevents/#commands","title":"Commands","text":"<p>Usage: /ce</p> <p><code>Sound : Toggles playing of custom sounds</code> <code>Popup : Toggles displaying of custom popups</code> <code>MissedChat : Toggles popup notification after missing chat while zoning</code> <code>MissedChatEcho : Toggles echoing of missed chat to MQ window</code> <code>Commands : Toggles executing custom commands</code> <code>Verbose : Toggles verbosity on command execution. Echos the command before executing it (mostly to test variable substitution)</code> <code>On : Turns plugin On</code> <code>Off : Turns plugin Off</code> <code>Reload : Reload INI file</code> <code>Help : Displays the in game commands and shows the current settings</code></p>"},{"location":"plugins/community-plugins/mq2chatevents/#ini","title":"INI","text":"<p>INI Event Options:</p> <p><code>MatchString#=Chat string to match</code> <code>MatchColor#=Color to match. This must be the string name of a color defined in EQData.h</code> <code>Soundfile=Location of a .wav file to play when a match is found</code> <code>PopupText=Text to display as a popup when a match is found</code> <code>PopupColor=The color of the displayed popup when a match is found (again from EQData.h)</code> <code>PopupDuration=Time in ms that the popup should remain on screen</code> <code>Command#=Command to execute when a match is found.</code></p>"},{"location":"plugins/community-plugins/mq2chatevents/#examples","title":"Examples","text":"<p><code>[JoinGroup]</code> <code>MatchString1=${PuppetMaster} invites you to join a group</code> <code>Command1=/nomodkey /notify GroupWindow GW_FollowButton leftmouseup</code></p> <p><code>[AttackThis]</code> <code>MatchString1=AttackThis</code> <code>Command1=/squelch /stick off</code> <code>Command2=/melee on</code> <code>Command3=/if (${Me.CleanName.Equal[${MA1}]}) /target ${Spawn[${MATarget}]}</code> <code>Command4=/if (${Me.CleanName.Equal[${MA1}]}) /face</code> <code>Command5=/if (${Me.CleanName.Equal[${MA1}]}) /stick</code> <code>Command7=/if (${Me.CleanName.Equal[${MA1}]}) /killthis</code> <code>Command8=/rdpause off</code></p> <p><code>[TellIn]</code> <code>MatchString1=tells you</code> <code>MatchString2=told you</code> <code>MatchColor1=USERCOLOR_TELL</code> <code>Soundfile=g:\\\\mq2\\\\sounds\\\\message-inbound.wav</code> <code>PopupText=</code> <code>PopupColor=</code> <code>PopupDuration=</code> <code>Command1=/if (${Me.CleanName.NotEqual[${PuppetMaster}]}) /bct ${PuppetMaster} \"Received a TELL on &lt;${Me.CleanName}&gt;: #FULLTEXT#\"</code></p> <p><code>[TellOut]</code> <code>MatchString1=You tell</code> <code>MatchString2=You told</code> <code>MatchColor1=USERCOLOR_ECHO_TELL</code> <code>Soundfile=g:\\\\mq2\\\\sounds\\\\message-outbound.wav</code> <code>PopupText=</code> <code>PopupColor=</code> <code>PopupDuration=</code> <code>Command=</code></p> <p><code>[TellRelay]</code> <code>MatchString1=Received a TELL on &lt;</code> <code>PopupText=---Received a tell on a bot!---</code> <code>Soundfile=g:\\\\mq2\\\\sounds\\\\message-inbound.wav</code> <code>PopupDuration=10000</code></p> <p><code>[OMMGaze]</code> <code>MatchString1=You feel a gaze of deadly power focusing on you.</code> <code>Soundfile=d:\\\\mq2\\\\sounds\\\\gaze.wav</code> <code>PopupText=---!!! GAZE !!! Click your mask now!---</code> <code>PopupColor=CONCOLOR_RED</code> <code>PopupDuration=7000</code> <code>Command1=/nomodkey /itemnotify ${FindItem[Mirrored Mask].InvSlot} rightmouseup</code></p> <p><code>[gate]</code> <code>MatchString1=begins to cast the gate spell.</code> <code>Soundfile=g:\\\\mq2\\\\sounds\\\\gate.wav</code> <code>PopupText=#FULLTEXT#</code> <code>PopupColor=</code> <code>PopupDuration=</code> <code>Command=</code></p> <p><code>[GoM]</code> <code>MatchString1=You have been granted a gift of mana!</code> <code>MatchString2=You have been granted a gift of radiant mana!</code> <code>MatchString3=You have been granted a gift of exquisite radiant mana!</code> <code>MatchString4=You have been granted a gift of amazing exquisite radiant mana!</code> <code>MatchString5=You've been granted a gift of dreamlike exquisite radiant mana!</code> <code>MatchString6=You've been granted a gift of ascendant exquisite radiant mana!</code> <code>MatchString7=You are granted a gift of phantasmal exquisite radiant mana</code> <code>MatchString8=You are granted a gift of gracious mana</code> <code>Soundfile=g:\\\\mq2\\\\sounds\\\\hoo-ah1.wav</code> <code>PopupText=~~ Gift of Mana! ~~</code> <code>PopupColor=</code> <code>PopupDuration=</code> <code>Command=</code></p> <p><code>[DT]</code> <code>MatchString1=A dire disease creeps through your veins</code> <code>MatchString2=You feel the cold grip of death looming over you.</code> <code>MatchString3=You sense your doom approaching</code> <code>Soundfile=g:\\\\mq2\\\\sounds\\\\deathtouch.wav</code> <code>PopupText=~~ DT ~~</code> <code>PopupColor=</code> <code>PopupDuration=</code> <code>Command1=/bca I'm Death Touched!</code></p> <p><code>[DA]</code> <code>MatchString1=You can't cast spells while invulnerable!</code> <code>Soundfile=g:\\\\mq2\\\\sounds\\\\DA.wav</code> <code>PopupText=</code> <code>PopupColor=</code> <code>PopupDuration=</code> <code>Command=</code></p> <p><code>[MercDefDisc]</code> <code>MatchString1=tells the group, 'Initiating Fortitude Discipline.'</code> <code>MatchString2=tells the group, 'Initiating Final Stand Discipline Rk. II.'</code> <code>Soundfile=g:\\\\mq2\\\\sounds\\\\MercDefensiveDisc.wav</code> <code>PopupText=Merc defensive disc</code> <code>PopupColor=</code> <code>PopupDuration=5000</code></p>"},{"location":"plugins/community-plugins/mq2cursor/","title":"MQ2Cursor","text":""},{"location":"plugins/community-plugins/mq2cursor/#description","title":"Description","text":"<p>MQ2Cursor by s0rCieR is a plugin that tries to keep your cursor free of items. It was inspired by the plugins MQ2FeedMe and MQ2AutoDestroy.</p> <ul> <li>It also tries to keep you above a certain hunger/thirst level (so that you don't eat your stat food).</li> <li>Additionally, it can be used to loot your own corpse.</li> </ul> <p>MQ2Cursor can be found here, in the VIP forums.</p> <p>Features:</p> <ul> <li>Auto Keep item from list up to a certain quantity.</li> <li>Consume, Drop, or Destroy when quantity is reached.</li> <li>Auto Sleep with certain windows are open (Spellbook, Casting, Bank, Give, Merchant, Trade, GuildTributemaster, TributeMaster, GuildBank, Inventory but not Loot window, Loot window but not Inventory).</li> <li>Quiet/Silent Operating Mode and Global On/Off flags.</li> <li>Autoloot your corpse when loot Window Up.</li> </ul> <p>All settings are saved to the INI file _.ini.</p>"},{"location":"plugins/community-plugins/mq2cursor/#commands","title":"Commands","text":"<p><code>/cursor on|off|auto</code> - Turns on or off the plugin. <code>/cursor silent on|off|auto</code> - Turn Quiet Mode On/Off or Toggle. <code>/cursor feeding on|off|auto</code> - Turn Feeding Mode On/Off or Toggle. <code>/cursor dropping on|off|auto</code> - Turn Dropping Mode On/Off or Toggle. <code>/cursor load|save</code> - Load/Save information from the INI file. <code>/cursor reim(ove)|del(ete) id</code> - Remove ID or (Item on Cursor). <code>/cursor list [partial name]</code> - List items in the cursor list along with their status (drop, protected, etc). A partial name can be supplied to further narrow down the list, but please remember that the partial name is case sensitive. <code>/cursor al(l(ways)</code> - Always keep those (Item On Cursor). <code>/cursor # [st(acks)]</code> - Keep quantity (Item On Cursor). <code>/cursor random #</code> - Random humanish delay in ms 0=off. <code>/keep</code> - Keep Item on Cursor (and don't add it to the list). <code>/lootme on|off|auto</code> - Turn Plugin On/Off or Toggle. <code>/lootme silent on|off|auto</code> - Turn Quiet Mode On/Off or Toggle.</p>"},{"location":"plugins/community-plugins/mq2cursor/#examples","title":"Examples","text":"<p><code>/cursor 2 st</code> <code>/cursor rem 1685</code> <code>/cursor silent on</code> <code>/cursor list Water</code></p>"},{"location":"plugins/community-plugins/mq2debuffs/","title":"MQ2Debuffs","text":""},{"location":"plugins/community-plugins/mq2debuffs/#description","title":"Description","text":"<p>This plugin is designed to help with curing detrimental effects. It is used to reports harmful effects, number of curse/disease/poison counters and various other detrimentals.</p> <p>Author: PinkFloyd33 Author: s0rcier Version: 1.2 Date: 20061223 v2.0 - Eqmule 07-22-2016 - Added string safety.</p>"},{"location":"plugins/community-plugins/mq2debuffs/#mq2debuffs_1","title":"MQ2Debuffs","text":"<p>MQ2Debuffs was posted to the VIP section of MQ2 by pinkfloydx33 you can read the thread by following This Link. (VIP REQUIRED)</p> <p>Updated Apr 03, 2016 by Trevyn here Updated July 22, 2016 by EQMule: included in MQ2Update</p>"},{"location":"plugins/community-plugins/mq2debuffs/#top-level-object-debuff","title":"Top-Level Object: ${Debuff}","text":"Type Member Name Description bool ${Debuff} True if yo uhave debuffs on that have counters on them, false if not. int Poisoned # of poison counters on you. int Diseased # of disease counters on you. int Cursed # of curse counters on you. int Corrupted # of corruption counters on you. int Poisons # of poison spells affecting you. int Diseases # of disease spells affecting you. int Curses # of curse spells affecting you. int Corruptions # of corruption spells affecting you. int Count # of debuffs that need cured, does not include snare. int HPDrain Amount of HP you are losing per tick from debuffs. This value is POSITIVE. int HPDrain[Disease|Poison|Curse|All] Number of specific counters effecting HP. int ManaDrain Amount of Mana you are losing per tick from debuffs. This value is POSITIVE. int ManaDrain[Disease|Poison|Curse|All] Number of specific counters effecting Mana. int EnduranceDrain Amount of Endurance you are losing per tick from debuffs. This value is POSITIVE. int EnduranceDrain[Disease|Poison|Curse|All] Number of specific counters effecting Endurance. bool Slowed True if you are Slowed (melee attacks), False if not. bool Snared True if your are Snared, False if not. bool ManaCost True if your Spell Mana Cost has been raised, False if not. bool CastingLevel True if your Effective Casting Level has been reduced, False if not. bool HealingEff True if your Healing Effectiveness has been reduced, False if not. bool SpellDmgEff True if your Spell Damage Effectiveness has been reduced, False if not. bool Blind True if you are Blind, False if not. bool Charmed True if you are Charmed, False if not. bool Feared True if you are Feared, False if not. bool Silenced True if you are Silenced, False if not. bool Invulnerable True if you are Invulnerable, False if not. bool Detrimentals True if you have any detrimental effects on you, False if not. int Counters # of poison/disease/curse/corruption counters on yourself. bool Rooted True if you are Rooted, False if not. <p><code>The TLO has been enhanced, revamped, recored, to be able to get Debuff Informations others then selfbuff.</code></p> <p><code>Debuff.X or Debuff[self].X or Debuff[myself].X : return infos for buff from self.</code> <code>Debuff[pet].X or Debuff[warder].X : return infos for buff from pet.</code> <code>Debuff[2899].X : return infos for buff for spell \"feeblemind\".</code> <code>Debuff[5682].X : return infos for buff for spell \"Chains of Anguish\".</code> <code>Debuff[5682 2899 887].X : return infos for buff from this bufflistid.</code></p>"},{"location":"plugins/community-plugins/mq2dpsadv/","title":"MQ2DPSAdv","text":""},{"location":"plugins/community-plugins/mq2dpsadv/#description","title":"Description","text":"<p>MQ2DPSAdv CREATED BY WARNEN 2008-2009</p> <p>You can find the latest version of MQ2DPSAdv here.</p>"},{"location":"plugins/community-plugins/mq2dpsadv/#commands","title":"Commands","text":"<p><code>/dpsadv show</code> - Shows the DPSAdv window. <code>/dpsadv colors</code> - show the Raid Class Colors Window. <code>/dpsadv reload</code> - Reloads the INI file. <code>/dpsadv save</code> - Saves current settings to the INI file.</p> <p>Utilizes an ingame UI window to interact with the plugin. You will need to copy the \"MQUI_DPSAdvWnd.xml\" from the forum post, and place it inside your preferred UI folder. Once ingame, load the plugin, then reload your UI.</p>"},{"location":"plugins/community-plugins/mq2dpsadv/#ini","title":"INI","text":"<p><code>[YourToonsName]</code> <code>Saved=1</code> <code>Top=371</code> <code>Bottom=611</code> <code>Left=221</code> <code>Right=451</code> <code>Alpha=255</code> <code>FadeToAlpha=255</code> <code>CListType=0</code> <code>LiveUpdate=1</code> <code>Show=0</code> <code>ShowMeTop=0</code> <code>ShowMeMin=0</code> <code>ShowMeMinNum=0</code> <code>UseRaidColors=0</code> <code>ShowTotal=0</code> <code>FightIA=8</code> <code>FightTO=60</code> <code>EntTO=7</code></p>"},{"location":"plugins/community-plugins/mq2events/","title":"MQ2Events","text":""},{"location":"plugins/community-plugins/mq2events/#description","title":"Description","text":"<p>MQ2Events allows you to configure a reaction to any text-based event. For example, if you want to /cry when the text \"has become ENRAGED\" appears, you're in the right place.</p>"},{"location":"plugins/community-plugins/mq2events/#commands","title":"Commands","text":"<p><code>/event [option] [&lt;name&gt; &lt;trigger text|command text&gt;]</code> - Adds, lists, deletes, and controls all events. <code>/eventdebug [on|off]</code> - Turns event debugging on or off.</p>"},{"location":"plugins/community-plugins/mq2events/#variables","title":"Variables","text":"<pre><code>EventArg1 these are set acording to last event triggered and correspond to #1# .. #9#\nEventArg2 these are not cleared so you can have one event use #9# and once set it will stay set until another #9# is encountered.\nEventArg3\nEventArg4\nEventArg5\nEventArg6\nEventArg7\nEventArg8\nEventArg9\n</code></pre>"},{"location":"plugins/community-plugins/mq2events/#ini-file","title":"INI file","text":"<p>MQ2Events_CharacterName.ini</p> <p>Format:</p> <pre><code>[eventname]\ntrigger=trigger text\ncommand=command to execute when triggered\n</code></pre>"},{"location":"plugins/community-plugins/mq2events/#examples","title":"Examples","text":""},{"location":"plugins/community-plugins/mq2events/#ini-entries","title":"INI Entries","text":"<pre><code>[enrage]\ntrigger=|${Target.DisplayName}| has become ENRAGED#2#\ncommand=/attack off\n\n[relaytell]\ntrigger=#1# tells you, #2#\ncommand=/tell relaytargetname ${EventArg1} told me, '${EventArg2.Mid[2,${Math.Calc[${EventArg2.Length}-2]}]}'\n\n[group]\ntrigger=#1#To join the group, click on the 'FOLLOW' option, or 'DISBAND' to cancel.#2#\ncommand=/timed ${Math.Calc[3+${Math.Rand[4]}].Int}s /keypress ctrl+i\n\n[raid]\ntrigger=#1#To join the raid click the accept button in the raid window or type /raidaccept.#2#\ncommand=/timed ${Math.Calc[3+${Math.Rand[4]}].Int}s /raidaccept\n</code></pre>"},{"location":"plugins/community-plugins/mq2exchange/","title":"MQ2Exchange","text":""},{"location":"plugins/community-plugins/mq2exchange/#description","title":"Description","text":"<p>MQ2Exchange, by Wassup, allows you to exchange items or unequip items without having any inventory windows or bags opened.</p> <p>The thread where this plugin began can be found in the VIP forums here. The current code being maintained by pms can be found here.</p>"},{"location":"plugins/community-plugins/mq2exchange/#commands","title":"Commands","text":"<p><code>/exchange [itemname|itemID] [slotname|slotnumber]</code> - This exchanges the itemname/itemID into the slotname/slotnumber you define (see Slot Names for names/numbers). If there is an item in that slot already, it will be placed in the first available inventory/bag slot that is of sufficient size for the item.</p> <p>Note: Item names that contain spaces must be enclosed in quotation marks, otherwise quotations marks are not required.</p> <p><code>/unequip [slotname|slotnumber]</code> - Unequips the item in the slotname/slotnumber. <code>/exchange list</code> - List of all equipment slot names and slot numbers. <code>/exchange help</code> - List of all commands available.</p>"},{"location":"plugins/community-plugins/mq2exchange/#examples","title":"Examples","text":"<p>The following two examples will exchange Staff of Eternal Flames to the mainhand slot:</p> <p><code>/exchange \"staff of eternal flames\" mainhand</code> <code>/exchange 24789 13</code></p> <p>The following two examples will unequip the item in your offhand slot:</p> <p><code>/unequip offhand</code> <code>/unequip 14</code></p>"},{"location":"plugins/community-plugins/mq2fakelink/","title":"MQ2FakeLink","text":"<p>MQ2Fakelink Creates fake links to \"highlight\" text Source can be found at MQ2::Development::Plugins Forum Here</p>"},{"location":"plugins/community-plugins/mq2fakelink/#developers","title":"Developers","text":"<p>Dok - 08-13-2004 - Original Source</p>"},{"location":"plugins/community-plugins/mq2fakelink/#commands","title":"Commands","text":"<p><code>/fake &lt;command&gt; &lt;command&gt;</code> - Must start with a / (as in /g, /gu, /1, etc). Use [[ and ]] to create links for text between. Use &lt;&gt; before to link to a different object.</p>"},{"location":"plugins/community-plugins/mq2fakelink/#example","title":"Example","text":"<p><code>/fake /rs &lt; &lt;SPELL: Heal Complete&gt; &gt;[[CHEAL]] on [[%T]]</code></p> <p>Will link CHEAL and %T over /raidsay</p>"},{"location":"plugins/community-plugins/mq2fakelink/#changes","title":"Changes","text":""},{"location":"plugins/community-plugins/mq2fakelink/#20040813","title":"2004.08.13","text":"<p>Added ability to link any object with different name</p> <p>Changed trigger from [ and ] to [[ and ]]</p>"},{"location":"plugins/community-plugins/mq2fakelink/#20040813_1","title":"2004.08.13","text":"<p>Initial Release</p>"},{"location":"plugins/community-plugins/mq2feedme/","title":"MQ2FeedMe","text":""},{"location":"plugins/community-plugins/mq2feedme/#description","title":"Description","text":"<p>MQ2Feedme, by s0rCieR, is a plugin which will eat/drink items that you specify, in order to keep your hunger/thirst above a certain level (and thus not eat your stat food).</p> <ul> <li>It can be found here. **An updated version of the plugin, with a few changes, can be found in this post by jaq.**</li> </ul>"},{"location":"plugins/community-plugins/mq2feedme/#commands","title":"Commands","text":"<p><code>/autodrink</code> - Force manual drinking. <code>/autodrink 0</code> - Turn off autodrinking. <code>/autodrink #</code> - Set thirst level. When ${Me.Thirst} is below this, the plugin will drink for you. <code>/autofeed</code> - Force manual feeding. <code>/autofeed 0</code> - Turn off autofeeding. <code>/autofeed #</code> - Set hunger level, below which the plugin will automatically eat for you.</p>"},{"location":"plugins/community-plugins/mq2feedme/#ini-file","title":"INI File","text":"<p>This plugin stores its information in the file MQ2FeedMe.ini. This INI file contains a list of all the food/drink that should be consumed (see the sample INI in the first page of the plugin post).</p>"},{"location":"plugins/community-plugins/mq2gmcheck/","title":"MQ2GMCheck","text":""},{"location":"plugins/community-plugins/mq2gmcheck/#description","title":"Description","text":"<p>MQ2GMCheck Created by Bushdaka</p> <p>Check to see if a GM is in the zone. This is not fool proof. It is absolutely true that a GM could be right in front of you and you'd never know it. This plugin will simply find those who are in the zone and not gm-invis, or who just came into the zone and were not gm-invised at the time. If a GM comes into the zone already gm-invised, we will not know about that.</p> <p>You can find the latest version of MQ2GMCheck here.</p>"},{"location":"plugins/community-plugins/mq2gmcheck/#commands","title":"Commands","text":"<p><code>/gmcheck on|off</code> - enable/disable scanning for GMs <code>/gmcheck char on|off</code> - toggle chat channel alert <code>/gmcheck chattimer X</code> - set frequency of chant channel alert, default=15s <code>/gmcheck popup on|off</code> - toggle popup alert <code>/gmcheck popuptimer X</code> - set frequency of popup alert, default is 30s <code>/gmcheck audio on|off</code> - toggle audio alert <code>/gmcheck audiotimer X</code> - set frequency of audio alert, default is 30s <code>/gmcheck list</code> - list all known GMs currently in zone <code>/gmcheck reset</code> - reset list of known GMs in zone <code>/gmcheck history</code> - complete history dump <code>/gmcheck zone</code> - history of GMs in this zone <code>/gmcheck server</code> - history of GMs on this server <code>/gmcheck servers</code> - history of GMs on all servers <code>/gmcheck timer X</code> - set scan delay to X seconds, default is 2s <code>/gmcheck help</code> - show the available commands</p>"},{"location":"plugins/community-plugins/mq2gmcheck/#top-level-object-gmcheck","title":"Top-Level Object: ${GMCheck}","text":"Type Member Name Description string ${GMCheck} returns TRUE, FALSE, or DISABLED. string Status returns TRUE, FALSE, or DISABLED. int Count returns the number of GMs known in this zone. <p>audio - put an entry for GMCHECK in the MQ2Sound.ini</p>"},{"location":"plugins/community-plugins/mq2hudmove/","title":"MQ2HUDMove","text":""},{"location":"plugins/community-plugins/mq2hudmove/#description","title":"Description","text":"<p>MQ2HUDMove by ieatacid allows you to move HUDs or sections of HUDs easily. The plugin can be downloaded here.</p> <ul> <li>It requires the MQ2HUD plugin</li> </ul> <p>Features:</p> <ul> <li>HUDs can be moved to the location of the cursor, or up/down/left/right by the specified number of units.</li> <li>Individual elements can be moved, or user-specified sections</li> <li>HUD colors can also be changed to a number of preset colors.</li> </ul>"},{"location":"plugins/community-plugins/mq2hudmove/#commands","title":"Commands","text":"<p><code>/hudmove list</code> - List all HUDs in the loaded HUD set and all sections in MQ2HUD.ini <code>/hudlist</code> - Same as above <code>/hudmove</code> - Move a single HUD <code>/hudmove &lt;name&gt; delete</code> - Delete a single HUD <code>/hudmove &lt;name&gt; &lt;direction&gt; &lt;#&gt;</code> - Move a single HUD a specified number of units in whatever direction <code>/hudcolor list</code> - List preset colors <code>/hudcolor &lt;name&gt; &lt;color name&gt;</code> - Change HUD to any of the preset colors.</p>"},{"location":"plugins/community-plugins/mq2hudmove/#examples","title":"Examples","text":"<p>If we typed \"/hudmove ;section1 right 100\", it would move the HUD elements \"ManaRegen\" and \"BuffCount\" 100 units to the right.</p> <p><code>[elements]</code> <code>Level=3,339,649,0,255,255,${If[${Target.ID},${Target.Level} - ${Target.Class} - ${Target.Distance} - ${Target.LineOfSight},]}</code> <code>Raid=3,1263,468,0,255,255,${If[${Raid.Members}&gt;0,In Raid - ${Raid.Members},]}</code> <code>TarID=3,172,337,0,255,0,ID: ${Target.ID}</code> <code>;section1</code> <code>ManaRegen=3,272,272,0,255,0,MR: ${Me.ManaRegen}</code> <code>BuffCount=3,272,367,0,255,0,Buffs: ${Me.CountBuffs}</code> <code>;section2</code> <code>ER=3,172,342,0,255,0,ER: ${Me.AltAbilityTimer[Eldritch Rune].TimeHMS}</code> <code>MGB=3,172,357,0,255,0,MGB: ${Me.AltAbilityTimer[Mass Group Buff].TimeHMS}</code></p> <ul> <li>For now, the only requirement for defining custom sections is that it follows this format:</li> </ul> <p><code>;name</code></p>"},{"location":"plugins/community-plugins/mq2linkdb/","title":"MQ2LinkDB","text":""},{"location":"plugins/community-plugins/mq2linkdb/#description","title":"Description","text":"<p>MQ2LinkDB allows you to keep your own personalised database of item links. There are two versions of the plugin:</p> <ul> <li> <p>v1: The original, by Ziggy is available here</p> </li> <li> <p>v2: An updated version of the plugin, which includes a TLO and linkbot functionality, was created by rswiders and is available in the VIP Forums here</p> </li> </ul>"},{"location":"plugins/community-plugins/mq2linkdb/#features","title":"Features","text":"<ul> <li>Able to import the huge database of links from http://eqitems.13<sup>th</sup>-floor.org/ and add them.</li> <li>Watch chat for item links and add them automatically.</li> <li>Links are returned as tells and will go into the tell window. They do not go into your log file, nor does LinkDB show up when you try and reply.</li> </ul>"},{"location":"plugins/community-plugins/mq2linkdb/#commands","title":"Commands","text":"<p><code>/link</code> - Display statistics</p> <p><code>/link /import</code> - Import items.txt as downloaded from 13<sup>th</sup>-Floor. To import this file, do the following:</p> <ol> <li>Download the items.zip file directly using this link</li> <li>Unzip the items.txt file to the \\Release directory</li> <li>In game, type /link /import and wait a few seconds for the items to be added</li> <li>Out of game, edit the MQ2LinkDB.txt file and: 1. Remove the first line (ends in \"wornlevel\") 2. Search for \"iksar left hand\" and delete the 3 lines that end in '=\\ <code>/link /max #</code> - Set maximum number of results (default 10) <code>/link [_search-string_]</code> - Find items containg search-string</li> </ol>"},{"location":"plugins/community-plugins/mq2linkdb/#added-by-v2","title":"Added by v2","text":"<p><code>/link /scan [on|off]</code> - Turn on and off scanning incoming chat <code>/link /click [on|off]</code> - Click on the link generated?</p>"},{"location":"plugins/community-plugins/mq2linkdb/#top-level-object-linkdb","title":"Top-Level Object: ${LinkDB}","text":"<p>Note: The TLO is only available in v2.</p> Type Member Name Description string ${LinkDB[name]} Display the link found by name. use =name for an exact match"},{"location":"plugins/community-plugins/mq2linkdb/#examples","title":"Examples","text":"<p><code>/link baby joseph sayer</code> - You will get a tell with a link to the Baby Joseph Sayer.</p> <p><code>/shout OMG I'm a dork! I have ${LinkDB[=Baby Joseph Sayer]} in my pack. Ha!</code> - If the item is not found, the TLO returns an empty string, so you probably don't want to be directly shouting about Baby Joseph Sayer in your backpack. If you do and misspell his name, you will end up shouting about an empty string which isn't recommended.</p>"},{"location":"plugins/community-plugins/mq2medley/","title":"MQ2Medley","text":""},{"location":"plugins/community-plugins/mq2medley/#description","title":"Description","text":"<p>MQ2Medley [Created by winnower, updated by Dewey2461] Song scheduler for the modern bard. \"This plugin grew out my frustration with MQ2Twist and it being hard to change from twist to twist while still being efficient and not recasting the songs that already had signification duration left. Was hard to use aria, \"A Tune Struck in My Head\", and burn twists effectively\"</p> <p>This is the next evolution of MQ2Twist.</p>"},{"location":"plugins/community-plugins/mq2medley/#features","title":"Features","text":"<ul> <li>Set conditions for each song in the medley. Only want to cast on named? Only want to do insult if mana &gt; 10%? Only want to cast dots if attack is on? Only want to cast mana regen when not in combat?</li> <li>Advanced queuing support. Can specific target of queued spells for mez or cure and plugin will switch back to existing target with plugin reflexes. Optional interrupt when queing song.</li> <li>Adapt your song song set without missing a beat when under the effect of \"A tune stuck in my head\"</li> <li>Priority scheduling. Did you just mez 3 mobs? Switch back to your most important spells automatically</li> <li>Automatically switch to maintaining 7 songs when Tune is up</li> <li>Switch from medley to medley while still remembering the duration of current songs. Named up? just do switch to your burn medley to introduce new songs to the mix, while knowing what songs are already up.</li> </ul> <p>You can find the latest version of MQ2Medley here.</p>"},{"location":"plugins/community-plugins/mq2medley/#plugin-interaction","title":"Plugin Interaction","text":"<p>MQ2Medley has no plugin dependencies</p> <p>MQ2Twist - should be able to coexist, just don't /twist and /medley at the same time MQ2Cast - recommend not using this on your bard. use \"/medley queue\" to cast items and aa with cast time. use /alt activate or /cast item to cast instant cast AA and items, can do this even while medley is active (bards are awesome like that)</p>"},{"location":"plugins/community-plugins/mq2medley/#commands","title":"Commands","text":"<p><code>/medley name</code> - Sing the given medley <code>/medley queue \"song/item/aa name\" [-targetid|spawnid] [-interrupt]</code> - add songs to queue to cast once <code>/medley stop/end/off</code> - stop singing <code>/medley</code> - Resume the medley after using /medley stop <code>/medley delay #</code> - 10ths of a second, minimum of 0, default 3, how long after casting a spell to wait to cast next spell <code>/medley reload</code> - reload the INI file <code>/medley quiet</code> - Toggles songs listing for medley and queued songs <code>/melody debug</code> - now toggles on/off debugging information, saves its state</p>"},{"location":"plugins/community-plugins/mq2medley/#examples","title":"Examples","text":"<p><code>/medley melee</code> - play medley defined in [MQ2Medley-melee] ini setion <code>/medley queue \"Dirge of the Sleepwalker\" -interrupt</code> - Interrupt current song and cast AA \"Dirge of the Sleepwaler\" <code>/medley queue \"Slumber of Silisia\" -targetid|${Me.XTarget[2].ID}</code> - When current song ends, will mez XTarget[2], briefly switching target to XTraget[2] then switching back to current target. Target will be switched for one pulse, which is typically less than 20ms <code>/medley queue \"Blade of Vesagran\"</code> - Add epic click to queue <code>/medley queue \"Lesson of the Devoted\"</code> - Lesson of the Devoted AA will be added to the twist queue and sung when current song finished</p>"},{"location":"plugins/community-plugins/mq2medley/#top-level-object-medley","title":"Top-Level Object: ${Medley}","text":"Type Member Name Description string Medley String of current medley - false (bool) if no current medley double TTQE Time in seconds until queue is empty, this is estimate only. If performating normal medley, this will be 0.0 boolean Active true if MQ2Medley is currently trying to cast spells int Tune Deprecated - always 0. \"Tune Stuck in Head\" was changed to passive AA"},{"location":"plugins/community-plugins/mq2medley/#ini-format","title":"INI Format","text":"<p>Can define multiply medleys in section named MQ2Medley-medleyname. Define up to 20 songs, song1-song20 Each song has 3 parts separated by carrot(^) symbol * Part 1: Song, Item or AA name * Part 2: Duration the song lasts, this must be an expression like you would send to ${Math.Calc[part2]}. This how long you expect the buff to last. Notice use of ${Medley.Tune} in my example to increase duration if A Tune Stuck in my Head is up. * Part 3: Condition for this song to cast. Also an expression for Math.Calc</p>"},{"location":"plugins/community-plugins/mq2medley/#scheduling","title":"Scheduling","text":"<p>Songs will cast in priority order, song1 &gt; song2 &gt; ... &gt; song20 Songs that are not read, will be skipped (Crescendo, Items, AA, etc) Songs that still have active duration will be skipped (typically will start casting a song if less than 6 seconds left on their duration) If all songs are active, then will cast the one that will expire soonest.</p>"},{"location":"plugins/community-plugins/mq2medley/#ini-example","title":"INI Example","text":"<p><code>[MQ2Medley-melee]</code> <code>songif=!${Me.Invis}</code> <code>song1=possessed dreadstone minstrel's rapier^8^${Target.Type.Equal[NPC]} &amp;&amp; (${Target.PctHPs}&lt;98) &amp;&amp; !${Target.Slowed.ID}</code> <code>song2=Rapier of Somber Notes^60^${Spell[Symphony of Battle].Stacks}&amp;&amp;!${Me.Buff[Symphony of Battle].ID}</code> <code>song3=Selo's Sonata^60^${Spell[Selo's Sonata].Stacks}</code> <code>song4=Dichotomic Psalm^60^1</code> <code>song5=Tune Stuck In Your Head^780^1</code> <code>song6=War March of Jocelyn Rk. II^18+(6*${Medley.Tune})^1</code> <code>song7=Aria of Maetanrus Rk. II^13 + (6*${Medley.Tune})^1</code> <code>song8=Blade of Vesagran^120^${Target.Type.Equal[NPC]}&amp;&amp;${Target.PctHPs}&lt;98&amp;&amp;(!${SpawnCount[group pc shaman radius 100]}||${Me.Song[Prophet's Gift of the Ruchu].ID})</code> <code>song9=Boastful Bellow^18^${Target.Type.Equal[NPC]} &amp;&amp; ${Target.PctHPs}&lt;98</code> <code>song10=Bladed Song^18^${Target.Type.Equal[NPC]} &amp;&amp; ${Target.PctHPs}&lt;98</code> <code>song11=Fierce Eye^18^${Target.Type.Equal[NPC]} &amp;&amp; ${Target.PctHPs}&lt;98</code> <code>song12=Fundament: Third Spire of the Minstrels^18^${Target.Type.Equal[NPC]} &amp;&amp; ${Target.PctHPs}&lt;98</code> <code>song13=Funeral Dirge^18^${Target.Type.Equal[NPC]} &amp;&amp; ${Target.PctHPs}&lt;98</code> <code>song14=Quick Time^18^${Target.Type.Equal[NPC]} &amp;&amp; ${Target.PctHPs}&lt;98</code> <code>song15=Song of Stone^18^${Target.Type.Equal[NPC]} &amp;&amp; ${Target.PctHPs}&lt;98</code> <code>song16=Fjilnauk's Song of Suffering Rk. II^18^1</code> <code>song17=Silisia's Lively Crescendo^45^1</code> <code>song18=Arcane Melody Rk. II^18 + (6*${Medley.Tune})^1</code></p>"},{"location":"plugins/community-plugins/mq2melee/","title":"MQ2Melee","text":""},{"location":"plugins/community-plugins/mq2melee/#description","title":"Description","text":"<p>MQ2Melee, written by s0rCieR, is designed to provide intelligent use of SHORT TIME REUSE MELEE ABILITIES and PET HANDLING during combat, depending on current combat conditions. It was developed to replace melee-oriented functions typically used in macros.</p> <ul> <li>MQ2Melee 7.09 Updated by Maskoi 02/17/2016 can be found here, in the VIP Plugin Forum.</li> <li>6.0 Updated by Teichou 12/02/2012 for RoF, can be found here</li> <li>5.0 and so on can be found here</li> <li>Previous versions can be found here.</li> </ul>"},{"location":"plugins/community-plugins/mq2melee/#history","title":"History","text":"<p>The inspiration for MQ2Melee was MQ2AutoSkills and MQ2ThrowIt. All credit for the concepts should go to Cr4zyb4rd and Bushdaka, authors of those plugins.</p>"},{"location":"plugins/community-plugins/mq2melee/#donations","title":"Donations","text":"<p>s0rcier is the author. Teichou and Maskoi is the current maintainer.</p> <p>If you want to give them money, look them up.</p>"},{"location":"plugins/community-plugins/mq2melee/#special-thanks","title":"Special Thanks","text":"<ul> <li>Thumbs up and many thanks to the BETA Tester Team: A_Druid_00, Dark2phoenix, DigitalMocking, Lacky, Moeymoejoe, Outlander and Warauinu.</li> <li>Thanks to those plugin authors Busdaka, Cr4zyb4rd, Outlander, pms and Wassup for providing inspiration and help.</li> <li>And finally thanks to Dark2phoenix and Wasted for updating and maintaining this wiki page.</li> </ul>"},{"location":"plugins/community-plugins/mq2melee/#prerequisites","title":"Prerequisites","text":"<ol> <li>You must have 1 point trained in any trainable Combat Ability you would like to use</li> <li>You must have purchased the Alternate Ability you would like to use</li> <li>You must have trained the Combat Discipline you would like to use</li> <li>You meet any prerequisites for the use of the ability (i.e. can't slam from a mount, can't bash without a shield or a two handed weapon and the AA ability, can't backstab without being behind target with a piercing weapon, etc)</li> <li>MQ2MoveUtils:v11 plugin is needed to use /stick parameters Can be found here.</li> <li>MQ2Cast is required to cast spells, activate Alternate Abilities or click items. Can be found here.</li> <li>MQ2Exchange is required to find and swap items if using MQ2Cast to click items. Can be found here.</li> <li>MQ2BagWindow is required for finding and swapping items. here.</li> <li>moveitems.h is required for swapping items and compiling. Can be found here.</li> </ol>"},{"location":"plugins/community-plugins/mq2melee/#features","title":"Features","text":"<ul> <li>Auto use abilities according to user settings and game conditions.</li> <li>Auto-equip defined items for bashing, backstabbing or ranged attack.</li> <li>Built in user conditions to restrain the use of certain abilities.</li> <li>CHAT MONITORING:<ul> <li>Auto-stand on Failed/Broken Feign Death.</li> <li>Monitoring of \"Begin to Cast\" messages for automatic Bash/Slam/Kick or casting of defined stuns.</li> <li>Automatic turning on/off of Attack on Enrage/Infuriate.</li> </ul> </li> <li>MELEE:<ul> <li>Auto-equipping of weapon set\\(s\\) prior to engaging \\(aggro/non-aggro sets\\).</li> <li>Auto-use of defined combat or other abilities.</li> <li>User-configurable /stick arguments.</li> </ul> </li> <li>MELEE \\(AGGRO MODE\\):<ul> <li>Auto Taunt when you loose aggro on target.</li> <li>Configurable spells to cast to gain/maintain aggro.</li> </ul> </li> <li>MELEE \\(NON AGGRO MODE\\):<ul> <li>Back off/Feign/Evade fight if your health goes below a point.</li> <li>Auto Resume fight if your health goes back above a point.</li> </ul> </li> <li>RANGED:<ul> <li>Toggle between Melee/Ranged mode according to Target distance.</li> <li>Swap In/Out defined ranged items \\(bow/throwing\\).</li> <li>Auto refill ammunition slot when less than 80 in a stack.</li> <li>Built-in /throwit command you could use to pull \\(see below for explanation\\).</li> <li>Auto-Sleep mode while auto-fire is on.</li> <li>Configurable automatic facing of target.</li> </ul> </li> <li>PET HANDLING:<ul> <li>Issue /pet back and /pet hold after each mobs dies.</li> <li>Configure pet to wait to assist till mobs within range.</li> <li>Configure pet to wait for a specified time before assisting.</li> <li>Pet mend if its life goes below a certain point.</li> <li>Option to automatically re-engage target when no longer mezzed.</li> <li>Backup pet on enrage/infuriate events and re-engaging of target.</li> <li>Auto /pet hold if you manually hit back button or do /pet back.</li> </ul> </li> <li>USER DEFINED CONDITIONS:<ul> <li>Allows for conditional use of various abilities/disciplines.</li> <li>Allows for customized actions based on conditional statements.</li> </ul> </li> <li>TOP-LEVEL OBJECTS:<ul> <li>Provides MQ2Data information for better macro integration and HUD designs.</li> <li>Can be used with custom user-defined conditions.</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2melee/#supported-abilities","title":"Supported Abilities","text":""},{"location":"plugins/community-plugins/mq2melee/#combat-abilities","title":"Combat Abilities","text":"<ul> <li>See MQ2Melee Supported AA's, Combat Abilities, Skills &amp; Spells by Class</li> </ul>"},{"location":"plugins/community-plugins/mq2melee/#alternate-advancement-abilities","title":"Alternate Advancement Abilities","text":"<ul> <li>See MQ2Melee Supported AA's, Combat Abilities, Skills &amp; Spells by Class</li> </ul>"},{"location":"plugins/community-plugins/mq2melee/#melee-disciplines","title":"Melee Disciplines","text":"<ul> <li>See MQ2Melee Supported AA's, Combat Abilities, Skills &amp; Spells by Class</li> </ul>"},{"location":"plugins/community-plugins/mq2melee/#detected-disciplines","title":"Detected Disciplines","text":"<p>The following Disciplines are detected to promote some combat abilities:</p> <ul> <li>Ashenhand Discipline, Assassin Discipline(3), Silentfist Discipline, and Thunderkick Discipline.</li> </ul>"},{"location":"plugins/community-plugins/mq2melee/#skills","title":"Skills","text":"<ul> <li>See MQ2Melee Supported AA's, Combat Abilities, Skills &amp; Spells by Class</li> </ul>"},{"location":"plugins/community-plugins/mq2melee/#spell-handling","title":"Spell Handling","text":"<ul> <li>Provoke can be configured to cast any AA, disc or spell. It will auto-detect if you lose aggro, and then attempt to use any of the defined spells to regain it.</li> <li>To determine the proper Spell ID for any Discipline, Alternate Ability or Spell to be used with the provoke/stun commands use one of the following commands:<ul> <li>For Disciplines use: /echo \\({Me.CombatAbility[\\){Me.CombatAbility[name]}.ID}, replacing with the name of the Discipline.</li> <li>For AAs, use /aa info . The first number (before the AA name) is the Spell ID.</li> <li>For Spells, use /echo ${Spell[name].ID}, replacing  with the spell name.</li> </ul> </li> <li>Alternatively, you can look on Lucy for the discipline/spell/AA and get the ID from there.</li> <li>Some common discipline IDs are listed below:<ul> <li>Ancient Chaos Cry [id=5016]</li> <li>Bazu Bellow [id=6173]</li> <li>Bellow [id=4681]</li> <li>Bellow of the Mastruq [id=5015]</li> <li>Berate [id=4682]</li> <li>Incite [id=4697]</li> <li>Mock [id=8467]</li> <li>Provoke [id=4608]</li> <li>Crippling Strike [id=468]</li> </ul> </li> <li>Stuns can also be configured to cast any AA, disc or spells when MQ2Melee detects that your target begins to cast a spell.</li> <li>Provoke and Stun have built-in values, but they can always be overwritten using the command line (eg. /melee provoke0=5015) or by editing the** provoke0 setting in the INI file and then typing /melee reload in game.</li> </ul>"},{"location":"plugins/community-plugins/mq2melee/#commands","title":"Commands","text":"<ul> <li>All options below are listed with on/off as the arguments used to enable/disable the option, however true or 1 can be used in place of on, and false or 0 can be used in place of off.<ul> <li>Example: /melee on aggro=on taunt=on kick=1 bash=0 intimidation=false disarm=true</li> </ul> </li> <li>/melee by itself will list all abilities and settings that are available to you. Some settings are dependant on others being active, so may not show up until you enable the prerequisite option.</li> <li>To find the relevant Item IDs for the various options, you can use the following command:<ul> <li>/echo ${FindItem[=].ID}, replacing with the name of the item you are looking for (no need to use quotes). Eg. /echo ${FindItem[=Blade of Carnage].ID} results in \"25210\".</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2melee/#melee-options","title":"/melee [options]","text":"<ul> <li><code>[on|off]</code> - Turns plugin On/Off.</li> <li><code>aggro=[on|off]</code> - Plugin tries to keep aggro on target using all enabled aggro abilities/disciplines until aggro is regained, or either you or the target dies.</li> <li><code>aggropri=[Item ID]</code> - Item ID for primary weapon to be used in aggro mode.</li> <li><code>aggrosec=[Item ID]</code> - Item ID for secondary weapon to be used in aggro mode.</li> <li><code>arrow=[Item ID]</code> - Item ID of ammunition to use for ranged/throwing attacks.</li> <li><code>backoff=[0-100]</code> - Turns attack off if your life percentage goes below the designated value. Will never back off due to low health if aggro=on.</li> <li><code>bash=[on|off]</code> - Will try to bash target if you have a shield equipped or have have a 2-handed weapon and the 2 Hand Bash AA.</li> <li><code>battleleap=[on|off]</code> - Will try to use Battle Leap if you have the Battle Leap AAi (Default=0/off)</li> <li><code>begging=[on|off]</code> - Will turn attack off and beg target and then turn attack back on.</li> <li><code>bow=[Item ID]</code> - Item ID for ranged weapon.</li> <li><code>disarm=[on|off]</code> - Will try to disarm target if it is wielding a weapon.</li> <li><code>downflag0-19=[on|off]</code> - Whether or not to use defined DownShit0 from ini. After enabling this option, you must edit the INI file with your relevant DownShit command and then issue /melee load to enable it.</li> <li><code>enrage=[on|off]</code> - Turns attack of and issues /pet hold (pet back if hold is not available) if target enrages and you are facing it. Automatically re-engages when enrage ends or if you are behind the target.</li> <li><code>facing=[on|off]</code> - Whether or not to face target. (checked every 2 seconds and only in ranged mode)</li> <li><code>falls=[on|off]</code> - (Monk only) Auto-feign to reduce aggro?.</li> <li><code>holyflag0-19=[on|off]</code> - Whether or not to use defined HolyShit0 from ini. After enabling this option, you must edit the INI file with your relevant HolyShit command and then issue /melee load to enable it.</li> <li><code>infuriate=[on|off]</code> - Turns attack off and issues /pet hold (/pet back if hold not available) if target infuriates and you are facing it. Automatically re-engages when infuriate ends or if you are behind the target.</li> <li><code>intimidation=[on|off]</code> - Will use intimidation if available.</li> <li><code>jolt=[0-100]</code> - Jolt ever # of hits (0=off)</li> <li><code>kick=[on|off]</code> - Will use kick if available.</li> <li><code>melee=[on|off]</code> - Turn Melee Mode On/Off.</li> <li><code>meleepri=[Item ID]</code> - Item ID for primary weapon to be used in non-aggro mode.</li> <li><code>meleesecond=[Item ID]</code> - Item ID for secondary weapon to be used in non-aggro mode.</li> <li><code>mend=[0-100]</code> - Mend wounds if your life percentage goes below the designated value.</li> <li><code>petassist=[on|off]</code> - Will send pet attack on engage and backoff on enrage/infuriate if those options are enabled. The plugin will also use /pet hold if you have that AA.</li> <li><code>petdelay=[0-30]</code> - Will not engage pet until [x] seconds has passed.</li> <li><code>petmend=[0-100]</code> - Cast \"Mend Companion\" or \"Replenish Companion\" if pet is at or below given health % (will cast higher of the two if you have both).</li> <li><code>petrange=[0-150]</code> - Will not engage pet until mob is within [x] range of your pet.</li> <li><code>pickpocket=[on|off]</code> - Turn off attack &amp; try to pickpocket if not in aggro mode.</li> <li><code>plugin=[on|off]</code> - _Turn plugin on/off.</li> <li><code>poker=[Item ID]</code> - Item ID for backstabbing weapon. Will be swapped in before backstabbing if necessary._</li> <li><code>pothealfast=[0-100]</code> - Use fast heal potion when my HP falls below [x]% (default=30).</li> <li><code>pothealover=[0-100]</code> - Use over time heal potion when my HP falls below [x]% (default=60).</li> <li><code>provoke0=[Disc/AA/Spell ID #]</code> - ID of the Disc/AA/Spell to use for provoking (0=off).</li> <li><code>provoke1=[Disc/AA/Spell ID #]</code> - ID of the Disc/AA/Spell to use for provoking (0=off).</li> <li><code>provokeend=[0-100]</code> - Stop trying to provoke when target's health falls below [x]% (default=15).</li> <li><code>provokemax=[0-100]</code> - Number of times you will try provoking aa/disc/spells to regain aggro (default=1).</li> <li><code>provokeonce=[on|off]</code> - Only use provoke once to attempt to regain aggro.</li> <li><code>range=[0-250]</code> - Enables ranged attacks when target is within this range. Note that 0 disables ranged attacks completely.</li> <li><code>resume=[0-100]</code> - Stand up and turn back attack on if your life percentage goes below this value. Used with /melee feigndeath=on.</li> <li><code>shield=[Item ID]</code> - Item ID for shield to use for bashing.</li> <li><code>slam=[on|off]</code> - Will slam as often as possible.</li> <li><code>sneak=[on|off]</code> - Will try to sneak if not in combat.</li> <li><code>standup=[on|off]</code> - Will stand you on a failed FD.</li> <li><code>stickdelay=[0-100]</code> - Wait [x] seconds before sticking to target.</li> <li><code>stickmode=[0|1|2]</code> - If 1, it will use the stickcmd as defined in the INI file, if 0, it will use the default stick command, if 2, it will turn off sticking_</li> <li><code>stickrange=[0+]</code> - Enables sticking when target is at set distance away (0=no sticking).</li> <li><code>stun0=[Disc/AA/Spell ID #]</code> - ID of the Disc/AA/Spell to use for stunning (0=off).</li> <li><code>stun1=[Disc/AA/Spell ID #]</code> - ID of the Disc/AA/Spell to use for stunning (0=off).</li> <li><code>stunning=[0-100]</code> - Cast defined Stun spell(s) if target at or below [x]% and/or if detected that target is casting a spell.</li> <li><code>taunt=[on|off]</code> - Will push taunt button if aggro=on and you're not the target's target. Without a TauntIF statement, this will cause your toon to chain taunt. If you do not wish for that, use a TauntIF command (see below).</li> <li><code>throwstone=[0-100]</code> - Will use throw stone disc when ready and target in range. Note: Will not use in aggro/provoke mode if provoke has not been used yet.</li> </ul>"},{"location":"plugins/community-plugins/mq2melee/#supported-aas-combat-abilities-skills-spells-by-class","title":"Supported AA's, Combat Abilities, Skills &amp; Spells by Class","text":""},{"location":"plugins/community-plugins/mq2melee/#bard","title":"Bard","text":"<p>AA's</p> <ul> <li>Selo's Kick<ul> <li><code>selos=[off|on]</code></li> </ul> </li> <li>Boastful Bellow<ul> <li><code>boastful=[off|on]</code></li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2melee/#beastlord","title":"Beastlord","text":"<p>AA's</p> <ul> <li>Bite of the Asp<ul> <li><code>asp=[off|on]</code></li> </ul> </li> <li>Chameleon Strike<ul> <li><code>cstrike=[off|on]</code></li> </ul> </li> <li>Gorilla Smash<ul> <li><code>gorillasmash[off|on]</code></li> </ul> </li> <li>Feral Swipe<ul> <li><code>feralswipe=[off|on]</code></li> </ul> </li> <li>Playing Possum<ul> <li><code>feigndeath=[0-100]</code> - Attempt to feign death when life is below [x]%. 0=Off</li> </ul> </li> <li>Raven's Claw<ul> <li><code>ravens=[off|on]</code></li> </ul> </li> </ul> <p>Combat Ability</p> <ul> <li>Bestial Vivisection, Bestial Rending, Bestial Evulsing<ul> <li><code>bvivi=[0-100]</code> - Use ability when endurance above [x]%. 0=Off</li> </ul> </li> <li>Rake, Foray, Harrow, Rush, Barrage, Pummel<ul> <li><code>rake[0-100]</code> - Use ability when endurance above [x]%. 0=Off</li> </ul> </li> <li>Flurry of Claws, Tumult of Claws, Clamor of Claws<ul> <li><code>fclaw=[0-100]</code> - Use ability when endurance above [x]%. 0=Off_</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2melee/#berserker","title":"Berserker","text":"<p>Combat Ability</p> <ul> <li>Shared Bloodlust, Shared Brutality, Shared Savagery, Shared Viciousness</li> </ul> <p>bloodlust= Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Leg Strike, Leg Cut, Leg Slice, Crippling Strike, Tendon Cleave, Tendon Sever, Tendon Shear, Tendon Lacerate, Tendon</li> </ul> <p>Slash, Tendon Gash</p> <p>cripple= Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Cry Havoc</li> </ul> <p>cryhavoc= Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Diversive Strike, Distracting Strike, Confusing Strike, Baffling Strike, Jarring Strike, Jarring Smash, Jarring</li> </ul> <p>Clash, Jarring Slam, Jarring Blow, Jarring Crush</p> <p>jolt=0-100] Jolt every # of hits \\(0=off\\).</p> <ul> <li>Overpowering Frenzy, Overwhelming Frenzy, Vanquishing Frenzy</li> </ul> <p>opfrenzy= Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Rage Volley, Destroyer's Volley, Giant Slayer's Volley, Annihilator's Volley, Decimator's Volley, Eradicator's</li> </ul> <p>Volley, Savage Volley, Brutal Volley</p> <p>ragevolley= Will use best ragevolley discipline that is available, ready and endurance above % \\(0=off\\).</p> <ul> <li>Axe of Rallos, Axe of Graster</li> </ul> <p>rallos= Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Slap in the Face, Kick in the Teeth, Punch in the Throat</li> </ul> <p>slapface= Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Head Strike, Head Pummel, Head Crush, Mind Strike, Temple Blow, Temple Strike, Temple Bash, Temple Chop, Temple</li> </ul> <p>Smash, Temple Crush</p> <p>stun1= ID of the Disc/AA/Spell to use for stunning \\(0=off\\).</p> <ul> <li>Vigorous Axe Throw, Energetic Axe Throw, Brutal Axe Throw</li> </ul> <p>vigaxe= Use ability when endurance above % \\(0=off\\).</p>"},{"location":"plugins/community-plugins/mq2melee/#monk","title":"Monk","text":"<p>AA</p> <ul> <li>Eye Gouge</li> </ul> <p>eyegouge=0|1  </p> <p>Combat Ability</p> <ul> <li>Cloud of Fists</li> </ul> <p>cloud= Use ability when endurance above % \\(0=off\\)</p> <ul> <li>Feign Death, Imitate Death</li> </ul> <p>feign= Attempt to feign death when life is below %. 0=Off</p> <ul> <li>Fists of Wu</li> </ul> <p>fistofwu Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Leopard Claw, Dragon Fang, Clawstriker Flurry, Wheel Of Fists, Whorl Of Fists, Six-Step Pattern, Eight-Step Pattern</li> </ul> <p>leopardclaw= Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Drunken Monkey</li> </ul> <p>monkey= Use ability when endurance above % \\(0=off\\)</p> <ul> <li>Calanin's Synergy, Dreamwalker's Synergy, Veilwalker's Synergy, Shadewalker's Synergy</li> </ul> <p>synergy= Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Vigorous Shuriken</li> </ul> <p>vigshuriken= Use ability when endurance above % \\(0=off\\).</p> <p>Skills</p> <ul> <li>Dragon Punch, Tail Rake \\(Iksar\\)</li> </ul> <p>dragonpunch=0|1  Will use if available.</p> <ul> <li>Eagle Strike</li> </ul> <p>eaglestrike=0|1  Will use if available.</p> <ul> <li>Flying Kick</li> </ul> <p>flyingkick=0|1  Will use if available.</p> <ul> <li>Mend</li> </ul> <p>mend=0-100  Mend wounds if your life percentage goes below the designated value.</p> <ul> <li>Round Kick</li> </ul> <p>roundkick=0|1  Will use if available.</p> <ul> <li>Tiger Claw</li> </ul> <p>tigerclaw=0|1  Will use if available.</p>"},{"location":"plugins/community-plugins/mq2melee/#paladin","title":"Paladin","text":"<p>AA</p> <ul> <li>Divine Stun, Hand of Disruption, Force of Disruption</li> </ul> <p>provoke0=id ID of the Disc/AA/Spell to use for stunning \\(0=off\\).</p> <p>stun0=id ID of the Disc/AA/Spell to use for stunning \\(0=off\\).</p> <ul> <li>Lay Hands</li> </ul> <p>layhand= Lay Hands on myself when my HP % falls below .</p> <p>Combat Ability</p> <ul> <li>Righteous Indignation, Righteous Vexation, Righteous Umbrage</li> </ul> <p>rightind= Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Withstand, Defy, Renounce, Reprove, Repel</li> </ul> <p>withstand= Use ability when endurance above % \\(0=off\\).</p> <p>Spells</p> <ul> <li>Challenge for Honor, Trial for Honor, Charge for Honor, Confrontation for Honor, Provocation for Honor, Demand for</li> </ul> <p>Honor, Reverent Force</p> <p>challengefor=0|1  Activate aggro spells.</p> <ul> <li>Stun, Holy Might, Force of Akera, Force of Akilae, Ancient Force of Chaos, Force of Piety, Ancient Force of Jeron,</li> </ul> <p>Sacred Force, Force of Prexus. Solemn Force, Force of Timorous, Devout Force, Force of the Crying Seas, Earnest</p> <p>Force, Force of Marr, Force of the Iceclad</p> <p>provoke1=id ID of the Disc/AA/Spell to use for stunning \\(0=off\\).</p> <p>stun1=id ID of the Disc/AA/Spell to use for stunning \\(0=off\\).</p> <ul> <li>Steely Stance, Stubborn Stance, Stoic Stance, Steadfast Stance</li> </ul> <p>steely=0|1  Activate defensive spells.</p>"},{"location":"plugins/community-plugins/mq2melee/#ranger","title":"Ranger","text":"<p>AA</p> <ul> <li>Ferocious Kick</li> </ul> <p>ferociouskick=0|1 0=OFF/1=ON</p> <p>Combat Ability</p> <ul> <li>Jolting Snapkicks, Jolting Frontkicks, Jolting Hook Kicks, Jolting Crescent Kicks, Jolting Heel Kicks</li> </ul> <p>jltkicks= endurance</p> <ul> <li>Storm of Blades, Focused Storm of Blades</li> </ul> <p>stormblades=0|1 0=OFF/1=ON</p> <p>Spells</p> <ul> <li>Jolt, Cinderjolt</li> </ul> <p>jolt=0-100] Jolt every # of hits \\(0=off\\).</p>"},{"location":"plugins/community-plugins/mq2melee/#rogue","title":"Rogue","text":"<p>Combos</p> <ul> <li>Assassinate</li> </ul> <p>assassinate=0|1  Activate the assassinate skill \\(ie. Sneak, Hide, move behind target, activate Strike disc, backstab\\).</p> <p>Combat Ability</p> <ul> <li>Assault, Battery, Onslaught, Incursion</li> </ul> <p>assault= Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Bleed, Wound, Lacerate, Gash</li> </ul> <p>bleed= Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Jugular Slash, Jugular Slice, Jugular Sever, Jugular Gash, Jugular Lacerate</li> </ul> <p>jugular= Use ability when endurance above % \\(0=off\\)</p> <ul> <li>Pinpoint Vulnerability, Pinpoint Weaknesses, Pinpoint Vitals, Pinpoint Flaws, Pinpoint Liabilities, Pinpoint</li> </ul> <p>Deficiencies</p> <p>pinpoint= Use ability when endurance above % \\(0=off\\)</p> <ul> <li>Sneak Attack, Thief's Vengeance, Assassin Strike, Kyv Strike, Ancient Chaos Strike, Daggerfall, Razor Arc, Swift</li> </ul> <p>Blade, Dagger Lunge, Dagger Swipe, Daggerswipe, Daggerstrike, Daggerthrust</p> <p>strike=0|1  Use your best sneak attack disc</p> <ul> <li>Thief's Eye</li> </ul> <p>thiefeye= Uses ability if your endurance is over %. \\(0=off\\).</p> <ul> <li>Vigorous Dagger-Throw, Vigorous Dagger-Strike, Energetic Dagger-Throw</li> </ul> <p>vigdagger= Use ability when endurance above % \\(0=off\\).</p> <p>Skills</p> <ul> <li>Backstab</li> </ul> <p>backstab=0|1  Will try to back stab if you wielding a piercing weapon in your main hand and behind the target.</p> <ul> <li>Escape</li> </ul> <p>escape= Turn off Attack and use rogue escape skill if your life percentage goes below the designated value. Will never happen if aggro=on.</p> <ul> <li>Evade</li> </ul> <p>evade=0|1  Will attempt to evade in fight to drop some aggro each time hide skill available, strongly suggest that you set unhide=1 to authorize plugin to break invis and rejoin the fight.</p> <ul> <li>Hide</li> </ul> <p>hide=0|1  Will try to hide if you're not in a combat and not moving.</p> <ul> <li>Pickpocket</li> </ul> <p>pickpocket=0|1  Turn off attack &amp; try to pickpocket if not in aggro mode.</p> <ul> <li>Sense Traps</li> </ul> <p>sensetraps= Will try to sense traps if not in combat.</p> <ul> <li>Sneak</li> </ul> <p>sneak=0|1  Will try to sneak if not in combat.</p>"},{"location":"plugins/community-plugins/mq2melee/#shadow-knight","title":"Shadow Knight","text":"<p>AA</p> <ul> <li>Death Peace</li> </ul> <p>feign1= Attempt to feign death when life is below %. 0=Off</p> <ul> <li>Harm Touch</li> </ul> <p>harmtouch=0|1  Use Harm Touch ability when ready.</p> <p>Combat Ability</p> <ul> <li>Withstand, Defy, Renounce, Reprove, Repel</li> </ul> <p>withstand= Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Gouging Blade, Gashing Blade, Lacerating Blade</li> </ul> <p>gblade= Use ability when endurance above % \\(0=off\\).</p> <p>Spells</p> <ul> <li>Feign Death, Comatose, Death Peace, Last Breath, Rigor Mortis, Last Grasp, Final Breath, Last Breath, Final Gasp,</li> </ul> <p>Terminal Breath</p> <p>feign0= Attempt to feign death when life is below %. 0=Off</p> <ul> <li>Terror of Death, Terror of Terris, Terror of Thule, Terror of Discord, Terror of Vergalid, Terror of Soulbleeder,</li> </ul> <p>Terror of Jelvalak, Terror of Rerekalen, Terror of Poira, Terror of Narus</p> <p>provoke1= ID of the Disc/AA/Spell to use for provoking \\(0=off\\).</p> <ul> <li>Challenge for Power, Trial for Power, Charge for Power, Confrontation for Power, Provocation for Power, Demand for</li> </ul> <p>Power, Impose for Power</p> <p>challengefor=0|1  Activate aggro spells.</p> <ul> <li>Steely Stance, Stubborn Stance, Stoic Stance, Steadfast Stance, Staunch Stance</li> </ul> <p>steely=0|1  Activate defensive spells.</p>"},{"location":"plugins/community-plugins/mq2melee/#warrior","title":"Warrior","text":"<p>AA</p> <ul> <li>Call of Challenge</li> </ul> <p>callchallenge=0|1  Use Alt Ability when ready.</p> <ul> <li>Gut Punch</li> </ul> <p>gutpunch=0|1  Use Alt Ability when ready.</p> <ul> <li>Knee Strike</li> </ul> <p>kneestrike=0|1  Use Alt Ability when ready.</p> <p>Combat Ability</p> <ul> <li>Bracing Defense, Staunch Defense, Stalwart Defense, Steadfast Defense</li> </ul> <p>defense= Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Commanding Voice</li> </ul> <p>commanding= Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Field Armorer, Field Outfitter, Field Defender, Field Guardian</li> </ul> <p>fieldarm= Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Opportunistic Strike, Strategic Strike, Vital Strike, Vital Strike</li> </ul> <p>opportunisticstrike= Use ability when endurance above % \\(0=off\\).</p> <ul> <li>Provoke, Belllow, Berate, Incite, Bellow of the Mastrug, Ancient Chaos Cry, Bazu Bellow, Scowl, Sneer, Jeer, Bazu</li> </ul> <p>Bluster, Bazu Roar, Scoff, Krondal's Roar, Ridicule</p> <p>provoke1= ID of the Disc/AA/Spell to use for provoking \\(0=off\\).</p> <ul> <li>Throat Jab</li> </ul> <p>throatjab= Use ability when endurance above % \\(0=off\\).</p>"},{"location":"plugins/community-plugins/mq2melee/#top-level-objects","title":"Top-Level Objects","text":"<ul> <li>bool ${Melee}</li> </ul> <p>Same as ${Melee.Enable} \\(see below\\).</p> <ul> <li>bool ${Melee.AggroMode}</li> </ul> <p>TRUE/FALSE if the plugin is operating in Aggro-mode or not.</p> <ul> <li>int ${Melee.Ammunition}</li> </ul> <p>Count of defined ammunition or current equipped ammunition.</p> <ul> <li>float ${Melee.BackAngle}</li> </ul> <p>Angle representing heading difference with current target's back.</p> <ul> <li>bool ${Melee.BackStabbing}</li> </ul> <p>TRUE/FALSE if backstab setting is on/off.</p> <ul> <li>int ${Melee.Casted}</li> </ul> <p>Time \\(in miliseconds\\) elapsed since last detected spell casting \\(60000 if none\\).</p> <ul> <li>bool ${Melee.Combat}</li> </ul> <p>TRUE/FALSE if plugin enable and got valid kill target. Should replace ${Me.Combat} logic.</p> <ul> <li>int ${Melee.DiscID}</li> </ul> <p>Spell ID of currently running discipline, 0 if none.</p> <ul> <li>bool ${Melee.Enable}</li> </ul> <p>TRUE/FALSE if plugin on/off, NULL if not loaded.</p> <ul> <li>bool ${Melee.Engage}</li> </ul> <p>TRUE if we have a valid kill target and it's okay to turn attack on, FALSE if not.</p> <ul> <li>bool ${Melee.Enrage}</li> </ul> <p>Is kill target enraged?</p> <ul> <li>bool ${Melee.GotAggro}</li> </ul> <p>TRUE/FALSE if current target seems to be aggroed on you \\(not perfect\\).</p> <ul> <li>bool ${Melee.Immobilize}</li> </ul> <p>TRUE if you have been standing still for more then 250ms, FALSE if not.</p> <ul> <li>bool ${Melee.Infuriate}</li> </ul> <p>TRUE if kill target is infuriated!</p> <ul> <li>int ${Melee.MeleeMode}</li> </ul> <p>Maximum distance to target to be considered in melee range.</p> <ul> <li>int ${Melee.RangeMode}</li> </ul> <p>Minimum distance to target to be considered in archery range.</p> <ul> <li>string ${Melee.Status}</li> </ul> <p>Current plugin status, can be one or more of the following: ENGAGED, WAITING, MELEE, RANGE, ENRAGE, INFURIATE,</p> <p>BACKING, ESCAPING, FEIGNING, EVADING, FALLING, STEALING, BEGGING.</p> <ul> <li>int ${Melee.Target}</li> </ul> <p>SpawnID of current valid kill target, otherwise 0.</p> <ul> <li>float ${Melee.ViewAngle}</li> </ul> <p>Angle of view with current target.</p> <p>Debugging TLOs:</p> <ul> <li>int ${meleemvb}</li> </ul> <p>1 if the skill is ready and target in range, 0 if not. Most combat and/or character kills that can use an ID are</p> <p>testable here. Examples of idskills are: idleopardclaw, idslam, idforage, idfrenzy,</p> <p>idtigerclaw, idescape.</p> <ul> <li>int ${meleemvi}</li> </ul> <p>1/0 if the variable is set to on/off. This includes all variables that can be set on the command line.</p> <ul> <li>string ${meleemvs}</li> </ul> <p>Evaluates option based on the current conditions and target. Options are all the INI options that contain</p> <p>command lines that need to be evaluated. Examples are: bashif, beggingif, tauntif, holyshit0,</p> <p>holyshit1, downshit1, slamif, etc. Echoing one of these options will show you how they evaluate.</p>"},{"location":"plugins/community-plugins/mq2melee/#ini-file","title":"INI File","text":"<p>MQ2Melee saves most options for each character in the INI file called _.ini. Most options in the INI file are set using the command line \\(/melee _command=on\\|off_\\) and they are best set this way, and not by editing the INI file. Any options given this way are then saved to the INI file when you issue the command /melee save. Options that contain macro commands are set by editing the INI file and then loading the values with /melee load.</p>"},{"location":"plugins/community-plugins/mq2melee/#if-options","title":"\"IF\" Options","text":"<ul> <li>The following \"IF\" options can be set in the INI file. They will then be evaluated before the relevant disc/skill is</li> </ul> <p>triggered.</p> <ul> <li>They all need to take the form of ${If} statements and must return an integer. Any return of 0 is</li> </ul> <p>considered FALSE, any other integer is considered TRUE.</p> <p>Eg. \\({If\\[\\) will always be evaluated correctly.},1,0]</p> <ul> <li>Your defined condition must not exceed 255 characters, or it will cause the plugin to crash.</li> <li>backstabif</li> <li>bashif</li> <li>beggingif</li> <li>callchallengeif</li> <li>challengeforif</li> <li>commandingif</li> <li>cryhavocif</li> <li>disarmif</li> <li>dragonpunchif</li> <li>eaglestrikeif</li> <li>evadeif</li> <li>fallsif</li> <li>feralswipeif</li> <li>fistofwuif</li> <li>flyingkickif</li> <li>forageif</li> <li>frenzyif</li> <li>harmtouchif</li> <li>pothealfastif</li> <li>pothealoverif</li> <li>hideif</li> <li>intimidationif</li> <li>joltif</li> <li>kickif</li> <li>layhandif</li> <li>leopardclawif</li> <li>mendif</li> <li>pickpocketif</li> <li>provokeif</li> <li>ragevolleyif</li> <li>rakeif</li> <li>roundkickif</li> <li>sensetrapif</li> <li>slamif</li> <li>sneakif</li> <li>strikeif</li> <li>stunningif</li> <li>tauntif</li> <li>thiefeyeif</li> <li>throwstoneif</li> <li>tigerclawif</li> <li>twistedshankif</li> </ul>"},{"location":"plugins/community-plugins/mq2melee/#other-options","title":"Other Options","text":"<ul> <li>stickcmd</li> </ul> <p>This command takes a list of options that should be passed to the /stick command. Eg. \"hold 15\"</p> <ul> <li>downshit0-downshit7</li> </ul> <p>Each one of these takes a macro command that will be run when you are not in combat. Remember, you have to enable each option with /melee downflag#=on.</p> <ul> <li>holyshit0-holyshit7</li> </ul> <p>Each one of these takes a macro command that will be run at the beginning of combat. Remember, you have to enable each option with /melee holyflag#=on.</p>"},{"location":"plugins/community-plugins/mq2melee/#holyshit-and-downshit","title":"HolyShit and DownShit","text":"<p>MQ2Melee now supports up to 20 macro command lines of each that will be executed when one of the following conditions are true:</p> <ul> <li>Holyshit:</li> </ul> <p>Commands will be executed when in combat, no casting going on and the cursor is free.</p> <ul> <li>Downshit:</li> </ul> <p>Commands will be executed when not in combat, not casting and the cursor is free.</p> <p>When setting these commands, you must be careful not to fall into an endless loop or create a spam war. Make sure that when your line finishes, it will set up something that will force it to be FALSE for a while!</p> <p>These Commands are turned on and off by downflagx and holyflagx if your downshit or holyshit parses ANY macro variables, you MUST set these flags to 2 instead of 1</p>"},{"location":"plugins/community-plugins/mq2melee/#ini-file-examples","title":"INI File Examples","text":"<ul> <li>Please Note: Use this section only for adding useful examples that can be included in the INI file, not for</li> </ul> <p>copy/pastes of the INI files themselves. Anyone can see what a default INI is by loading up the plugin, running</p> <p>/melee on, /melee save and then opening the INI file in Notepad.</p> <p><code>; Will just echo that the macro is paused (this is stupid btw, but its an example.)</code> <code>; SINCE WE USE A MACRO VARIABLE (ModVersion) WE NEED TO SET THE FLAG TO 2!</code> <code>downflag0=2</code> <code>downshit0=/if (${Macro.Paused}) /echo ${Macro} ${ModVersion} is PAUSED!</code></p> <p><code>; Swapping an Avatar-proccing weapon when needed.</code> <code>; - The first line swaps your Ancient Prismatic Spear [id=29435] into your offhand if you don't already have it equipped and you don't have the Avatar buff</code> <code>; - The second line swaps your Orcish Bone Axe [id=82634] back into your offhand if it's not equipped and you have the Avatar buff already</code> <code>holyshit0=/if (${Me.Inventory[offhand].ID}==82634 &amp;&amp; !${Me.Buff[avatar].ID} &amp;&amp; ${Spell[avatar].Stacks} &amp;&amp; (${Melee.AggroMode} &amp;&amp; ${Melee.GotAggro})) /exchange 29435 offhand</code> <code>holyshit1=/if (${Me.Inventory[offhand].ID}==29435 &amp;&amp; (${Me.Buff[avatar].ID} || !${Spell[avatar].Stacks} || (${Melee.AggroMode} &amp;&amp; !${Melee.GotAggro}))) /exchange 82634 offhand</code></p> <p><code>; Activating the Area Taunt AA when multiple mobs in range</code> <code>holyshit2=/if (${Melee.Combat} &amp;&amp; ${SpawnCount[npc radius 50 zradius 10]}&gt;1 &amp;&amp; ${Me.AltAbilityReady[area taunt]} &amp;&amp; ${Melee.AggroMode}) /alt activate 110</code></p> <p><code>; Forage if you have a chest item (usually used to check if you awaiting a rez) and your cursor is free</code> <code>forageif=${If[${Me.Inventory[chest].ID} &amp;&amp; !${Cursor.ID},1,0]}</code></p> <p><code>;Swap in and click monk epic haste gloves [id=10652] (or monk ornate gloves [id=12623]) if needed</code> <code>holyshit0=/if (!${Me.Buff[Celestial Tranquility].ID} &amp;&amp; ${Spell[Celestial Tranquility].Stacks} &amp;&amp; ${Me.FreeBuffSlots}&gt;=1) /casting 10652|hands</code></p> <p><code>;For monks, toggle enrage detection if you have Master's Aura (makes you immune to enrage)</code> <code>holyshit2=/if (!${Me.Song[Master's Aura Effect].ID} &amp;&amp; !${meleemvi[enrage]}) /melee enrage=1</code> <code>holyshit3=/if (${Me.Song[Master's Aura Effect].ID} &amp;&amp; ${meleemvi[enrage]}) /melee enrage=0</code></p> <p><code>; During downtime, check my clicky buffs and recast them if needed</code> <code>downshit0=/if (${Spell[Form of Defense I].Stacks} &amp;&amp; !${Me.Buff[Form of Defense I].ID} &amp;&amp; !${Me.Moving}) /casting \"Shroud of the Fallen Defender\"|back</code> <code>downshit1=/if (${Spell[Shield of the Arcane].Stacks} &amp;&amp; !${Me.Buff[Shield of the Arcane].ID} &amp;&amp; !${Me.Moving}) /casting \"Kizrak's Chestplate of Battle\"|chest</code></p> <p><code>; Cast my clicky DS ring during combat if needed (it's insta-cast, so I can do so while in combat without affecting anything)</code> <code>holyshit4=/if (${Spell[Shield of the Eighth].Stacks} &amp;&amp; !${Me.Buff[Shield of the Eighth].ID}) /casting \"Velium Coldain Insignia Ring\"|item</code></p> <p><code>;Uses crippling strike to snare</code> <code>holyshit4=/if (${Target.CurrentHPs}&lt;20 &amp;&amp; ${Target.Speed}&gt;50) /disc crippling strike</code></p> <p><code>;During downtime, check my aura's and recast if needed</code> <code>downshit1=/if (!${Spell[${Me.Aura[1]}].ID} &amp;&amp; !${Me.Moving} &amp;&amp; !${Me.Invis} &amp;&amp; ${Me.PctEndurance} &gt; 4 &amp;&amp; ${Me.Standing}) /disc Myrmidon's Aura</code></p> <p><code>;Activate Respite on Warrior if Endurance is low and deactivate running defensive if needed</code> <code>downshit1=/if (${Me.PctEndurance}&lt;25 &amp;&amp; ${Me.CombatAbilityReady[Respite Rk. II]} &amp;&amp; ${Me.CurrentEndurance}&gt;100 &amp;&amp; (${Zone.ID}!=344)) /disc Respite Rk. II</code> <code>downshit2=/if (${Window[CombatAbilityWnd].Child[CAW_CombatEffectLabel].Text.Equal[Staunch Defense Rk. II]} &amp;&amp; ${Me.PctEndurance}&lt;25) /notify CombatAbilityWnd CAW_CombatEffectButton leftmouseup</code></p> <p><code>;Change cleric merc to reactive on named mobs, to balanced on non named mobs. Easily adjustable for DPS mercs</code> <code>holyshit1=/if (!${Target.Named} &amp;&amp; ${Mercenary.State.Equal[ACTIVE]} &amp;&amp; ${Mercenary.Stance.NotEqual[Balanced]} &amp;&amp; ${Mercenary.Class.Name.Equal[Cleric]}) /stance balanced</code> <code>holyshit2=/if (${Target.Named} &amp;&amp; ${Mercenary.State.Equal[ACTIVE]} &amp;&amp; ${Mercenary.Stance.NotEqual[Reactive]} &amp;&amp; ${Mercenary.Class.Name.Equal[Cleric]}) /stance reactive</code></p> <p><code>;Pal/Sk check if target is undead and is not otherwise slowed, then use Helix of the Undying</code> <code>holyshit4=/if (${Target.Body.Name.Equal[Undead]} &amp;&amp; ${Me.AltAbilityReady[2018]} &amp;&amp; !${Bool[${Target.Slowed}]}) /alt activate 2018</code> <code>;Alernatively a slow weapon exchange using the Bandolier and mainhand check, if there is no enc/sham nearby to slow</code> <code>holyshit19=/if (!${Bool[${Target.Slowed}]} &amp;&amp; ${Me.Inventory[mainhand].ID}!=133167 &amp;&amp; !${SpawnCount[pc class shaman radius 50]} &amp;&amp; !${SpawnCount[pc class enchanter radius 50]}) /Bandolier Activate Slow</code> <code>holyshit20=/if (${Bool[${Target.Slowed}]} &amp;&amp; ${Me.Inventory[mainhand].ID}!=140616) /Bandolier Activate 1Hand</code></p> <p><code>;Necro - utilize the aggro meter to FD off aggro when over a set percentage</code> <code>holyshit3=/if (${Me.PctAggro}&gt;80 &amp;&amp; ${Target.Distance}&lt;15) /casting \"Improved Death Peace\" alt</code></p> <p><code>;Sk centric but can be edited for use with any tank</code> <code>;first line checks if first damage mod disc is ready, the target is named , endurance is over needed amount, and there is no current disc running</code> <code>;second line does the same as first, but also check that first damage mod disc is unavailable</code> <code>;third line does same as second , except it also checks that the second damage mod disc is unavailable</code> <code>holyshit7=/if (${Me.CombatAbilityReady[${Spell[Unholy Guardian Discipline].RankName}]} &amp;&amp; ${Target.Named} &amp;&amp; ${Me.CurrentEndurance}&gt;5300 &amp;&amp; !${Melee.DiscID}) /disc ${Spell[Unholy Guardian Discipline].RankName}</code> <code>holyshit8=/if (${Me.CombatAbilityReady[${Spell[Doomscale Mantle].RankName}]} &amp;&amp; !${Me.CombatAbilityReady[${Spell[Unholy Guardian Discipline].RankName}]} &amp;&amp; ${Target.Named} &amp;&amp; ${Me.CurrentEndurance}&gt;7700 &amp;&amp; !${Melee.DiscID}) /disc ${Spell[Doomscale Mantle].RankName}</code> <code>holyshit9=/if (${Me.CombatAbilityReady[${Spell[Grelleth's Carapace].RankName}]} &amp;&amp; !${Me.CombatAbilityReady[${Spell[Doomscale Mantle].RankName}]} &amp;&amp; !${Me.CombatAbilityReady[${Spell[Unholy Guardian Discipline].RankName}]} &amp;&amp; ${Target.Named} &amp;&amp; ${Me.CurrentEndurance}&gt;2700 &amp;&amp; !${Melee.DiscID}) /disc ${Spell[Grelleth's Carapace].RankName}</code></p>"},{"location":"plugins/community-plugins/mq2melee/#optional-global-ini-file","title":"Optional Global INI File","text":"<p>MQ2Melee also has 3 global \\(not character specific\\) parameters that can be set in a second, optional INI file. MQ2Melee uses default values for these parameters unless it finds a file named MQ2Melee.ini that you created in the same directory. Here is an example of a MQ2Melee.ini file and a description of the parameters:</p> <p><code>[Settings]</code> <code>SpawnType=10</code> <code>MeleeKeys=z</code> <code>RangeKeys=x</code></p> <ul> <li>SpawnType: 0 + all desired target type modifier: \\(+1 PC\\) \\(+2 NPC\\) \\(+4 PC PET\\) \\(+8 NPC PET\\) \\(+16 PC CORPSE\\) (+32</li> </ul> <p>NPC CORPSE) default is 10 \\(0 for base + 2 for NPC and + 8 for NPC PET\\).</p> <ul> <li>MeleeKeys: Melee Attack Key \\(not same as eq please unless you like problems\\) default is z.</li> <li>RangeKeys: Range Attack Key default is x.</li> </ul>"},{"location":"plugins/community-plugins/mq2melee/#troubleshootingfaq","title":"Troubleshooting/FAQ","text":"<ul> <li>I have made changes to my INI settings. How do I activate the new settings?</li> </ul> <p>If you have MQ2Melee loaded and use an editor to make changes to your INI file, use /melee load to reload your settings. Alternatively, you can unload and reload the plugin.</p> <ul> <li>I keep having to making changes to my melee settings from the command line. How do I save the new settings?</li> </ul> <p>From the command line type /melee save.</p> <ul> <li>I can't get the StickCmd to work</li> </ul> <p>With Version 4 of the MQ2Melee plugin there was a change to the StickCmd, wherein it no longer requires \"/stick\" in the parameters. The old format of \"StickCmd=/Stick hold 10 moveback\" thus becomes \"StickCmd=hold 10 moveback\". Also you will have to execute /melee stickmode=1 to tell the plugin to use stick arguments from ini and not built-in default /stick behaviour.</p> <ul> <li>**I get the message \"Exchange: -1 slot can not be Found\" or \"Item \"XYZ\" is not found\" for potion belt enabled items</li> </ul> <p>and using in downshit &amp; holyshit command lines**.</p> <p>Use /potionbelt activate # Where as #=the potionbelt slot your item in \\(example for Haste potion that is in slot 2 of the potionbelt\\) downshit6=/if \\(${Spell\\[Elixir of Speed X\\].Stacks} &amp;&amp; !${Me.Buff\\[Elixir of Speed X\\].ID} &amp;&amp; !${Me.Moving}\\) /potionbelt activate 2</p>"},{"location":"plugins/community-plugins/mq2missing/","title":"MQ2Missing","text":""},{"location":"plugins/community-plugins/mq2missing/#description","title":"Description","text":"<p>MQ2Missing was written by s0rcier and is found in the VIP forums here. This plugin compares characters in one list of names to another, determining which names are missing from one list or the other. This plugin was released as a beta and never fully supported.</p>"},{"location":"plugins/community-plugins/mq2missing/#commands","title":"Commands","text":"<ul> <li>_*/missing  [</li> </ul> <p>list2 ]**</p> <p>Acceptable list options</p> <ol> <li>DZ \\(people in current expedition\\)</li> <li>TASK \\(people in current task\\)</li> <li>RAID \\(people in current raid\\)</li> <li>ZONE \\(people in current zone\\)</li> <li>GUILD \\(people in current zone as you with the same guild tag\\)</li> </ol>"},{"location":"plugins/community-plugins/mq2netbots/","title":"MQ2NetBots","text":""},{"location":"plugins/community-plugins/mq2netbots/#description","title":"Description","text":"<p>MQ2NetBots was written by s0rcier and is found in the VIP forums here</p> <ul> <li>MQ2NetBots provides linked MQ2EQBC clients a method of sharing status and statistics.</li> <li>It makes that information available via Top-Level Object members for macro writers and HUD designers.</li> </ul>"},{"location":"plugins/community-plugins/mq2netbots/#commands","title":"Commands","text":"<ul> <li>**/netbots [ on |</li> </ul> <p>off ]**</p> <p>Turns MQ2NetBots functionality on or off</p> <ul> <li>/netbots </li> </ul> <p>Receive status updates from other MQ2NetBots-enabled clients connected to the same EQBCS server.</p> <ul> <li>/netbots </li> </ul> <p>Broadcast status updates to the EQBCS server.</p>"},{"location":"plugins/community-plugins/mq2netbots/#top-level-object-netbots","title":"Top-Level Object: ${NetBots}","text":""},{"location":"plugins/community-plugins/mq2netbots/#forms","title":"Forms","text":"Type Form Description netbots NetBots Returns information about your client netbotsclient NetBots Returns broadcast information about Name <p>=== Data Types ===</p> netbots Type string int bool bool bool string <p>{| border=\"1\" cellpadding=\"2\" cellspacing=\"0\" width=\"600px\" !colspan=\"3\"|netbotsclient |- |style=\"background:#000000;color:#ffffff;text-align:left;width:15%;\"|Type |style=\"background:#000000;color:#ffffff;text-align:left;width:25%;\"|Member Name |style=\"background:#000000;color:#ffffff;text-align:left;\"|Description |- |string |Name |Name of Name |- |int |Zone |Zone ID of Name |- |int |Instance |Instance ID of Name |- |class |Class |Class of Name |- |int |Level |Level of Name |- |float |PctExp |Percent Experience of Name |- |float |PctAAExp |Percent AA Experience of Name |- |float |PctGroupLeaderExp |Percent Group Leader Experience of Name |- |int |CurrentHPs |Current Hitpoints of Name |- |int |MaxHPs |Total Hitpoints of Name |- |int |PctHPs |Current Hitpoints Percentage of Name |- |int |CurrentEndurance |Current Endurance of Name |- |int |MaxEndurance |Total Endurance of Name |- |int |PctEndurance |Current Endurance Percentage of Name |- |int |CurrentMana |Current Mana of Name |- |int |MaxMana |Total Mana of Name |- |int |PctMana |Current Mana Percentage of Name |- |int |PetID |Spawn ID of Name's pet |- |int |PetHP |Hitpoints of Name's pet |- |int |TargetID |Spawn ID of Name's target |- |int |TargetHP |Hitpoints of Name's target |- |spell |Casting |Spell Name is casting |- |string |State |</p> <ul> <li>State of Name</li> <li>STUN STAND SIT DUCK BIND FEIGN DEAD UNKNOWN</li> </ul> <p>|- |bool |Attacking |Is Name attacking? |- |bool |AFK |Is Name AFK? |- |bool |Binding |Is Name kneeling? |- |bool |Ducking |Is Name ducking? |- |bool |Feigning |Is Name feigning? |- |bool |Grouped |Is Name in a group? |- |bool |Invis |Is Name invisible? |- |bool |Levitating |Is Name levitating? |- |bool |LFG |Is Name LFG? |- |bool |Mounted |Is Name on a mount? |- |bool |Moving |Is Name moving? |- |bool |Raid |Is Name in a raid? |- |bool |Sitting |Is Name sitting? |- |bool |Standing |Is Name standing? |- |int |FreeBuffSlots |Total free buff slots of Name |- |bool |InZone |Is Name in the same zone? |- |bool |InGroup |Is Name in the same group? |- |string |Leader |Name's group leader |- |int |Updated |Timestamp of last update from Name |- |string |Gem |All spells Name has memorized |- |spell |Gem |Spell Name has in slot # |- |string |Buff |All buffs Name has |- |spell |Buff |Buff Name has in buff slot # |- |string |Duration |Duration of all buffs Name has |- |int |Duration |Duration of buff Name has in buff slot # |- |string |ShortBuff |All short buffs Name has |- |spell |ShortBuff |ShortBuff Name has in buff slot # |- |string |PetBuff |All pet buffs Name's pet has |- |spell |PetBuff |Pet buff Name's pet has in pet buff slot # |- |int |TotalAA |Total AA of Name |- |int |UsedAA |Total spent AA of Name |- |int |UnusedAA |Total unspent AA of Name |- |int |CombatState |Combat State of Name |- |} == Examples ==</p> <ul> <li>Displays the duration remaining on the buff Samwell has in buff slot 4</li> </ul> <pre><code>/echo ${NetBots[Samwell].Duration[4]}\n</code></pre>"},{"location":"plugins/community-plugins/mq2netheal/","title":"MQ2NetHeal","text":""},{"location":"plugins/community-plugins/mq2netheal/#description","title":"Description","text":"<p>MQ2NetHeal was written by s0rcier \\(With Major Credits A\\_Druid\\_00 and pinkfloydx33\\) and is found in the VIP forums here.</p> <p>MQ2NetHeal is used to provide more flexible way for macros, plugins and huds designers to access those information about healing and curing. MQ2NetHeal has three sections. NetHeal,NetCure, and NetWorst. * MQ2NetHeal provides linked MQ2EQBC clients a method of sharing status and statistics.</p> <ul> <li>It makes that information available via Top-Level Object members for macro writers and HUD designers.</li> </ul>"},{"location":"plugins/community-plugins/mq2netheal/#commands","title":"Commands","text":""},{"location":"plugins/community-plugins/mq2netheal/#netheal","title":"/netheal","text":"<ul> <li>**/netheal [ on |</li> </ul> <p>off ]**</p> <p>Turns MQ2NetHeal functionality on or off</p> <ul> <li>/netheal </li> </ul> <p>Receive status updates from other MQ2NetHeal-enabled clients connected to the same EQBCS server.</p> <ul> <li>/netheal </li> </ul> <p>Broadcast status updates to the EQBCS server.</p> <ul> <li>_*/netheal  [</li> </ul> <p>Time ] **</p> <p>Labels List with 'hot' or 'da' flag for set amount of time. \\(Time is in milliseconds.\\)</p> <p>Recommended use :: ${Target.CleanName} for single target, Or ${NetWorst.Members} for NetWorst Query.</p> <p>This is here for Macro control.</p>"},{"location":"plugins/community-plugins/mq2netheal/#netcure","title":"/netcure","text":"<ul> <li>**/netcure [ on |</li> </ul> <p>off ]**</p> <p>Toggles watching networks for afflictions</p> <ul> <li>/netcure </li> </ul> <p>Toggles playing audio sound.</p> <ul> <li>/netcure </li> </ul> <p>Toggles popup alerts.</p> <ul> <li>/netcure </li> </ul> <p>Toggles sending reports to MQ2 Window.</p>"},{"location":"plugins/community-plugins/mq2netheal/#networst","title":"/networst","text":"<ul> <li>**/networst [ on |</li> </ul> <p>off ]**</p> <p>Toggles watching for spawns health.</p> <ul> <li>/networst </li> </ul> <p>Toggles playing audio sound.</p> <ul> <li>/networst </li> </ul> <p>Toggles popup alerts.</p> <ul> <li>/networst </li> </ul> <p>Toggles sending reports to MQ2 Window.</p>"},{"location":"plugins/community-plugins/mq2netheal/#worst","title":"/worst","text":"<ul> <li>'''/worsttarget  </li> </ul> <p>Targets the spawn that matchs Query.</p> <ul> <li>'''/worstcycle  </li> </ul> <p>Cycles to the next spawn that matchs Query</p> <p>Valid Query Parameters ::</p> <p>radius,hp,pet,pc,group,self,fd,da,hot,war,clr,pal,rng,shd,dru,mnk,brd,rog,shm,nec,wiz,mag,enc,bst,ber,all or #ID#.</p> <p>hp,all and short class names could be use with % ie: shm80 war60 hp80 all99.</p>"},{"location":"plugins/community-plugins/mq2netheal/#top-level-objects","title":"Top-Level Objects","text":""},{"location":"plugins/community-plugins/mq2netheal/#netheal_1","title":"${NetHeal}","text":"<ul> <li>All NetHeal TLOs can be used like : ${NetHeal.Name} Or ${NetHeal.Name}.</li> </ul> <p>Where X could be Name/ID or Y is a Numerical Indice on Last ${NetWorst.Request}.</p> <ul> <li>string '''${NetHeal.Name}</li> </ul> <p>Returns Name.</p> <ul> <li>int ${NetHeal.ID}</li> </ul> <p>Return SpawnID.</p> <ul> <li>float ${NetHeal.Distance}</li> </ul> <p>Return Distance.</p> <ul> <li>int ${NetHeal.PctHPs}</li> </ul> <p>Return PctHPs.</p> <ul> <li>bool ${NetHeal.Pet}</li> </ul> <p>Return This is a Pet?</p> <ul> <li>int ${NetHeal.Class}</li> </ul> <p>Return Class.</p> <ul> <li>bool ${NetHeal.Feign}</li> </ul> <p>Returns TRUE if X or Y is a NEC,SHD,MNK Class.</p> <ul> <li>bool ${NetHeal.Canni}</li> </ul> <p>Returns TRUE if X or Y is a Cannibalize Class.</p> <ul> <li>int ${NetHeal.Spawn}</li> </ul> <p>Return Spawn.</p> <ul> <li>int ${NetHeal.da}</li> </ul> <p>Return da timer left.</p> <ul> <li>int ${NetHeal.hot}</li> </ul> <p>Return hot timer left.</p> <ul> <li>int ${NetHeal.ttl}</li> </ul> <p>Return 60000. -Currently Broken July 13<sup>th</sup>, 2009</p> <ul> <li>int ${NetHeal.Updated}</li> </ul> <p>Return how old is This?</p>"},{"location":"plugins/community-plugins/mq2netheal/#netcure_1","title":"${NetCure}","text":"<ul> <li>Correct parameters are.</li> <li>self,myself,pet,warder,spellid,spellidlist,${NetBots[].Buff}</li> <li>string ${NetCure}</li> </ul> <p>Return list of harmfull effects.</p> <ul> <li>int ${NetCure.Detrimentals}</li> </ul> <p>Return # of Detrimental Spells.</p> <ul> <li>int ${NetCure.Counters}</li> </ul> <p>Return # of Counters.</p> <ul> <li>int ${NetCure.Cursed}</li> </ul> <p>Return # of Curse Counters.</p> <ul> <li>int ${NetCure.Diseased}</li> </ul> <p>Return # of Disease Counters.</p> <ul> <li>int ${NetCure.Poisoned}</li> </ul> <p>Return # of Poison Counters.</p> <ul> <li>int ${NetCure.EnduDrain}</li> </ul> <p>Return # of Endurance Drain Per Tick.</p> <ul> <li>int ${NetCure.LifeDrain}</li> </ul> <p>Return # of Life Drain Per Tick.</p> <ul> <li>int ${NetCure.ManaDrain}</li> </ul> <p>Return # of Mana Drain Per Tick</p> <ul> <li>int ${NetCure.Blinded}</li> </ul> <p>Return # Blind Spells.</p> <ul> <li>int ${NetCure.CastingLevel}</li> </ul> <p>Return # Reducing Casting Level.</p> <ul> <li>int ${NetCure.Charmed}</li> </ul> <p>Return # Charm Spells.</p> <ul> <li>int ${NetCure.Feared}</li> </ul> <p>Return # Fear Spells.</p> <ul> <li>int ${NetCure.Healing}</li> </ul> <p>Return # Reducing Healing Effectiveness.</p> <ul> <li>int ${NetCure.Invulnerable}</li> </ul> <p>Return # Invulnerability Spells</p> <ul> <li>int ${NetCure.Mesmerized}</li> </ul> <p>Return # Memsmerize Spells.</p> <ul> <li>int ${NetCure.Resistance}</li> </ul> <p>Return # Resist Debuff Spells.</p> <ul> <li>int ${NetCure.Rooted}</li> </ul> <p>Return # Root Spells.</p> <ul> <li>int '''${NetCure.Silenced)</li> </ul> <p>Return # Silence Spells.</p> <ul> <li>int ${NetCure.Slowed}</li> </ul> <p>Return # Slow Spells.</p> <ul> <li>int ${NetCure.Snared}</li> </ul> <p>Return # Snare Spells.</p> <ul> <li>int ${NetCure.SpellCost}</li> </ul> <p>Return # Affecting Spell Mana Cost.</p> <ul> <li>int ${NetCure.SpellSlowed}</li> </ul> <p>Return # Slowing Casting Speed.</p> <ul> <li>int ${NetCure.SpellDamage}</li> </ul> <p>Return # Reducing Spell Damage.</p> <ul> <li>int ${NetCure.Trigger}</li> </ul> <p>Return # That Trigger Something.</p>"},{"location":"plugins/community-plugins/mq2netheal/#networst_1","title":"${NetWorst}","text":"<ul> <li>int ${NetWorst.Affects}</li> </ul> <p>Returns Last # of People in Query Range.</p> <ul> <li>float ${NetWorst.Average}</li> </ul> <p>Returns HP Average People in Last Query.</p> <ul> <li>int ${NetWorst.Counter}</li> </ul> <p>Return Last # of People Matching Last Query.</p> <ul> <li>string ${NetWorst.Members}</li> </ul> <p>Return People SpawnID List of Last Query.</p> <ul> <li>int ${NetWorst.Request}</li> </ul> <p>Return # of People Matching That Query.</p> <p>Valid Query Parameters ::</p> <p>radius,hp,pet,pc,group,self,fd,da,hot,war,clr,pal,rng,shd,dru,mnk,brd,rog,shm,nec,wiz,mag,enc,bst,ber,all or #ID#.</p> <p>hp,all and short class names could be use with % ie: shm80 war60 hp80 all99.</p>"},{"location":"plugins/community-plugins/mq2pq/","title":"MQ2PQ","text":""},{"location":"plugins/community-plugins/mq2pq/#description","title":"Description","text":"<p>MQ2PQ \\(by dewey2461\\)</p> <p>Provide a general purpose spell priority queue.</p> <p>You can find the latest version of MQ2PQ here.</p>"},{"location":"plugins/community-plugins/mq2pq/#requirements","title":"Requirements","text":"<p>Plugin:MQ2Cast for... you know... casting!</p>"},{"location":"plugins/community-plugins/mq2pq/#goals","title":"Goals","text":"<p><code>- Replace MQ2Twist / MQ2Medley / MQ2Melee shits.</code> <code>- Automatically figure out Rk.II &amp; Rk. III versions.</code> <code>- Make it easy to write conditionals for individual spells and/or sets of spells.</code> <code>- Make it easy to see what is going on by providing a window with a list all your 'spells', and showing the status of the conditions.</code></p> <p>How? Define the spells \\( AA/Disc/Items \\) you want used in the order of importance. Each pulse the plugin find the most important 'spell' that is ready and casts it. 1. Download source and compile plugin. 2. Download UI and save in your EQ\\uifiles\\default folder. 3. In game type /plugin MQ2PQ 4. In game reload your UI. 5. Click the save button and go edit your servername_characerter.ini file. 6. In game click Load &amp; On</p>"},{"location":"plugins/community-plugins/mq2pq/#commands","title":"Commands","text":"<p><code>Help - Show information</code> <code>load - Loads the saved configuration</code> <code>save - Saves the current state</code> <code>show - Shows the priority list window</code> <code>hide - Hides the priority list window</code> <code>on - Start casting spells.</code> <code>off - Stop casting spells.</code> <code>clear - Clears the priority list</code> <code>addset - Add a set to the priority list</code> <code>lag - How long after the \"casttime\" to consider the spell complete?</code> <code>BARDS ONLY - After \"casttime\"+lag , the plugin will send a /stopcast.</code></p>"},{"location":"plugins/community-plugins/mq2pq/#example","title":"Example","text":"<p>Bard profile converted from MQ2Medley \\( WORKING \\)</p> <p><code>[MQ2PQ]</code> <code>Set=|melee</code> <code>ON=1</code> <code>SHOW=1</code> <code>CastLag=200</code> <code>Silent=0</code> <code>AutoSelect=1</code></p> <p><code>[MQ2PQ-melee]</code> <code>CastIF=!${Me.Invis}</code> <code>Priority=0</code></p> <p><code>Spell1_Name=possessed dreadstone minstrel's rapier</code> <code>Spell1_Recast=8000</code> <code>Spell1_CastIF=${Target.Type.Equal[NPC]} &amp;&amp; (${Target.PctHPs}&lt;98) &amp;&amp; !${Target.Slowed.ID}</code></p> <p><code>Spell2_Name=Rapier of Somber Notes</code> <code>Spell2_Recast=10000</code> <code>Spell2_CastIF=${Spell[Symphony of Battle].Stacks}&amp;&amp;!${Me.Buff[Symphony of Battle].ID}</code></p> <p><code>Spell3_Name=Selo's Sonata</code> <code>Spell3_Recast=60000</code> <code>Spell3_CastIF=${Spell[Selo's Sonata].Stacks}</code></p> <p><code>Spell4_Name=Dichotomic Psalm</code> <code>Spell5_Name=Tune Stuck In Your Head</code> <code>Spell6_Name=War March of Jocelyn Rk. II</code></p> <p><code>Spell7_Name=Aria of Maetanrus Rk. II</code> <code>Spell8_Name=Blade of Vesagran</code> <code>Spell8_CastIF=${Target.Type.Equal[NPC]}&amp;&amp;${Target.PctHPs}&lt;98&amp;&amp;(!${SpawnCount[group pc shaman radius 100]}||${Me.Song[Prophet's Gift of the Ruchu].ID})</code></p> <p><code>Spell9_Name=Boastful Bellow</code> <code>Spell9_CastIF=${Target.Type.Equal[NPC]} &amp;&amp; ${Target.PctHPs}&lt;98</code></p> <p><code>Spell10_Name=Bladed Song</code> <code>Spell10_CastIF=${Target.Type.Equal[NPC]} &amp;&amp; ${Target.PctHPs}&lt;98</code></p> <p><code>Spell11_Name=Fierce Eye</code> <code>Spell11_CastIF=${Target.Type.Equal[NPC]} &amp;&amp; ${Target.PctHPs}&lt;98</code></p> <p><code>Spell12_Name=Fundament: Third Spire of the Minstrels</code> <code>Spell12_CastIF=${Target.Type.Equal[NPC]} &amp;&amp; ${Target.PctHPs}&lt;98</code></p> <p><code>Spell13_Name=Funeral Dirge</code> <code>Spell13_CastIF=${Target.Type.Equal[NPC]} &amp;&amp; ${Target.PctHPs}&lt;98</code></p> <p><code>Spell14_Name=Quick Time</code> <code>Spell14_CastIF=${Target.Type.Equal[NPC]} &amp;&amp; ${Target.PctHPs}&lt;98</code></p> <p><code>Spell15_Name=Song of Stone</code> <code>Spell15_CastIF=${Target.Type.Equal[NPC]} &amp;&amp; ${Target.PctHPs}&lt;98</code></p> <p><code>Spell16_Name=Fjilnauk's Song of Suffering</code> <code>Spell17_Name=Silisia's Lively Crescendo</code> <code>Spell18_Name=Arcane Melody</code></p>"},{"location":"plugins/community-plugins/mq2relaytells/","title":"MQ2RelayTells","text":""},{"location":"plugins/community-plugins/mq2relaytells/#description","title":"Description","text":"<p>MQ2RelayTells Plugin created by Sadge Please do not distribute without my consent.</p> <p>You can find the latest version of MQ2RelayTells here.</p> <p><code>This plugin will relay different types of tells to a chat channel you specify.</code> <code>You may also relay the tells to an email address or cellphone using Blat 262 found at www.blat.net</code> <code>In the MQ2Relaytells.ini file, you can change ChatChannel=/bc (default) to</code> <code>anything you want. For example, if you wanted to relay the tells to a character</code> <code>named Sillytoon, you'd change it to ChatChannel=/tell Sillytoon.</code></p>"},{"location":"plugins/community-plugins/mq2relaytells/#commands","title":"Commands","text":"<p><code>/relaycustomwill addto your ini file and will not relay any tells that contain.</code> <code>/relayhelp command. This allows you to view current settings</code> <code>/relayload command. This allows you to reload the ini file if you make changes.</code></p>"},{"location":"plugins/community-plugins/mq2rez/","title":"MQ2Rez","text":""},{"location":"plugins/community-plugins/mq2rez/#description","title":"Description","text":"<p>Work done by Thez, Based off of dewey's MQ2AutoRez This plugin is set up to auto accept rezes based on INI configuration, along with auto looting your corpse.</p> <p>MQ2Rez</p> <p>You can find the latest version of MQ2Rez here.</p>"},{"location":"plugins/community-plugins/mq2rez/#commands","title":"Commands","text":"<p><code>/rez -&gt; displays settings</code> <code>/rez accept on|off -&gt; Toggle auto-accepting rezbox</code> <code>/rez spawn on|off -&gt; Toggles going to bind point after death</code> <code>/rez pct # -&gt; Autoaccepts rezes only if they are higher than # percent</code> <code>/rez loot on|off -&gt; Toggle looting corpse when opened and when rezzed</code> <code>/rez silent -&gt; Toggle messages for looting individual items</code> <code>/rez command on|off -&gt; Toggle use of a command after looting out corpse</code> <code>/rez setcommand \"mycommand\" -&gt; Set the command that you want.</code> <code>/rez help</code> <code>/rezzme -- Immediately respawn yourself without a rez. You will *not* regain any experience.</code></p> <p>The \"mycommand\" must be formatted like this: \"/memset group\" or \"/multiline ; /sit ; /memset group ; /mac rezbuffs\" etc.</p>"},{"location":"plugins/community-plugins/mq2sound/","title":"MQ2Sound","text":""},{"location":"plugins/community-plugins/mq2sound/#description","title":"Description","text":"<p>MQ2Sound Developed by bushdaka.</p> <p>This is more of a utility plugin to provide an easy way to make custom alerts with some flexibility of where the WAV files are stored.</p> <p>You can find the latest version of MQ2Sound here.</p>"},{"location":"plugins/community-plugins/mq2sound/#commands","title":"Commands","text":"<p><code>/sound gmcheck - this would play the wav file mq2tripod.wav in your macros directory</code> <code>/sound spawnon - plays mq2spawnon.wav</code> <code>/sound 1 - would sound the notify alert</code> <code>/sound sound - ding!</code></p>"},{"location":"plugins/community-plugins/mq2sound/#mq2soundini-examples","title":"MQ2Sound.ini Examples","text":"<p><code>[Default]</code> <code>sound=.\\\\macros\\\\mq2ding.wav</code> <code>gmcheck=.\\\\macros\\\\mq2tripod.wav</code> <code>spawnon=.\\\\macros\\\\mq2spawnon.wav</code> <code>spawnoff=.\\\\macros\\\\mq2spawnoff.wav</code> <code>alert=.\\\\macros\\\\mq2shot.wav</code> <code>1=c:\\\\windows\\\\media\\\\notify.wav</code> <code>2=c:\\\\windows\\\\media\\\\chord.wav</code> <code>3=c:\\\\windows\\\\media\\\\tada.wav</code></p>"},{"location":"plugins/community-plugins/mq2spawn/","title":"MQ2Spawn","text":""},{"location":"plugins/community-plugins/mq2spawn/#description","title":"Description","text":"<p>MQ2Spawn </p> <p>The intention behind this plugin was to have the ability to announce all OnAddSpawn and OnRemoveSpawn to a dedicated window without the need of attaching a debugger. There are several great spawn tracking plugins on these forums such as MQ2Targets and MQ2Pop that offer named mob announcements, custom spawn search arguments, and many more features. This is not intended to be any sort of replacement for their great utility - just real-time tracking of desired spawn types. I borrowed ideas from MQ2ChatWnd, MQ2EQBC, MQ2TimeStamp, MQ2Paranoid, and others.</p> <p>You can find the latest version of MQ2 here.</p>"},{"location":"plugins/community-plugins/mq2spawn/#commands","title":"Commands","text":"<p><code>/spawn - toggle announcements on/off</code> <code>/spawn on - turns announcements on</code> <code>/spawn off - turns announcements off</code> <code>/spawn loc - toggles spawn location suffix in output</code> <code>/spawn spawnid - toggles display of mob spawnid suffix in output</code> <code>/spawn timestamp - toggles timestamp prefix in output</code> <code>/spawn autosave - toggles autosaving of INI file upon setting change</code> <code>/spawn delay - Sets zone time delay</code></p> <p><code>/spawn log on - Turns logging on</code> <code>/spawn log off - Turns logging off</code> <code>/spawn log auto - Enables automatic logging</code> <code>/spawn log setpath- Set path to store log files</code></p> <p><code>/spawn save - save configuration to INI (also saves UI settings)</code> <code>/spawn load - load configuration from INI (also reloads UI settings)</code> <code>/spawn savebychar - toggle saving UI window settings to [i]server.charname[/i] INI section</code> <code>/spawn status - outputs current plugin settings</code> <code>/spawn help - outputs valid command parameters</code></p> <p><code>/spawn clear - clears UI text (like /mqclear)</code> <code>/spawn min - minimizes UI window (like /mqmin)</code> <code>/spawn font # - sets UI font size</code></p> <p><code>/spawn exclude name - adds a spawn name to the exclude list, if using multiple words use quotes e.g.:</code> <code>/spawn exclude guard</code> <code>/spawn exclude \"chuckles the great\"</code></p> <p><code>// Valid spawn type announcement toggles</code> <code>// e.g. /spwn all</code> <code>// e.g. /spwn pc</code> <code>// e.g. /dspwn npc</code> <code>// e.g. /dspwn all</code> <code>//</code> <code>// Note: 'all' will override settings and display all types when on</code> <code>// this does not reset your other toggles, so if you toggle 'all' off</code> <code>// it will announce only the types that are on, retaining old settings</code></p> <p><code>all - pc - npc - mount - pet - merc - flyer - campfire - banner - aura - object - untargetable - chest - trap - timer - trigger - corpse - item - unknown</code></p> <p><code>// you may also use the following commands, where you substitute [i]toggletype[/i] with any of those types listed above:</code></p> <p><code>/spwn [i]toggletype[/i] - toggles output of this type spawning</code> <code>/dspwn [i]toggletype[/i] - toggles output of this type despawning</code></p> <p><code>/spawn [i]toggletype[/i] spawn - toggles output of this type spawning</code> <code>/spawn [i]toggletype[/i] despawn - toggles output of this type despawning</code> <code>/spawn [i]toggletype[/i] minlevel # - sets minimum level a spawn of this type must be to display output (valid 1 to 99)</code> <code>/spawn [i]toggletype[/i] maxlevel # - sets maximum level a spawn of this type must be to display output (valid 1 to 99)</code> <code>/spawn [i]toggletype[/i] color FF00FF - sets the output text color for this spawn type to the supplied hexadecimal RGB color value. do NOT prefix this value with 0x, #, nor use the integer value.</code></p>"},{"location":"plugins/community-plugins/mq2spawnmaster/","title":"MQ2SpawnMaster","text":""},{"location":"plugins/community-plugins/mq2spawnmaster/#description","title":"Description","text":"<p>MQ2SpawnMaster </p> <p>Those of you already familiar with the Digitalxero's SpawnAlert plugin will notice a lot of that functionality here \\(though hopefully without the crashing and other oddities\\) though the intended use of this plugin starts where that one leaves off.</p> <p>/spawnmaster by itself will give you a short help, the commands so far are fairly simple, but will probably become complex as development moves forward. Search strings are stored per-zone in an INI file. Two search types are currently supported, case-sensitive exact match \\(the type created by calling '/spawnmaster add' with a spawn targetted\\) and a case-insensitive sub-string match (created with \"/spawnmaster add \"search string\", although prefacing the string with a</p>"},{"location":"plugins/community-plugins/mq2spawnmaster/#will-indicate-an-exact-match-type-both-currently-only-check-against-the-name-eq-displays-although-future-versions","title":"will indicate an exact-match type). Both currently only check against the name EQ displays, although future versions","text":"<p>will support for exact matches against Some_Mob_00 and so on.</p> <p>The plugin currently stores the mob's x/y/z location, the system and in-game time of spawn, and SpawnID#, though not all of this information is made available in-game. When a mob dies or depops a system and in-game timestamp are also added.</p> <p>Anything set in the OnSpawnCommand key in the Settings section of the INI fille will be executed as a command when the spawn is first matched so that for example \"/speak ${SpawnMaster.LastMatch} just spawned!\" will give you a nice spawn alert if using the MQ2Speech plugin.</p> <p>You can find the latest version of MQ2 here.</p>"},{"location":"plugins/community-plugins/mq2spawnmaster/#commands","title":"Commands","text":"<p>/spawnmaster commands</p> <p><code>on|off - Toggles SpawnMaster plugin on or off</code> <code>add \\\"spawn name\\\" - Add spawn name to watch list (or target if no name given</code> <code>delete \\\"spawn name\\\" - Delete spawn name from watch list (or target if no name given</code> <code>list - Display watch list for zone</code> <code>case [off|on] - Control whether to use exact case matching in any compare. Omit on or off to toggle.</code> <code>uplist - Display any mobs on watch list that are currently up</code> <code>downlist - Display any watched mobs that have died or despawned</code> <code>load - Load spawns from INI</code></p>"},{"location":"plugins/community-plugins/mq2targets/","title":"MQ2Targets","text":""},{"location":"plugins/community-plugins/mq2targets/#introduction","title":"Introduction","text":"<p>MQ2Targets is a HUD Display-type spawn tracker with syntax similar to the /where command. Created by DrunkDwarf.</p>"},{"location":"plugins/community-plugins/mq2targets/#links","title":"Links","text":"<ul> <li>MQ2Targets source and discussion.</li> </ul>"},{"location":"plugins/community-plugins/mq2targets/#features","title":"Features","text":"<ul> <li>Search strings are saved per zone</li> <li>Replace \"add\" with \"notify\" and it will popup a message for each spawn matching your search string</li> <li>Can add as many search strings per zone as needed</li> <li>Each HUD spawn matching the search shows by default Name, Level, Class, Distance, an arrow showing relative</li> </ul> <p>direction, and a compass heading</p> <ul> <li>Use MQ2HUD-type syntax strings to determine HUD display elements to completely customize the HUD display for each</li> </ul> <p>spawn</p> <ul> <li>Default is 5 spawns show, can modify using \"/watch count #\"</li> <li>HUD will highlight spawn if it's the current target</li> <li>Guild members highlighted in HUD</li> <li>HUD list sorted by distance ascending</li> </ul>"},{"location":"plugins/community-plugins/mq2targets/#commands","title":"Commands","text":"<ul> <li>/watch add|notify target</li> <li> <p>Add the specified target from the watch list. The syntax for target is the same as that for the</p> <p>/where command. Using notify will add a pop-up for each spawn.</p> </li> </ul> <p>* /watch remove|delete target|#</p> <ul> <li> <ul> <li>Remove the specified target or entry # in the list.</li> </ul> </li> </ul> <p>* /watch sound id # soundfile.mp3</p> <ul> <li> <ul> <li>Assign soundfile.mp3 to the id #</li> </ul> </li> </ul> <p>* /watch sound # target</p> <ul> <li> <ul> <li>Assign the sound from id # to the target</li> </ul> </li> </ul> <p>* /watch sound list</p> <ul> <li> <ul> <li>List sound associations</li> </ul> </li> </ul> <p>* /watch hud refresh|hudstring</p> <ul> <li> <ul> <li>Refresh or modify the string to be displayed in the HUD. The following additional indicators can be used in the</li> </ul> <p>hudstring:</p> <ul> <li>&amp;clr - this is replaced with \"&gt;&gt;\" to show the current target, and turns on guild/corpse colors</li> <li>&amp;dst - this is replaced with the distance to target plus \u00b1 for Z-axis indication</li> <li>&amp;arr - this is replaced with an arrow indicating direction to mob</li> </ul> </li> </ul> <p>* /watch showtarget</p> <ul> <li> <ul> <li>Toggle showing of the current target in the HUD.</li> </ul> </li> </ul> <p>* /watch speak</p> <ul> <li> <ul> <li>Toggle use of speech \\(see source page for additional instructions\\)</li> </ul> </li> </ul> <p>* /watch show #</p> <ul> <li> <ul> <li>Change the number of entries to show in the HUD</li> </ul> </li> </ul> <p>* /watch x|y #</p> <ul> <li> <ul> <li>Change the leftmost \\(x\\) or topmost \\(y\\) pixel position of the HUD display</li> </ul> </li> </ul> <p>* /watch increment #</p> <ul> <li> <ul> <li>Change the spacing between spawns in the HUD to # pixels</li> </ul> </li> </ul> <p>* /watch togglechat</p> <ul> <li> <ul> <li>Toggles whether to output to a separate MQ2Targets window or use the MQ2Chat window</li> </ul> </li> </ul> <p>* /watch toggleway target|#</p> <ul> <li> <ul> <li>Toggle use of the waypoint indicator for current target or spawn in index #</li> </ul> </li> </ul> <p>* /watch waypoint </p> <ul> <li> <ul> <li>Toggles waypoint overlay. Optional y parameter sets the y pixel position on screen</li> </ul> </li> </ul> <p>* /watch loadmap</p> <ul> <li> <ul> <li>Imports all labels from the current map file</li> </ul> </li> </ul> <p>* /watch showmap</p> <ul> <li> <ul> <li>Show spawns loaded from current map file</li> </ul> </li> </ul> <p>* /watch help</p> <ul> <li> <ul> <li>Displays help and examples</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2targets/#examples","title":"Examples","text":"<p>/watch add paladin pc range 65 70 Show all Player character paladins between level 65 and 70 in current zone</p> <p>/watch add guild Show everyone in your guild in current zone</p> <p>/watch add damlin lingering npc Show when damlin in CoA pops \\(but not his corpse\\)'''</p> <p>/watch remove damlin lingering npc Remove damlin from HUD tracking</p> <p>/watch list Lists the current targets being watched for in current zone</p> <p>/watch show 10 Change the HUD display to track the 10 nearest targets</p> <p>/watch x 200 Display the leftmost edge of the HUD list at screen x position 200</p> <p>/watch y 50 Display the topmost edge of the HUD list at screen y position 50 /watch increment 20 Change the spacing between spawns in the HUD to 20 pixels</p> <p>/watch notify hanvar Pop up message if Hanvar spawns/despawns</p> <p>/watch remove 2 Removes search spawn criteria string #2 according to /watch list</p> <p>/watch hud ({Target.CleanName} \\({Target.Level}\\)\\(\\)&amp;arr})${Target.Distance</p> <p>Targets are displayed as follows:</p> <p>Cleric01 75CLR\\(NNW\\)30.23--&gt;</p> <p>Hint: It's probably easier to open MQ2Targets.ini and edit the HUDString key, similar to:</p> <p><code>HUDString=&amp;clr${Target.CleanName}(${Target.Race}) ${Target.Level}${Target.Class.ShortName} ${Target.Distance}&amp;arr(${Target.HeadingTo})</code></p>"},{"location":"plugins/community-plugins/mq2targets/#known-issues","title":"Known Issues","text":"<ul> <li>The \"color\" /watch parameters do nothing at this time, still thinking about how I want to implement this</li> </ul>"},{"location":"plugins/community-plugins/mq2targets/#plans","title":"Plans","text":"<ul> <li>Add the /watch color functionality</li> <li>Make HUD list clickable?</li> <li>Add HUDString capability to the popup messages</li> </ul>"},{"location":"plugins/community-plugins/mq2timestamp/","title":"MQ2Timestamp","text":""},{"location":"plugins/community-plugins/mq2timestamp/#description","title":"Description","text":"<p>MQ2Timestamp Inserts a timestamp into incoming chat.</p> <p>You can find the latest version of MQ2Clip here.</p>"},{"location":"plugins/community-plugins/mq2timestamp/#commands","title":"Commands","text":"<p>Usage: /timestamp  </p> <p><code>help - displays usage information</code> <code>on/off - enables/disables timestamps</code> <code>reload - reloads the ini file</code> <code>default - resets your format to default(only changeable via ini)</code> <code>format - sets your timestamp format to</code> <code>loc - sets timestamp location: 0-append, 1-prepend</code> <code>maxlen - sets the maximum length of parsed timestamp.</code></p> <p>Will toggle on/off with no arguments</p>"},{"location":"plugins/community-plugins/mq2timestamp/#ini-entries","title":"INI Entries","text":"<ul> <li>The config section is optional.</li> <li>It lets you overwrite the hard coded defaults.</li> </ul> <p><code>[Config]</code> <code>Default=Format</code> <code>MaxLength=&lt;maximum length of formatted time to be returned</code> <code>UseTimestamps=&lt; greater than 0 is on, 0 or less is off &gt;</code></p> <ul> <li>Default will overwrite the hardcoded default of \"\" with Format.</li> <li>MaxLength will trim the timestamp to this value.</li> <li>UseTimestamps, nuff said :p</li> <li>The custom timestamps are stored in server sections by character.</li> <li> \\[Server\\] </li> <li>Character=Loc,Format</li> <li>Server, Character shouldn't require explanation</li> <li>Loc indicates where the timestamp will be added to chat.</li> <li>0 appends the timestamp and 1 will prepend it.</li> <li>Format is the custom timestamp for that character.</li> </ul>"},{"location":"plugins/community-plugins/mq2timestamp/#sample-mq2timestampini","title":"Sample MQ2Timestamp.ini","text":"<p><code>[Config]</code> <code>Default=%I:%M:%S:%p&gt;</code> <code>MaxLength=20</code> <code>UseTimestamps=1</code> <code>[Eci]</code> <code>Soandso=0,[%H:%M]</code></p> <p>____________________________________________________________________</p> <ul> <li>Format reference: Format consists of one or more codes.</li> <li>The codes are preceded by a percent sign \\(%\\).</li> <li>Characters that do not begin with % are copied unchanged.</li> <li><code>%a - Abbreviated weekday name</code></li> </ul> <p><code>%A - Full weekday name</code></p> <p><code>%b - Abbreviated month name</code></p> <p><code>%B - Full month name</code></p> <p><code>%c - Date and time representation appropriate for locale</code></p> <p><code>%d - Day of month as decimal number (01 \u2013 31)</code></p> <p><code>%H - Hour in 24-hour format (00 \u2013 23)</code></p> <p><code>%I - Hour in 12-hour format (01 \u2013 12)</code></p> <p><code>%j - Day of year as decimal number (001 \u2013 366)</code></p> <p><code>%m - Month as decimal number (01 \u2013 12)</code></p> <p><code>%M - Minute as decimal number (00 \u2013 59)</code></p> <p><code>%p - Current locale's A.M./P.M. indicator for 12-hour clock</code></p> <p><code>%S - Second as decimal number (00 \u2013 59)</code></p> <p><code>%U - Week of year as decimal number, with Sunday as first day of week (00 \u2013 53)</code></p> <p><code>%w - Weekday as decimal number (0 \u2013 6; Sunday is 0)</code></p> <p><code>%W - Week of year as decimal number, with Monday as first day of week (00 \u2013 53)</code></p> <p><code>%x - Date representation for current locale</code></p> <p><code>%X - Time representation for current locale</code></p> <p><code>%y - Year without century, as decimal number (00 \u2013 99)</code></p> <p><code>%Y - Year with century, as decimal number</code></p> <p><code>%z, %Z - Time-zone name or abbreviation; no characters if time zone is unknown</code></p> <p><code>%% - Percent sign</code></p> <p><code>Special formating:</code> <code>%#c - Long date and time representation, appropriate for current locale. For example: \"Tuesday, March 14, 1995, 12:41:29\".</code> <code>%#x - Long date representation, appropriate to current locale. For example: \"Tuesday, March 14, 1995\".</code> <code>%#d, %#H, %#I, %#j, %#m, %#M, \\</code> <code>%#S, %#U, %#w, %#W, %#y, %#Y - Remove leading zeros (if any).</code></p>"},{"location":"plugins/community-plugins/mq2tracking/","title":"MQ2Tracking","text":""},{"location":"plugins/community-plugins/mq2tracking/#description","title":"Description","text":"<p>MQ2Tracking, by MacroFiend is a plugin which mimics the functionality of the Tracking skill of Rangers, Bards and Druids.</p> <p>The source to the plugin can be downloaded here.</p>"},{"location":"plugins/community-plugins/mq2tracking/#commands","title":"Commands","text":"<ul> <li>/track help</li> </ul> <p>Show command help</p> <ul> <li>/track off</li> </ul> <p>Stop tracking the current spawn</p> <ul> <li>/track target</li> </ul> <p>Start tracking the current target</p> <ul> <li>/track players </li> </ul> <p>What you want to track</p> <ul> <li>/track refresh </li> </ul> <p>Explicitly turns on or off window refresh</p> <ul> <li>/track refresh</li> </ul> <p>Toggles the window refresh on or off</p> <ul> <li>/track refresh #</li> </ul> <p>Sets the refresh time in seconds</p> <ul> <li>/track filter </li> </ul> <p>Sets or removes custom spawn search parameters \\(same as [/who](../../reference/commands/who.md)\\)</p> <ul> <li>/tracknames </li> </ul> <p>Sets or removes custom naming for spawn entries in the list (see NamingSpawn)</p>"},{"location":"plugins/community-plugins/mq2vendors/","title":"MQ2Vendors","text":""},{"location":"plugins/community-plugins/mq2vendors/#description","title":"Description","text":"<p>MQ2Vendors is a plugin that will check a merchant's item list when you open that merchant, and will then notify you if the merchant has any items that you are looking for.</p> <ul> <li>If the vendor has an item you are looking for, you will be notified in the MQ chat window, and the merchant's name</li> </ul> <p>will be enclosed in &gt;&gt;&gt;&gt; \\&lt;\\&lt;\\&lt;\\&lt; to highlight you to it.</p> <ul> <li>Note: You will not be notified if the vendor item is a default item on that vendor (ie. if it does not have a</li> </ul> <p>quantity in the merchant window).</p> <p>MQ2Vendors was created by Ceghkmv and can be found here.</p>"},{"location":"plugins/community-plugins/mq2vendors/#commands","title":"Commands","text":"<ul> <li>/vendor add|remove \\&lt;ItemID|ItemName|ItemLink&gt;</li> </ul> <p>Add/remove the relevant name/ID to/from the watch list. Note: Names are case sensitive! You can also use EQ links instead of the name, and this is recommended, to ensure you get the correct capitalization.</p> <ul> <li>/vendor list</li> </ul> <p>List all items in the watch list.</p> <ul> <li>/vendor savevendors|nosavevendors</li> </ul> <p>This enables or disables saving of vendors' default item list to a local INI file.</p>"},{"location":"plugins/community-plugins/mq2vendors/#top-level-objects","title":"Top-Level Objects","text":"<ul> <li>string ${Vendor.Version}</li> </ul> <p>Outputs the version number.</p> <ul> <li>bool ${Vendor.HasItems}</li> </ul> <p>Returns TRUE if the merchant has items you are looking for.</p>"},{"location":"plugins/community-plugins/mq2web/","title":"MQ2Web","text":""},{"location":"plugins/community-plugins/mq2web/#description","title":"Description","text":"<p>MQ2Web Created by ieatacid</p> <p>The two offsets at the top will need to be updated after each patch, more than likely. This adds the \"/web\" command. Follow it with a URL \\(\"[http://](http://)\" is added if you don't include it yourself\\). It works to open any web page. For instance, \"/web google.com\" opens the google home page. You can find the latest version of MQ2Web here.</p>"},{"location":"plugins/community-plugins/mq2web/#commands","title":"Commands","text":"<ul> <li>/web</li> <li>/web target = searches Allakhazam for your target's name if an NPC, Magelo if a PC</li> <li>Shift+click an item link looks up the item on Lucy</li> <li>Ctrl+click an item link looks up the item on EQItems</li> </ul>"},{"location":"plugins/community-plugins/mq2xptracker/","title":"MQ2XPTracker","text":""},{"location":"plugins/community-plugins/mq2xptracker/#description","title":"Description","text":"<p>MQ2XPTraxker \\(by Cr4zyb4rd\\) is a plugin that tracks your XP. Reports are made in the chat window</p> <p>You can find the latest version of MQ2Clip here.</p>"},{"location":"plugins/community-plugins/mq2xptracker/#commands","title":"Commands","text":"<p><code>/xptracker - Display time tracking was started.</code> <code>/xptracker reset - Reset all events and begin tracking as if plugin was just loaded</code> <code>/xptracker total - Display total gains since tracking start</code> <code>/xptracker quiet - Toggle output of tracking messages</code> <code>/xpevents - list the events/timestamps of the events we've tracked</code> <code>/xpevents [#] - lists the events tracked in the past [#] seconds</code> <code>/xpaverage - lists the average (mean) xp per-kill</code></p>"},{"location":"plugins/community-plugins/mq2eqbc/","title":"MQ2EQBC","text":""},{"location":"plugins/community-plugins/mq2eqbc/#description","title":"Description","text":"<p>MQ2EQBC \\(EQ box chat\\) is a plugin composed of two parts, a server \\(EQBCS\\) and a client \\(MQ2EQBC\\).</p> <ul> <li>The server provides a similar service to an IRC server but is much easier to setup.</li> <li>The client is similar to the MQ2IRC client in that it monitors text that is sent to the EQBC</li> </ul> <p>server.</p> <ul> <li>The main advantage of MQ2EQBC is that it allows remote commands to be sent directly to a single or all connected</li> </ul> <p>clients.</p> <p>This plugin was originally written by Omnictrl, with ascii38 and pms providing maintenance for a period. The plugin and server currently have no active maintainer.</p> <p>The discussion thread regarding this plugin is found in the VIP forums here. The current client source release is located here. The current compiled server application, which also will compile and run on Linux, can be found at the link in this post.</p> <p>For the development history of this plugin see the article here.</p>"},{"location":"plugins/community-plugins/mq2eqbc/#features","title":"Features","text":"<ul> <li>Allows remote commands via box chat much like mastermind does.</li> <li>Allows you to control any connected client anywhere (ie. someone in your raid needs to afk for a while: they connect</li> </ul> <p>to your server, you remotely load macros and control their toon as needed until they return).</p> <ul> <li>Is mostly compatible with scripts that already support MQ2Irc \\(replace '/i say' with '/bc'\\).</li> <li>Offers private chat \\(and private chat channels\\) that do not go through EQ servers.</li> <li>Optional dedicated UI window for chat output.</li> <li>Input typed in dedicated UI window defaults to private '/bc' chat much like EQ's chat window defaults to /say.</li> <li>Dedicated UI window supports a configurable keybind for fast private chatting.</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/#commands","title":"Commands","text":""},{"location":"plugins/community-plugins/mq2eqbc/#bccmd","title":"/bccmd","text":"<ul> <li>/bccmd connect</li> </ul> <p>Connect to server on port using password \\(defaults: 127.0.0.1 2112\\). Note: Once you connect, it will remember that connection, so next time you just have to type: /bccmd connect</p> <ul> <li>/bccmd forceconnect</li> </ul> <p>Connect to server on port using password \\(defaults: 127.0.0.1 2112\\). This differs from connect in that it works while already connected to a server.</p> <ul> <li>/bccmd iniconnect</li> </ul> <p>Connect to a server by ini key name using information defined in your MQ2EQBC.ini file. Example:</p> <pre><code>;2100 would be the keyname\n[2100]\nServer=10.0.0.1\nPort=2100\n\n;2150 would be the keyname\n[2150]\nServer=10.0.0.1\nPort=2150\nPassword=mypassword\n</code></pre> <ul> <li>/bccmd quit</li> </ul> <p>Disconnects from the server</p> <ul> <li>/bccmd help</li> </ul> <p>Show Help</p> <ul> <li>/bccmd status</li> </ul> <p>Show if connected or not</p> <ul> <li>/bccmd reconnect</li> </ul> <p>Close the current connection and connect again</p> <ul> <li>/bccmd names</li> </ul> <p>List everyone that is connected to the server</p> <ul> <li>/bccmd colordump</li> </ul> <p>Show color codes</p> <ul> <li>/bccmd toggle option</li> <li>/bccmd set option \\&lt; on | off &gt;</li> </ul> <p>Toggle or set option on or off. Valid options:</p> <p>:* autoconnect</p> <p>Auto connect to server when plugin loads</p> <p>:* control</p> <p>Allow remote control</p> <p>:* compatmode</p> <p>IRC compatibility mode keeps name formatting IRC friendly and echoes outgoing /bct</p> <p>:* reconnect</p> <p>Auto-reconnect on server disconnect or zone change</p> <p>:* window</p> <p>Use dedicated EQBC UI window</p> <p>:* localecho</p> <p>Echoing outgoing commands back if in a channel \\(echo is server-driven\\)</p> <p>:* tellwatch</p> <p>Relay received tells to /bc</p> <p>does not support tell windows</p> <p>:* guildwatch</p> <p>Relay guild chat received to /bc</p> <p>:* groupwatch</p> <p>Relay group chat received to /bc</p> <p>:* fswatch</p> <p>Relay fellowship chat received to /bc</p> <p>:* silentcmd</p> <p>Squelch 'CMD: ' echo</p> <p>:* savebychar</p> <p>Saving custom UI window settings to CharName sections of the configuration file \\(saves to _Window_ if disabled\\)</p> <p>:* silentinccmd</p> <p>Squelches incoming eqbc command requests</p> <p>:* silentoutmsg</p> <p>Squelches outgoing /bct with compatmode on</p> <p>:* notifycontrol</p> <p>Relays a message to /bc if the control option is disabled when a command request is received</p> <p>:* echoall</p> <p>Echoes outgoing /bca commands if enabled</p> <ul> <li>/bccmd set reconnectsecs #</li> </ul> <p>Set the number of seconds to wait until reconnecting \\(default 15\\)</p> <ul> <li>/bccmd stopreconnect</li> </ul> <p>Stop trying to reconnect for now</p> <ul> <li>/bccmd channels</li> </ul> <p>Set the list of channels to receive tells from.</p> <ul> <li>/bccmd version</li> </ul> <p>Show plugin version</p>"},{"location":"plugins/community-plugins/mq2eqbc/#bc","title":"/bc","text":"<ul> <li>/bc your text here</li> </ul> <p>Send \"your text here\" to the server.</p>"},{"location":"plugins/community-plugins/mq2eqbc/#bct","title":"/bct","text":"<ul> <li>/bct ToonName your text here</li> </ul> <p>Send \"your text here\" to ToonName</p> <ul> <li>/bct ToonName //command</li> </ul> <p>Send /command to ToonName</p>"},{"location":"plugins/community-plugins/mq2eqbc/#bca","title":"/bca","text":"<ul> <li>/bca //command</li> </ul> <p>Send /command to all connected clients, excluding the client you issued the command from.</p>"},{"location":"plugins/community-plugins/mq2eqbc/#bcaa","title":"/bcaa","text":"<ul> <li>/bcaa //command</li> </ul> <p>Send /command to all connected clients, including the client you issued the command from.</p>"},{"location":"plugins/community-plugins/mq2eqbc/#bcfont","title":"/bcfont","text":"<ul> <li>/bcfont #</li> </ul> <p>Sets the font size of the UI window, similar to the /mqfont command</p>"},{"location":"plugins/community-plugins/mq2eqbc/#bcmin","title":"/bcmin","text":"<ul> <li>/bcmin</li> </ul> <p>Minimizes the UI window, similar to the /mqmin command</p>"},{"location":"plugins/community-plugins/mq2eqbc/#bcclear","title":"/bcclear","text":"<ul> <li>/bcclear</li> </ul> <p>Clears the buffer of the UI window, similar to the /mqclear command</p>"},{"location":"plugins/community-plugins/mq2eqbc/#configuration-file","title":"Configuration File","text":"<p>The EQBC client will create the configuration file MQ2EQBC.ini in your root MQ2 folder. An example of this configuration file is as follows:</p> <pre><code>[Settings]\nAllowControl=1\nAutoConnect=1\nAutoReconnect=1\nReconnectRetrySeconds=15\nLocalEcho=0\nSaveByCharacter=0\nSilentCmd=1\nTellWatch=1\nGuildWatch=1\nGroupWatch=1\nFSWatch=1\nUseWindow=1\nKeybind=.\n\n[Window]\nChatTop=600\nChatBottom=800\nChatLeft=700\nChatRight=1100\nFades=0\nAlpha=255\nFadeToAlpha=255\nDuration=500\nLocked=1\nDelay=2000\nBGType=1\nBGTint.red=0\nBGTint.green=0\nBGTint.blue=0\nFontSize=3\nUseMyTitle=1\nWindowTitle=Custom Title Goes Here With No Quotes\n\n[Last Connect]\nServer=10.0.0.1\nPort=2112\n\n[Custom1]\nServer=10.0.0.1\nPort=2115\nPassword=custompass\n\n[Custom2]\nServer=soe.sony.com\n\n[Custom3]\nServer=eqbc.google.com\nPort=1337\n</code></pre> <ul> <li>*If you wish to use a custom window title you must set UseMyTitle to 1 and change the WindowTitle* line before</li> </ul> <p>loading the plugin**.</p>"},{"location":"plugins/community-plugins/mq2eqbc/#top-level-objects","title":"Top-Level Objects","text":""},{"location":"plugins/community-plugins/mq2eqbc/#eqbc","title":"${EQBC}","text":"Type Member Name Description bool Connected Client connection status string Names List of connected characters string Port OFFLINE if not connected, port if connected string Server hostname or IP of server you connected to string ToonName Character name as seen by EQBC \\(may reflect YouPlayer\\) bool Setting Option enabled/disabled status. \\(see **/bccmd set** for complete list\\)"},{"location":"plugins/community-plugins/mq2eqbc/#examples","title":"Examples","text":"<p>Sending commands to other toons:</p> <pre><code>/bct ToonName //sit\n/bct ToonName //stand\n/bct ToonName //macro ninjalooter\n/bct ToonName //endmacro\n</code></pre> <p>Sending commands to channels:</p> <pre><code>/bccmd channels chatchan, commands\n/bct chatchan hey there guys\n/bct commands //bct chatchan My zone: $\\{Zone.ShortName}\n</code></pre> <p>Sending commands to all other connects clients:</p> <pre><code>/bca //target id ${Me.ID}\n/bca //timed 10 /stick 10\n</code></pre> <p>Sending commands to all clients including yourself:</p> <pre><code>/bcaa //makecamp return\n</code></pre> <p>Using noparse to get MQData with bca &amp; bcaa \\(one day this will be fixed\\):</p> <pre><code>/noparse /bcaa //bc I am ${Me.PctExp} into ${Me.Level}\n</code></pre> <p>Taking advantage of escape characters instead of noparse \\(only works with _/bct_ at this time\\):</p> <pre><code>/bct Mycleric //bc I am level $\\{Me.Level}\n</code></pre>"},{"location":"plugins/community-plugins/mq2eqbc/#eqbcs","title":"EQBCS","text":"<p>EQBCS is a server that can be run as a console application on windows, or as either a foreground application or daemon on a Unix-like system \\(tested with Linux and FreeBSD\\).</p> <p>It currently takes the following command line parameters:</p> <ul> <li>-p  which is the port you want to bind to \\(default is 2112, which is dedicated to the Canadian trio Rush\\).</li> <li>-i</li> </ul> <p>which is the IP address that you want to the server to listen on if there is more than one network interface in the computer \\(default is to listen on all interfaces, which is what you want unless you know otherwise\\).</p> <ul> <li>-l will send all output to rather than to the screen.</li> <li>-d will cause the application to run as a deamon process in the background \\(UNIX only\\).</li> </ul> <p>Examples:</p> <pre><code>C:\\&gt; eqbcs              Listens on port 2112\nC:\\&gt; eqbcs -p 4224      Listens on port 4224\nC:\\&gt; eqbcs -l log.txt   Listens on port 2112 and sends all server output to the file log.txt.\nC:\\&gt; eqbcs ftp          Does not work, it does not look up service names to map to port, and the text won't work.\n</code></pre>"},{"location":"plugins/community-plugins/mq2eqbc/#compiling-eqbcs-windows","title":"Compiling EQBCS \\(Windows\\)","text":"<p>'''This guide for compiling EQBCS for Windows is credited to Tinydru from this post</p>"},{"location":"plugins/community-plugins/mq2eqbc/#copy-the-two-parts-of-the-eqbsc-post-in-to-a-single-eqbcscpp-file-you-can-just-use-notepad-to-do-this-just","title":"Copy the two parts of the eqbsc post in to a single eqbcs.cpp file (you can just use Notepad to do this - just","text":"<p>remember to replace the .txt extension with .cpp).</p> <ol> <li>Launch Visual Studio 2005</li> <li>Create a new project. For the project type, select Visual C++ | Win32 and then Win32 Console Application template.</li> <li>Name the project \\(I used eqbcs\\). Make sure to pay attention as to where it is creating the directory for the project</li> </ol> <p>\\(so you know where to grab the app files after you build the solution\\). Click the OK button after you've given it a</p> <p>name.</p> <ol> <li>Click the Next button on the first page of the Win32 Application Wizard</li> <li>On the Applications Settings window:</li> <li>Leave the default Application type as \"Console application\"</li> <li>Uncheck \"Precompiled header\"</li> <li>Check \"Empty project\"</li> <li>Click the Finish button</li> <li>Your empty project should now be open. In the Solution Explorer, right click on the \"Source Files\" folder and select</li> </ol> <p>Add -&gt; Existing Item from the list.</p> <ol> <li>Navigate to the folder where you saved the eqbcs.cpp file you created in step 1 and double click on it \\(eqbcs.cpp\\).</li> </ol> <p>This will add eqbcs.cpp to the Source Files folder.</p> <ol> <li>In the Solution Explorer, double click on the eqbcs.cpp file - this will open the code in the code window.</li> <li> <p>In the code, find \"tempPort = atoi\\(argv\\[1\\]\\);\" and replace it with \"tempPort = atoi\\(\\(const char \\*\\)argv);\"</p> <p>\\(this will be on or near line 1983\\). Thanks much to Bardomatic for fixing this piece of code.</p> </li> <li> <p>From the File menu, select Save All.</p> </li> <li>From the Build menu, select \"Configuration Manager...\"</li> <li>In the Active solution configuration: drop down box, select \"Release\" and then click the Close button.</li> <li> <p>From the Project menu, select eqbcs Properties... (\"eqbcs\" might be diffent if you named the project something</p> <p>else).</p> </li> <li> <p>In the Configuration: drop down at the top of the Property Pages window, select \"Release\" from the list.</p> </li> <li> <p>Open the Configuration Properties node \\(click on the little +\\) and then the Linker node. Now click on \"Input\" (found</p> <p>beneath \"Linker\").</p> </li> <li> <p>In the right hand window of the Propery Pages window, click on \"Additional Dependencies\". When you click on that, a</p> <p>little box with elipses \\(...\\) will appear on the right side of the field - click on that. The Additional</p> <p>Dependencies window will open.</p> </li> <li> <p>Type wsock32.lib in the text box and then click the OK button.</p> </li> <li>Click the OK button on the Property Pages window.</li> <li>From the File menu, select Save All.</li> <li>From the Build menu, select Build solution. The build *should* succeed.</li> <li>You are done - go get your new eqbcs.exe from the Release folder where you created the solution!!</li> </ol>"},{"location":"plugins/community-plugins/mq2eqbc/#compiling-eqbcs-windows-cmd-line","title":"Compiling EQBCS \\(Windows cmd line\\)","text":"<p>'''This guide for compiling EQBCS from the Windows cmd line is credited to dont_know_at_all from this post</p>"},{"location":"plugins/community-plugins/mq2eqbc/#ctrl-esc-run","title":"ctrl-esc Run","text":"<ol> <li>cmd</li> <li>in the cmd.exe window type the following:</li> <li>c:\\Program Files\\Microsoft Visual &lt;add your version/path here&gt;/common7/tools/vsvars32.bash</li> <li>cl eqbcs.cpp</li> <li>that's it.</li> </ol> <p>=== Compiling EQBCS \\(Linux\\) === '''This guide for compiling EQBCS for Linux is credited to ascii38 from this post</p>"},{"location":"plugins/community-plugins/mq2eqbc/#g-fpermissive-eqbcscpp-o-eqbcs","title":"g++ -fpermissive eqbcs.cpp -o eqbcs","text":""},{"location":"plugins/community-plugins/mq2eqbc/#eqbcs-as-a-windows-service","title":"EQBCS as a Windows Service","text":"<ol> <li>Download the [Windows Resource Kit</li> </ol> <p>2003]\\([http://www.microsoft.com/downloads/details.aspx?FamilyID=9d467a69-57ff-4ae7-96ee-b18c4790cffd&amp;DisplayLang=en](http://www.microsoft.com/downloads/details.aspx?FamilyID=9d467a69-57ff-4ae7-96ee-b18c4790cffd&amp;DisplayLang=en)\\)</p> <ol> <li>Run the executable to install the Resource Kit</li> <li>Open up a command prompt and run the following to install a service stub (*default install location used in this</li> </ol> <p>example*):</p> <p>'''You may substitute \"EQBC Service\" with whatever name you would like to give to the service for display purposes</p> <pre><code>\"C:\\Program Files\\Windows Resource Kits\\Tools\\instsrv.exe\" \"EQBC Service\" \"C:\\Program Files\\Windows Resource Kits\\Tools\\srvany.exe\"\n</code></pre> <ol> <li>Run regedit to edit the Windows registry, and navigate to the following registry key:</li> </ol> <p>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EQBC Service</p> <ol> <li>From the Edit menu, select New, select Key, and name the new key Parameters</li> <li>Highlight the Parameters key</li> <li>From the Edit menu, select New, select String Value, and name the new value Application</li> <li>From the Edit menu, select Modify, and type in the full path name and application name of EQBCS, including</li> </ol> <p>the drive letter and file extension. You would use the following example if you had the server located in folder</p> <p>MQ2 on your C: drive</p> <pre><code>C:\\MQ2\\eqbcs.exe\n</code></pre> <ol> <li>Now go to Start and Run and type in services.msc</li> <li>From here scroll down to EQBC Service \\(or whatever name you gave the service above\\), right-click and select</li> </ol> <p>Properties</p> <ol> <li>On the General tab, change the Startup type to Automatic</li> <li>Click the Start button to start your service</li> <li>Select the Recovery tab, and you have the option of changing the drop-down boxes for First-Failure and so on to</li> </ol> <p>Restart the service</p> <ol> <li>Select OK and you are finished</li> </ol>"},{"location":"plugins/community-plugins/mq2eqbc/#problems","title":"Problems","text":"<ul> <li>This application has failed to start because the application configuration is incorrect. Reinstalling this application may fix the problem</li> </ul> <p>This is the most common issue with EQBCS failing to run in Windows. Your system is missing runtime libraries. Get both below.</p> <ul> <li>2005</li> <li>2008</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/#eqbc-interface","title":"EQBC Interface","text":"<p>EQBC Interface is an application developed by ieatacid to allow communication with EQBCS outside of the EverQuest game client. The discussion thread for this application is found in the VIP forums here. The most recent release of this application also allows you to view detailed information about characters connected to your server by selecting their name, which will display their statistics on the right-hand side of EQBC Interface. The interval of how often to poll the selected character is configurable by the user so that this information can be very close to real-time.</p> <p>Jimbob extended the functionality of this program in July 2015. The discussion thread for his fork of the project is found in the VIP forums here.</p>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/","title":"MQ2EQBC:Revisions","text":"<p>__NOTOC__</p>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#guide-to-revision-numbering","title":"Guide to Revision Numbering","text":"<p>Version numbering currently follows incrementing sequence theory. All future releases are numbered based on date of release. The letter in the revision number indicates who made the contribution.</p> <ul> <li>Author: Omnictrl \\(o\\)</li> <li>Contributor: ascii38 \\(a\\)</li> <li>Contributor: Vladus2000 \\(v\\)</li> <li>Contributor: pms \\(p\\)</li> <li>Contributor: ieatacid \\(i\\)</li> <li>Contributor: three-p-o</li> <li>Contributor: MacQ</li> <li>Contributor: Jimbob</li> </ul> <p>== MQ2EQBC ==</p>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-121","title":"Version 12.1","text":"<p>Update by Jimbob</p> <ul> <li>I added support for my latest eqbci release, so it will provide more information to the client.</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-120","title":"Version 12.0","text":"<p>Update by MacQ</p> <ul> <li>I modified the LoadINI() section to first load from the  section of the INI, then it loads from the</li> </ul> <p>  section.</p> <p>If there is no  section or one of the variables is not listed in the  </p> <p>section, then the value of that variable defaults to the  section or the defaults originally hard coded</p> <p>in EQBC.</p> <ul> <li>With this technique, we have greater flexibility to control variables on either a global or per characters basis.</li> </ul> <p>Now you can set certain variables you deem to be more global in the  section, or variables you deem to</p> <p>be more character specific set in a  section, which will override the  section.</p>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-110219","title":"Version 11.0219","text":"<p>Update by three-p-o</p> <ul> <li>Update for GetTickCount64</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-110218","title":"Version 11.0218","text":"<ul> <li>Fix for null pointer crash when logging in</li> </ul> <p>\\(final pms update\\)</p>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-100513","title":"Version 10.0513","text":"<ul> <li>Death to Diversity. \\(Constant to prevent win7 64bit crashes\\)</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-90904","title":"Version 9.0904","text":"<ul> <li>Item links now function in the custom window \\(thanks dkaa, ieatacid\\)</li> <li>Added a new option 'echoall' - /bccmd set echoall on</li> <li>This will echo outgoing '/bca' commands back to you in this format: \\(to all\\) message or command here</li> <li>This defaults to off.</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-90822","title":"Version 9.0822","text":"<p>New Features</p> <ul> <li>/bccmd iniconnect</li> </ul> <p>-- you can now save regularly used servers to your ini and connect to them by the key name in the event you have your own server, and a few others for your mates. Example, in your ini you could do</p> <pre><code>[Mine]\nServer=127.0.0.1\nPort=9999\n\n[MyServer]\nServer=10.0.0.10\nPort=1234\n\n[Sklug]\nServer=soe.sony.com\nPort=1337\n\n[Ngreth]\nServer=soe.sony.com\nPort=7331\n</code></pre> <p>and then /bccmd iniconnect mine or /bccmd iniconnect myserver</p> <p>and so on...</p> <ul> <li>/bccmd forceconnect</li> </ul> <p>-- will disconnect you from your current server and attempt to connect to the new one rather than warn you that you are already connected and do nothing.</p> <ul> <li>New Settings \\(see the functionality changes about the syntax\\)</li> <li>silentinccmd</li> </ul> <p>-- if you trust those you botchat with and do not want to see incoming command requests, enabling this option will squelch all command requests</p> <ul> <li>silentoutmsg</li> </ul> <p>-- this happens with compatmode off, but if you turn compatmode on \\( &gt;name\\&lt; looks weird!\\) and want to hide the outgoing messages, you may enable this and it will keep the names irc-leet and still squelch the message</p> <ul> <li>notifycontrol</li> </ul> <p>-- with the allow control option disabled, enabling notifycontrol will output a message to /bc notifying that the command request was not processed due to allow control being off. \\(/bcaa //bc test ...\\)</p> <ul> <li>The dedicated UI window now allows for a keybind. Pressing the keybind will set the cursor focus on the bc window</li> </ul> <p>(which, for those who do not know, anything you type there defaults to /bc, so you do not need to prefix the msg if</p> <p>you do not want).</p> <p>-The keybind defaults to nothing -It saves to MacroQuest.ini as \"EQBC_Nrm=clear\" when you first load the plugin. You may adjust it in  Keybind=key of your EQBC ini file \\(i do it there\\) before loading the plugin.</p> <ul> <li>New TLO members</li> </ul> <p>string \\({EQBC.Server} - OFFLINE if not connected, the name of the server \\(hostname or ip depending on how you made the connection\\) if connected -- /if \\(\\){EQBC.Server.Equal}) { // do my private stuff } else { // do other stuff }</p> <p>string ${EQBC.Port} - OFFLINE if not connected, the port number otherwise</p> <p>string \\({EQBC.ToonName} - the name of your character _AS SEEN BY EQBC_ aka /if \\(\\){EQBC.ToonName.Equal}) { // im bugged or have a ghost, so do my fix routine }</p> <p>bool \\({EQBC.Setting\\[\\[i\\]settingname\\[/i\\]\\]} - returns the TRUE or FALSE based on if a setting is enabled. the form is required, so if you do not supply a \\[i\\]settingname\\[/i\\] it will return FALSE. -- /if \\(\\){EQBC.Setting}) { /echo I have tellwatch enabled }</p> <p>Functionality Changes</p> <ul> <li>the syntax of all the settings has changed slightly. sorry for the annoyance but it had to be done...</li> <li>you now adjust the settings either with 'set __ on/off' or 'toggle ___'</li> </ul> <pre><code>so previously:  /bccmd toggletellwatch\n\nnow becomes\n\n/bccmd toggle tellwatch\nor\n/bccmd set tellwatch on\nor\n/bccmd set tellwatch off\n\nthis applies to all setting options.\n\n/bccmd set reconnectsecs #  &lt;---this is the only one that does not support on/off, and the only that accepts a number as a parameter\n</code></pre> <p>as seen in the source, valid settings are: autoconnect control compatmode reconnect window reconnectsecs localecho tellwatch guildwatch groupwatch fswatch silentcmd savebychar silentinccmd notifycontrol silentoutmsg</p> <ul> <li>Rather than pretend it will be fixed again one day, removed the 'relog' command parameter (and all related</li> </ul> <p>functions) as MQ2SwitchChar by ieatacid provides all the</p> <p>functionality needed.</p> <ul> <li>when offline, /bcaa will no longer announce the 'you are not connected' error message followed by processing the</li> </ul> <p>command locally regardless.</p> <p>Cleanup &amp; Bug Fixes</p> <ul> <li>The dedicated UI window will no longer clear previous buffer when zoning in some cases</li> <li>The dedicated UI window will now remain when hovering.</li> <li>The dedicated UI window will no longer set the cursor at the beginning of the line when scrolling through the</li> </ul> <p>command history.</p> <ul> <li>The dedicated UI window history will no longer scroll through the history out of order in some cases.</li> <li>The dedicated UI window should now properly update the window title when reconnecting to a different server (unless</li> </ul> <p>you set UseMyTitle=1)</p> <ul> <li>The dedicated UI window should save your title for you instead of requiring a manual entry to the INI</li> <li>Camping out should properly save your window settings \\(probably not CTD or /exit\\) without forcing you to toggle the</li> </ul> <p>window on &amp; off to force a save</p> <ul> <li>The dedicated UI window will no longer display item links as long strings of item data. They will properly display</li> </ul> <p>with their pink clickable names. FOR NOW THE LINKS DO NOT FUNCTION, I have a feeling due to buffer size &amp;</p> <p>MAX_STRING not being big enough in other places, so it may be fixable in the future but no promises.</p> <ul> <li>___watch features no longer output the weird characters in the name. \\(thanks ieatacid for donating this logic\\)</li> <li>fswatch no longer relays your own output \\(\"You tell your fellowship\"\\)</li> <li>Using '/camp server' will now properly disconnect you instead of leaving a ghost toon connected (previously stayed</li> </ul> <p>until exit eqgame, or reconnect to char select) --- WTB '#define GAMESTATE_SERVERSELECT -1', pst with price</p> <ul> <li>Logging into eqbcs via EQBC Interface with a ridiculously large username will no longer cause the eqbc client to</li> </ul> <p>crash from buffer overflows.</p> <ul> <li>The welcome to EQBC message now properly displays upon first entry \\(of the session\\) into the world rather than only</li> </ul> <p>displaying if you loaded the plugin after you were in game, without a dedicated UI window.</p> <p>Irrelevant</p> <ul> <li>Source revision history has been moved from the cpp to this wiki article</li> <li>Converted from tabs back to spaces &gt;\\&lt;</li> <li>Seeing as it has been over a year since anyone else messed with this, switched the version numbering to be based on</li> </ul> <p>date of release.</p> <ul> <li>Some output messages are less polite</li> <li>Updated help msgs and help parameter to reflect new changes</li> <li>oop-d to hell.</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-13p6-20090120","title":"Version 1.3.p6 - 20090120","text":"<ul> <li> <ul> <li>Added '/bcclear' based off the '/mqclear' command</li> </ul> </li> <li>a command instead of only a select few commands working   a command instead of only a select few commands working</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-13p5-20081219","title":"Version 1.3.p5 - 20081219","text":"<ul> <li>additions to the toggletellwatch idea   additions to the toggletellwatch idea</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-13i4-20081215","title":"Version 1.3.i4 - 20081215","text":"<ul> <li> <ul> <li>Added support for EQBC Interface by ieatacid</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-13p3-20081214","title":"Version 1.3.p3 - 20081214","text":"<ul> <li> <ul> <li>Fix for vc6 by dkaa</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-13p2-20081208","title":"Version 1.3.p2 - 20081208","text":"<ul> <li> <ul> <li>'/bcfont' and '/bcmin' are now useable in the UI window &gt;\\&lt;</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-13p1-20081207","title":"Version 1.3.p1 - 20081207","text":"<ul> <li> <p>more INI file settings relating to the UI window   more INI file settings relating to the UI window</p> </li> <li> <ul> <li>Moved UI data from  to  as it is plentiful now</li> </ul> </li> <li> <p>to be optional, always using  options instead   to be optional, always using  options instead</p> </li> <li> <ul> <li>Added '/bccmd togglesavebychar' to allow toggle this setting.</li> </ul> </li> <li> <ul> <li>Change UseMyTitle to 1 if you wish to use a custom window title instead of server IP</li> </ul> </li> </ul> <p>You need to create \"WindowTitle=Custom Title\" in  and/or  to use it</p> <p>You do not need to put the title in quotes, and fearless might flame you if you admit to doing it</p> <ul> <li> <ul> <li>Updated UI window to support '/bca', '/bcaa', and '/bct' command input</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12p7-20081026","title":"Version 1.2.p7 - 20081026","text":"<ul> <li> <ul> <li>Added Fades, Alpha, and FadeToAlpha to Window INI Settings</li> </ul> </li> <li> <ul> <li>/bcaa will now perform the command even if togglecontrol is disabled</li> </ul> </li> <li> <ul> <li>Code cleanup/better handling for toggletellwatch</li> </ul> </li> <li> <ul> <li>Added 'togglesilentcmd', which silences the 'CMD: ' message</li> </ul> </li> <li> <ul> <li>Added INI support for silentcmd and tellwatch</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12p6-20080909","title":"Version 1.2.p6 - 20080909","text":"<ul> <li> <p>to prevent banker and trader spam   to prevent banker and trader spam</p> </li> <li> <ul> <li>Fixed indenting. All indenting uses tabs now.</li> </ul> </li> <li> <ul> <li>Slightly changed bca and bcaa function names for identification</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12a5-20080805-why-did-i-start-playing-again-release","title":"Version 1.2.a5 - 20080805 \\(Why did I start playing again release\\)","text":"<ul> <li> <ul> <li>Fix for changes to EQUIStructs::_CSIDLWND structure</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12p4-20070712","title":"Version 1.2.p4 - 20070712","text":"<ul> <li> <ul> <li>Added /bccmd toggletellwatch to pass tells received along, credit for string logic to MQ2MasterMind</li> </ul> </li> <li> <ul> <li>Updated HandleHelpRequest for /bca, /bcaa, and /bccmd toggletellwatch</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12a3-20070617-im-still-not-playing-release","title":"Version 1.2.a3 - 20070617 \\(I'm still not playing release\\)","text":"<ul> <li> <ul> <li>EQBC window will not close when escape key is pressed.</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12v2-20070324","title":"Version 1.2.v2 - 20070324","text":"<ul> <li> <ul> <li>Added better connection timeout handling</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12v1-20070116","title":"Version 1.2.v1 - 20070116","text":"<ul> <li> <p>block certain messages from appearing, and this was the only way I knew how.   block certain messages from appearing, and this was the only way I knew how.</p> </li> <li> <p>is an example of where this is useful   is an example of where this is useful</p> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-11a1-20060728","title":"Version 1.1.a1 - 20060728","text":"<ul> <li> <p>It's up to you to decide if the 'a' is \"ascii\" or \"alpha\" :)   It's up to you to decide if the 'a' is \"ascii\" or \"alpha\" :)</p> </li> <li> <ul> <li>Channel list saved in INI file and restored when you log in.</li> </ul> </li> <li> <ul> <li>New command: /bccmd togglelocalecho. When Local Echo is on, commands sent</li> </ul> </li> <li>to a channel you are in will be sent back to you \\(as per toomanynames\\)</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a17-20060715","title":"Version 1.0.a17 - 20060715","text":"<ul> <li> <p>the channel.   the channel.</p> </li> <li> <ul> <li>New command: /bccmd channels channel_list</li> </ul> </li> <li> <ul> <li>Added ability to escape characters  will be translated to just</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a16-20060701","title":"Version 1.0.a16 - 20060701","text":"<ul> <li>Added patch supplied by Sorcerer for updated Netbots support</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a15-20060520","title":"Version 1.0.a15 - 20060520","text":"<ul> <li>In IRC compatibility mode /bct will display msg being sent</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a14-20060423","title":"Version 1.0.a14 - 20060423","text":"<ul> <li>Added tell command /bct</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o13-20050123","title":"Version 1.0.o13 - 20050123","text":"<ul> <li>Fixed crash bug reported by LrdDread.</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o12-20051021","title":"Version 1.0.o12 - 20051021","text":"<ul> <li>In last fix, I forgot to change the char spawn pointer</li> </ul> <p>in DoCommand. Fixed now.</p>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o11-20051021","title":"Version 1.0.o11 - 20051021","text":"<ul> <li>Fix for fun bug that set name as the name of the mount when</li> </ul> <p>/bccmd connect used after login.</p>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o10-20051017","title":"Version 1.0.o10 - 20051017","text":"<ul> <li>Added code to fix problem with high input \\(ie. 6 Netbots at 125ms\\) causing</li> </ul> <p>TCP backups, eventual buffer overruns, and horrid lags on eqbcs.</p> <ul> <li>Warning: High amounts of traffic can lag you. ;-P</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o9-20051014","title":"Version 1.0.o9 - 20051014","text":"<ul> <li>Added color support , where c can be one of \"yogbrtbmpwx\"</li> <li>These are the same as the \"\\ac\" codes for WriteChatColor.</li> <li>If the color char is uppercase, then dark version is used.</li> <li>Example: /bc Slow Successful.</li> <li>Example: /bc Slow Failed, retrying.</li> <li>Added new command to display colors, /bccmd colordump</li> <li>Added \\(untested\\) password ability. Requires recompile of eqbcs with</li> </ul> <p>login info redefined, see source comments both here and there.</p>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o8-20051009","title":"Version 1.0.o8 - 20051009","text":"<ul> <li>Chat window locations now save/load by character.</li> <li>Requires eqbcs v1.0.3 or greater</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o7-20051006","title":"Version 1.0.o7 - 20051006","text":"<ul> <li>Added CMD Support \\(Ping/Pong implemented\\)</li> <li>Added Window support. With CommandHistory \\(shift up/shift down\\)</li> <li>Added TLO. ${EQBC.Connected}</li> <li>Added beta Netbot Support.</li> <li>Tested, but some things may have stability issues. Let me know.</li> <li>Requires eqbcs v1.0.3 or greater</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o6-20050926","title":"Version 1.0.o6 - 20050926","text":"<ul> <li>Added relog command, somewhat experimental.</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o5-20050926","title":"Version 1.0.o5 - 20050926","text":"<ul> <li> <ul> <li>Handles zoning better.</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o4-20050926","title":"Version 1.0.o4 - 20050926","text":"<ul> <li> <ul> <li>Added commands: togglecompatmode togglereconnect setreconnectsecs stopreconnect</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o3-20050926","title":"Version 1.0.o3 - 20050926","text":"<ul> <li> <ul> <li>Now attempts to close socket when plugin is unloaded.</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o2-20050926","title":"Version 1.0.o2 - 20050926","text":"<ul> <li> <ul> <li>Now recognizes when server is shut down.</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#eqbcs","title":"EQBCS","text":""},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-200-20101218-ascii","title":"Version 2.0.0 - 20101218 \\(ASCII\\)","text":"<ul> <li> <ul> <li>Runs natively as a service in Windows</li> </ul> </li> <li> <ul> <li>To install it as a service under Windows, add -c to the command line (e.g. EQBCS2 -l c:\\eqbcs.log -c will</li> </ul> </li> </ul> <p>install the Windows service and configure it to log to C:\\eqbcs.log). The service will be installed to point to the</p> <p>same executable. EQBCS2 -d will remove the service.</p>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12i2-20081215","title":"Version 1.2.i2 - 20081215","text":"<ul> <li> <ul> <li>Added support for EQBC Interface by ieatacid</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-12v1-20070116-vladus2000-addition","title":"Version 1.2.v1 - 20070116 \\(vladus2000 addition\\)","text":"<ul> <li> <ul> <li>Added a 50 second ping. The client does not need to be changed for this</li> </ul> </li> </ul> <p>as it already accepts a ping message. This should prevent the connection</p> <p>from crapping out. It also should speed up detection of dead users.</p>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-11a12-20060807-asciis-on-crack-release","title":"Version 1.1.a12 - 20060807 \\(ASCII's on crack release\\)","text":"<ul> <li> <ul> <li>Fixed the local echo check</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-11a11-20060727","title":"Version 1.1.a11 - 20060727","text":"<ul> <li> <ul> <li>Changed version numbering system. It's up to you to decide if the 'a' is \"ascii\" or \"alpha\" :)</li> </ul> </li> <li> <ul> <li>Channel list saved in INI file and restored when you log in.</li> </ul> </li> <li>to a channel you are in will be sent back to you \\(as per toomanynames\\)   to a channel you are in will be sent back to you \\(as per toomanynames\\)</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a10-20060725","title":"Version 1.0.a10 - 20060725","text":"<ul> <li>oldest server connection left a channel.   oldest server connection left a channel.</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a9-20060715","title":"Version 1.0.a9 - 20060715","text":"<ul> <li> <ul> <li>Added support for pseudo-channels. A /bct to channel goes to everyone in the channel.</li> </ul> </li> <li> <ul> <li>New command: /bccmd channels channel_list</li> </ul> </li> <li> <ul> <li>Added ability to escape characters  will be translated to just</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a8-20060701","title":"Version 1.0.a8 - 20060701","text":"<ul> <li> <ul> <li>Apply patch from Sorcerer for updated Netbots.</li> </ul> </li> <li>on non-windows.   on non-windows.</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a7-20060520","title":"Version 1.0.a7 - 20060520","text":"<ul> <li>Flush input buffer after processing tell to invalid username</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10a6-20060416","title":"Version 1.0.a6 - 20060416","text":"<ul> <li>Added support for tells. \\(/bct\\)</li> <li>Added command line options -p, -i, -l, -u and -d.</li> <li>-p  sets port number to listen on</li> <li>-i  IP Address of interface to listen on. Unspecified = ALL</li> <li>-d \\(Unix only\\) Run as daemon</li> <li>-l  log to file rather than STDOUT</li> <li>-u  \\(UNIX only\\) setuid to named user</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o5-20051117","title":"Version 1.0.o5 - 20051117","text":"<ul> <li>Fixed name problem bug reported by DKAA.</li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o4-20051013","title":"Version 1.0.o4 - 20051013","text":"<ul> <li> <ul> <li>Fixed unix version not handling unclean disconnects properly.</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o3-20051005","title":"Version 1.0.o3 - 20051005","text":"<ul> <li> <ul> <li>Made more clear where to add login password \\(LOGIN\\_START\\_TOKEN\\).</li> </ul> </li> <li> <ul> <li>Changed select timeout to non debugging value, doh.</li> </ul> </li> <li> <ul> <li>Added support for msgall. \\(/bca\\)</li> </ul> </li> <li> <ul> <li>Added support for mq2netbots.</li> </ul> </li> <li> <p>\\(ie. crash, plugin unload\\) \\(ie. crash, plugin unload\\)</p> </li> <li> <ul> <li>More cpu friendly.</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o2-20050926_1","title":"Version 1.0.o2 - 20050926","text":"<ul> <li> <ul> <li>Made compatible with VC6</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2eqbc/mq2eqbc-revisions/#version-10o1-20050925","title":"Version 1.0.o1 - 20050925","text":"<ul> <li> <ul> <li>Fixed hang on reading when closing. Now uses select to see if data exists</li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/","title":"MQ2MoveUtils","text":""},{"location":"plugins/community-plugins/mq2moveutils/#general-details","title":"General Details","text":"<p>Version 9 of MQ2MoveUtils was a rewrite from the ground up by pms. The original goal behind this rewrite was to cleanup numerous logical errors and reduce the amount of code duplication that existed in previous releases. Once this rewrite was complete and functional, version 9 expanded including more enhancements and more extensive configuration. Numbered by release date, the current of this plugin is 16.0717.</p> <p>This plugin is no longer under active development and no new contributions have been made since 2011 by pms, with only one follow-up contribution in 2014 by Cr4zyb4rd. Others have continued to keep the offsets updated in the discussion thread linked below.</p>"},{"location":"plugins/community-plugins/mq2moveutils/#links","title":"Links","text":"<ul> <li>Link to the latest stable source: [16-Nov-2016<sup>th</sup> patch fix by</li> </ul> <p>trevyn]\\([https://macroquest2.com/phpBB3/download/file.php?id=988](https://macroquest2.com/phpBB3/download/file.php?id=988)\\)</p> <ul> <li>Link to older sources: MQ2MoveUtils v11.x Source</li> <li>Link to emulator version of the source that works with the December 19, 2008 client: [MoveUtils v11 for EMU by</li> </ul> <p>pms]\\([https://macroquest2.com/phpBB3/viewtopic.php?p=155710\\#p155710](https://macroquest2.com/phpBB3/viewtopic.php?p=155710#p155710)\\)</p> <ul> <li>Link to current discussion thread: [MQ2MoveUtils v16.x</li> </ul> <p>Thread]\\([https://macroquest2.com/phpBB3/viewtopic.php?t=15909](https://macroquest2.com/phpBB3/viewtopic.php?t=15909)\\)</p>"},{"location":"plugins/community-plugins/mq2moveutils/#development-notes","title":"Development Notes","text":"<p>For the development history of this plugin, see the article MQ2MoveUtils 16.x Revision History</p> <p>For the chronicle of the entire MoveUtils plugin including the original development history, see the article MQ2MoveUtils:History</p>"},{"location":"plugins/community-plugins/mq2moveutils/#help","title":"Help","text":"<ul> <li>Frequently Asked Questions</li> <li>Configuration Examples</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/#command-information","title":"Command Information","text":""},{"location":"plugins/community-plugins/mq2moveutils/#main-plugin-commands","title":"Main Plugin Commands","text":"<p>These parameters can be used from any of the four main plugin commands \\('/stick', '/moveto', '/circle', and '/makecamp'\\). For example purposes the most popular '/stick' command will be used.</p> <p>* /stick help </p> <ul> <li> <ul> <li>Displays generic help information, and help for the command used</li> </ul> </li> <li>The settings optional parameter displays help information for all plugin 'set' and 'toggle' commands</li> </ul> <p>* /stick debug</p> <ul> <li> <ul> <li>Dumps the current values of all plugin variables to a debug INI file</li> </ul> </li> </ul> <p>* /stick status </p> <ul> <li> <ul> <li>ChatWnd output for the status of the issuing command \\(stick in this example\\)</li> </ul> </li> <li>The all optional parameter displays status output for all aspects of the plugin</li> </ul> <p>* /stick pause </p> <ul> <li> <ul> <li>Pauses all aspects of the plugin</li> </ul> </li> <li> <p>The lock optional parameter prevents plugin from automatically unpausing under any circumstance other than</p> <p>user issuing unpause</p> </li> <li> <p>Note: This does not toggle</p> </li> </ul> <p>* /stick unpause</p> <ul> <li> <ul> <li>Resumes all aspects of the plugin</li> </ul> </li> <li>Note: This does not toggle</li> </ul> <p>* /stick save | load</p> <ul> <li> <ul> <li>Saves or load your current configuration settings using MQ2MoveUtils.ini</li> </ul> </li> </ul> <p>* /stick imsafe</p> <ul> <li> <ul> <li>BreakOnSummon and BreakOnGM have built-in protection disabling the ability to re-issue commands when triggered.</li> </ul> <p>This prevents macros from continuing to issue commands in a possibly unsafe situation</p> </li> <li> <p>The imsafe parameter allows command usage to resume</p> </li> </ul> <p>* /stick min</p> <ul> <li> <ul> <li>Minimizes custom user window similar to /mqmin</li> </ul> </li> </ul> <p>* /stick clear</p> <ul> <li> <ul> <li>Clears custom user window buffer similar to /mqclear</li> </ul> </li> </ul> <p>* /stick verbflags</p> <ul> <li> <ul> <li>Outputs current verbosity flags setting \\(this one displays even if totalsilence is enabled. too bad.\\)</li> </ul> </li> </ul> <p>=== Main Plugin Settings === These setting parameters can be used from any of the four main plugin commands. The following can be used with toggle or set name on | off.</p> <p>* /stick toggle name</p> <ul> <li>*/stick set name* on&lt;/span&gt; |</li> </ul> <p>off**</p> <p>name can be one of the following: * mpause | mousepause</p> <ul> <li> <ul> <li>Pause current command if  movement</li> </ul> </li> <li>Resumes after a random amount of delay set with pausemindelay and pausemaxdelay below</li> <li> <p>*Note: You may not* have a pause and corresponding break on at the same time (e.g. no mpause and breakonkb at</p> <p>the same time)**</p> </li> <li> <p>You may have opposing options different though \\(e.g. mousepause on and breakonkb on\\)</p> </li> </ul> <p>* breakonkb | breakonmouse</p> <ul> <li> <ul> <li>Break current command if  movement</li> </ul> </li> <li> <p>*Note: You may not* have a pause and corresponding break on at the same time (e.g. no mpause and breakonkb at</p> <p>the same time)**</p> </li> <li> <p>You may have opposing options different though \\(e.g. mousepause on and breakonkb on\\)</p> </li> </ul> <p>* autosave</p> <ul> <li> <ul> <li>Automatically save settings to INI file when a toggle or set command is issued</li> </ul> </li> </ul> <p>* savebychar</p> <ul> <li> <ul> <li>Save  section of INI file for individual character settings</li> </ul> </li> </ul> <p>* feign</p> <ul> <li> <ul> <li>Enable Feign Death support, which waits for you to stand up manually before moving</li> </ul> </li> </ul> <p>* lockpause</p> <ul> <li> <ul> <li>Plugin will never automatically resume from pause until user issues an unpause</li> </ul> </li> </ul> <p>* autopause</p> <ul> <li> <ul> <li>Pause movement if casting spells \\(non-bard\\), stunned, rooted, sitting, FD, or self targeted \\(non-hold\\)</li> </ul> </li> </ul> <p>* autopauseoutput</p> <ul> <li> <ul> <li>If enabled, will display ChatWnd output when autopause is halting movement</li> </ul> </li> <li>Note: This bypasses totalsilence and must be configured individually</li> </ul> <p>* stucklogic</p> <ul> <li> <ul> <li>If enabled, stucklogic automatically attempts to get unstuck if running into walls and large objects</li> </ul> </li> </ul> <p>* trytojump</p> <ul> <li> <ul> <li>If enabled, stucklogic also tries to jump to help get unstuck</li> </ul> </li> </ul> <p>* turnhalf</p> <ul> <li> <ul> <li>If enabled, stucklogic will reset heading and turn the other direction if it has rotated halfway without success</li> </ul> </li> </ul> <p>* verbosity</p> <ul> <li> <ul> <li>ChatWnd output for basic command information messages</li> </ul> </li> </ul> <p>* fullverbosity</p> <ul> <li> <ul> <li>ChatWnd output for more detailed information messages and output for more actions</li> </ul> </li> </ul> <p>* totalsilence</p> <ul> <li> <ul> <li>Silences most ChatWnd output except for critical information or user-requested messages</li> </ul> </li> </ul> <p>* totalverbosity</p> <ul> <li> <ul> <li>Enable display of every ChatWnd message in the plugin</li> </ul> </li> </ul> <p>* hidehelp</p> <ul> <li> <ul> <li>If enabled, the help output will not be displayed upon command failure \\(e.g. invalid parameters\\)</li> </ul> </li> </ul> <p>* window</p> <ul> <li> <ul> <li>If enabled, MoveUtils will output any messages to a user-placed custom UI window dedicated to the plugin</li> </ul> </li> </ul> <p>* wineq</p> <ul> <li> <ul> <li>By default, MoveUtils uses actual keypresses to control movement \\(regardless of heading settings\\)</li> </ul> </li> <li> <p>WinEQ2 has a bug where background sessions can have their alt keys and certain mouse buttons held down, causing</p> <p>movement to run in weird directions</p> </li> <li> <p>For Lavishsoft users who have not switched over to Innerspace, enabling wineq setting will use old-style</p> <p>emulated movement via ExecuteCmd()</p> </li> </ul> <p>* breakontarget</p> <ul> <li> <ul> <li>Break from stick if target changes \\(default behavior is switch over to sticking to new target\\)</li> </ul> </li> </ul> <p>* breakonsummon</p> <ul> <li> <ul> <li>Halts current command and disables ability to use any commands if summoned beyond summondist</li> </ul> </li> <li>Note: Once this fires, you must use the imsafe parameter to unlock the plugin</li> </ul> <p>* breakongm</p> <ul> <li> <ul> <li>Halts current command and disables ability to use any commands if visible GM enters the zone</li> </ul> </li> <li>Note: Once this fires, you must use the imsafe parameter to unlock the plugin</li> </ul> <p>* breakonwarp</p> <ul> <li> <ul> <li>Breaks from stick if target warps out of breakdist range \\(user set, see below\\)</li> </ul> </li> <li>Note: This does not limit your initial stick range. You may /stick from across the zone</li> </ul> <p>* pauseonwarp</p> <ul> <li> <ul> <li>Pauses stick if target warps out of breakdist range until they are back in range \\(user set, see below\\)</li> </ul> </li> <li>Note: This does not limit your initial stick range. You may /stick from across the zone</li> </ul> <p>* breakongate</p> <ul> <li> <ul> <li>Breaks from stick if target Gates. message occurs</li> </ul> </li> <li>Note: if using stick id or stick hold, it will break based on the held target name</li> </ul> <p>* breakonaggro</p> <ul> <li> <ul> <li>Breaks from moveto command if you are aggro to an NPC</li> </ul> </li> <li>Note: This checks the player window for the crossed swords indicator</li> </ul> <p>* alwaysdrunk</p> <ul> <li> <ul> <li>Use drunken by default when circling</li> </ul> </li> </ul> <p>* alwaysbackwards</p> <ul> <li> <ul> <li>Run backwards by default when circling</li> </ul> </li> </ul> <p>* alwaysccw</p> <ul> <li> <ul> <li>Circle in a counter-clockwise direction by default</li> </ul> </li> </ul> <p>* nohottfront</p> <ul> <li> <ul> <li>Allow for stick front to spin to front of the mob without Health of Target's Target Leader AA</li> </ul> </li> <li>Note: By default stick front will not stay stuck to the front unless you are on the HoTT window</li> </ul> <p>* returnnoaggro</p> <ul> <li> <ul> <li>Makecamp will auto-return to camp only if not aggro \\(checks crossed swords indicator\\)</li> </ul> </li> </ul> <p>* returnnotlooting</p> <ul> <li> <ul> <li>Makecamp will not auto-return to camp if character has an open loot corpse window</li> </ul> </li> </ul> <p>* returnhavetarget</p> <ul> <li> <ul> <li>Makecamp will auto-return to camp even if you have a target</li> </ul> </li> <li>Note: By default, makecamp does not auto-return if you have any target</li> </ul> <p>* realtimeplayer</p> <ul> <li> <ul> <li>Makecamp player will get realtime updates on player location, allowing for dynamic returns to players</li> </ul> </li> <li> <p>By default, makecamp player will return to a players last location when return begins and not get a new update</p> <p>until the return is complete</p> </li> <li> <p>The default behavior is a sort of ghetto MQ2AdvPath whereas enabling realtimeplayer will work more like an</p> <p>autofollow</p> </li> </ul> <p>* leash</p> <ul> <li> <ul> <li>If enabled, leash prevents moving beyond leashlength \\(user set value\\)</li> </ul> </li> </ul> <p>* usewalk</p> <ul> <li> <ul> <li>If enabled, plugin will switch to walking when closing in on moveto destination or camp return</li> </ul> </li> </ul> <p>* strafewalk</p> <ul> <li> <ul> <li>If enabled, plugin will switch to walking when within strafe range for all stick commands</li> </ul> </li> </ul> <p>* randomize</p> <ul> <li> <ul> <li>If enabled, stick behind and !front will use random arc values to position</li> </ul> </li> </ul> <p>* delaystrafe</p> <ul> <li> <ul> <li>If enabled, strafe-based movement \\(stick front, !front, behind, pin\\) will use a delay before moving</li> </ul> </li> <li> <p>**Note: This helps prevent endless circling when aggro is gained, or spinning when mobs quick-turn to cast</p> <p>spells**</p> </li> <li> <p>**Circling is one of the biggest signs that a player is using MoveUtils so it is recommended you ALWAYS leave</p> <p>this enabled**</p> </li> </ul> <p>* autoUW</p> <ul> <li> <ul> <li>If enabled, stick and moveto will use the uw parameter whenever underwater \\(look up and down at target\\)</li> </ul> </li> </ul> <p>* usefleeing</p> <ul> <li> <ul> <li>If enabled, stick front will not attempt to position in the front of a target that is fleeing</li> </ul> </li> </ul> <p>* usescatter</p> <ul> <li> <ul> <li>If enabled, camp returns will use scattered return locations instead of default behavior</li> </ul> </li> <li>Note: Default behavior attempts to get back within camp radius</li> </ul> <p>The following option is unique</p> <ul> <li>/stick set heading true | loose | fast</li> <li>Changes plugin heading adjustments to use the specified type</li> <li>true: actual keypressing -- does not work with wineq=on</li> <li>loose: simulated incremental turning -- fast: instantly set heading</li> </ul> <p>The following 'set' commands require a numeric value, and can be used from any of the four main plugin commands. \\(stick used for example purposes only\\) * /stick set pulsecheck #</p> <ul> <li> <ul> <li>Number of pulses used to calculate average movement distance in stucklogic</li> </ul> </li> <li>Valid: 1 or higher</li> </ul> <p>* /stick set pulseunstuck #</p> <ul> <li> <ul> <li>Number of pulses successfully moved forward before considered unstuck</li> </ul> </li> <li>Valid: 1 or higher</li> </ul> <p>* /stick set diststuck #.##</p> <ul> <li> <ul> <li>Minimum distance needed to move or else considered stuck \\(compares against pulse average\\)</li> </ul> </li> <li>Valid: 0.01 or higher</li> </ul> <p>* /stick set campmindelay #</p> <ul> <li> <ul> <li>Minimum delay before auto-returning to camp \\(in ms\\)</li> </ul> </li> <li>Valid: 125 or higher</li> </ul> <p>* /stick set campmaxdelay #</p> <ul> <li> <ul> <li>Maximum delay before auto-returning to camp \\(in ms\\)</li> </ul> </li> <li>Valid: 125 more than campmindelay</li> </ul> <p>* /stick set pausemindelay #</p> <ul> <li> <ul> <li>Minimum delay before resuming from mpause/mousepause \\(in ms\\)</li> </ul> </li> <li>Valid: 125 or higher</li> </ul> <p>* /stick set pausemaxdelay #</p> <ul> <li> <ul> <li>Maximum delay before resuming from mpause/mousepause \\(in ms\\)</li> </ul> </li> <li>Valid: 125 more than pausemindelay</li> </ul> <p>* /stick set strafemindelay #</p> <ul> <li> <ul> <li>Minimum delay before stick will strafe to move when delaystrafe is enabled \\(in ms\\)</li> </ul> </li> <li>Valid: 125 or higher</li> <li>note: higher values are better. default of 1500 \\(1.5s\\) is recommended</li> </ul> <p>* /stick set strafemaxdelay #</p> <ul> <li> <ul> <li>Maximum delay before stick will strafe to move when delaystrafe is enabled \\(in ms\\)</li> </ul> </li> <li>Valid: 125 higher than strafemindelay</li> <li>note: higher values are better. default of 3000 \\(3s\\) is recommended</li> </ul> <p>* /stick set ydist #.##</p> <ul> <li> <ul> <li>Acceptable distance to have \"arrived\" for precisey moveto</li> </ul> </li> <li>Valid: 1.0 or higher</li> </ul> <p>* /stick set xdist #.##</p> <ul> <li> <ul> <li>Acceptable distance to have \"arrived\" for precisex moveto</li> </ul> </li> <li>Valid: 1.0 or higher</li> </ul> <p>* /stick set snapdist #.##</p> <ul> <li> <ul> <li>Default distance to run past target before turning to snaproll</li> </ul> </li> <li>Valid: 1.0 or higher</li> </ul> <p>* /stick set summondist #.##</p> <ul> <li> <ul> <li>Distance character must be summoned in a single pulse for BreakOnSummon to fire</li> </ul> </li> <li>Valid: 2.0 or higher</li> </ul> <p>* /stick set turnrate #.#</p> <ul> <li> <ul> <li>Rate at which loose heading turns</li> </ul> </li> <li>Valid: 1.0 to 100.0</li> </ul> <p>* /stick set !frontarc #.#</p> <ul> <li> <ul> <li>Angular distance arc for stick !front</li> </ul> </li> <li>Valid: 1.1 to 260.0</li> </ul> <p>* /stick set behindarc #.#</p> <ul> <li> <ul> <li>Angular distance arc for stick behind</li> </ul> </li> <li>Valid: 1.1 to 260.0</li> </ul> <p>* /stick set breakdist #.##</p> <ul> <li> <ul> <li>Distance to check for breakonwarp</li> </ul> </li> <li>Valid: 1.0 or higher</li> </ul> <p>* /stick set campradius #.##</p> <ul> <li> <ul> <li>Default camp radius and radius for active camp</li> </ul> </li> <li>Valid: 5.0 or higher</li> </ul> <p>* /stick set circleradius #.##</p> <ul> <li> <ul> <li>Default circle radius</li> </ul> </li> <li>Valid: 5.0 or higher</li> </ul> <p>* /stick set leashlength #.#</p> <ul> <li> <ul> <li>Default leash length and length for active leash</li> </ul> </li> <li>Valid: greater or equal to camp radius</li> </ul> <p>* /stick set bearing #.#</p> <ul> <li> <ul> <li>Bearing \\(direction from center\\) used for scatter camp</li> </ul> </li> <li>Valid: any</li> </ul> <p>* /stick set scatsize #.##</p> <ul> <li> <ul> <li>Radius size for scattering</li> </ul> </li> <li>Valid: 1.0 or higher</li> </ul> <p>* /stick set scatdist #.##</p> <ul> <li> <ul> <li>Distance from center of camp to scatter at</li> </ul> </li> <li>Valid: 1.0 or higher</li> </ul> <p>* /stick set allowmove #.##</p> <ul> <li> <ul> <li>Loose or True heading allow forward movement when reach this angular distance</li> </ul> </li> <li>This is \"anti-orbit\" code to stop circling near close-range destinations</li> <li>Valid: 10.1 or higher</li> </ul> <p>* /stick set font #</p> <ul> <li> <ul> <li>Custom user window font size</li> </ul> </li> <li>Valid: 1 to 10</li> </ul> <p>* /stick set verbflags #</p> <ul> <li> <ul> <li>Current plugin verbosity flags</li> </ul> </li> <li>Valid: see verbosity section near bottom of this wiki entry</li> </ul> <p>The following settings are command-specific, use the command in the example only * /stick set backupdist #.##</p> <ul> <li> <ul> <li>Range that stick will walk backwards instead of turning to face target, if useback enabled</li> </ul> </li> <li>Valid: 1.0 or higher</li> </ul> <p>* /moveto set backupdist #.##</p> <ul> <li> <ul> <li>Range that moveto will walk backwards instead of turning to face destination, if useback enabled</li> </ul> </li> <li>Valid: 1.0 or higher</li> </ul> <p>* /moveto set dist #.##</p> <ul> <li> <ul> <li>Acceptable distance to have \"arrived\" for standard moveto and camp returns</li> </ul> </li> <li>Valid: 1.0 or higher</li> </ul> <p>* /stick  alwaysUW </p> <ul> <li> <ul> <li>If enabled, stick will always adjust looking angle as if uw parameter was typed inline</li> </ul> </li> <li>Note: this is not the same as autoUW, which only enables uw when actually underwater</li> </ul> <p>* /moveto  alwaysUW </p> <ul> <li> <ul> <li>If enabled, moveto will always adjust looking angle as if uw parameter was typed inline</li> </ul> </li> <li>Note: this is not the same as autoUW, which only enables uw when actually underwater</li> </ul> <p>* /stick  breakonhit </p> <ul> <li> <ul> <li>Breaks from stick command if you are attacked by an NPC</li> </ul> </li> <li> <p>**Note: This parses chat for hits and misses. If you use the number only hitsmode then it will only parse for</p> <p>misses**</p> </li> </ul> <p>* /moveto  breakonhit </p> <ul> <li> <ul> <li>Breaks from moveto command if you are attacked by an NPC</li> </ul> </li> <li> <p>**Note: This parses chat for hits and misses. If you use the number only hitsmode then it will only parse for</p> <p>misses**</p> </li> </ul> <p>* /stick  useback </p> <ul> <li> <ul> <li>If enabled, stick will walk backwards to position itself when close to a target instead of turning to face it</li> </ul> </li> <li>Note: This requires loose or truehead style heading adjustments, and does not work with fast heading</li> </ul> <p>* /moveto  useback </p> <ul> <li> <ul> <li>If enabled, moveto will walk backwards to position itself when close to a destination instead of turning to face</li> </ul> <p>it</p> </li> <li> <p>Note: This requires loose or truehead style heading adjustments, and does not work with fast heading</p> </li> <li>This includes automatic and user-forced camp returns</li> </ul> <p>* /stick  loose | truehead </p> <ul> <li>**/moveto  loose | truehead</li> </ul> <p> **</p> <ul> <li>**/circle  loose | truehead</li> </ul> <p> **</p> <ul> <li> <p>Change the heading type for currently active \\(stick \\| moveto \\| circle\\) to this type of heading. If WinEQ is</p> <p>enabled, truehead will fail to switch.</p> </li> <li> <p>Once current command ends, heading type will return to previous.</p> </li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/#stick","title":"/stick","text":"<p>The stick command sticks you to your target, so that if your target moves you will move along with it. There are many different parameters that cause this command to behave in different ways. You can combine any number of these parameters together inline to enable multiple options for the stick.</p> <p>* '''/stick</p> <ul> <li> <ul> <li>stick with no parameters will stick you to your current target, using max melee range</li> </ul> </li> </ul> <p>* /stick on | off</p> <ul> <li> <ul> <li>turns stick on and off with default values</li> </ul> </li> <li> <p>on is a nearly-useless parameter and only included to support older macros or stickcmd=on in</p> <p>MQ2Melee to prevent MQ2Melee from doing anything undesired</p> </li> <li> <p>if you use /stick on in your macro, expect to be laughed at whole-heartedly</p> </li> </ul> <p>* /stick id </p> <ul> <li> <ul> <li>sticks to the given spawn id</li> </ul> </li> <li>uses id of your current target if no spawn id is given</li> <li>this allows you to continue sticking when your target changes, e.g. casting a heal on someone</li> </ul> <p>* /stick # | #%</p> <ul> <li> <ul> <li>Stick at the specified distance or percentage</li> </ul> </li> </ul> <p>* /stick -#</p> <ul> <li> <ul> <li>Reduce current stick distance modifier by #</li> </ul> </li> </ul> <p>* /stick moveback</p> <ul> <li> <ul> <li>stick will back up to the value if the target gets closer, e.g. many targets in the rear pushing target</li> </ul> <p>too close to the tank</p> </li> </ul> <p>* /stick loose</p> <ul> <li> <ul> <li>stick using turn increments instead of instant heading adjustment</li> </ul> </li> </ul> <p>* /stick truehead</p> <ul> <li> <ul> <li>stick using actual keypress heading adjustments</li> </ul> </li> <li>does not work if wineq option is enabled</li> </ul> <p>* /stick healer</p> <ul> <li> <ul> <li>Healer sticking does not perform face adjustments to look at the target while in stick range</li> </ul> </li> <li> <p>This is good for keeping a healer close &amp; sticking to another group member without having it turn to face the</p> <p>other character constantly as it moves</p> </li> <li> <p>Does not work with any strafe-style sticks \\(pin front !front behind behindonce snaproll\\)</p> </li> </ul> <p>* /stick uw | underwater</p> <ul> <li> <ul> <li>face angle will look up/down at the stick target</li> </ul> </li> </ul> <p>* /stick hold</p> <ul> <li> <ul> <li>stick to the current target even if your target changes</li> </ul> </li> </ul> <p>* /stick behind</p> <ul> <li> <ul> <li>stick to the rear of the target unless you are on HoTT. will spin in circles if you do not have HoTT and gain</li> </ul> <p>aggro \\(to prevent: USE DelayStrafe OPTION !!!\\)</p> </li> </ul> <p>* /stick behindonce</p> <ul> <li> <ul> <li>stick behind the target when first moving into position, only using  enforcement after</li> </ul> </li> </ul> <p>* /stick !front</p> <ul> <li> <ul> <li>stick to target anywhere but the frontal arc, same considerations as behind apply \\(use DelayStrafe!\\)</li> </ul> </li> </ul> <p>* /stick pin</p> <ul> <li> <ul> <li>stick to the side of the target, same consideration as behind apply \\(use DelayStrafe!\\)</li> </ul> </li> </ul> <p>* /stick front</p> <ul> <li> <ul> <li>stick to the front arc of the target</li> </ul> </li> <li>if you have HoTT and lose aggro you will not spin</li> <li>this will not work by default without HoTT</li> </ul> <p>* /stick \\(ANY STICK VALUES\\) always</p> <ul> <li> <ul> <li>when current target is lost, will wait and then resume sticking using supplied values upon next NPC targeted</li> </ul> </li> <li>does not work with stick hold or stick id</li> </ul> <p>* /stick snaproll </p> <ul> <li> <ul> <li>runs in a straight line behind your target then turns to face</li> </ul> </li> <li>left/right/front of target if optional parameter direction supplied</li> <li>rear is default</li> </ul> <p>''the following inline configuration options are supported for one-time use:</p> <ul> <li>**/stick breakontarget | breakongate | breakonwarp |</li> </ul> <p>pauseonwarp | randomize | delaystrafe | useback | usefleeing | strafewalk | mindelay # | maxdelay # |</p> <p>backupdist # | breakdist # | snapdist # | !frontarc # | behindarc # &lt;/span&gt;**</p> <ul> <li>Read the _set name_section for explanation of what these parameters do</li> </ul> <p>* /stick mod # | -#</p> <ul> <li> <ul> <li>modify stick distance by the supplied amount \\(does not turn stick on\\)</li> </ul> </li> </ul> <p>=== /moveto === The moveto command will move you from your current location to a specific location or target. You can combine any number of these parameters together inline to enable multiple options for the moveto.</p> <p>* /moveto loc Y X </p> <ul> <li> <ul> <li>moves to the specified location</li> </ul> </li> <li>z is optional</li> <li>must be the first parameter</li> </ul> <p>* /moveto yloc Y | xloc X</p> <ul> <li> <ul> <li>beeline to the Y or X supplied</li> </ul> </li> <li>different from precisey/x in that this only considers a single axis</li> <li>must be the first parameter</li> </ul> <p>* /moveto id </p> <ul> <li> <ul> <li>moves to the supplied spawn id, or your current target if no id is given</li> </ul> </li> </ul> <p>* /moveto off</p> <ul> <li> <ul> <li>stop moving to the current target/location</li> </ul> </li> </ul> <p>* /moveto loose</p> <ul> <li> <ul> <li>moveto using more human-like heading adjustments</li> </ul> </li> </ul> <p>* /moveto truehead</p> <ul> <li> <ul> <li>moveto using actual keypress heading adjustments</li> </ul> </li> </ul> <p>* /moveto \\(id** **\\|** **loc Y X** **\\[Z\\]\\) precisey | precisex</p> <ul> <li> <ul> <li>moves to loc stopping when within x or y arrival dist values instead of both</li> </ul> </li> <li>works with either id or loc</li> </ul> <p>* /moveto uw | underwater</p> <ul> <li> <ul> <li>look angle up and down at destination</li> </ul> </li> </ul> <p>* /moveto dist #</p> <ul> <li> <ul> <li>sets value for how close to actual location is considered arrival</li> </ul> </li> <li>does not turn moveto on</li> <li>permanently changes the value</li> </ul> <p>* /moveto ] mdist # </p> <ul> <li> <ul> <li>sets value for how close to actual location is considered arrival</li> </ul> </li> <li>allowed inline BEFORE id or AFTER loc y x  or id  parameter</li> <li>permanently changes the value</li> </ul> <p>''the following inline configuration options are supported for one-time use:</p> <ul> <li>**/moveto breakonaggro | breakonhit | usewalk | useback</li> </ul> <p>| backupdist # | ydist # | xdist #&lt;/span&gt;**</p> <ul> <li>Read the _set name_section for explanation of what these parameters do</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/#circle","title":"/circle","text":"<p>The circle command spins you in a circle. If you are like me, looking at this for the first time wondering what the point is, this is mainly for bards to use while circle kiting, but could equally be used for amusement. You can combine any number of these parameters together inline to enable multiple options for the circle.</p> <p>* /circle on </p> <ul> <li> <ul> <li>begin circling using your current location as the center with default radius</li> </ul> </li> <li>if optional # parameter supplied, use # as the radius size</li> <li>must be first parameter</li> </ul> <p>* /circle off</p> <ul> <li> <ul> <li>stop circling</li> </ul> </li> </ul> <p>* /circle loc Y X</p> <ul> <li> <ul> <li>begin circling using the specified location as the center</li> </ul> </li> <li>must be first parameter</li> </ul> <p>* /circle drunken</p> <ul> <li> <ul> <li>turn to complete the circle at random intervals</li> </ul> </li> </ul> <p>* /circle clockwise | cw</p> <ul> <li> <ul> <li>circle in a clockwise direction. \\(default\\)</li> </ul> </li> </ul> <p>* /circle cw | counterclockwise | reverse</p> <ul> <li> <ul> <li>circle in a counter-clockwise direction</li> </ul> </li> </ul> <p>* /circle radius #</p> <ul> <li> <ul> <li>sets the default size of the circle radius</li> </ul> </li> <li>for use with loc y x since on # would have to be first param</li> </ul> <p>* /circle backward</p> <ul> <li> <ul> <li>run backwards instead of forwards</li> </ul> </li> </ul> <p>=== /makecamp === The makecamp command will create a camp spot for you to return to after combat, or to establish boundries for your character to prevent them from moving beyond a certain radius.</p> <p>* /makecamp</p> <ul> <li> <ul> <li>using makecamp with no parameters will set up a camp at your current location, using default values</li> </ul> </li> </ul> <p>* /makecamp on </p> <ul> <li> <ul> <li>set up a camp at current location with default values</li> </ul> </li> <li>if optional # parameter supplied, use # as camp radius size</li> <li>must be first parameter</li> </ul> <p>* /makecamp off</p> <ul> <li> <ul> <li>disable current makecamp</li> </ul> </li> </ul> <p>* /makecamp loc Y X</p> <ul> <li> <ul> <li>set up a camp at the specified location</li> </ul> </li> <li>must be first parameter</li> </ul> <p>* /makecamp player </p> <ul> <li> <ul> <li>set up a dynamic camp based on a certain pc name if in zone, or targeted pc if optional name not supplied</li> </ul> </li> </ul> <p>* /makecamp leash</p> <ul> <li> <ul> <li>toggles leashing to camp radius so character cannot leave boundary</li> </ul> </li> </ul> <p>* /makecamp leash #</p> <ul> <li> <ul> <li>sets how far beyond camp radius you can move before leashing \\(LeashLength\\)</li> </ul> </li> </ul> <p>* /makecamp radius #</p> <ul> <li> <ul> <li>sets the radius of the camp size</li> </ul> </li> <li>does not turn camp on if supplied on its own</li> </ul> <p>* /makecamp mindelay # | maxdelay #</p> <ul> <li> <ul> <li>sets the delay time before auto-returning to camp</li> </ul> </li> </ul> <p>* /makecamp return</p> <ul> <li> <ul> <li>forces a return to the camp radius immediately</li> </ul> </li> </ul> <p>* /makecamp altreturn</p> <ul> <li> <ul> <li>forces a return to the camp spot you had before your current one, or a camp that is now turned off</li> </ul> </li> </ul> <p>''the following inline configuration options are supported for one-time use:</p> <ul> <li>**/makecamp returnhavetarget | returnnoaggro |</li> </ul> <p>returnnotlooting | realtimeplayer | scatter | bearing # | scatsize # | scatdist #&lt;/span&gt;**</p> <ul> <li>Read the _set name_section for explanation of what these parameters do</li> </ul> <p>=== Other Plugin Commands === Less popular commands of MQ2MoveUtils * '''/calcangle</p> <ul> <li> <ul> <li>Displays lots of basic numerical information related to moving such as Dist values, angular distance, 3D</li> </ul> <p>distance, melee range, stick range, speed multipliers</p> </li> <li> <p>This command is useful to help determine what to set plugin options such as arc values or AllowMove, backup</p> <p>dist, etc.</p> </li> </ul> <p>* /rootme </p> <ul> <li> <ul> <li>roots the player in place, unable to move. this is not any form of actual debuff, just a plugin implementation</li> </ul> <p>of locking a character in place</p> </li> <li> <p>supplying the optional off parameter disables the root</p> </li> <li>other commands will not function when rootme is active</li> </ul> <p>== Top-Level Objects ==</p>"},{"location":"plugins/community-plugins/mq2moveutils/#moveutils","title":"${MoveUtils}","text":"<p>Members of this datatype relate to plugin settings and generic information</p> Type Member Return Values Description string Command NONE STICK MOVETO MAKECAMP CIRCLE Displays the currently active command. MAKECAMP returns if a camp is setup but no other command is currently in use bool Stuck TRUE FALSE Displays true if plugin stucklogic has determined you are currently stuck bool Summoned TRUE FALSE Displays true if BreakOnSummon is enabled and has fired due to your character being summoned beyond breakonsummon distance bool StuckLogic TRUE FALSE Displays true if stucklogic is enabled bool Verbosity TRUE FALSE Displays true if verbosity is enabled bool FullVerbosity TRUE FALSE Displays true if fullverbosity is enabled bool TotalSilence TRUE FALSE Displays true if totalsilence is enabled bool Aggro TRUE FALSE Displays true if you are facing your target and your target is facing you bool TryToJump TRUE FALSE Displays true if stucklogic trytojump is enabled int PauseMinDelay 125 or greater Displays the min delay for mousepause and mpause to resume command in ms int PauseMaxDelay 125 or more greater than PauseMinDelay Displays the max delay for mousepause and mpause to resume command in ms int PulseCheck 1 or greater Displays the number of pulses used to average movement rate for stucklogic int PulseUnstuck 1 or greater Displays the number of pulses successfully moved forward after being stuck to be considered unstuck float DistStuck 0.01 or greater Displays the amount of distance needed to have moved \\(compared against pulse average\\) or else considered stuck by stucklogic float Version #.#### Displays the version number of the plugin bool MovePause TRUE FALSE Displays true if mpause \\(PauseKB\\) is enabled bool GM TRUE FALSE Displays true if BreakOnGM fired string To String Same as Command Same as Command <p>=== ${Stick} === Members of this datatype relate to the '/stick' command</p> Type Member Return Values Description string Status OFF PAUSED ON Displays ON if any form of stick is active bool Active TRUE FALSE Displays true if any form of stick is active bool Broken TRUE FALSE Returns true if BreakOnHit event has halted stick prematurely float Distance #.## Current distance used by stick bool MoveBehind TRUE FALSE Displays true if stick behind is active bool MoveBack TRUE FALSE Displays true if moveback is active bool Loose TRUE FALSE Displays true if loose sticking is enabled bool Paused TRUE FALSE Displays true if plugin is paused bool Behind TRUE FALSE Displays true if currently behind target \\(regardless of _/stick behind_\\), false if outside of stick dist or not behind bool Stopped TRUE FALSE Displays true if stick is within stick distance bool Pin TRUE FALSE Displays true if stick pin is active int StickTarget SpawnID Returns spawnid of stick target if stick id/hold used, else spawnid of current target, 0 if no target and id/hold not used string StickTargetName NONE DisplayedName Returns DisplayedName of stick target if stick id/hold used, else current target or NONE if no target and hold/id not used float DistMod #.## Current stickdist modifier float DistModPercent #.## Current stickdist percent modifier bool Always TRUE FALSE Returns true if /stick always is active string To String Same as Status Same as Status <p>=== ${MoveTo} === Members of this datatype relate to the '/moveto' command</p> Type Member Return Values Description bool Moving TRUE FALSE Displays true if moveto or camp return is active bool Stopped TRUE FALSE Displays true if the last moveto command completed successfully bool CampStopped TRUE FALSE Displays true if within moveto distance of makecamp Y X location bool UseWalk TRUE FALSE Returns true if UseWalk is enabled float ArrivalDist 1.00+ Acceptable arrival distance float ArrivalDistY 1.00+ Acceptable arrival distance for precisey float ArrivalDistX 1.00+ Acceptable arrival distance for precisex bool Broken TRUE FALSE Returns true if BreakOnAggro or BreakOnHit event have halted moveto prematurely string To String OFF PAUSED ON Displays ON if a moveto command is active <p>=== ${MakeCamp} === Members of this datatype relate to the '/makecamp' command</p> Type Member Return Values Description string Status OFF PAUSED ON Displays status of MakeCamp command. AltCamp returns OFF bool Leash TRUE FALSE Displays true if leash is enabled float AnchorX 0.00 Location of current camp X anchor float AnchorY 0.00 Location of current camp Y anchor float LeashLength Greater than or equal to CampRadius Size of Leash Length float CampRadius 10.0+ Size of camp radius int MinDelay 125 or greater Displays the min delay for auto-returning to camp in ms int MaxDelay 125 or more greater than MinDelay Displays the max delay for auto-returning to camp in ms bool Returning TRUE FALSE Displays true if /makecamp return issued float AltAnchorX 0.00 Location of current altcamp X anchor float AltAnchorY 0.00 Location of current altcamp Y anchor float CampDist 0.00 Distance to camp anchor from your current location. Returns 0.00 if camp is disabled float AltCampDist 0.00 Distance to altcamp anchor from your current location. Returns 0.00 if altcamp not established float AltRadius 10.0+ Size of altcamp radius bool Scatter TRUE FALSE Displays true if camp scattering enabled bool ReturnNoAggro TRUE FALSE Displays true if ReturnNoAggro is enabled bool ReturnNotLooting TRUE FALSE Displays true if ReturnNotLooting is enabled bool ReturnHaveTarget TRUE FALSE Displays true if ReturnHaveTarget is enabled float Bearing 0.00 Bearing \\(heading\\) of camp scattering float ScatDist 1.0+ Distance from anchor to perform scatter float ScatSize 1.0+ Size of scattering radius string To String Same as Status Same as Status <p>=== ${Circle} === Members of this datatype relate to the '/circle' command</p> Type Member Return Values Description string Status OFF PAUSED ON Returns ON if circling float CircleY 0.00 Location of circle center Y float CircleX 0.00 Location of circle center X bool Drunken TRUE FALSE Displays true if drunken string Rotation CW CCW Displays CCW if reverse circling string Direction FORWARDS BACKWARDS Movement direction of current circle bool Clockwise TRUE FALSE Displays false if reverse circling bool Backwards TRUE FALSE Displays true if movement direction backwards float Radius 5.00+ Radius size of circle string To String Same as Status Same as Status <p>== Configuration == MQ2MoveUtils saves a configuration file to your root MQ2 folder: MQ2MoveUtils.ini</p>"},{"location":"plugins/community-plugins/mq2moveutils/#default-ini-file","title":"Default INI File","text":"<pre><code>[Defaults]\nAllowMove=32.0\nAutoPause=on\nAutoPauseMsg=on\nAutoSave=on\nAutoUW=off\nBreakKeyboard=on\nBreakMouse=off\nBreakOnGM=on\nBreakOnSummon=off\nDistSummon=8.00\nFeignSupport=off\nHeading=true\nHideHelp=off\nKeyboardPause=off\nMousePause=off\nLockPause=off\nPauseMinDelay=500\nPauseMaxDelay=5000\nSaveByChar=on\nTurnRate=14.00\nUseWindow=off\nVerbosity=on\nFullVerbosity=on\nTotalSilence=off\nVerbosityFlags=33554431\nWinEQ=off\n\n[Stick]\nAlwaysUW=off\nAwareNotAggro=off\nArcBehind=45.0\nArcNotFront=135.0\nBreakOnGate=on\nBreakOnHit=off\nBreakOnTarget=off\nBreakOnWarp=on\nPauseOnWarp=off\nDelayStrafe=on\nDistBackup=10.0\nDistBreak=250.0\nDistMod=0.0\nDistMod%=1.0\nDistSnaproll=10.0\nRandomArc=off\nStrafeMinDelay=1500\nStrafeMaxDelay=3000\nUseBackward=on\nUseFleeing=on\nUseWalk=off\n\n[MakeCamp]\nCampRadius=40.00\nMinDelay=500\nMaxDelay=1500\nRealtimePlayer=off\nReturnHaveTarget=off\nReturnNoAggro=off\nReturnNotLooting=off\nUseLeash=off\nLeashLength=50.00\nUseScatter=off\nBearing=0.00\nScatDist=10.00\nScatSize=10.00\n\n[MoveTo]\nAlwaysUW=off\nArrivalDist=10.0\nArrivalDistX=10.0\nArrivalDistY=10.0\nBreakOnAggro=off\nBreakOnHit=off\nDistBackup=30.0\nMoveToMod=0.0\nUseBackward=off\nUseWalk=on\n\n[Circle]\nBackward=off\nCCW=off\nDrunken=off\nRadiusSize=30.0\n\n[StuckLogic]\nStuckLogic=on\nDistStuck=0.10\nPulseCheck=6\nPulseUnstuck=10\nTryToJump=off\nTurnHalf=on\n\n[Window]\nChatTop=10\nChatBottom=210\nChatLeft=10\nChatRight=410\nFades=0\nAlpha=255\nFadeToAlpha=255\nDuration=500\nLocked=0\nDelay=2000\nBGType=1\nBGTint.red=255\nBGTint.green=255\nBGTint.blue=255\nFontSize=2\nWindowTitle=MoveUtils\n\n[yourserver.yourcharacter]\nDisregardMe=false\nAllowMove=32.0\nArcBehind=45.0\nArcNotFront=135.0\nAutoSave=on\nAutoUW=off\nDistBreak=250.0\nBreakOnGate=on\nBreakOnWarp=on\nPauseOnWarp=off\nLockPause=off\nDistSnaproll=10.0\nFeignSupport=off\nHeading=true\nLeashLength=50.00\nUseLeash=off\nUseWindow=off\nVerbosity=on\nFullVerbosity=on\nVerbosityFlags=33554431\nCampRadius=40.00\nRealtimePlayer=off\nUseScatter=off\nBearing=0.00\nScatDist=10.00\nScatSize=10.00\n</code></pre>"},{"location":"plugins/community-plugins/mq2moveutils/#ini-options","title":"INI options","text":"<p>Information on what the actual values can be and represent.</p>"},{"location":"plugins/community-plugins/mq2moveutils/#defaults","title":"","text":"<p>This section is for default plugin settings</p> <ul> <li>AllowMove - 10.0+, anti-orbit setting for true/loose heading representing angular distance before moving forward</li> <li>AutoPause= - on or off, pauses command if casting spells, stunned, rooted, sitting, or self targeted</li> <li>AutoPauseMsg= - on or off, displays output when AutoPause halts movement</li> <li>AutoSave= - on or off, automatically save ini file when using 'toggle' or 'set'</li> <li>AutoUW= - on or off, automatically use 'uw' heading adjustments when character is under water</li> <li>BreakKeyboard= - on or off, break command from keyboard press</li> <li>BreakMouse= - on or off, break command from mouselook usage</li> <li>BreakOnGM= - on or off, break current command and prevent command usage if GM enters zone</li> <li>BreakOnSummon= - on or off, halt command and ability to use commands if summoned beyond certain distance</li> <li>DistSummon= - 2.0+, distance moved in a single pulse to trigger breakonsummon \\(if on\\)</li> <li>FeignSupport= - on or off, fd support waits for you to stand up manually before moving, if feigned</li> <li>Heading= = true or loose or fast, type of heading adjustments plugin will use (fast=instant, loose=gradual</li> </ul> <p>emulated shift, true=real kb presses)</p> <ul> <li>HideHelp= - on or off, never automatically display help output unless requested</li> <li>KeyboardPause= - on or off, pause command for a delay if keyboard press</li> <li>MousePause= - on or off, pause command for a delay if mouselook used</li> <li>LockPause= - on or off, plugin will not automatically unpause under any circumstance unless user unpauses</li> <li>PauseMinDelay= - 125+ \\(in ms\\), minimum delay before resuming from mpause/mousepause</li> <li>PauseMaxDelay= - 125 above min \\(in ms\\), maximum delay before resuming from mpause/mousepause</li> <li>SaveByChar= - on or off, save  section of ini file for individual character settings</li> <li>TurnRate= - 10.0 to 100.0, rate at which loose heading emulates turns</li> <li>UseWindow= - on or off, uses a custom user-placed window for all moveutils output if enabled</li> <li>Verbosity= - on or off, ChatWnd output for basic command info</li> <li>FullVerbosity= - on or off, ChatWnd output for enhanced plugin info</li> <li>TotalSilence= - on or off overrides verb/fullverb, silence ChatWnd output except for critical or</li> </ul> <p>user-requested messages</p> <ul> <li>VerbosityFlags= - see verbosity section of this wiki</li> <li>WinEQ= - on or off, when enabled moveutils uses feigned movement simulation due to the bug of WinEQ2 holding down</li> </ul> <p>alt keys and mouse buttons in background sessions</p> <p>note: if WinEQ is enabled, true heading is NOT possible ====  ==== This section is for settings related to /stick</p> <ul> <li>AlwaysUW= - on or off, if enabled stick will always use the 'uw' parameter as if it were typed inline</li> <li>AwareNotAggro= - on or off, detect aggro loss if using stick front</li> <li>ArcBehind= - 5.1 to 259.9, user can configure angular distance arc that \"stick behind\" uses</li> <li>ArcNotFront= - 5.1 to 259.9, user can configure angular distance arc that \"stick !front\" uses</li> <li>BreakOnGate= - on or off, break from stick if \"target Gates.\" message occurs</li> <li>BreakOnHit= - on or off, when enabled stick will halt if user is being attacked</li> <li>BreakOnWarp= - on or off, break from stick if target warps beyond certain distance</li> <li>PauseOnWarp= - on or off, pause stick unless target gets back in range if warps beyond certain distance (break or</li> </ul> <p>pause, can't have both)</p> <ul> <li>DelayStrafe= - on or off, delay strafing movement when position adjustment required (good for stopping endless</li> </ul> <p>circling if aggro is gained)</p> <ul> <li>DistBackup= - 1.0+, if you are within this distance when stick turned on, stick will walk backwards rather than</li> </ul> <p>spin in a circle to move to target</p> <ul> <li>DistBreak= - 1.0+, distance mob moved in a single pulse to trigger breakonwarp \\(if on\\)</li> <li>DistMod= - 0.0+, adjust default/supplied stick distance by this amount</li> <li>DistMod%= - 0.0+ \\(represents a percentage\\), adjust default/supplied stick distance by this percent</li> <li>DistSnaproll= - 1.0+, distance behind target snaproll will move before stopping and turning to face target</li> <li>RandomArc= - on or off, randomize min/max arc for any strafe-based stick (so you do not always stick to the exact</li> </ul> <p>same spot of a mob)</p> <ul> <li>StrafeMinDelay= - 125+ \\(in ms\\), minimum delay before attempting to strafe if delaystrafe enabled</li> <li>StrafeMaxDelay= - 125 above min \\(in ms\\), maximum delay before attempting to strafe if delaystrafe enabled</li> <li>UseBackward= - on or off, when enabled stick will walk backward rather than turn to face if within DistBackup of</li> </ul> <p>target</p> <ul> <li>UseFleeing= - on or off, when enabled \"stick front\" will not attempt to position in front of the mob when target</li> </ul> <p>begins to flee</p> <ul> <li>UseWalk= - on or off, when enabled stick uses walking when close to the target for precise movements and</li> </ul> <p>preventing overshooting</p> <p>====  ==== This section is for settings related to /makecamp</p> <ul> <li>CampRadius= - 5.0+, default camp radius size</li> <li>MinDelay= - 125+ \\(in ms\\), minimum delay before auto-returning to camp</li> <li>MaxDelay= - 125 above min \\(in ms\\), maximum delay before auto-returning to camp</li> <li>RealtimePlayer= - on or off, when enabled \"makecamp player\" gets realtime location updates of player and adjusts</li> </ul> <p>returning on the fly</p> <ul> <li>ReturnHaveTarget= - on or off, if on Auto-Return to camp even if you have a target (default behavior is return</li> </ul> <p>only if no target)</p> <ul> <li>ReturnNoAggro= - on or off, Auto-Return to camp only if not aggro</li> <li>ReturnNotLooting= - on or off, do not Auto-Return to camp if looting a corpse</li> <li>UseLeash= - on or off, do not allow character to move beyond LeashLength</li> <li>LeashLength= - #.# &gt;= camp radius, length of leash</li> <li>UseScatter= - on or off, use specific scatter values instead of random return location</li> <li>Bearing= - #, bearing of scatter</li> <li>ScatDist= - 1.0+, distance from camp center to perform scatter</li> <li>ScatSize= - 1.0+, radius size of scatter area</li> </ul> <p>====  ==== This section is for settings related to /moveto</p> <ul> <li>AlwaysUW= - on or off, if enabled moveto will always use the 'uw' parameter as if it were typed inline</li> <li>ArrivalDist= - 1.0+, distance considered acceptable to have arrived at destination</li> <li>ArrivalDistX= - 1.0+, distance considered acceptable to have arrived at destination when using precisex</li> <li>ArrivalDistY= - 1.0+, distance considered acceptable to have arrived at destination when using precisey</li> <li>BreakOnAggro= - on or off, when enabled moveto will halt if aggro is gained \\(crossed swords in player window\\)</li> <li>BreakOnHit= - on or off, when enabled moveto will halt if user is being attacked</li> <li>DistBackup= - 1.0+, moveto will walk backwards to location if within this distance rather than spin to face</li> </ul> <p>destination first</p> <ul> <li>MoveToMod= - 0.0+, modifier applied to moveto arrivaldist</li> <li>UseBackward= - on or off, when enabled moveto will use backward movement if within DistBackup (applies to makecamp</li> </ul> <p>returns)</p> <ul> <li>UseWalk= - on or off, turn on walk when close to moveto location and camp return spot for precise movement</li> </ul> <p>====  ==== This section is for settings related to /circle</p> <ul> <li>Backward= - on or off, always run backwards instead of forwards when circling</li> <li>CCW= - on or off, always run in a ccw circle instead of default clockwise</li> <li>Drunken= - on or off, always use drunken circling</li> <li>RadiusSize= - 5.0+, default radius size of circle</li> </ul> <p>====  ==== This section is for settings related to stucklogic</p> <ul> <li>StuckLogic= - on or off, if enabled stucklogic detects and attempts to auto-correct getting stuck while moving</li> <li>DistStuck= - 0.01+, distance needed to have moved or else stuck \\(compared against an average\\)</li> <li>PulseCheck= - 1+, amount of pulses used to calculate moving average</li> <li>PulseUnstuck= - 1+, number of pulses successfully moved forward to be considered unstuck</li> <li>TryToJump= - on or off, attempt to jump to help get unstuck</li> <li>TurnHalf= - on or off, if have turned halfway and failed to get unstuck, reset heading and try other direction</li> </ul> <p>instead</p> <p>====  ====</p> <ul> <li>ChatTop= - See EQ XML UI file settings</li> <li>ChatBottom= - See EQ XML UI file settings</li> <li>ChatLeft= - See EQ XML UI file settings</li> <li>ChatRight= - See EQ XML UI file settings</li> <li>Fades= - See EQ XML UI file settings</li> <li>Alpha= - See EQ XML UI file settings</li> <li>FadeToAlpha= - See EQ XML UI file settings</li> <li>Duration= - See EQ XML UI file settings</li> <li>Locked= - See EQ XML UI file settings</li> <li>Delay= - See EQ XML UI file settings</li> <li>BGType= - See EQ XML UI file settings</li> <li>BGTint.red= - See EQ XML UI file settings</li> <li>BGTint.green= - See EQ XML UI file settings</li> <li>BGTint.blue= - See EQ XML UI file settings</li> <li>FontSize= - 1 to 10, default font size for window</li> <li>WindowTitle= - custom user title for the window</li> </ul> <p>====  ==== if savebychar is on, this section will be created for every character The settings in this section are some of the above values that could be desired to vary on a char-by-char basis \\(including WINDOW settings\\) with the exception of one value:</p> <ul> <li>DisregardMe= true or false, if you want custom character values to load for some characters but this specific</li> </ul> <p>character to use the default values instead, set this to true and though a lot of entries will be written to this</p> <p>section, they will be ignored for this specific character</p> <p>=== Verbosity === The verbosity system has been revamped to use bit flags for superior control of what messages will be displayed by the plugin. The older system has not been removed - if this is difficult to understand you may still use verbosity, fullverbosity and totalsilence as before. For those familiar with bit flags the flags table is below. If you have never worked with bit flags before, here is a brief summary of how to use the information below. Each subset of messages is assigned a numerical value. By adding the numerical values of the messages you want on together, you are able to customize each message that is shown or not shown. Examples:</p> <ul> <li>If you only wanted the plugin to display 'settings' and 'errors', you would look at the value of settings in the</li> </ul> <p>table below \\(8192\\) and the value of errors \\(4194304\\) and add them together to get \\(4202496\\). By setting your</p> <p>verbosity flag to 4202496 \\(using the _set verbflags_ parameter or by saving the value in the INI file\\) the plugin</p> <p>would then filter out everything except messages related to changing settings or error messages.</p> <ul> <li>If you only wanted to display 'stick verbosity' messages and nothing else, you would look up the value in the table</li> </ul> <p>below \\(32\\) and set your flags to 32 without adding anything to it.</p> <ul> <li>If you want to display a large number of messages, you continue to add them all together and use the total. To</li> </ul> <p>display 'autopause', 'movepause', 'stick verbosity', 'stick fullverbosity', 'settings' and 'errors', you would add</p> <p>all their values from the below table \\(1 + 2 + 32 + 64 + 8192 + 4194304 = 4202595\\) and use that number for your</p> <p>flags setting \\(/stick set verbflags 4202595\\)</p>"},{"location":"plugins/community-plugins/mq2moveutils/#flags-table","title":"Flags Table","text":"<pre><code>0 - total plugin silence\n1 - autopause\n2 - movepause, mousepause, breakonkb\n4 - breakonmouse\n8 - feign support\n16 - hidehelp\n32 - stick verbosity\n64 - stick full verbosity\n128 - moveto verbosity\n256 - moveto full verbosity\n512 - makecamp verbosity\n1024 - makecamp full verbosity\n2048 - circle verbosity\n4096 - circle full verbosity\n8192 - settings\n16384 - file input / output\n32768 - breakonwarp\n65536 - breakonaggro\n131072 - breakonhit\n262144 - breakonsummon\n524288 - breakongm\n1048576 - breakongate\n2097152 - stick always\n4194304 - error messages\n8388608 - arc randomization\n16777216 - pause / unpause\n2720 - prior 'verbosity' setting\n11736390 - prior 'fullverbosity' setting\n33554431 - all messages enabled\n</code></pre>"},{"location":"plugins/community-plugins/mq2moveutils/#actual-messages","title":"Actual Messages","text":"<p>Here is a list of exactly what messages are tied to each flag:</p> <ul> <li>1 - autopause</li> </ul> <p>AutoPause halting movement... \\(when autopaused if autopause is enabled\\)</p> <p>Movement pausing due to self target... \\(if self targeted during a stick with autopause off\\)</p> <ul> <li>2 - movepause, mousepause, breakonkb</li> </ul> <p>Current command ended from manual movement.</p> <p>Resuming previous command from movement pause.</p> <ul> <li>4 - breakonmouse</li> </ul> <p>Current command ended from mouse movement.</p> <ul> <li>8 - feign support</li> </ul> <p>Not standing as you are currently Feign Death</p> <ul> <li>16 - hidehelp</li> </ul> <p>Hidehelp when turned on prevents the help output \\(seen in /stick help\\) from being automatically output if you input a command incorrectly</p> <ul> <li>32 - stick verbosity</li> </ul> <p>You are now sticking to TargetName.</p> <p>You are no longer sticking to anything.</p> <p>You will now stick to every valid NPC target supplied.</p> <ul> <li>64 - stick full verbosity</li> </ul> <p>Dir\\(ANY\\) Dist\\(10.0\\) Head\\(true\\) ID\\(31337\\) UW MB HEALER</p> <ul> <li>128 - moveto verbosity</li> </ul> <p>Moveto off.</p> <p>Arrived at moveto location</p> <ul> <li>256 - moveto full verbosity</li> </ul> <p>Moving to loc #, # Dist\\(10\\) Head\\(true\\)</p> <ul> <li>512 - makecamp verbosity</li> </ul> <p>MakeCamp actived. Y\\(\\#\\) X\\(\\#\\) Radius\\(\\#\\) Leash\\(\\#\\) LeashLen\\(\\#\\) Min\\(\\#\\) Max\\(\\#\\)</p> <p>MakeCamp returning to within camp radius immediately</p> <p>MakeCamp returning to altcamp immediately.</p> <p>MakeCamp returning to altcamp immediately. Current camp now OFF.</p> <p>MakeCamp player ended due to player leaving/death</p> <p>Outside of leash length, breaking from current command</p> <ul> <li>1024 - makecamp full verbosity</li> </ul> <p>Ended '/moveto' or '/makecamp return' because leash is on.</p> <ul> <li>2048 - circle verbosity</li> </ul> <p>Circling radius \\(\\#\\), center \\(\\#, \\#\\) OFF</p> <ul> <li>4096 - circle full verbosity</li> </ul> <p>none at this time</p> <ul> <li>8192 - settings</li> </ul> <p>Stick modifier changed to Mod\\(\\#\\) Mod%\\(\\# %\\) \\(from /stick mod \\#\\)</p> <p>Stick mod changed Mod\\(\\#\\) ModPercent\\(\\# %\\) \\(from stick inline -\\# or \\#%\\)</p> <p>Moveto distance mod changed to #. \\(from /moveto dist \\#\\)</p> <p>Option turned ON \\(from /command set option on, or /command toggle option\\)</p> <p>Option turned OFF \\(from /command set option off, or /command toggle option\\)</p> <p>Option set to # \\(from /command set option \\#\\)</p> <ul> <li>16384 - file input / output</li> </ul> <p>Debug file created.</p> <p>Saved settings to C:\\yourpath\\MQ2MoveUtils.ini \\(from /command save\\)</p> <p>Loaded settings from C:\\yourpath\\MQ2MoveUtils.ini \\(from /command load\\)</p> <ul> <li>32768 - breakonwarp</li> </ul> <p>Stick pausing until target back in BreakDist range...</p> <p>Stick ending from target warping out of BreakDist range.</p> <ul> <li>65536 - breakonaggro</li> </ul> <p>BreakOnAggro's: Aggro gained during /moveto, Halting command...</p> <ul> <li>131072 - breakonhit</li> </ul> <p>BreakOnHit's: Aggro gained during /moveto, Halting command...</p> <ul> <li>262144 - breakonsummon</li> </ul> <p>WARNING Command ended from character summoned # distance in a pulse.</p> <p>WARNING Verify you are not being monitored and type /stick imsafe to allow command usage.</p> <ul> <li>524288 - breakongm</li> </ul> <p>WARNING Plugin halted from  Name in zone.</p> <p> Name has left the zone or turned invisible. Use /stick imsafe to allow command usage.</p> <ul> <li>1048576 - breakongate</li> </ul> <p>Mob gating ended previous command.</p> <ul> <li>2097152 - stick always</li> </ul> <p>Stick awaiting next valid NPC target...</p> <ul> <li>4194304 - error messages</li> </ul> <p>\\(ERROR\\) /moveto or /circle command used with no parameter.</p> <p>\\(ERROR\\) Plugin was already paused.</p> <p>\\(ERROR\\) Plugin was not paused.</p> <p>\\(ERROR\\) /stick mod  supplied incorrectly.</p> <p>\\(ERROR\\) /moveto yloc  was supplied incorrectly.</p> <p>\\(ERROR\\) /moveto xloc  was supplied incorrectly.</p> <p>\\(ERROR\\) SpawnID must be a positive numerical value.</p> <p>\\(ERROR\\) You cannot use yourself or your mount.</p> <p>\\(ERROR\\) You cannot stick hold to yourself.</p> <p>\\(ERROR\\) Incorrectly used /moveto dist </p> <p>\\(ERROR\\) /makecamp  was supplied incorrectly.</p> <p>\\(ERROR\\) You do not have an active camp.</p> <p>\\(ERROR\\) You cannot use this command with a player-camp active.</p> <p>\\(ERROR\\) You cannot use this command until you've established an altcamp location.</p> <p>\\(ERROR\\) Invalid player name and do not have a valid player target.</p> <p>\\(ERROR\\) You cannot makecamp yourself.</p> <p>\\(ERROR\\) Use /circle radius  to set radius.</p> <p>ERROR: Invalid 'option set' syntax \\( option \\) </p> <p>ERROR: Not a valid command toggle \\( option \\).</p> <p>ERROR: Not a valid command set option \\( option \\).</p> <p>Error - Font must be between 1 and 10.</p> <p>ERROR: Invalid 'command set' parameter \\( option \\)</p> <p>\\(ERROR\\) You cannot stick to yourself!</p> <p>You must specify something to stick to!</p> <p>\\(ERROR\\) /moveto loc  ] was supplied incorrectly.</p> <p>\\(ERROR\\) /makecamp loc  was supplied incorrectly.</p> <p>\\(ERROR\\) Usage /circle loc  </p> <p>\\(ERROR\\) Invalid SpawnID and do not have a valid target.</p> <p>\\(ERROR\\) /makecamp   was supplied incorrectly.</p> <ul> <li>8388608 - arc randomization</li> </ul> <p>Arcs Randomized! Max: # Min: #</p> <ul> <li>16777216 - pause / unpause</li> </ul> <p>PAUSED \\(from /command pause\\)</p> <p>RESUMED \\(from /command unpause\\)</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-history/","title":"MQ2MoveUtils:History","text":""},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-history/#the-tonio-era","title":"The tonio era","text":"<p>The first version of MQ2MoveUtils was developed by tonio and released May 5, 2004. See: Original MQ2MoveUtils Discussion History</p> <p>The conception of this plugin was inspired by the /circle command, developed by Easar to be included in the earliest versions of MQ2Twist. For all intents and purposes Easar should be considered the inspiration for this entire project. See: Easar's contribution to MQ2Twist / MQ2Twister\\(abandoned\\)</p> <p>tonio did an amazing job enhancing the early versions of this plugin with features including: breaking from mob gate, breaking from mob warp with distance configuration, autopause to prevent casting interrupts, stick behind, stick id, mpause, stick loose, and stick hold</p> <p>Contributors to the enhancement of MQ2MoveUtils after tonio stopped supporting it include: Bombadil \\(_Binds for mpause_\\), onetimehero \\(_noface option_\\), Lax, Cr4zyb4rd \\(_TLO's &amp; /stick pin_\\), and rswiders \\(_/moveto_\\)</p> <p>Quagmire offered full support for the plugin for a brief period in 2005, adding many bug fixes, code cleanup, and features such as: /stick behindonce, walk/run switching, mount checking, and snare checking. See: Quagmire's MoveUtils</p> <p>=== The Outlander era === Outlander took over supporting MQ2MoveUtils on July 9, 2005. See: Outlander's MoveUtils</p> <p>Outlander's first big contributions to MQ2MoveUtils were his stuck logic, which started off as an include file, and the /makecamp command, which created a radius that you could use to prevent your character from moving out of range to chase down mobs or potentially gain unwanted aggro. Over time other additions included: stick !front, HoTT awareness, and more TLO's</p> <p>Contributors to the enhancement of MQ2MoveUtils during Outlander's support include: dont_know_at_all \\(_bug fixes_\\), ieatacid \\(_bug fixes_\\), somelamedruid \\(_bug fixes_\\), s0rcier \\(_walk mode_\\), deadchicken \\(_loose moveto_\\), bertbert \\(_/followpath_\\), Ralindal \\(_bug fixes_\\), and rswiders \\(_many enhancements to /circle_\\).</p> <p>== Development History ==</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-history/#tonio","title":"tonio","text":"<p>Version 2004.05.06:</p> <ul> <li>/stick now breaks when mob gates</li> </ul> <p>Version 2004.05.07:</p> <ul> <li>/stick pause|unpause added</li> <li>automatic /stick pause on casting</li> <li>/stick will break on a large enough sudden distance increment \\(defaults to 250 units\\)</li> <li>INI file support:</li> </ul> <p>A default ini file is created if it doesn't exist. Section  contains global defaults. New sections can be</p> <p>added with character names as titles to override those defaults, for example:</p> <p>AutoPause on/off enables/disables the automatic pause on cast feature \\(regardless of this setting, bards won't pause /stick for casting... it's unneeded, and besides, that'd mean we can't sing while /stick'ing :\\)). BreakOnWarp on/off enables/disables the automatic break on large distance increment BreakDist sets how large a sudden distance increment is required for a break BreakOnGate on/off enables/disables the monitoring chat for \"targetname Gates.\" feature.</p> <p>Version 2004.05.14:</p> <ul> <li>/stick pause changed \\(now normal movement is possible w/o breaking stick while paused\\)</li> <li>/stick hold added \\(stores your current target, so that you follow it even if you lose or change your target later\\)</li> <li>text output added to /stick</li> <li>/circle changed: if no center is given, current loc is taken to be the outside of the circle, not the center (so you</li> </ul> <p>start angling immediately, instead of going straight then suddenly turning)</p> <p>Version 2004.05.16:</p> <ul> <li>slight bug fix with /stick</li> <li>added /cirlce drunken: use \"drunken\" instead of \"on\" to have /circle update heading less often for a more</li> </ul> <p>human-controlled look</p> <p>Version 2004.05.17:</p> <ul> <li>coupla bug fixes</li> </ul> <p>Version 2004.05.20:</p> <ul> <li>/stick behind added, tries to move behind a mob while sticking</li> </ul> <p>Version 2004.06.14:</p> <ul> <li>/stick moveback added, tries to stay at exactly the stick distance</li> <li>/stick mpause added, causes manual movement to pause stick instead of breaking</li> <li>/stick loose added, checks for distance/angle less often, to give a more human-controlled appearace</li> <li>Added \"Verbosity\" to ini file \\(set to 0 for no messages, 1 for normal messages\\)</li> <li>Added \"Stick\" TLO, of type \"stick\", with members:</li> </ul> <p>Status \\(ON, OFF, PAUSED\\), Active \\(bool\\), Distance \\(float\\), MoveBehind \\(bool\\), MoveBack \\(bool\\), MovePause \\(bool\\), Loose</p> <p>\\(bool\\), and Paused \\(bool\\)</p> <p>Version 2004.06.21:</p> <ul> <li>/stick uw added, for underwater /stick'ing, looks up/down to follow target</li> </ul> <p>* this option should eventually disappear and become automatic... but as of now, mq isn't correctly reporting</p> <p>underwater status</p> <ul> <li>/stick - and /stick % added, to modify stick distance \\(useful when a wrong melee range is reported\\)</li> <li>/stick loose fixed</li> <li>/circle drunken upgraded \\(uses slow turning\\)</li> </ul> <p>New version 2004.06.23:</p> <ul> <li>bug fix \\(pause/unpause were clearing settings\\)</li> </ul> <p>2004.11.08:</p> <ul> <li>\\(Lax\\) Replaced the code shown here with the correct version as supplied by Bombadil. Note that InitializePlugin is</li> </ul> <p>called at load time, REGARDLESS of the state of EverQuest. In other words, CEverQuest might not even EXIST at the time</p> <p>of loading. Consequently, this plugin tried to initialize things too early and the bug was exposed by WinEQ 2.0 as a</p> <p>crash. Enjoy.</p> <p>=== Quagmire === New version 2005.03.22: by Quagmire</p> <ul> <li>Cleaned up initialization slightly</li> <li>/stick behindonce added, moves you behind once then switches to normal stick</li> <li>/stick hold breaks when the target changes \"state\" \\(ie: npc to corpse\\)</li> <li>reduced the rate of calls to MQ2Globals::ExecuteCmd</li> <li>automatically switches walk/run mode when close to the target</li> <li>automatic pausing when sitting, stunned or have yourself targeted</li> <li>when the target is close and directly behind you, will back up instead of spinning and moving forward (helps when you</li> </ul> <p>overshoot the target)</p> <p>Updated 2005.03.24:</p> <ul> <li>Merged in Cr4zyb4rd's Pin code</li> <li>Switched run/walk state reading to a new memory location</li> </ul> <p>Updated 2005.04.20:</p> <ul> <li>Attempt to fix an infrequent crash.</li> </ul> <p>Updated 2005.05.25:</p> <ul> <li>Fixed a null pointer crash when on a mount.</li> </ul> <p>Updated 2005.06.05:</p> <ul> <li>Added automatic detection of being snared, won't go into walk mode.</li> <li>Stick / Pin won't kick in until you're close to the target.</li> <li>Several cleanups.</li> </ul> <p>Updated 2005.06.26:</p> <ul> <li>Merged in /MoveTo code</li> </ul> <p>=== Outlander === * Corrections and additions 2005.07.08 Added Version Number at top of help commands Added /stick id functionality Added break MoveTo functionality so that when you manually move MoveTo is turned off</p> <p>* Corrections and additions 2005.07.14 Added break Circle functionality so that when you manually move Circle is turned off Added MoveStuck logic to MoveTo and Circle commands Adjusted the stuck distance to take into account the SpeedMultiplier currently on the character. Adjusted the the MoveStuck stuckDist to be \u2153 of what it normally is if your under water.</p> <p>* Corrections 2005.07.19 Modified /stick movestuck logic when you are close to mob and are switched to walk mode, this was causing movestuck logic to be executed incorrectly.</p> <p>* Corrections 2005.09.19 Changed IsBardClass function to use GetCharInfo2 function.</p> <p>* Corrections 2005.09.21 Changed movestuck logic for underwater to not kick in till you are not moving at all; pulse average = 0.</p> <p>* Addition 2005.09.26 Added new option: /stick !front This option will keep you not in front of the mob, so off to the side or behind. This option should reduce the amount your toon moves around during a fight with a mob when you are not the target as your will only adjust your position if you you are in the front 180 degrees of the mob, as long as you are in the behind 180 degrees you will not move around just because the mob shifts.</p> <p>* Addition 2005.09.28 Added HoTT check to stick, if sticking to a MOB or PC and you are their target then if you are doing stick !front, behind, or pin you just do a a normal stick until you are not the HoTT target then you go back to what ever option you had before.</p> <p>* Corrections 2005.09.28 Corrected problem with IsBardClass function, thanks BardOMatic and DKAA</p> <p>* Addition 2005.10.22 Added /makecamp functionality Added /stick help, /circle help, /moveto help, and of course /makecamp help Added some commands to all the functions Changed the way some commands are parsed and changed the help command look</p> <p>* Corrections 2005.10.23 /makecamp is now a toggle for on/off with mpause enabled any movement keys would spew a \"no longer sticking to anything\" message this has been fixed. mpause option is now a toggle so if it was on doing /makecamp mpause will turn it off INI load and save were reversed, this is now corrected maxdelay variable being loaded from mindelay INI value, this has been corrected</p> <p>* Corrections 2005.12.13 - based off VZMule's post Structure changes in last patch corrected in this version</p> <p>* Corrections 2005.12.19 - based off somelamedruid's post added stickOn=true; to /stick hold and /stick id command parsers</p> <p>* Additions 2005.12.22 Added OnRemoveSpawn sub to help with crashes as posted by DKAA Added /moveto id  functionality as discussed on boards.</p> <ul> <li>Updated 2006.02.27</li> <li>updated 2006.02.28</li> <li>Updated 2006.03.01</li> <li>Updated 2006.03.13</li> <li>Updated 2006.03.16</li> <li>Updated 2006.04.04</li> <li>Updated 2006.04.23</li> <li>Updated 2006.04.24</li> <li>Updated 2007.05.10 by rswiders \\(added clockwise/counterclockwise circling; added forward and kiting \\(backwards\\) facing</li> </ul> <p>circling)</p> <ul> <li>Updated 2007.05.18 by deadchicken \\(added loose to /moveto\\)</li> </ul> <p>* Additions 2007.5.18</p> <p>Added loose option to /moveto to be similar to /stick loose and use gFaceAngle instead of directly setting heading. This</p> <p>also just turns without moving if angle is to great to avoid circling moveto location.</p> <p>Fixed some 180deg turns which were += 265 instead of += 256.</p> <ul> <li>Updated 2007.08.11 by bertbert \\(added /followpath and /fp commands\\)</li> </ul> <p>* 2007.08.11 - Added fp command to go to a person or location in a zone * Missed a return in new TLO StickTarget member * Added TLO object StickTarget * MoveTo, and Stick will stand you up if sitting * Changed a message display routine so it would not give you an incorrect break stick message * Fixed the CTD bug for the third time. * Fixed the CTD bug \\(again\\) * Opened the StickCommand, CircleCommand, MoveToCommand, and MakeCampCommand functions for other plugins for Sorcier * Added StandUp on /stick for A_Druid_00 \\(thanks Sorcier, I just copied your StandUp\\(\\) code!) * Fixed a CTD bug in the command processor for Stick. *Added in Sorcier's run/walk logic * Corrected a bug with /stick if your target was further away than your BreakDist from the MQ2MoveUtils.ini file then /stick would think your target had warped and would not stick. * Added some code to the bottom of the /stick command to account for this issue. * Added save of mPause setting so you can save your preference for mPause. * Changes Reduced Sensitivity on MoveStuck Logic by default from 0.8 to 0.1 * Added Delay to resume movement after manually moving with mpause enabled. While each command has mindelay and maxdelay they all set the same variables so this only needs to be done once. * Added checks to stick, moveto, and circle to not kick in the MoveStuck Logic if you are stunned</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/","title":"MQ2MoveUtils \\(old\\)","text":""},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#description","title":"Description","text":"<p>For updated plugin information see MQ2MoveUtils:v9. The information below applies to the 7.0518 and earlier versions of MQ2MoveUtils.</p> <p>MQ2MoveUtils is a very popular plugin which assists with most aspects of moving around within EQ. It has been worked on by a number of developers over the years \\(tonio, CyberTech, Quagmire and Outlander\\). For the history of this plugin and development notes please see MQ2MoveUtils:History.</p> <p>The old forum thread for MQ2MoveUtils can be found here, in the VIP forums. Source for the version 7.0 MQ2MoveUtils is available.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#features","title":"Features","text":"<p>The main features of MQ2MoveUtils are as follows:</p> <ul> <li>Stick: This is the main use for this plugin and allows you to \"stick\" a certain distance from your target. It</li> </ul> <p>can be set to always stick behind the target, or always in front if you're tanking.</p> <ul> <li>MoveTo: Move to a certain point or target. This has some built-in logic that will allow it to move around</li> </ul> <p>obstacles.</p> <ul> <li>MakeCamp: You can set a spot as a \"camp\", so that you can return to it if you get too far away, or after combat,</li> </ul> <p>etc.</p> <ul> <li>Circle: Run in a circle.</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#commands","title":"Commands","text":""},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#stick","title":"/stick","text":"<ul> <li>/stick </li> </ul> <p>Turn stick on and off. The default for /stick is to stick at max melee range.</p> <ul> <li>/stick </li> </ul> <p>Sticks to current target even if you lose/change target</p> <ul> <li>/stick []</li> </ul> <p>Stick at units to your target</p> <ul> <li>/stick </li> </ul> <p>Subtract the dist used from the current stick distance \\(ie. it will put you units closer to your target\\)</p> <ul> <li>/stick </li> </ul> <p>Stick at of max melee range from target. Eg. if max melee range is 20, then /stick 50% will stick you at 10 range</p> <ul> <li>/stick </li> </ul> <p>Sticks you behind your target.</p> <p>*Note: Be careful with this option if you do not have the Health of Target's Target Leadership Ability. If you have HoTT active and you are the Target of your Target, then you will not try to get behind. However if you do not have this ability and you gain aggro, you will spin around very quickly as you try and get behind your target while it continues to face you.*</p> <ul> <li>/stick </li> </ul> <p>Get behind the target once then convert to a regular stick</p> <ul> <li>/stick </li> </ul> <p>Sticks you to the side of the target, same considerations as /stick behind apply</p> <ul> <li>/stick </li> </ul> <p>Sticks you anywhere but in front of the target, will only reposition you if you would be in front. Same considerations apply to this as the \"behind\" and \"pin\" options</p> <ul> <li>/stick </li> </ul> <p>Moveback will back your toon up to the current value, keeping you at a consistant distance from your target</p> <ul> <li>/stick </li> </ul> <p>Uses a time delay so adjustments to your position do not occur as frequently, simulating a more human-like control</p> <ul> <li>/stick </li> </ul> <p>This changes the facing of your toon, and is very useful under water, where you will try and follow the Z coordinate of the spawn you are facing</p> <ul> <li>/stick </li> </ul> <p>Allows you to stick to a specific spawn ID</p> <ul> <li>/stick </li> </ul> <p>By enabling mpause, manually moving your toon will not break stick and will rather put it on hold. When you are done manually moving, the /stick command will once again kick in and you will continue following the same target as before</p> <ul> <li>/stick </li> </ul> <p>Pause and unpause the stick command</p> <ul> <li>/stick </li> </ul> <p>Some settings are stored in the INI file. This allows you to save your current preferences to the INI file, or load the saved preferences this file</p> <ul> <li>/stick </li> </ul> <p>When used with /stick this delay is used when mpause is enabled to decide the smallest value to use to resume the /stick command after a manual move</p> <ul> <li>/stick </li> </ul> <p>When used with /stick this delay is used when mpause is enabled to decide the largest value to use to resume the /stick command after a manual move</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#moveto","title":"/moveto","text":"<ul> <li>/moveto </li> </ul> <p>Moves you to the specified location, or stops the current /moveto \\(by using \"/moveto off\"\\)</p> <ul> <li>/moveto []</li> </ul> <p>Sets the maximum distance from your moveto point that you consider acceptable. This option is here because it's not always possible to move to the exact point that you specify, so the plugin will move you to within units of the moveto point before stopping. Eg. if you use \"/moveto 5\", you will always move to within 5 units from your moveto point</p> <ul> <li>/moveto </li> </ul> <p>Subtract from the current moveto distance</p> <ul> <li>/moveto </li> </ul> <p>By enabling mpause, manually moving your toon will not break moveto and will rather put it on hold. When you are done manually moving, the /moveto command will once again kick in and you will continue moving to your moveto point</p> <ul> <li>/moveto </li> </ul> <p>Pause and unpause the moveto command</p> <ul> <li>/moveto ID </li> </ul> <p>Moves to the specified Spawn ID or moves to your current target if no Spawn ID is provided</p> <ul> <li>/moveto </li> </ul> <p>When used with /moveto this delay is used when mpause is enabled to decide the smallest value to use to resume the /moveto command after a manual move.</p> <ul> <li>/moveto </li> </ul> <p>When used with /moveto this delay is used when mpause is enabled to decide the largest value to use to resume the /moveto command after a manual move.</p> <ul> <li>/moveto </li> </ul> <p>Save or load the moveto settings</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#makecamp","title":"/makecamp","text":"<ul> <li>/makecamp </li> </ul> <p>Turns MakeCamp logic off or turns it on, using your current location as the anchor point</p> <ul> <li>/makecamp </li> </ul> <p>Turns MakeCamp logic on using the supplied Y,X location as the camp anchor point</p> <ul> <li>/makecamp </li> </ul> <p>If outside the MakeCamp radius this is the minimum delay used before returning to a point within the camp radius</p> <ul> <li>/makecamp </li> </ul> <p>If outside the MakeCamp radius this is the maxium delay used before returning to a point within the camp radius</p> <ul> <li>/makecamp </li> </ul> <p>Toggle the leash logic on and off. Leash is the maximum distance away from your camp anchor your toon will be allowed to go using another MQ2MoveUtils command such as /stick</p> <ul> <li>/makecamp </li> </ul> <p>Turns leash logic ON and sets the leash length</p> <ul> <li>/makecamp </li> </ul> <p>Sets the camp radius. This is the maximum distance you can be from the anchor point and still be considered \"in camp\"</p> <ul> <li>/makecamp </li> </ul> <p>By enabling mpause, manually moving your toon will not break makecamp and will rather put it on hold. When you are done manually moving, the /makecamp command will once again kick</p> <ul> <li>/makecamp </li> </ul> <p>Pause and unpause the MQ2MoveUtils makecamp functionality</p> <ul> <li>/makecamp </li> </ul> <p>Returns your toon to the camp immediatly</p> <ul> <li>/makecamp </li> </ul> <p>Save or load the makecamp settings</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#circle","title":"/circle","text":"<ul> <li>/circle </li> </ul> <p>Sets the anchor point to your current location, and uses the currently set radius</p> <ul> <li>/circle </li> </ul> <p>Sets the anchor point to your current location, and uses the specified</p> <ul> <li>/circle </li> </ul> <p>Sets Y,X anchor point around which to circle</p> <ul> <li>/circle </li> </ul> <p>By enabling mpause manually moving your toon will not break the circle but will instead put it on hold, when you get done manually moving the toon the /circle command will once again kick in.</p> <ul> <li>/circle </li> </ul> <p>Pause and unpause the /circle command</p> <ul> <li>/circle </li> </ul> <p>Does not move in a perfect circle but instead the circle is more human-like</p> <ul> <li>/circle </li> </ul> <p>When used with /circle this delay is used when mpause is enabled to decide the smallest value to use to resume the /stick command after a manual move.</p> <ul> <li>/circle </li> </ul> <p>When used with /circle this delay is used when mpause is enabled to decide the largest value to use to resume the /stick command after a manual move.</p> <ul> <li>/circle </li> </ul> <p>Save or load the circle settings from the INI file</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#top-level-objects","title":"Top-Level Objects","text":""},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#stick_1","title":"Stick","text":"<ul> <li>string ${Stick}</li> </ul> <p>Same as ${Stick.Status} \\(see below\\).</p> <ul> <li>string ${Stick.Status}</li> </ul> <p>Return ON if currently sticking, OFF if not, or PAUSED if it is paused</p> <ul> <li>bool ${Stick.Active}</li> </ul> <p>Returns TRUE if currently sticking, FALSE if not</p> <ul> <li>bool ${Stick.Behind}</li> </ul> <p>Returns TRUE if behind target</p> <ul> <li>float ${Stick.Distance}</li> </ul> <p>The current stick distance</p> <ul> <li>bool ${Stick.Loose}</li> </ul> <p>Returns TRUE if stick loose is set</p> <ul> <li>bool ${Stick.MoveBack}</li> </ul> <p>Returns TRUE if stick is set to moveback</p> <ul> <li>bool ${Stick.MoveBehind}</li> </ul> <p>Returns TRUE if stick is set to move behind the target</p> <ul> <li>bool ${Stick.MovePause}</li> </ul> <p>Returns TRUE if stick movement is paused due to manual intervention</p> <ul> <li>bool ${Stick.Paused}</li> </ul> <p>Returns TRUE if stick has been paused with \"/stick pause\"</p> <ul> <li>bool ${Stick.Pin}</li> </ul> <p>Returns TRUE if /stick pin is being used</p> <ul> <li>bool ${Stick.Stopped}</li> </ul> <p>Returns TRUE if you are stationary</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#moveto_1","title":"MoveTo","text":"<ul> <li>string ${MoveTo}</li> </ul> <p>Return ON if currently moving to a location, OFF if not, or PAUSED if it is paused</p> <ul> <li>bool ${MoveTo.Moving}</li> </ul> <p>Returns TRUE if moving to location, FALSE if not</p> <ul> <li>bool ${MoveTo.Stopped}</li> </ul> <p>Returns TRUE if stopped, FALSE if not</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#makecamp_1","title":"MakeCamp","text":"<ul> <li>string ${MakeCamp}</li> </ul> <p>Same as ${MakeCamp.Status} \\(see below\\).</p> <ul> <li>string ${MakeCamp.Status}</li> </ul> <p>Return ON if MakeCamp is enabled, OFF if it is not enabled or PAUSED if it is paused</p> <ul> <li>float ${MakeCamp.AnchorX}</li> </ul> <p>The X Loc of the anchor point</p> <ul> <li>float ${MakeCamp.AnchorY}</li> </ul> <p>The Y Loc of the anchor point</p> <ul> <li>float ${MakeCamp.CampRadius}</li> </ul> <p>The current camp radius</p> <ul> <li>bool ${MakeCamp.Leash}</li> </ul> <p>Returns TRUE if the leash is enabled, FALSE if not</p> <ul> <li>float ${MakeCamp.LeashLength}</li> </ul> <p>The length of the leash</p> <ul> <li>int ${MakeCamp.MaxDelay}</li> </ul> <p>The maximum delay before resuming /makecamp functionality after manual intervention</p> <ul> <li>int ${MakeCamp.MinDelay}</li> </ul> <p>The minimum delay before resuming /makecamp functionality after manual intervention</p> <ul> <li>bool ${MakeCamp.Returning}</li> </ul> <p>Returns TRUE if returning to camp, FALSE if not</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#ini-file","title":"INI File","text":"<p>A default INI file is created \\(if it doesn't exist\\) when you issue one of the \"save\" commands \\(eg. /stick save, /moveto save, etc\\).</p> <p>The  section contains global defaults for all users. New sections can be added with character names as titles to override the default values. An example INI file is below, with explanations of the options underneath:</p> <p><code>[Defaults]</code> <code>AutoPause=on</code> <code>BreakOnWarp=on</code> <code>BreakDist=250.0</code> <code>BreakOnGate=on</code> <code>Verbosity=1</code> <code>ManualPause=on</code> <code>MinDelay=500</code> <code>MaxDelay=5000</code> <code>CampRadius=0.0</code> <code>LeashLength=0.0</code> <code>StuckLogic=on</code> <code>stuckCheck=5</code> <code>stuckDist=0.1</code></p> <ul> <li>AutoPause </li> </ul> <p>This enables or disables the automatic pause on cast feature. This does not apply to bards, since they can move while singing.</p> <ul> <li>BreakOnWarp </li> </ul> <p>With BreakOnWarp on, any movement will be terminated if the target moves too far away. See BreakDist to set the distance.</p> <ul> <li>BreakDist</li> </ul> <p>This sets how far away the target has to be before it will be considered too far away to continue following.</p> <ul> <li>BreakOnGate </li> </ul> <p>This enables/disables monitoring chat for \"TargetName Gates\". Movement will be terminated if it determines that the target has gated.</p> <ul> <li>ManualPause </li> </ul> <p>Stores your preference for the mPause functionality built into the various commands.</p> <ul> <li>MinDelay and MaxDelay</li> </ul> <p>Stores your preference for the resuming after manual move. These values are also used to return to camp at the end of a /stick or /moveto command when using /makecamp.</p> <ul> <li>CampRadius</li> </ul> <p>This is the default value used for /makecamp radius.</p> <ul> <li>LeashLength</li> </ul> <p>This is the default value used for /makecamp leash length</p> <ul> <li>StuckLogic </li> </ul> <p>Enable or disable the logic used to determine if you are stuck behind an object when using /stick or /moveto.</p> <ul> <li>stickCheck</li> </ul> <p>The number of pulses that are averaged out to come up with the stuckDist comparison number.</p> <ul> <li>stuckDist</li> </ul> <p>This is the average distance covered during the the last stickCheck pulses to use as a comparison. Eg. if you normally would average .5 distance units covered in a 5 pulse period, then if your average drops down to .1 moved in the last 5 pulses then you are probably stuck and the stuck logic should kick in.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-old/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>You can see a list of options for each of the commands by typing the command and then \"help\". Eg. /stick help,</li> </ul> <p>/moveto help, etc.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/","title":"MQ2MoveUtils:v11 FAQ","text":"<p>__NOTOC__</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#common-issues","title":"Common Issues","text":""},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#every-few-seconds-your-character-jerks-his-heading-to-one-side-and-then-resets-jitters","title":"Every few seconds your character jerks his heading to one side and then resets \\(\"jitters\"\\)","text":"<p>This is caused by stucklogic settings being set incorrectly to the speed of your CPU. You can confirm this is the problem by temporarily disabling stucklogic with /stick set stucklogic off. If the stuttering ends, you will need to tweak your stucklogic settings \\(see the main article\\).</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#your-character-runs-into-walls-or-off-into-illogical-directions","title":"Your character runs into walls or off into illogical directions","text":"<ul> <li>If you are using WinEQ, you should disable true movement. \\(_/stick set wineq on_\\)</li> <li>If you are not using WinEQ, you may have stucklogic disabled or your stucklogic settings need to be configured</li> </ul> <p>properly.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#your-character-spins-in-circles-while-jumping-up-and-down","title":"Your character spins in circles while jumping up and down","text":"<ul> <li>You are likely using wineq2 while trying to use true movement. set wineq support on</li> <li>Otherwise, your framerate is really, really bad and you need to adjust your stucklogic settings by a very large</li> </ul> <p>amount</p> <ul> <li>OR, see the AdvPath comment below</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#common-issues-with-mq2advpath-and-modbot-ala-master-kroak","title":"Common Issues with MQ2AdvPath and ModBot ala Master Kroak","text":"<ul> <li>it was \"stuck\" i.e. turning and jumping.</li> </ul> <pre><code>That's the plugin trying to get to the point your leader was at when the follow command was actually started..\nIt doesn't work like this plugin, ie - you get stuck behind a wall, leader moves back and you unstick..\nIt won't do that if it's last recorded follow point is past the wall... You have to turn off following to get a new follow path.\n</code></pre> <ul> <li>After issuing the /bc follow, with an ini setting of /stick 20 hold uw, the bots will follow, but every 2-3 secs,</li> </ul> <p>they \"adjust\"</p> <p>trying to move forward a bit or something, even though their distance is less than 20, and the master isn't even moving.</p> <pre><code>This happens if you have DoSit on and using AdvPath plugin to follow. Your stick setting is not used, and MQ2AdvPath has no setting to change it's follow distance.\nNot sure why MQ2Advpath is coded this way, but it will force your toon to stand if your distance is over 10 from your leader...\nThe modbot macro is just trying to force your position so it's possible to sit without standing back up every second or so..\nI'll increase the delay that's used there, and see if I can make one smooth movement..\n\nP.S. If you WANT to use this plugin and not MQ2AdvPath for following, either unload MQ2AdvPath, or change this line at the top of modbot.mac to FALSE. \n/declare AdvPlug bool outer TRUE\n</code></pre>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#your-character-looks-straight-up-or-down-when-underwater","title":"Your character looks straight up or down when underwater","text":"<p>This happens from having the autouw feature enabled and sticking from a great distance.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#stucklogic-sucks-underwater","title":"StuckLogic sucks underwater","text":"<p>Yes, this is true. Do not attempt to stick from large distances while underwater unless you have a clear path. Water swimming motion is not easily measured like walk/run on dry land.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#you-cannot-manually-break-from-a-stick","title":"You cannot manually break from a stick","text":"<ul> <li>You use MQ2Melee</li> </ul> <p>You will need to enable breakonkb in MoveUtils and also set stickbreak=1 in MQ2Melee</p> <ul> <li>You do not use MQ2Melee</li> </ul> <p>You will need to enable breakonkb in MoveUtils.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#you-use-mq2melee-and-any-time-you-issue-a-stick-with-hotkey-or-macro-it-gets-changed","title":"You use MQ2Melee and any time you issue a /stick with hotkey or macro, it gets changed","text":"<p>This happens from not having 'stickcmd' set to anything in MQ2Melee while still having MQ2Melee set to use a stickrange</p> <ul> <li>it will use its own default parameters.</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#you-setup-a-camp-but-have-problems-returning-to-it","title":"You setup a camp but have problems returning to it","text":"<p>The most common cause of this is having a target. By default, automatic camp returns require nothing on target.</p> <p>Verify what camp settings you have enabled. Certain features behave different ways, for example</p> <pre><code>ReturnNoAggro will only return to the camp if you do not have aggro.\nReturnHaveTarget will allow you to return even if you have a target.\nReturnNotLooting will not return if you have an open corpse being looted.\n</code></pre>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#stick-front-does-not-work","title":"/stick front does not work","text":"<p>You do not have HoTT data available. You either need the HoTT group leader AA or you need to enable nohottfront \\(_/stick set nohottfront on_\\)</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#your-face-commands-are-not-working","title":"Your /face commands are not working","text":"<p>You cannot use /face while a MoveUtils command is active. MoveUtils handles facing targets internally based on many different settings. Using /face in your macros that rely on MoveUtils is a bad practice that causes nothing but problems and thus is no longer allowed by the plugin.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#none-of-your-commands-are-working-but-you-are-sure-the-plugin-is-loaded-and-was-working-for-a-bit","title":"NONE of your commands are working but you are sure the plugin is loaded and was working for a bit","text":"<p>Try \\( _/stick imsafe_ \\) if you have BreakOnSummon or BreakOnGM enabled Try \\( _/stick unpause_ \\) if you have PauseLock enabled</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#configuration","title":"Configuration","text":""},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#what-are-the-different-ways-to-handle-manual-keyboard-and-mouse-movement","title":"What are the different ways to handle manual keyboard and mouse movement ?","text":"<ul> <li>Breaking \\(_/stick set \\[breakonkb \\| breakonmouse\\] on_\\)</li> <li> <p>BreakOnKB - if you touch any keyboard movement related key (forward, backward, left, right, strafeleft,</p> <p>straferight, autorun) the current command will end</p> </li> <li> <p>BreakOnMouse - if you use mouselook \\(default is hold right-click\\), the current command will end</p> </li> <li>Pausing \\(_/stick set \\[mpause \\| mousepause\\] on_\\)</li> <li> <p>mpause - if you touch any keyboard movement key, the current command will pause to let you move and then resume</p> <p>after a configurable delay</p> </li> <li> <p>mousepause - if you use mouselook, the current command will resume after a configurable delay</p> </li> </ul> <p>You may only have a Break or a Pause on for a single option, but not both. However, you may have a pause for one option and a break for a different option on. That is: Keyboard can either be breakonkb or mpause, and mouse can either be breakonmouse or mousepause, but you may not have breakonkb AND mpause Thus, you may have breakonkb and mousepause or mpause and breakonmouse.</p> <p>Results:</p> <pre><code>MoveUtils:\nmpause on - pressing a movement key pauses stick for a defined amount of time\n(resume timer starts when all movement keys have been let go)\nbreakonkb on - pressing a movement key breaks stick entirely\nboth off - stick will not break from movement key input (i.e. it will fight you to stay locked onto target)\n\nMoveUtils with MQ2Melee\nmpause on - pressing a movement key pauses stick for a defined amount of time (resume timer starts when all movement keys have been let go)\nbreakonkb on - pressing a movement key breaks stick entirely. MQ2Melee then turns it back on instantly if MQ2Melee's attack is on\nand you are within MQ2Melee's stickrange of the target.\nboth off - stick will not break from movement key input, MQ2Melee's attack key will toggle stick state\n</code></pre>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#how-do-i-make-the-plugin-output-less-or-more-chatwnd-messages","title":"How do I make the plugin output less or more ChatWnd messages","text":"<p>See the Verbosity section at the bottom of the main article.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#movement-heading","title":"Movement &amp; Heading","text":""},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#what-is-the-difference-between-fast-loose-and-true-heading","title":"What is the difference between fast, loose, and true heading?","text":"<p>The three types of heading changes are a question of legitimacy versus efficiency.</p> <p>Fast heading instantly changes your heading to the desired location. If you are facing North, target a mob that is South of you, and issued a stick command with fast heading enabled, your character would instantly face the mob and begin running. This works like MQ2's /face command with the fast parameter. Repeated fast turns can be quite noticeable to other players and thus, the other options exist.</p> <p>Loose heading rotates your heading changes using a fixed size turn increment to look more legitimate. You are able to set this increment size between 1 and 100. These numbers represent the actual number of degrees you will turn per pulse, not any sort of scaling system.</p> <p>True heading rotates your heading changes using the same method EQ does if you were to hold down the right or left key. This is comparable to /keypress with right hold as parameters. This is the most legitimate method of turning available. It is also the slowest.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#why-do-i-move-backwards-often-it-looks-crazy-and-unnatural","title":"Why do I move backwards often? It looks crazy and unnatural.","text":"<p>Either your _backupdist' is set way too high \\(10.0 is reasonable, 50.0 is not\\) or you should just disable_useback''</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#when-using-loose-or-true-heading-my-character-orbits-around-the-destinationtarget-rather-than-arriving-smoothly","title":"When using loose or true heading, my character orbits around the destination/target rather than arriving smoothly","text":"<p>This happens due to bad frame rate and you should tighten up the AllowMove setting. Default is 32.0, you can lower it down to 16.0 or even 8.0</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#when-i-dismount-my-characters-appear-to-be-spinning-in-circles","title":"When I dismount, my characters appear to be spinning in circles","text":"<p>This is an EQ bug and has nothing to do with MQ2 nor MoveUtils</p> <p>== StuckLogic ==</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#what-is-stucklogic","title":"What is stucklogic?","text":"<p>When a character runs into an object, it will continue running forward because there is no awareness that the object exists. People with stucklogic disabled can often be seen running into walls or rocks or failing to navigate through twists and turns of tight areas \\(smart ones use AdvPath\\).</p> <p>Stucklogic is an effort to overcome this problem by measuring an average distance moved per pulse based on Y X location. When the average distance declines dramatically, the plugin is able to be aware that forward motion is no longer happening and attempts to correct this.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#explain-what-stucklogic-values-do","title":"Explain what stucklogic values do","text":"<p>TryToJump - will jump every few pulses to attempt scaling over small rocks and stumps \\(very helpful to **food races** such as gnomes that frequently get stuck\\) TurnHalf - if stucklogic has turned half way around \\(256 deg\\) without making any progress, it will reset heading to the starting point and try turning the other direction</p> <pre><code>/stick set pulsecheck #\n-pulsecheck defaults to 4\n-this value is sort of what \"stuckcheck\" was before.\n-it serves as the size of your pulse history to be used to calculate your average movement distance.\nthe largest you can set this value to is 32 (defined by MAXRINGSIZE).\nThe higher you set this number, the less often stucklogic would misfire (so if you are getting the\n\"jittery\" problem you will want to increase this value). This also means it will take longer to know\nthat it is stuck, so if you are getting stuck and not responding fast enough, you would do the opposite and lower this value.\n\n/stick set pulseunstuck #\n-pulseunstuck defaults to 5\n-this value is new\n-this is the amount of pulses you have successfully moved forward before hard-forcing stucklogic to be considered unstuck.\nthis serves the purpose in that if you were stuck for 20 pulses, your stuck counter would normally try to move forward\nfor 20 more pulses before considering itself free. there was some handling for this that had some issues so now you can set a value\nsuch as this one to force a faster \"im unstuck\" process.\n-the higher your framerate, the higher you want this value. 5 may not be enough on better computers and you may end up\ngetting restuck again, it will look like what we are calling \"snaking\". If you notice yourself \"snaking\" then this would be the first value to try increasing.\n\n/stick set diststuck #.##\n-diststuck defaults to 0.5\n-this is similar to before in that it is the amount of distance you need to have moved versus your average pulse rate in order to not be stuck\n-this value should properly scale for all speeds of computers. you may want to set it higher or lower, play with it and\nfind what works best (and please let us know!!), but keep in mind setting this value to something tiny such as 0.001 as\nwe did in the old logic should no longer be necessary. deadchicken has determined that mindset was only working because\nof some incorrect math in the formulas. try to stick with more logical values and then reporting back your results would be appreciated.\n</code></pre>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#i-am-in-a-boxed-room-with-only-a-single-doorway-and-stucklogic-wont-get-me-out","title":"I am in a boxed room with only a single doorway and stucklogic wont get me out","text":"<p>It can eventually with turnhalf off, but it will take hours. Use MQ2AdvPath or a combination of /moveto loc Y X to get out of rooms like this. Stucklogic is helpful but it doesn't create miracles.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#stick","title":"Stick","text":""},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#when-i-gain-aggro-my-character-spins-in-circles","title":"When I gain aggro, my character spins in circles","text":"<p>You do not have access to the HoTT group leader AA while using /stick behind/!front/pin You can correct this by enabling DelayStrafe with a minimum value of at least 1500 before strafing</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#when-i-lose-aggro-my-character-spins-in-circles","title":"When I lose aggro, my character spins in circles","text":"<p>You do not have access to the HoTT group leader AA while using /stick front You can correct this by enabling DelayStrafe with a minimum value of at least 15000 before strafing You can also /stick set nohottfront off and stick front will be disabled if you do not have HoTT data</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#when-using-mq2melee-i-have-to-clear-my-target-to-stop-sticking-because-turning-off-attack-does-not-work","title":"When using MQ2Melee, I have to clear my target to stop sticking because turning off attack does not work","text":"<p>You need to create a MQ2Melee attack hotkey and NOT USE the eq attack on/off key. They are not the same thing.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#my-character-stays-at-a-fixed-range-when-sticking-even-though-i-try-to-move-closer-manually","title":"My character stays at a fixed range when sticking even though I try to move closer manually","text":"<p>This is due to moveback repositioning. Take that parameter out of your stick command.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#what-is-a-snaproll","title":"What is a snaproll?","text":"<p>Basically if you issue /stick snaproll it will plot the movement location as an X behind the mob. No matter where you are relative to the mob, it will turn to face directly at the X and then run there in a straight line.</p> <p>If you issue /stick snaproll face the X is plotted in front of the mob. /stick snaproll left and it will go to your left aka the mob's right shoulder, and /stick snaproll right and it will go to the mob's left shoulder.</p> <p>This is mainly for hidden rogues to use their opening strike disc without strafing into position to maximize DPS.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#makecamp","title":"MakeCamp","text":""},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#what-is-camp-scattering-and-how-do-you-use-it","title":"What is camp scattering and how do you use it?","text":"<p>This is a bit complex but when configured properly it is amazing. The idea behind this is that instead of returning to a random location within your camp radius, you can define a specific bearing, distance, and scatter radius from the center of your camp. This way you could configure your characters to return to specified areas all the time. The INI supports values on a character by character basis as well, so you could configure your tank to return to the center, your casters to return behind the tank, and your melee to return to the sides of the tank.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#moveto","title":"MoveTo","text":""},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#i-am-rotating-in-place-when-i-use-moveto-y-x-z","title":"I am rotating in place when i use /moveto y x z","text":"<p>You supplied an unreachable Z axis destination. Either use /moveto y x, or supply an accurate z destination that can be reached</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#moveto-never-arrives-at-a-destination-even-ignoring-z-parameter","title":"Moveto never arrives at a destination, even ignoring z parameter","text":"<p>Your arrival distance is set too low. 5.0 is the absolute minimum but 10.0 is recommended.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#circle","title":"Circle","text":""},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#what-is-this-command-for","title":"What is this command for?","text":"<p>Bard circle kiting.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#calc-angle","title":"Calc Angle","text":""},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#what-does-any-of-this-mean","title":"What does any of this mean?","text":"<p>Angular Dist - what moveutils uses to determine pin/behind/front/!front, useful for configuring your !frontarc and behindarc settings. Adjust - this is how much adjustment is required in order to be facing your current target. This value relates to the new allowmove setting. Dist - the distance to your target provided by GetDistance \\(what stick and some moveto, campreturns use\\), useful in configuring your ArrivalDist values Dist3D - the distance to your target provided by GetDistance3D \\(what snaproll, stucklogic and some moveto parameters use\\), useful in configuring your ArrivalDist values</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#mq2melee","title":"MQ2Melee","text":""},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-faq/#what-changes-did-you-make-that-are-not-found-in-the-normal-melee-wiki","title":"What changes did you make that are not found in the normal melee wiki","text":"<pre><code>stickrange=75\nsticknorange=1\nstickdelay=whatever\nstickmode=1\nstickcmd=8 !front\nstrikemode=1\nstrikecmd=snaproll \n\nthis way you can use normal paramaters for stickmode/stickcmd and then setup a custom strikecmd and\nuse strikemode=1. strikemode=1 only relates to using a custom strike stick parameter and does not integrate\nwith whatever other methods turn strike on and off.\n\nsticknorange=0 (default behavior you are used to)\nsticknorange=1 (no range checking takes place for stick to happen automatically via mq2melee) \n\nupdate on sticknorange: MQ2Melee does not allow for attacking anything greater than 250 range away\nregardless of any settings, and sticknorange does not overcome that (though maybe it should be possible?).\nSo sticknorange is effectively \"stick at 250 or less\", without checking the stickrange value\n(which defaults to 75 if you do not set it). \n\n\nstickbreak=1  - allows breakonkb to work with new mq2melee changes\n</code></pre>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/","title":"MQ2MoveUtils:v11 Revisions","text":"<p>__FORCETOC__</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#mq2moveutils-v160-revision-history","title":"MQ2MoveUtils v16.0 Revision History","text":""},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#patch-fix-for-16-nov-2016","title":"Patch Fix for 16-Nov-2016","text":"<ul> <li>Applied changes necessary because of the Nov 16<sup>th</sup> 2016 patch. \\(trevyn\\)</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#made-in-notepad-only-v160717","title":"Made in Notepad only - v16.0717","text":"<ul> <li>brainiac loves the D</li> <li>Fixed this bad code, a bug in the source for years that has always been wrong</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-v140416","title":"Stable - v14.0416","text":"<ul> <li>Added Circle Strafe Ability \\(Cr4zyb4rd\\)</li> <li>/stick ]<ul> <li>Continuously strafes in one direction regardless of distance to target with no target-of-target check.</li> <li>left|right - direction to strafe</li> <li>flip - strafes in opposite direction of last strafe command</li> <li>random - strafe direction chosen by luck</li> </ul> </li> <li> <ul> <li>I've found using</li> <li>/stick strafe flip 50 moveback loose</li> </ul> </li> <li> <p>lets me bow-kite a snared mob in a pretty tight circle, and I can just hit the same key again if I get too close</p> <p>to a wall or something and need to change direction. The only issue I've had is that mq2melee turns off all</p> <p>stick commands when it flips from melee to ranged mode, but I figured that's a problem better solved there than</p> <p>lying to mq2melee about what we're doing.</p> </li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-v110410","title":"Stable - v11.0410","text":"<ul> <li>Added Flexible sticking</li> <li>/stick set flex on</li> <li>/stick set flexdist #.#<ul> <li>between 2.0 and 20.0</li> </ul> </li> <li>Saves to INI under  as UseFlex=on/off and DistFlex=#.#</li> <li>inline as /stick whatever useflex flexdist #.#</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-v110323","title":"Stable - v11.0323","text":"<ul> <li>Fix for brainiac's bullshit.</li> <li>Added ascii's VC6 auto-detection</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-v110319","title":"Stable - v11.0319","text":"<ul> <li>VC6 people can uncomment this line: //#define OLD_COMPILER_USER</li> <li>StickCommand\\(\"unpause\"\\) called via export will have a potential \"plugin was not paused\" error message</li> </ul> <p>auto-squelched.</p> <ul> <li>Added BreakOnHit option to Stick \\(thank dkaa\\)</li> <li>/stick set breakonhit on \\&lt;---perm</li> <li>/stick 12 breakonhit \\&lt;---inline</li> <li>saves to ini under  as BreakOnHit=on</li> <li>new TLO for this ${Stick.Broken}, which resets upon zone / next stick command usage</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-v110101","title":"Stable - v11.0101","text":"<ul> <li>${Stick.Behind} now works when no commands are active.</li> <li>/moveto now has a new parameter mdist, allowing you to change moveto distance on the fly instead of having to</li> </ul> <p>issue a set or /moveto dist # command prior to the actual moveto command.</p> <ul> <li>I left the old dist as-is to not cause macro conflict.</li> <li>Note: In the case of id, you must use mdist first if you are not supplying the spawn id, i.e.</li> </ul> <pre><code>/moveto mdist 100 id\n\nNOT\n\n/moveto id mdist 100 \\&lt;----fails\n</code></pre> <ul> <li>Dist3D change for snaproll to help when levitated now permanent.</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-v91231-tlo-cleanup","title":"Stable - v9.1231 - TLO Cleanup","text":"<ul> <li>${MoveTo.Stopped} now reflects if the last /moveto command completed successfully.</li> <li>Previously it measured if you were within your ArrivalDist of the last moveto location used.</li> <li> <p>If you were using this data for that purpose be aware if you move away from your /moveto location it will show</p> <p>as TRUE now.</p> </li> <li> <p>This will reset to false the next time you issue a /moveto command and upon gamestate changes.</p> </li> <li>Fixed the PAUSED status for the following TLO's with no member:</li> <li>${MoveTo}</li> <li>${Stick}</li> <li>${Circle}</li> <li>${MakeCamp}</li> <li>${MoveTo.Broken} once again functions as intended.</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-90907","title":"Stable - 9.0907","text":"<ul> <li>Bug fixes for 0817</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-90817-non-linear","title":"Beta - 9.0817 - non-linear","text":"<p>Major Changes</p> <ul> <li>The old style of movement has been reintroduced for WinEQ users i.e. those of you with problems of mouselook or</li> </ul> <p>strafe keys being left on when you alt-tab to switch sessions. You may switch over by using: /stick set wineq on</p> <p>This saves to the ini under  as WinEQ=on/off</p> <ul> <li>The true movement ability no longer makes the plugin offset-dependent. In the event the offset pattern changes and</li> </ul> <p>true movement is not established, the plugin should revert to the old style of movement so there would be no</p> <p>downtime or need to downgrade while waiting for an update.</p> <ul> <li>Heading settings are no longer command/INI situational. It applies to the plugin across the board. You may still</li> </ul> <p>apply inline adjustments for single command use only.</p> <ul> <li>To change plugin default headings, use:</li> </ul> <pre><code>/stick set heading true\n/stick set heading loose\n/stick set heading fast\n</code></pre> <p>saves to the ini under  Heading and character-specific section</p> <ul> <li>All commands now reset to INI \\(user, not plugin\\) defaults after each use.</li> <li>The INI no longer reloads every time you zone. It will only unload and reload defaults if you use the 'load'</li> </ul> <p>parameter \\(ie /stick load\\) or if you camp to character select and re-enter world.</p> <ul> <li>Loading the INI file will end commands in progress.</li> <li>Command parameters applied inline will no longer overwrite INI defaults. To change INI defaults, use 'set' or</li> </ul> <p>'toggle' to make changes permanent.</p> <ul> <li>The ability to use most INI settings inline has been added. This allows you to issue a command with the setting</li> </ul> <p>inline to apply it to the current command, and once the command has ended the next command will revert back to the</p> <p>INI defaults. As an example, if your snaproll default distance was 10.0 and you wanted to make your snaproll</p> <p>distance larger for a single mob, you could:</p> <pre><code>/stick snaproll rear snapdist 20.0\n</code></pre> <p>...and this would snaproll 20 distance behind the target. The next snaproll you issued would then revert to using 10.0</p> <ul> <li>Complete list of supported inline additions:</li> </ul> <p>/stick breakontarget breakongate breakonwarp pauseonwarp randomize delaystrafe useback usefleeing strafewalk mindelay</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#when-used-with-stick-this-applies-to-delaystrafe-maxdelay-when-used-with-stick-this-applies-to-delaystrafe","title":"\\(when used with stick, this applies to delaystrafe\\) maxdelay # \\(when used with stick, this applies to delaystrafe\\)","text":"<p>backupdist # breakdist # snapdist # !frontarc # behindarc #</p> <p>/moveto breakonaggro breakonhit usewalk useback backupdist # ydist # xdist #</p> <p>/makecamp returnhavetarget returnnoaggro returnnotlooting realtimeplayer scatter bearing # scatsize # scatdist #</p> <p>/circle -already had all options</p> <ul> <li>Changed INI &amp; Settings Information</li> </ul> <p>I cleaned up the INI naming scheme a bit along with some additions and removals so take note of the following</p> \\[Defaults\\] <ul> <li>BreakSummonDist --&gt; DistSummon</li> <li>new WinEQ</li> <li>removed TrueHeading</li> <li>new Heading \\(true, loose, fast\\)</li> </ul> \\[Stick\\] <ul> <li>new AlwaysUW</li> <li>BehindArc --&gt; ArcBehind</li> <li>NotFrontArc -&gt; ArcNotFront</li> <li>BreakDist --&gt; DistBreak</li> <li>BackupDist --&gt; DistBackup</li> <li>new BreakOnTarget</li> <li>removed LooseStick</li> <li>SnaprollDist --&gt; DistSnaproll</li> <li>StickDistMod --&gt; DistMod</li> <li>StickDistModPercent --&gt; DistMod%</li> <li>new UseWalk</li> <li>new UseFleeing</li> </ul> \\[MakeCamp\\] <ul> <li>new RealtimePlayer</li> </ul> \\[MoveTo\\] <ul> <li>new AlwaysUW</li> <li>new DistBackup</li> <li>removed LooseMoveTo</li> <li>new UseBackward</li> </ul> \\[Circle\\] <ul> <li>AlwaysBackwards --&gt; Backward</li> <li>AlwaysCounterClockwise --&gt; CCW</li> <li>AlwaysDrunken --&gt; Drunken</li> </ul> \\[Character specific\\] <ul> <li>same changes as above where applicable</li> <li>added Heading, same as defaults</li> <li>added RealtimePlayer</li> </ul> <p>New Features</p> <ul> <li>Added a new command \"/rootme\". This command will effectively lock your character in place until you turn it off with</li> </ul> <p>\"/rootme off\", preventing you via the keyboard or the plugin or /keypress from moving you forward. I figured this</p> <p>was within the scope of the plugin and may have some uses such as macro-based GM detection, or eqbc command passing</p> <p>for a character that is about to do something problematic. With rootme active, other commands will not work until</p> <p>you turn it off - though a makecamp on may still fight with it so consider this experimental for now.</p> <ul> <li>Added BreakOnTarget option to '/stick', which will break from the current stick if your target changes. /stick set</li> </ul> <p>breakontarget on, saves to the INI under  BreakOnTarget=on/off</p> <ul> <li>Added AlwaysUW options to both stick and moveto \\(individually\\). the current AutoUW option turns on underwater</li> </ul> <p>adjustments automatically only when you are underwater \\(as intended\\). The new 'alwaysuw' setting will instead always</p> <p>perform the stick or moveto as if you had typed 'uw' inline somewhere. /stick set alwaysuw on, /moveto set alwaysuw</p> <p>on, saves to the INI under  AlwaysUW=on/off &amp;&amp;  AlwaysUW=on/off</p> <ul> <li>Added 'strafewalk' option to stick. This turns on walking when you are close to the target and using a strafe-based</li> </ul> <p>stick parameter. For characters with ridiculously high run speed this will help you position more accurately and</p> <p>should assist background sessions with moving slower and not overshooting the destination. /stick set strafewalk on,</p> <p>ini  UseWalk=on/off</p> <ul> <li>Added 'usefleeing' option to stick for 'stick front'. If the target is fleeing \\(same check as the TLO\\) and under 25%</li> </ul> <p>health, stick front will not attempt to strafe and reposition in front of the target. This is still experimental.</p> <ul> <li>Added 'useback' to moveto. Just like with stick, if you are close to the moveto destination (which also includes</li> </ul> <p>camp returns), this will walk backwards to the destination rather than turning, facing the destination, walking</p> <p>there, and turning again. /moveto set useback on, ini:  UseBack=on/off</p> <ul> <li>Set the distance same way as stick \\(though unlike stick, you probably want a larger value here\\) /moveto set</li> </ul> <p>backupdist # \\(1.0 min\\). moveto and stick save their own distances, not use the same.</p> <ul> <li>Added 'realtimeplayer' setting to camp returning. Previous '/makecamp player' behavior set the location of the</li> </ul> <p>player, and began moving there. if the player moved during that time, it would walk to the old location first and</p> <p>then begin moving again. realtimeplayer now makes the positions dynamic and will adjust a return on the fly. i made</p> <p>this optional in case anyone used that as some form of ghetto advpath. /makecamp set realtimeplayer on</p> <ul> <li>BreakOnGM now displays a timestamp for zone in &amp; zone out times. if you see one blink in and out within a matter of</li> </ul> <p>seconds, they went invis and you should not consider yourself safe.</p> <p>Bug Fixes &amp; Cleanup</p> <ul> <li>HideHelp now functions as the output message describes instead of in reverse.</li> <li>'/stick front' will no longer take the 'long way' around the mob to get back into position.</li> <li>Rewrote the UI window class to fix several bugs.</li> <li>Stripped the command history &amp; output box from the UI window.</li> <li>The UI window should remain up when you are hovering</li> <li>When triggered, BreakOnGM &amp; BreakOnSummon will prevent future commands from being used and output a message, rather</li> </ul> <p>than allow the commands to be accepted but then the plugin does nothing.</p> <ul> <li>ReturnHaveTarget, ReturnNoAggro, and ReturnNotLooting will now all perform their checks so that if you have multiple</li> </ul> <p>options enabled, one will not prevent the other from taking place.</p> <ul> <li>Changed the randomize formula a bit, though it may not have helped any.</li> <li>Setting the behindarc setting will actually take effect.</li> <li>Stucklogic should be less aggressive if a character is walking</li> <li>AutoPause will no longer apply if only makecamp is active and not returning</li> <li>Fixed the stick healer / uw parameter bug</li> <li>'/calcangle' has more data added to the output</li> <li>stick commands should no longer cause the character to run in circles around the target (noticeably taking a while</li> </ul> <p>to correct itself) if you turned it on when close to the target and facing certain angles.</p> <ul> <li>delaystrafe should now work exactly as intended / problem free, and i suggest using it always, especially for those</li> </ul> <p>who do not regularly have HOTT data</p> <ul> <li>mousepause &amp; mpause will no longer try to resume when the plugin was paused by the user \\(ie /stick pause\\)</li> <li>if you ditch your stick target while mpause / mousepause is in effect, the plugin will take note instantly instead</li> </ul> <p>of waiting the normal delay time and then attempting to resume followed by breaking later</p> <ul> <li>pause/breakonkb \\(with true movement\\) should not interfere with your keypresses unless your ubermicro beats the speed</li> </ul> <p>of the threading.</p> <ul> <li>for mpause if you are using the oldstyle movement it will still behave as it did before (if you hold down two keys</li> </ul> <p>and let one go, the timer starts from the first key even though you still have the second key held).</p> <ul> <li>a bug with zoning while a pause was active causing keybinds movement to be broken while the plugin was loaded has</li> </ul> <p>been fixed \\(rare case\\)</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#development-90608-verbosity-rewrite-stick-healer-breakongm","title":"Development - 9.0608 - verbosity rewrite, stick healer, breakongm","text":"<ul> <li>Rewrote the verbosity system to be based off bit flags. This allows the user full control of every message that will</li> </ul> <p>or will not be displayed by the plugin. Read this wiki entry for the flags</p> <p>table and details on how it works, and what specific messages are tied to what bit flags. I have converted the old</p> <p>system, so if the new system is a bit confusing, verbosity, fullverbosity, autopauseoutput, and totalsilence</p> <p>still work very close to as before. I have not updated the wiki yet with the new commands, Usage:</p> <pre><code>/stick verbflags - Lists your current verbosity bit flags (useful for knowing what to add/subtract from if you want to make a single change)\n/stick set verbflags # - Sets your verbosity flags to # (where # is the total sum of whatever flags you added up, check the wiki link)\nnote: if you set # to 0 or a negative number, it is equivalent to totalsilence\n\nNumerical flags value saves to the INI under [Defaults] as \"VerbosityFlags\" and to [server.char] section as well.\n</code></pre> <ul> <li>The totalsilence option now applies to everything, and not 'almost everything'.</li> <li>Added a new verbosity toggle so that you do not have to memorize 33554431, and may use */stick toggle</li> </ul> <p>totalverbosity* to turn on every message possible.</p> <ul> <li>Added a new safety option, BreakOnGM. This works similar to BreakOnSummon. When active, it will scan OnAddSpawn for</li> </ul> <p>a GM type zoning in. If a visible GM/Guide does zone in, the plugin will halt any active MoveUtils commands and</p> <p>prevent future MoveUtils command usage until you unlock it \\(same command as BreakOnSummon - _/stick imsafe_\\). I</p> <p>highly recommend you turn on the verbosity bit flags for this if you are using this feature, as otherwise you may</p> <p>wonder why your commands are not working. Usage:</p> <pre><code>/stick toggle breakongm\nSaves to the INI under [Defaults] as \"BreakOnGM\"\n</code></pre> <ul> <li>Added a new TLO member ${MoveUtils.GM}, which returns TRUE if the GM detection has fired and the plugin is currently</li> </ul> <p>locked.</p> <ul> <li>Added a new stick type, /stick healer. **This does not work with any custom angles (pin, front, !front, behind,</li> </ul> <p>behindonce, snaproll).** This is useful for those who may wish to stick their healer to another group member to keep</p> <p>them following without having them look like they are sticking. **The main difference of this stick type is that</p> <p>until the character is out of stick range, it will not perform any heading adjustments**. For example, currently if</p> <p>you stick your healer to your tank, every time the tank moves the healer would turn to be facing directly at the</p> <p>tank and it is very noticeable. With /stick healer, you can issue a command such as /stick 100 hold healer and</p> <p>as long as your healer is within 100 range of the tank, it will sit still and not turn at all. Once the tank moves</p> <p>beyond 100 range, the healer would then turn to face it and move until it is within 100 range again.</p> <ul> <li>If you keep autopause off, targeting yourself while sticking will now halt your movement until you target something</li> </ul> <p>else \\(unless you are using stick id/hold\\). AutoPause on includes this functionality, but if you have it off and</p> <p>switched from an NPC to yourself with moveback enabled, previously you would try to move away from yourself, backing</p> <p>up forever. This displays a message as well, and is tied to the Autopause verbosity flag.</p> <ul> <li>Unducking will now also use /stand instead of hitting the duck key, which in very rare cases would also cause a</li> </ul> <p>server desync. WTB /stand as a native EQ mappable key.</p> <ul> <li>The fullverbosity message for stick will no longer display the mod output unless you actually have a mod active.</li> <li>The fullverbosity message for stick now will reflect HEALER if /stick healer is used.</li> <li>Issuing /makecamp on/player will no longer automatically stand the user up.</li> <li>Fixed a bug with BreakOnWarp / PauseOnWarp when using very large stick distances.</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-90526-ui-window","title":"Stable - 9.0526 - UI window","text":"<ul> <li>Added an optional dedicated UI window for the plugin.</li> </ul> <p>Usage \\(may use any of the 4 commands\\):</p> <pre><code>/stick toggle window - toggles window display\n/stick set font # - sets window font size (1 to 10)\n/stick min - minimizes the window (like /mqmin)\n/stick clear - clears the window (like /mqclear)\n</code></pre>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#development-90524","title":"Development - 9.0524","text":"<ul> <li>Added two more fixes to help prevent possible turn keys being left on</li> <li>Moveback will wait until snaproll and other drastic heading changes have completed before kicking in. (thanks above</li> </ul> <p>posters)</p> <ul> <li>Confirmed the 'moveto spinning' reported by Magoo was due to GetDistance3D not reaching its ArrivalDist. All moveto</li> </ul> <p>\\(including 'id'\\) and camp returns once again use GetDistance except the special case of /moveto y x z. If you supply</p> <p>a z parameter that your character cannot reach, you will rotate in place above or below the unreachable z point</p> <p>endlessly. Bottom line: use sanity checking on your z locations if you opt to use this. Don't guesstimate.</p> <ul> <li>BehindArc can now be set by the user. /stick set behindarc #, saves to the INI under  \"BehindArc\" and the</li> </ul> <p>  sections.</p> <ul> <li>Snaproll distance can now be set by the user. This is the distance behind (or in front/side if you are using custom</li> </ul> <p>position) the target where the snap location is plotted. For reference, the default has been 10.0. If you frequently</p> <p>snaproll behind targets near walls and other tight objects with a large snapdist set you may run into problems.</p> <p>Usage:</p> <p>/stick set snapdist #, saves to the INI under  \"SnaprollDist\" and the  sections.</p> <ul> <li>New feature 'pauseonwarp'. Instead of breaking from stick like BreakOnWarp currently does, pauseonwarp will stop</li> </ul> <p>movement and pause until the target is once again within BreakDist range. Pause or Break, not both at the same time.</p> <p>saves to INI under  \"PauseOnWarp\" and command /stick toggle pauseonwarp.</p> <ul> <li>Tightened up breakonsummon formula to work more efficiently</li> <li>BreakSummonDist can now be set in game, not just via INI: /stick set summondist #</li> <li>AutoUW defaults to false instead of true.</li> <li>TurnRate minimum lowered from 12.0 to 1.0. if you want to turn slow, more power to you.</li> <li>Useback has been cleaned up and should work more effectively.</li> <li>delaystrafe should work fully as intended and not fail to strafe in some cases - please report any more problems</li> </ul> <p>with this as it may need more testing \\(thanks LrdDread\\)</p> <ul> <li>/stick id #, with self targeted, will work as intended \\(thanks dkaa\\)</li> <li>/stick hold, followed by /stick  will no longer reset incorrectly. if you were previously using</li> </ul> <p>/stick hold and then issuing a second /stick to make changes to active stick parameters while keeping the hold going</p> <p>this will no longer work.</p> <ul> <li>AutoPause with loose/true heading will no longer attempt to keep adjusting heading, and will halt turning when</li> </ul> <p>active \\(thanks LrdDread\\)</p> <ul> <li>Changed ${Stick.MovePause} TLO member to ${MoveUtils.MovePause} as it applies to more than stick.</li> <li>${Stick.Behind} will now also be accurate from the target's right arc, not just the left.</li> <li>Camp returns use their own floats now, so that TLO members such as ${MoveTo.Stopped} and ${MoveTo.CampStopped} are</li> </ul> <p>reflected separately.</p> <ul> <li>Changed the fullverbosity output for stick from Head\\(fast/true/loose\\) Water\\(yes/no\\) Hold\\(yes/no\\) to only display</li> </ul> <p>what is active i.e.:</p> <p>Head\\(true\\) ID\\(31337\\) Head\\(true\\) ID\\(31337\\) UW Head\\(true\\) UW MB \\(the MB is new, and reflects if MoveBack is enabled\\)</p> <ul> <li>/moveto loc y x z - will display the z loc in verbosity if used</li> <li>commands that shouldn't have a reason to stand up will not try to</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#development-90419-bug-fixes-uw-enhancement","title":"Development - 9.0419 - bug fixes, uw enhancement","text":"<ul> <li>Ending commands &amp; pausing the plugin should no longer cause the turn keys to be left on. Please let me know if there</li> </ul> <p>are still cases where the \"spinning\" happens as I may not have got them all.</p> <ul> <li>Fixed an issue with stucklogic attempting to get unstuck when it was not.</li> <li>Stucklogic when underwater should no longer almost always think it is stuck. The current formula may not be tight</li> </ul> <p>enough so you may run into cases where stucklogic will not get unstuck while underwater. This will need more</p> <p>tweaking in the future. For now, this prevents the endless spinning when underwater.</p> <ul> <li>Stucklogic will no longer try to jump when underwater if TryToJump is enabled.</li> <li>Added a new option AutoUW which will automatically turn on underwater face angle adjustments when fully</li> </ul> <p>underwater. This will affect moveto and stick commands when active and the plugin detects you are underwater and</p> <p>you have a target. This is enabled by default. If you frequently use /moveto or /makecamp while underwater</p> <p>and having a target unrelated to your destination, you may want to disable this option. Usage:</p> <p>/stick toggle autouw Saves to the INI as AutoUW under  and  sections.</p> <ul> <li>The /moveto loc command now accepts an optional Z axis. If you use /moveto loc Y X as before, it will behave as</li> </ul> <p>it always did. If you use /moveto loc Y X Z, it will now use the Z axis in a GetDistance3D comparison. \\(See Below\\)</p> <ul> <li>Moveto now uses GetDistance3D instead of GetDistance to process being in range of ArrivalDist in some cases. If you</li> </ul> <p>currently use a small arrivaldist you may need to increase the size if when arriving at the moveto destination your</p> <p>character keeps attempting to reposition themselves. This only applies to /moveto id or if the Z axis is supplied</p> <p>in the /moveto loc Y X  format. This will not affect precisey, precisex, or camp returns.</p> <ul> <li>Moveto now accepts the uw and underwater parameters, which will adjust your face angle based on the height and</li> </ul> <p>location of your current target. Note you cannot /moveto id uw, but you can /moveto uw id or */moveto id 12345</p> <p>uw*</p> <ul> <li>Loose/True heading anti-orbit angle value is now able to be configured by the user. It still defaults to 32.0f, so</li> </ul> <p>if everything works fine for you there is no need to change it. You may adjust the value with:</p> <p>/stick set allowmove # \\(e.g. /stick set allowmove 64.0 \\) Saves to the INI as AllowMove under  and  sections.</p> <ul> <li>TurnRate cap has been increased from 24.0 to 100.0, though I wouldn't suggest going that high.</li> <li>the pause parameter, and kb/mouse break/pause will now halt heading adjustments for loose/true heading (previously</li> </ul> <p>seen example: typing /stick pause and seeing your heading still finish the rotation afterward)</p> <ul> <li>gFaceAngle will now be reset by the plugin if moveto, circle, or stick is active (meaning you cannot use /face</li> </ul> <p>during those cases).</p> <ul> <li>Hitting turn left/right with breakonkb/mpause will once again allow you to continue turning</li> <li>UseBack defaults to false instead of true</li> <li>Added output for GetDistance and GetDistance3D to the /calcangle command. (Able to see the differences in distance</li> </ul> <p>to help set arrivaldist values based on your usage)</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#development-90412-major-release","title":"Development - 9.0412 - Major Release","text":"<ul> <li>All movement is now tied directly to the variables used by eqgame. This plugin now uses self-finding offsets, though</li> </ul> <p>they are no different than the current __RunWalkState type of offset provided in the main compile. This has</p> <p>allowed me to end the over-compensation needed to stop movement and prevent the shooting off into the distance that</p> <p>plagued the original version. In testing, movement is less choppy and more accurate than ever before. As an extra</p> <p>precaution, I also have made the applicable keyboard flags reflect being pressed \\(like MQ2's keybinds do\\) while any</p> <p>movement is active. YOU MAY NEED TO READJUST YOUR STUCKLOGIC SETTINGS</p> <ul> <li>Along with this comes a new feature, \"true heading\". This uses the actual turn left and turn right movement keys to</li> </ul> <p>perform heading adjustments. This is enabled by default as loose heading was before. If you do not wish to use</p> <p>this, you may /stick toggle alwaystruehead to turn it off for good. By using actual turning, the turnspeed</p> <p>multiplier and heading change increments are now 100% legit. Loose heading logic is still provided for those who</p> <p>want to go quasi-legit with a custom turn increment, and fast heading is the same as before. Note if you disabled</p> <p>loose heading because you want fast heading, you will now also need to disable true heading. When enabled (again, it</p> <p>is on by default) it will apply to stick and moveto both, not separately like loose heading works.</p> <p>Ways to use this:</p> <p>/stick ____ truehead _- usable inline with any other parameters /stick toggle truehead - toggle truehead for current command in process /stick toggle alwaystruehead - toggle using it always Saves to INI as TrueHeading under . This also saves to the character-specific setting if _savebychar is turned on.</p> <ul> <li>Added an optional strafe delay timer to prevent instant strafing when mobs turn for a short period of time such as</li> </ul> <p>quick spells, or gaining aggro without HoTT. Consider this, properly configured, a replacement to the old nohott</p> <p>and a fix to an issue reported by LrdDread.</p> <p>Ways to use this:</p> <p>/stick toggle delaystrafe - turns the delay for strafe-based movement \\(pin, !front, front, behind\\) on or off /stick set strafemindelay # - sets the minimum amount of time you wish to delay before strafing \\(in miliseconds\\). The default is 1500 \\(1.5 seconds\\). /stick set strafemaxdelay # - sets the maximum amount of time you wish to wait before strafing \\(in miliseconds\\). The default is 3000 \\(3 seconds\\). Saves to the INI under  as DelayStrafe, and StrafeMinDelay / StrafeMaxDelay.</p> <ul> <li>The size of the arc for /stick !front is now configurable by the user. You may use:</li> </ul> <p>/stick set !frontarc # - Valid ranges 260.0 to 1.0. The default is 135.0 and if you do not adjust it, it will continue to behave like normal. Saves to the INI as NotFrontArc under . This also saves to the character-specific setting if savebychar is turned on.</p> <ul> <li>Implemented optional arc randomization for pin/!front/behind. You may enable this with /stick toggle randomize. My</li> </ul> <p>formula is pretty basic so it will not be anything special yet, but its a foundation for improvement in the next</p> <p>release down the road. This saves to the INI as RandomArc under , and if you have fullverbosity enabled</p> <p>then behind/!front will also output their arc values to the chatwnd.</p> <ul> <li>Added a command, /calcangle, which dumps the value moveutils uses to determine angular dist (useful if you want to</li> </ul> <p>configure your !front arc) or know what the randomization values represent.</p> <ul> <li>When rewriting loose heading I had inadvertently disabled a feature of the original MoveUtils. With loose heading</li> </ul> <p>enabled: when very close to your target it would walk backwards to stick instead of turning to face the target,</p> <p>moving into stick position, and turning to face the target again. This is now enabled by default. I noticed in</p> <p>some cases it can end up causing your character to move in crazy-eight style patterns, and adjusted the math to</p> <p>correct this. Using moveback in your stick commands overcomes that problem with ease, but if you do not like to</p> <p>use moveback and/or run into that problem often, please report a solid way of recreating it here and then consider</p> <p>turning it off based on your play style. Unlike the old moveutils, I have made this feature optional.</p> <p>Ways to use this:</p> <p>/stick toggle useback - turns the backwards walking on and off /stick set backupdist # - how close to the target you can be to use backward walking. The smaller the better. This defaults to 10.0 like the old moveutils Saves to INI as UseBackward and BackupDist under  </p> <ul> <li>Snaproll now uses GetDistance3D to prevent certain bugs related to being unable to get in range of a target on large</li> </ul> <p>slopes. I have left the old line in place so if you have any issues with snaprolls, you may uncomment the old line</p> <p>and comment out the new one \\(fGetSnapDist around line 4100\\)</p> <ul> <li>Snaproll now sets the final heading adjustment before handling control back over to normal stick.</li> <li>AutoPause now has an optional message output, so you can have greater awareness of why your character is suddenly</li> </ul> <p>standing still doing nothing. You may enable/disable this with /stick toggle autopauseoutput. If this is enabled,</p> <p>it will not respect totalsilence so you will need to configure this on its own. This saves to the INI as</p> <p>AutoPauseMsg under .</p> <ul> <li>MoveTo now has two new BreakOn options \\(my implementation of a suggestion from dkaa\\). They are different forms of</li> </ul> <p>detecting aggro during a /moveto that will halt the command. This mostly assists macro writers in being able to</p> <p>stop moving to a location and handle the event of getting aggro during the move.</p> <p>Ways to use this:</p> <p>/moveto toggle breakonaggro - this will halt the moveto if you gain aggro \\(crossed-swords indicator\\) /moveto toggle breakonhit - this will halt the moveto if you are swung at \\(both contact or miss\\), if you want to keep moving until something is actually trying to hit you. I have added support for all three types of hitmodes, though if you use the \"number only\", I am only parsing for misses not the numerics . If you wish to use this, you should consider switching to abbreviated or normal. Saves to the INI under BreakOnAggro and BreakOnHit under .</p> <p>In the event either of these trigger:</p> <ul> <li>A new TLO member, ${MoveTo.Broken} will show as true, so that you may see if the event fired. This will not reset to false until the next time you issue a /moveto command. - An output message will display to the chatwnd \\(if you do not have _totalsilence_ enabled\\)</li> <li>Fixed a problem with the /stick pin formula on one side of the target not positioning correctly.</li> <li>Camp returns and moveto's now resume after pausing the plugin and unpausing with /stick pause|unpause.</li> <li>Mousepause will no longer spam if the pause flips active with only a makecamp setup and attempting to auto-return.</li> <li>Makecamp will no longer try to return while mouselook movement is active. Once the return begins and you attempt to</li> </ul> <p>use the mouse though it still will not let you, so if you use mouselook movement often consider turning on</p> <p>mousepause or breakonmouse.</p> <ul> <li>BreakOnGate has been switched from OnIncomingChat to a Blech event. Please report if this does not work as intended.</li> <li>Bard detection has switched from string parsing to numeric comparison. It will now only check once every time you</li> </ul> <p>type a command \\(to support switching to shrouds with the plugin loaded\\) instead of OnPulse. If you switch to a</p> <p>shroud with stick active,  you will need to end the command and restart it to</p> <p>detect the class change.</p> <ul> <li>ReturnNoTarget has been renamed to ReturnHaveTarget, as the naming incorrectly implied the opposite of what it</li> </ul> <p>actually does. The command is also updated: /makecamp toggle returnhavetarget.</p> <ul> <li>Loose\\(yes/no\\) output in fullverbosity has been changed to Head\\(true/loose/fast\\)</li> <li>MakeCamp Leash and Delay value output has been slightly modified.</li> <li>Fixed some cases where BreakOnWarp and BreakOnSummon would incorrectly fire \\(mainly due to mpause/mousepause\\) and</li> </ul> <p>cleaned up the logic.</p> <ul> <li>Removed nohott \\(AwareAggro in the INI\\) as it has been nothing but problematic.</li> <li>Removed the MQ2Melee /mutils output</li> <li>Renamed the keybinds, so you may want to cleanup your MacroQuest.ini after loading this.</li> <li>Nerfed the ability to /stick id # to your mount.</li> <li>Nerfed the ability to /makecamp player to your mount.</li> <li>Major plugin logic overhaul, code cleanup, \"best practices\" and general bug fixes.</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-90314","title":"Stable - 9.0314","text":"<ul> <li>Fix for strafe not properly turning off in some cases, most commonly if you got on HoTT \\(thanks rswiders\\)</li> <li>nohott option will no longer process when it is enabled and you actually do have the HoTT LAA active and showing</li> </ul> <p>you on HoTT \\(thanks fearless\\)</p> <ul> <li>nohott should be less aggressive and less prone to spinning endlessly (relates to both fixes above and LrdDread's</li> </ul> <p>post a while back)</p> <ul> <li>Bug Fix for BreakOnSummon \\(= != ==\\)</li> <li>Bug Fix for Debug options</li> <li>All MQ2Melee exports are now in the release, there will no longer be 2 separate versions of MoveUtils 9.x to worry</li> </ul> <p>about if you are using my changes to MQ2Melee.</p> <ul> <li>Misc. code cleanup and dewindefification</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-90225-minor","title":"Stable - 9.0225 - minor","text":"<ul> <li>Fix for verbosity level output bug that has been present since the change to the way this works in November.</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-90110-minor","title":"Stable - 9.0110 - minor","text":"<ul> <li>/makecamp Y X and /circle y x are no longer valid inputs. this may break some macros.</li> <li>Added new syntax: /makecamp loc Y X and /circle loc Y X as replacements. Please report if any problems or odd</li> </ul> <p>behavior due to this change.</p> <ul> <li>TurnHalf is now functional again for stucklogic. Saves to ini or toggled via command line: /stick toggle turnhalf</li> <li>Snaproll left/right math corrected by deadchicken</li> <li>Added ${MoveUtils.Version} TLO member by request</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#stable-90101-fixestlo","title":"Stable - 9.0101 - fixes/TLO","text":"<ul> <li>Most problems reported should be fixed. Get this version and delete your ini file. Anyone that was using loose</li> </ul> <p>heading and had issues they should be corrected now as well, as long as you delete your INI file.</p> <ul> <li>Corrected a bug with camp return and moveto.</li> <li>Corrected a bug with makecamp return and altreturn if too close to camp.</li> <li>Camp return scattering should once again function as deadchicken intended.</li> <li>CampRadius now stores to the character section of the INI file.</li> <li>Adjusted the default values for stucklogic a bit \\(not the only reason to delete the ini\\)</li> <li>Returned keypress down, up and down, up, down as not having it causes characters to run off into the abyss in some</li> </ul> <p>cases.</p> <ul> <li>Added New TLO's:</li> </ul> <p>${MakeCamp.ReturnNoAggro} - bool ${MakeCamp.ReturnNotLooting} - bool ${MakeCamp.ReturnNoTarget} - bool ${MakeCamp.Scatter} - bool ${MakeCamp.Bearing} - float ${MakeCamp.ScatDist} - float ${MakeCamp.ScatSize} - float ${MoveTo.ArrivalDist} - float ${MoveTo.ArrivalDistY} - float ${MoveTo.ArrivalDistX} - float ${MoveTo.UseWalk} - bool ${MoveUtils.PulseCheck} - int ${MoveUtils.PulseUnstuck} - int ${MoveUtils.DistStuck} - float ${MoveUtils.TryToJump} - bool === Beta - 8.1227 - bug fixes === note: this was a bad release, if you are still using it, delete it.</p> <ul> <li>Cleaned up loose heading function to not set heading to illegal values</li> <li>Removed the excessive double/float conversions. Circle radius and gLookAngle should be the only double math used</li> </ul> <p>anymore.</p> <ul> <li>Fix for leash bug reported by Kroak</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81224-tweaks","title":"Beta - 8.1224 - tweaks","text":"<ul> <li>snaproll now has a distance check so if it is close enough to the destination it will not try to roll again a very</li> </ul> <p>small amount in place. snaproll moves 10 units away, and this new distance check is 5 units.</p> <ul> <li>snaproll will now accept destination as a parameter. Usage:</li> </ul> <pre><code>/stick snaproll rear\n</code></pre> <ul> <li>\\(normal behavior and not necessary, you can use _/stick snaproll_ as before\\)</li> </ul> <pre><code>    /stick snaproll face\n\n-   front of target\n\n\n    /stick snaproll left\n\n-   snaproll to the target's right shoulder\n\n\n    /stick snaproll right\n\n-   snaproll to the target's left shoulder\n</code></pre> <ul> <li>If enabled...</li> <li>stucklogic will no longer try to jump when levitating</li> <li>stucklogic will no longer try to jump if not moving</li> <li>stucklogic will now work if using strafing</li> <li> <p>stucklogic will now be used whenever stick is active, instead of not if you are within stickdist (except the</p> <p>normal skip conditions: summoned, stunned, snared, rooted)</p> </li> <li> <p>Autopause will now apply to rooted</p> </li> <li>No commands will try to move if rooted</li> <li>Fixed pin/!front/rear errors when snared</li> <li>Changed DoMovement to not press up and down again</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81221-deadchicken-stucklogic-rewrite","title":"Beta - 8.1221 - deadchicken stucklogic rewrite","text":"<ul> <li>Stucklogic has gotten a major overhaul - **It is highly recommended that you delete your old INI and re-set / copy</li> </ul> <p>over any values you wish to keep not related to stucklogic**.</p> <ul> <li>Stucklogic uses new values for a new formula written by deadchicken. This formula calculates your pulse averages based on a table, with greater accuracy than before. The new values are configured as such:</li> </ul> <pre><code>/stick set pulsecheck #\n</code></pre> <ul> <li>pulsecheck defaults to 4</li> <li>this value is sort of what \"stuckcheck\" was before.</li> <li> <p>it serves as the size of your pulse history to be used to calculate your average movement distance. the largest</p> <p>you can set this value to is 32 \\(defined by MAXRINGSIZE\\). The higher you set this number, the less often</p> <p>stucklogic would misfire \\(so if you are getting the \"jittery\" problem you will want to increase this value\\).</p> <p>This also means it will take longer to know that it is stuck, so if you are getting stuck and not responding</p> <p>fast enough, you would do the opposite and lower this value.</p> </li> </ul> <pre><code>    /stick set pulseunstuck #\n\n-   pulseunstuck defaults to 5\n-   this value is new\n-   this is the amount of pulses you have successfully moved forward before hard-forcing stucklogic to be considered\n    unstuck. this serves the purpose in that if you were stuck for 20 pulses, your stuck counter would normally try\n    to move forward for 20 more pulses before considering itself free. there was some handling for this that had\n    some issues so now you can set a value such as this one to force a faster \"im unstuck\" process.\n-   the higher your framerate, the higher you want this value. 5 may not be enough on better computers and you may\n    end up getting restuck again, it will look like what we are calling \"snaking\". If you notice yourself \"snaking\"\n    then this would be the first value to try increasing.\n\n\n    /stick set diststuck #.##\n\n-   diststuck defaults to 0.5\n-   this is similar to before in that it is the amount of distance you need to have moved versus your average pulse\n    rate in order to not be stuck\n-   this value should properly scale for all speeds of computers. you may want to set it higher or lower, play with\n    it and find what works best (and please let us know!!), but keep in mind setting this value to something tiny\n    such as 0.001 as we did in the old logic should no longer be necessary. deadchicken has determined that mindset\n    was only working because of some incorrect math in the formulas. try to stick with more logical values and then\n    reporting back your results would be appreciated.\n</code></pre> <ul> <li>'''The following needs more testing/information:</li> <li>stucklogic behavior when snared</li> <li>stucklogic behavior underwater</li> <li>stucklogic behavior when mounted \\(all different speeds of mounts\\)'''</li> <li>Please note the old values and logic behind setting them no longer applies. I've changed their names in the INI so</li> </ul> <p>that no one can mistakenly use crappy settings because they did not read any of this.</p> <ul> <li>Added jumping support, which will try to jump to overcome obstacles. For as simple as this sounds, this will prevent</li> </ul> <p>you from getting stuck on small obstacles the majority of the time. It works awesome, to the point we had to disable</p> <p>it to test a lot of the other aspects of the new formulas. This defaults to true, so if undesired you may disable</p> <p>this with /stick toggle trytojump \\(or set on/off\\)</p> <ul> <li>Stucklogic now uses GetDistance3D instead of GetDistance to compare movement between pulses, so changes in z axis</li> </ul> <p>should be factored into movement. This should correct the bug with stucklogic firing when walking up and down</p> <p>inclines, but please report if it is working as intended or not. It was working correctly in our testing.</p> <ul> <li>Rewrote a lot of the main function to reduce the number of evaluations processed per pulse by 30% (made up figure,</li> </ul> <p>it was a large portion)</p> <ul> <li>Bards can once again use AutoPause \\(all aspects except casting spells\\)</li> <li>/stick snaproll should now be 100% accurate and no longer overshoot the target due to getting stuck along the way.</li> </ul> <p>Thanks deadchicken for his camp scatter math which worked perfectly for this formula too. Please report any cases</p> <p>where it is having problems, but I hope there should be none now.</p> <ul> <li>Switching targets mid-stick will no longer trigger stucklogic or breakonwarp. If you target a mob that is out of</li> </ul> <p>server-update radius, breakonwarp can still fire once you receive accurate location data for the target. Cross-map</p> <p>targeting stuff is bad, let alone with stick still on.</p> <ul> <li>breakdist may now be set in game with /stick set breakdist #.##</li> <li>Added a new feature to MakeCamp courtesy of deadchicken: scattering.</li> </ul> <p>This is a bit complex but when configured properly it is amazing. The idea behind this is that instead of returning to a random location within your camp radius, you can define a specific bearing, distance, and scatter radius from the center of your camp. This way you could configure your characters to return to specified areas all the time. The INI supports values on a character by character basis as well, so you could configure your tank to return to the center, your casters to return behind the tank, and your melee to return to the sides of the tank.</p> <ul> <li>To configure the values the commands are:</li> </ul> <pre><code>/makecamp toggle usescatter\n</code></pre> <ul> <li>Turn on/off scattering</li> </ul> <pre><code>    /makecamp set bearing #.##\n\n-   set scatter bearing\n\n\n    /makecamp set scatsize #.##\n\n-   set scatter radius\n\n\n    /makecamp set scatdist #.##\n\n-   set scatter distance\n</code></pre> <ul> <li>Leash length can now be set to &gt;= camp radius, instead of just &gt;</li> <li>AltCamp now retains its own radius size.</li> <li>Added new MakeCamp TLO's relating to the distance from your camp.</li> <li>${MakeCamp.CampDist} - float - distance from your current camp \\(0.00 if makecamp is off\\)</li> <li>${MakeCamp.AltCampDist} - float - distance from your altcamp \\(0.00 if altcamp has not been established\\)</li> <li>${MakeCamp.AltRadius} - float - radius size of your altcamp  </li> <li>MoveTo now allows for ArrivalDist to be set as low as 1.0.</li> <li>MoveTo now has the option to turn on walk when closing in on the arrival destination to maximize precision. This</li> </ul> <p>defaults to true so if you do not want to use this, then /moveto toggle usewalk.</p> <ul> <li>Autosave \\(save to INI when issuing a _set_ or _toggle_ parameter\\) now defaults to true.</li> <li>Added savebychar as optional for the INI. Defaults to true as that was the old behavior. Use */stick toggle</li> </ul> <p>savebychar* to disable saving/loading character-specific settings.</p> <ul> <li>Added optional INI value  \"DisregardMe=true\". This allows you to use character-specific settings but</li> </ul> <p>ignore them on a specific character and use defaults instead. Manually add this line for the characters you wish to</p> <p>use defaults on, and leave it off \\(or you could put =false, but no need\\) for those you wish to continue using</p> <p>specifics.</p> <ul> <li>Fixed a crash bug related to using /stick id 2mooks. The \"id\" parameter now enforces all numerics. strtoul ftw.</li> <li>Fixed a bug with stick 'always' not processing mpause/mousepause/breakonkb/breakonmouse if you had a target when you</li> </ul> <p>issued the command, until you had no target and got a new target again.</p> <ul> <li>Fixed a small bug with min/max delays requiring 126 instead of 125 difference.</li> <li>Fixed a bug where if you unloaded the plugin mid-command walk would be left on.</li> <li>Fixed a bug with breakonsummon firing the first time you issued a command.</li> <li>Disabled advancedautopause as I'm out of ideas.</li> <li>checkbard has been removed \\(forever\\).</li> <li>Stripped /followpath from this plugin. Use MQ2AdvPath instead.</li> <li>Other new set / toggles:</li> <li>/circle set circleradius #.## - set radius on the fly</li> <li>/makecamp set leashlength #.## - set leashlength on the fly</li> <li>/makecamp set campradius #.## - set camp radius on the fly</li> <li>/makecamp toggle leash - toggle leash on and off</li> <li>Cleaned up the debug command output.</li> <li>Cleaned up the help command output.</li> <li>Added new help command format to display detailed information on the plugins settings as it has grown large.</li> </ul> <p>\\(_/stick help settings_\\)</p> <ul> <li>All options that could previously be toggled or previously be set on/off now may be used both ways. So for example</li> </ul> <p>autopause, you have the option of doing:</p> <pre><code>/stick toggle autopause\n/stick set autopause off\n/stick set autopause on\n</code></pre> <p>Use the \"help settings\" parameter for more information. === Beta - 8.1205 - deadchicken polar math ===</p> <ul> <li>Corrected the bugs with BreakOnSummon that would cause occasional misfires in /stick, and consistent misfires with</li> </ul> <p>/circle. This feature now works as intended \\(and its very useful in gm-detection detection\\).</p> <ul> <li>deadchicken has generously offered up his polar-math code for camp returns, which is much smoother, more seamless,</li> </ul> <p>and far more accurate in generating a return to camp. This also makes /makecamp player work much better. Many</p> <p>thanks to deadchicken for this simple yet elegant contribution to the plugin.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81202-makecamp-cleanup","title":"Beta - 8.1202 - makecamp cleanup","text":"<ul> <li>makecamp return delay and mpause/mousepause resume delay are now on separate values. They are now able to be</li> </ul> <p>configured independently via commandline or within the INI.</p> <ul> <li> <p>Important: The old ini values no longer apply, so if you use non-default settings you need to adjust them again</p> <p>based on the following</p> <ul> <li>\\(you can use any command, its not restricted to _/makecamp_\\)</li> <li>To set the delays for camp return</li> </ul> </li> </ul> <pre><code>    /makecamp set campmindelay #.##\n\n    /makecamp set campmaxdelay #.##\n\n-   -   To set the delays for mpause/mousepause return:\n\n\n    /makecamp set pausemindelay #.##\n\n    /makecamp set pausemaxdelay #.##\n</code></pre> <ul> <li>You will now need to use different INI values for these delays.  \"MinDelay\" and \"MaxDelay\" no longer do</li> </ul> <p>anything.</p> <ul> <li>For mpause/mousepause:</li> </ul> <pre><code>[Defaults]\nPauseMinDelay=125\nPauseMaxDelay=250\n</code></pre> <ul> <li>For makecamp return times:</li> </ul> <pre><code>[MakeCamp]\nMinDelay=250\nMaxDelay=500\n</code></pre> <ul> <li>The ${MakeCamp.MinDelay} and ${MakeCamp.MaxDelay} members now refer to the campmindelay and campmaxdelay settings</li> </ul> <p>only</p> <ul> <li>There are new TLO members for the pausemindelay and pausemaxdelay settings: ${MoveUtils.PauseMinDelay} and</li> </ul> <p>${MoveUtils.PauseMaxDelay}</p> <ul> <li>This change has allowed for the return of inline min/max delay for makecamp, you can use it as it was before.</li> </ul> <p>Examples:</p> <pre><code>/makecamp mindelay 150 maxdelay 500\n/makecamp on maxdelay 500\n/makecamp on mindelay 150 maxdelay 500\n</code></pre> <ul> <li>There is now the ability to retain an \"altcamp\" location stored. Right now this is only used for one purpose, being</li> </ul> <p>able to return to the altcamp location. This is very barebones at the moment, and works as follows</p> <ul> <li>You go to a location and turn on a camp \\(ie /makecamp on\\)</li> <li>You turn off your camp \\(ie /makecamp off\\)</li> <li>The location that was your camp is now the altcamp location.</li> <li> <p>You now have two options to utilize the old camp:</p> <ul> <li>At any time, as long as you remain in the same zone, you can /makecamp altreturn. This will return you to</li> </ul> <p>the altcamp location, aka the location of your camp that is now off. This works how makecamp return with no</p> <p>camp active tried to work, but without the bugs that existed with it.</p> <ul> <li>You move to another location and setup a new camp \\(ie _/makecamp on_\\). With this new camp active, you can</li> </ul> <p>/makecamp altreturn. This will turn OFF your current camp \\(so as not to get stuck trying to stay there\\)</p> <p>and move to the altcamp location.   * Note: You cannot altreturn until you've setup a camp at least once in the current zone.   * Note: The Altcamp values reset if you die or zone.   * Note: You cannot altreturn if currently using a player-camp.</p> </li> <li> <p>There are two new TLO members that keep track of the altcamp location. If they are both == 0.0 then you do not have</p> </li> </ul> <p>an altcamp setup. They are ${MakeCamp.AltAnchorX} and ${MakeCamp.AltAnchorY}</p> <ul> <li>The \"on\" parameter for /stick may now be used anywhere inline again, since removing that broke popular macros like</li> </ul> <p>RH. Please note the on parameter is useless in this version of MoveUtils. In the original version it was able to</p> <p>overcome a bug with breakonwarp \\(which is fixed\\), so now it does nothing that any other /stick parameter does not</p> <p>do. This is only for retro-support, using it in your macros is bad practice.</p> <ul> <li>If you use precisey or precisex as a parameter in your /moveto command, it will now display your YDist or</li> </ul> <p>XDist values in the output \\(sorry for the long delay in this request\\)</p> <ul> <li>Added an experimental features for those of you bards that are having the \"jittery\" problem when StuckLogic is</li> </ul> <p>enabled. Following the suggested quickfix earlier in the thread, if you enable a new option checkbard, your</p> <p>speedmultiplier is divided by two if you are a bard class. This only applies to bards, not everyone with selos. This</p> <p>feature is disabled by default, so if you wish to test it, use \\(_/stick set checkbard on\\|off_ then _/stick save_\\).</p> <p>This saves to the ini under  \"CheckBard\"</p> <ul> <li> <p>Turning this on as a non-bard will not do anything, so turning it on for your bard alt and loading up another</p> <p>character will not affect your non-bard.</p> </li> <li> <p>If this solution works, I could work on detecting if selo's is present and open this to all classes, but I think</p> <p>it would be better to find out what the problem in the stucklogic formula is, and try to fix that instead. If</p> <p>you wish to help, please read a few posts back about the formula and issues.</p> </li> <li> <p>For those of you who wish to return to camp when you are outside of the camp radius, regardless of if you have a</p> </li> </ul> <p>target or aggro, there is a new option ReturnNoTarget. The previous new feature ReturnNoAggro will ignore target as</p> <p>well, but only return if you do not have aggro. ReturnNoTarget works with ReturnNoAggro OFF, and will return when</p> <p>you exceed the camp radius, target or not. Thanks to Muley for the suggestion. Usage \\(**/makecamp enforced**\\):</p> <pre><code>/makecamp set returnnotarget on|off\n</code></pre> <ul> <li>This saves to the INI</li> </ul> <pre><code>[MakeCamp]\nReturnNoTarget=on\n</code></pre> <ul> <li>Identified a bug with snaproll where it would not stop moving/readjust heading if stucklogic kicked in or if the</li> </ul> <p>player moved with mpause/mousepause in the middle of the roll.</p> <ul> <li> <p>I've taken steps to correct the issue. If you are close to the target, the problem should be gone unless your</p> <p>snaproll runs you into a wall. If you are far away from the target, there is a chance your roll will still</p> <p>continue on beyond the normal distance \\(due to stucklogic or mousepause/mpause\\) but it will now halt if it</p> <p>travels the same distance beyond the target that you were when you issued the command.</p> </li> <li> <p>The problem would still exist if you snaprolled from 100 units away, got stuck along the way, you will run 100</p> <p>units beyond the mob before snaprolling. I'm working on a better formula to address this problem.</p> </li> <li> <p>In the meantime, snaproll still works as it did before, just with more checking and correction of</p> <p>heading/movement. Shortrolls should have little to no problem.</p> </li> <li> <p>This feature will be improved in the future.</p> </li> <li> <p>Cleaned up the help command output to reflect new settings that were missing, or settings that no longer applied. A</p> </li> </ul> <p>few of the newer ones may still be missing.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81123-loose-enhancement","title":"Beta - 8.1123 - loose enhancement","text":"<ul> <li>Rewrote loose heading to be calculated and adjusted within this plugin, using a fixed turn increment</li> <li>Note: the maximum rate you turn when holding the right/left keys down is 16.0, and hence the default</li> <li>This turn increment can be configured by the user for any number within 12.0 and 24.0</li> <li>Lower than 12.0 will cause awkward stuttering</li> <li>Higher than 24.0 is noticeable hax and you may as well use fast heading</li> <li>To configure in game, you may use /stick set turnrate 12.0<ul> <li>If you use a value out of bounds, it will not change the rate</li> </ul> </li> <li>To configure in the ini, you may use  \"TurnRate\" section<ul> <li>If you use a value out of bounds, it will use the plugin default of 16.0 and resave this value to your ini</li> </ul> </li> <li>Adjusted /stick snaproll to use this new math, and improved the calculations to determine when to roll so it</li> </ul> <p>should no longer roll early</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81119-minor","title":"Beta - 8.1119 - minor","text":"<ul> <li>Removed ${Stick.Aggro} TLO</li> <li>Added ${MoveUtils.Aggro} TLO</li> <li>this TLO now functions any time you have a target instead of only when /stick is active</li> <li>This check is still calculated the same way, it is not \"true\" aggro detection</li> <li> <p>This checks your target's heading relative to your heading via angular distance math. If you are facing your</p> <p>target and your target is facing you, you are aggro. If your target is facing you and you are facing AWAY from</p> <p>your target, the math will show your aggro as false</p> </li> <li> <p>ideally this is still only worth using if you are facing your target \\(which _/stick_ always did\\) and not in any</p> <p>other case * By request, added /stick snaproll \\(thanks Agripa for the name, which is based off flight terminology\\)   * This command is designed to be used like /stick behind   * This runs in a straight line to the rear arc of the target based on your targets heading, spins in place, and</p> <p>then turn on /stick behind automatically afterwards</p> </li> <li> <p>This uses and enforces loose heading/stick, so it will not snap your heading instantly</p> </li> <li> <p>I have not incorporated this into NoHoTT checking so either use this (by detecting ${MoveUtils.Aggro} is true</p> <p>have your macro issue the command) or nohott but dont try to use both together as they do opposite things * By request, added an option to /makecamp, ReturnNotLooting, which will not return to camp automatically until you</p> </li> </ul> <p>no longer have a loot window up \\(or manually issued a _/makecamp return\\)_</p> <ul> <li>This defaults to false so everything behaves as you are familiar with</li> <li>If you wish to use this, it can be set up as follows<ul> <li>  \"ReturnNotLooting\" on/off in the ini</li> <li>/makecamp set returnnotlooting </li> </ul> </li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81116-minor","title":"Beta - 8.1116 - minor","text":"<ul> <li>Fix for /makecamp no parameters</li> <li>Added status parameter which dumps the status of the command used, or status all which dumps complete status of</li> </ul> <p>the plugin</p> <ul> <li> <p>/moveto status will only display info related to moveto, circle status only to circle, and makecamp status</p> <p>only to makecamp</p> </li> <li> <p>all for every command will dump status for every command as well as all other plugin settings</p> </li> <li>These will display regardless of if you have totalsilence set to on</li> <li>Example:</li> </ul> <pre><code>    /stick status\n\nwill output\n</code></pre> <pre><code>MQ2MoveUtils Current Status\nStick: Status(on) Dir(Behind) Dist(10.0) Mod(0.0) Mod%(0.0) Loose(yes) Water(no) MoveBack(yes) Hold(yes) Always(yes)\nStick: Holding to ID(1115) Name(Guide Peyote)   &lt;---only displays if holding\nStick Options: AlwaysLoose(on) BreakOnWarp(on) BreakDist(300.00) BreakOnGate(on)\n</code></pre>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81111-moveto-enhance-misc","title":"Beta - 8.1111 - moveto enhance / misc","text":"<ul> <li>By request, added new parameters to /moveto loc, precisey and precisex</li> <li> <p>When used these will move in the general direction of the loc specified and stop moving when it gets in the</p> <p>acceptable arrival distance for that location, disregarding the other</p> </li> <li> <p>This is to be used as a trailing paramater to /moveto loc</p> </li> <li>Using it with /moveto id or the new /moveto yloc/xloc will likely cause problems so don't do it</li> <li>Usage example:</li> </ul> <pre><code>    /moveto loc -100 -200 precisey\n\n-   will head towards -100 -200, but stop when it gets within acceptable Y arrival distance even if your loc is -100\n    -500\n-   This is not the same as new command */moveto yloc/xloc* in that it does head in the desired direction first\n    until it reaches the \"precise\" desired\n-   The other command below will beeline with no regard to the other coordinate\n</code></pre> <ul> <li>Added two new settings to support the precisey and precisex trailing parameters</li> <li>These also save to the ini under  as \"ArrivalDistY\" and \"ArrivalDistX\"</li> <li>Usage:</li> </ul> <pre><code>/moveto set xdist 10.00\n/moveto set ydist 10.00 (default is 10, can use any .2 digit float)\n</code></pre> <ul> <li>Changed INI setting for  \"ArrivalDistance\" to \"ArrivalDist\"</li> <li>Added /moveto yloc  and /moveto xloc  which will use your current x\\(yloc\\)/y\\(xloc\\) and beeline for the</li> </ul> <p>x\\(xloc\\) or y\\(yloc\\) you requested</p> <ul> <li>Included fix for /moveto dist reset problem reported by KFH</li> <li>By request, added a new option for makecamp returning only if not aggro</li> <li> <p>currently if you have a camp setup makecamp will return to camp if you are outside of the camp radius and do not</p> <p>have a target. this is still the default, so if you like this, you don't have to do anything</p> </li> <li> <p>if you wish to change this so that you will return only if you are not aggro, with or without a target, you can</p> <p>enable this using:</p> </li> </ul> <pre><code>    /makecamp toggle returnnoaggro\n\n-   this will also save to the ini under \\[MakeCamp\\] \"ReturnNoAggro\" (on/off)\n</code></pre> <ul> <li>Makecamp returning on its own \\(meaning any case other than typing in _/makecamp return_\\) will no longer display the</li> </ul> <p>\"Arrived at /moveto location\" message</p> <ul> <li>Makecamp returning on its own will no longer display halt/pause messages when using breakonkb/mouse or</li> </ul> <p>mpause/mousepause since it continually will retry until camp is turned off</p> <ul> <li> <p>using /makecamp return still will display the messages</p> </li> <li> <p>Makecamp returning on its own now respects mpause/mousepause and will not try to fight you for returning to the camp</p> </li> <li>Moved toggle and set parameters to their own function</li> <li>mindelay &amp; maxdelay can no longer be used inline as a parameter since they apply to multiple things and this created</li> </ul> <p>some problems. instead they are now adjusted with the set parameter \\(any command\\)</p> <ul> <li> <p>the minimum for mindelay is still 125, so if you try to set this lower it will default to the plugin</p> <p>default \\(500\\)</p> </li> <li> <p>the minimum value for maxdelay is still mindelay+125, so if you try to set this lower it will set to current</p> <p>mindelay+125</p> </li> <li> <p>Usage:</p> </li> </ul> <pre><code>/stick set mindelay 125\n/circle set maxdelay 250\n</code></pre> <ul> <li>Updated AutoSave to only save if you adjust a setting with toggle or set instead of every time a command is</li> </ul> <p>typed since that makes more sense and is less resource intensive</p> <ul> <li>Added rswiders' change for bRunNextCommand = true for the 4 main commands \\(followpath still getting overlooked\\)</li> <li>Lowered default camp radius from 100 to 40</li> <li>LeashLength can now be set = CampRadius in the ini instead of CampRadius+10</li> <li>Made a new ResetCamp function to reset camp values similar to EndPreviousCmd for the other 3 commands</li> <li>Entering valid parameters followed by an invalid parameter for /stick, /moveto and /circle will no longer output</li> </ul> <p>help and continue trying the command, the command will now fail</p> <ul> <li>turning a command off or typing a new command that resets a previous command with loose heading will halt the loose</li> </ul> <p>heading from trying to finish turning. same applies when using loose moveto when you have arrived at your</p> <p>destination, it will no longer continue turning once it has arrived \\(previously only noticeable in short moveto's\\)</p> <ul> <li>/stick toggle spinme for use with /stick front has been removed. This is now set with */stick toggle</li> </ul> <p>nohottfront* and saves to the ini under  \"AwareNotAggro\" \\(on/off\\) so you only have to type it once if you</p> <p>wish to use it</p> <ul> <li>To stay in line with this change, previous \"AggroAwareness\" \\(on/off\\) in the ini renamed to \"AwareAggro\" (*value for</li> </ul> <p>the nohott option on/off*)</p> <ul> <li>Adding on to the ability to /stick set stucklogic on/off, you can now set more values. \"stuckcheck #\" and</li> </ul> <p>\"stuckdist #\", i.e.:</p> <pre><code>/stick set stuckdist 0.001\n/moveto set stuckcheck 8\n</code></pre> <ul> <li>StuckDist, StuckCheck, and TurnIncrement can no longer be set to zero in the ini or via command. If you want to</li> </ul> <p>disable stucklogic use /stick set stucklogic off instead</p> <ul> <li>You are now able to disable stucklogic's check for if you are facing exactly halfway away from your destination to</li> </ul> <p>start turning back the same way it was turning from</p> <ul> <li>This is currently only in the INI but will soon be added to the set parameter</li> <li>  \"TurnHalfway\" \\(on/off\\)</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81101a-ctd-fix","title":"Beta - 8.1101a - CTD fix","text":"<ul> <li>fix for ctd</li> <li>more checks added to prevent future ctd (*thanks ieatacid &amp; dkaa for help finding the reason: dont call ExecuteCmd</li> </ul> <p>to press keys if not in game*)</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81030-minor-bugfix","title":"Beta - 8.1030 - minor bugfix","text":"<ul> <li>Keybinds will no longer interfere with normal gameplay if a command is not active (*or if stick always is on but you</li> </ul> <p>do not have a current npc target*)</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81029d-sitstand-bug-finally-gone","title":"Beta - 8.1029d - sit/stand bug finally gone","text":"<ul> <li>Changed all references of GetCharInfo to check pCharSpawn \\(which we determine is valid first\\)</li> <li>Fixed circle 'alwaysccw'/drunk/etc &amp; stick alwaysloose values to not reset after one usage</li> <li>${Stick.Aggro} TLO now returns TRUE/FALSE regardless of if you use the nohott option *(true is determined if you are</li> </ul> <p>within the front arc of the target you are facing)*</p> <ul> <li>Changed the method of standing up from ExecuteCmd\\(sit\\_stand\\) key to EzCommand\\(\"/stand\"\\) to play nice with</li> </ul> <p>MQ2Melee and not offer an opportunity for this plugin to force you to sit down under any circumstance</p> <ul> <li>Determined that /circle and breakonsummon math \\(uses breakonwarp math\\) do not play nice together</li> <li>This only affects /circle so don't use breakonsummon with circle for the time being</li> <li>If you are good with math / angles / etc. \\(I'm not\\) and want to help out look at the notes in the To-Do post</li> <li>Fixed loose stick/moveto fighting you for the heading still if using mpause/mousepause/breakonkb/breakonmouse</li> <li>Fixed mpause resuming the command if you pressed down two keys at the same time, such as move forward and right, but</li> </ul> <p>only let go of one of them</p> <ul> <li>Mousepause now breaks movement since you have to press+hold the right button before the left button to move unless</li> </ul> <p>you've got uber micro...</p> <ul> <li>In finding the fix for mpause key releases I came up with a solution for mpause leaving you moving fowards even if</li> </ul> <p>the key you pressed was strafe_left for example</p> <ul> <li>It should now stop all movement and repress whatever key you pressed so that your movement was not interrupted</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81029-new-features-misc","title":"Beta - 8.1029 - new features / misc","text":"<ul> <li>Fixed the crash bug related to v2008-10-26</li> <li>Removed redundant check. thanks goes to ascii and dkaa for help in indentifying it.</li> <li>Fixed another potential crash bug. thanks goes to ieatacid for help in identifying it.</li> <li>Another fix attempt at sit/stand bug</li> <li>Added an option for always loose stick now that it uses deadchicken's improved logic. You can turn this option on</li> </ul> <p>with /stick toggle alwaysloose just as moveto's has been set with /moveto toggle alwaysloose in a previous</p> <p>update</p> <ul> <li>Updated /moveto toggle loose and /stick toggle loose to toggle loose on and off, since supplying it in the</li> </ul> <p>command will always turn it on</p> <ul> <li> <p>These are independent, meaning if you use /moveto it will not toggle stick's loose, and if you use /stick it</p> <p>will not toggle moveto's loose</p> </li> <li> <p>Identified that on some newer computers \\(it also might relate to duo/quad core cpu\\) that stucklogic even at 0.1 can</p> </li> </ul> <p>cause absurd behavior such as random camera angle jerks. deadchicken has some ideas on rewriting this whole process,</p> <p>but for the time being I discovered that if we allow the value to be set to smaller numbers it will improve. On one</p> <p>of my duo core boxes it was always having problems to the point I had to turn it off. I found with setting the value</p> <p>to 0.05 those problems went away and stucklogic worked better</p> <ul> <li> <p>It still has problems with the way the math works, it does not properly attempt to work its way around all</p> <p>angles to break from stuck</p> </li> <li> <p>If it reaches exactly the halfway point \\(facing the exact angle away from your target\\) it will start turning</p> <p>back towards the target. This is most noticeable if you are stuck in a corner or doorway</p> </li> <li> <p>To fix the duo-core/faster cpu issues, the value for stucklogic now may be set up to the hundreths</p> </li> <li> <p>The minimum value you can now use in the ini is: 0.001</p> </li> <li> <p>Added a new \\(long overdue\\) parameter to stick: /stick front</p> </li> <li> <p>If you lose aggro (or use this command on a non-tank to help control push and the mob aggros someone in the</p> <p>rear), you will be spinning endlessly trying to get to the front of the mob</p> </li> <li> <p>By default, if you have access to Health of Target's Target and you are not the target, you will not try to spin</p> <p>with the mob to stay in its front arc</p> </li> <li> <p>For those who do not want that, or for those characters you desire to be in the front arc that will not be the</p> <p>one's on HoTT, you can bypass this with the following toggle: /stick toggle spinme</p> </li> <li> <p>You will then always stick to the front, no matter what, if using /stick front parameter</p> </li> <li>Made major improvements to the NoHoTT aggro detection</li> <li> <p>The way this works is if you are using any arc enforcement other than /stick front (meaning pin, !front,</p> <p>behind), and you do not have access to Health of Target's Target data, this feature will detect if you are</p> <p>aggro by checking if the mob's heading is pointed towards you</p> </li> <li> <p>If so, it will slide you slightly to the side, and stop for around 7 seconds, then attempt to continue sliding</p> <p>back into position. If the mob is still facing you, it will assume you are aggro, and repeat the process. If the</p> <p>mob is no longer turning with you, you will resume sticking to your prior arc choice * Using /makecamp off will now halt a makecamp return if its currently happening when you issue the off command * Using /makecamp return will no longer work if you do not currently have a camp or camp-player active * Rewrote all WriteChat output to use a new custom function WriteLine, to support the following request * By request, there is a new option added to verbosity, TotalSilence   * This can be turned on using /stick set totalsilence on \\(or _/moveto_, _/circle_, and _/makecamp_\\)   * This can be turned off using /stick set totalsilence off \\(or _/moveto_, _/circle_, and _/makecamp_\\)   * This option will reduce the output to only major events such as the actual toggle itself (totalsilence on,</p> <p>totalsilence off), the help output only if you type '/command help', breakonsummon firing (since it requires you</p> <p>to type '/command imsafe' in order to resume anything), and a few other drastic errors</p> </li> <li> <p>All other output will be suppressed</p> </li> <li>This option saves to the INI and is disabled by default</li> <li>Turning verbosity or fullverbosity back on will disable totalsilence</li> <li>You are no longer allowed to stick to yourself with certain parameters. Sorry for this nerf</li> <li>You can now set your leash length to &gt;= camp radius in the ini, instead of &gt;= campradius + 10</li> <li>Generic code cleanup and bug fixes</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81026-minor","title":"Beta - 8.1026 - minor","text":"<ul> <li>More changes to 'always' stick parameter. Really trying to clean it up a bit more.</li> <li>Fix for my creating a new sit/stand bug by fixing the old one (*setting standstate while dead = bugged until zone</li> </ul> <p>out*)</p> <ul> <li>Related to above, death should now break all commands except makecamp (*will resume if you get res, but will break</li> </ul> <p>if you exit zone*)</p> <ul> <li>/stick with invalid parameters will no longer stick</li> <li>Fix for mpause/breakonkb with 'always'</li> <li>Added 'TotalSilence' option to ini that will not display any output except critical errors, breakonsummon</li> </ul> <p>notification \\(_since it halts command usage entirely until you turn it off_\\), and help output if you manually type</p> <p>/stick help</p> <ul> <li>Generic code cleanup and bug fixes</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81025-bugfixes","title":"Beta - 8.1025 - bugfixes","text":"<ul> <li>Attempted a fix to the long-standing SIT/STAND bug. Major thanks to frostx for supplying me with a ton of</li> </ul> <p>information on how to recreate it.</p> <ul> <li>Fixed a bug with distance to target not being reset after a stick command was used and ended. this had behavior of</li> </ul> <p>sometimes causing breakonwarp messages to fire if the target was outside of breakdist range when you issued a</p> <p>following command. This only applied to certain parameters \\(_i.e. /stick \\#, /stick behind/pin/!front_\\), and not with</p> <p>anything that set the distance \\(_/stick, /stick on_\\). Major thanks to frostx for supplying me with a ton of</p> <p>information on how to recreate this so I could find the cause. That's twice!</p> <ul> <li>Fixed a crash bug with \"id\" if used with invalid id. \\(_/moveto_ and _/stick_\\)</li> <li>Added Dist and Loose values to /moveto verbosity output</li> <li>Added more checks to prevent stick \"No Target\" error msg instead of halting command attempt if the command requires</li> </ul> <p>a target. You will still see the \"You must specify...\" message as normal, but this fix relates to the \"You are now</p> <p>sticking to NO TARGET ERROR\" message</p> <ul> <li>Fixed a bug with strafe being held down sometimes, keeping you sliding sideways when you should have stopped</li> <li>Fixed a bug with /stick  always checking events for breakonsummon,</li> </ul> <p>mpause/mousepause/breakonkb/breakonmouse when you did not have a target. This will now only make those checks if you</p> <p>have a valid npc target and are currently sticking to it</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81024-tlo-adds-settings-rewrite","title":"Beta - 8.1024 TLO adds / settings rewrite","text":"<ul> <li>Removed the following TLO members (*${Circle.Summoned}, ${Stick.Summoned}, ${MoveTo.Summoned}, ${Stick.Stuck},</li> </ul> <p>${MakeCamp.InUseBy}*)</p> <ul> <li>Added a new TLO ${MoveUtils} with the following members:</li> <li>${MoveUtils.Stuck} - TRUE / FALSE - \\(former stick.stuck\\)</li> <li>${MoveUtils.Summoned} - TRUE / FALSE \\(former everything.summoned\\)</li> <li>${MoveUtils.Command} - NONE / STICK / CIRCLE / MOVETO / MAKECAMP<ul> <li>this is the replacement for makecamp.inuseby</li> <li>MAKECAMP will only show up if nothing else active</li> <li>if you have makecamp on and stick active, STICK will be the result</li> <li>${MoveUtils} returns this same information</li> </ul> </li> <li>${MoveUtils.StuckLogic} - TRUE / FALSE \\(if you have stuck logic on or not\\)</li> <li>${MoveUtils.Verbosity} - TRUE / FALSE \\(if you have verbosity on or not\\)</li> <li>${MoveUtils.FullVerbosity} - TRUE / FALSE \\(if you have fullverbosity on or not\\)</li> <li>Added new members to ${Circle} TLO for those of you who prefer true / false:</li> <li>${Circle.Clockwise} - TRUE / FALSE \\(circle.rotation still shows CW/CCW\\)</li> <li>${Circle.Backwards} - TRUE / FALSE \\(circle.direction still shows FORWARDS/BACKWARDS\\)</li> <li>BreakOnSummon no longer fires if only makecamp is on. it will fire if makecamp is attempting to return to camp</li> </ul> <p>though since that turns moveto on, which is checked</p> <ul> <li>Added the same fix from the previous posts for turn-walk-off adjustment to mouse pause as well. breakonmouse did not</li> </ul> <p>have this problem, only pause</p> <ul> <li>In the process of changing the syntax of anything that toggles to be able to be toggled as well as set via on / off.</li> </ul> <p>I'll also be adding the ability to set just about anything that should be modifiable using this same foundation.</p> <p>This already is a major change to the syntax of most every toggle I've added so please take note:</p> <ul> <li>The help output doesnt reflect any of this yet.</li> <li>Where /command can be \\(/stick, /moveto, /circle, /makecamp\\)</li> </ul> <pre><code>//The same as before\n\n/command help\n/command debug\n/command pause\n/command unpause\n/command save\n/command load\n/command imsafe\n\n//Different: \"set\" - this is just a basic foundation\n\n/command set verbosity on|off\n/command set fullverbosity on|off\n/command set stucklogic on|off\n\n//Different: \"toggle\" - this is used to toggle values\n\n/command toggle mpause\n/command toggle mousepause\n/command toggle breakonkb\n/command toggle breakonmouse\n/command toggle autosave\n/command toggle feign\n/command toggle autopause\n/command toggle advancedautopause &lt;---still doesnt work any better dont bother using really\n/command toggle stucklogic\n/command toggle verbosity\n/command toggle fullverbosity\n/command toggle nohott\n/command toggle hidehelp\n/command toggle breakongate\n/command toggle breakonwarp\n/command toggle alwaysdrunk\n/command toggle alwaysbackwards\n/command toggle alwaysccw\n/command toggle alwaysloose  &lt;---this only applies to moveto atm\n/command toggle breakonsummon\n</code></pre> <ul> <li>/command checkifstuck is forever removed. use toggle stucklogic or set stucklogic </li> <li>Preserved the values for 'ArrivalDist' and 'MoveToMod' in the ini since they were defaulting back to plugin-default</li> </ul> <p>values instead of your own custom settings. Will apply this to most everything else in the near future.</p> <ul> <li>Fixed mpause resuming no command if makecamp was active by itself. it should still resume an interrupted return to</li> </ul> <p>camp.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81023-minor","title":"Beta - 8.1023 - minor","text":"<ul> <li>Added \"Stuck\" TLO</li> <li>${Stick.Stuck} - FALSE / TRUE - (true if stucklogic detects you are stuck</li> <li>Added a turn off walking adjustment to BreakOnKB to fix a bug with walk being left on</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81019-cleanup","title":"Beta - 8.1019 - cleanup","text":"<ul> <li>StuckLogic fixed. I loaded a session running old source and one running beta source side by side on 2 screens and it</li> </ul> <p>behaves the same way on both. Its sloppy and could use work but it was not functioning at all before so now it</p> <p>functions like its used to. I used the preferred settings posted earlier in the thread so please report any</p> <p>differences on other settings. The TurnIncrement of 10 seems to take forever to unstick in tight areas (hallways,</p> <p>small indoor rooms), so I upped it for myself to much better results around 35.0, you may want to try a higher value</p> <p>here if you use this indoors. outdoors might only need small increments</p> <ul> <li>StuckLogic now turns on walk when its stuck also, to help reduce getting unstuck only to get restuck because of a</li> </ul> <p>burst of speed in hallways and tight corners</p> <ul> <li>/stick loose - now uses deadchicken's /moveto loose improvements</li> <li>this will now spin before moving if the heading to the target is greater than \u00bc a turn</li> <li> <p>this should be much more functional and cut down quite a large amount of the orbiting and getting stuck due to</p> <p>loose sticking</p> </li> <li> <p>after playing with it for a good hour in multiple situations, I can say it looks much more natural than before</p> <p>and could be used viably in situations where the fast facing would not be acceptable. test it out by adding</p> <p>'loose' anywhere in your normal command line for /stick</p> </li> <li> <p>*Drunken circle still needs to be looked at because circle and stucklogic are having issues when you turn on</p> <p>circle next to a wall, which I don't know why you'd ever do that, but the circle gets stuck running forward</p> <p>indefinately \\(in both versions of the source it looks like\\) so I need to track that down before bringing circle</p> <p>over to the new loose logic* * Added /moveto toggle loose - to turn off loose without moving, since /moveto loose always forces it on</p> </li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81018-cleanup","title":"Beta - 8.1018 - cleanup","text":"<ul> <li>Fixed a bug with /stick uw | underwater not working</li> <li>BreakOnSummon now applies to all commands, not just /stick</li> <li>Updated BreakOnSummon to be more assertive. If BreakOnSummon fires, it will prevent any future command usage in case</li> </ul> <p>your macro continually reissues a /stick, /circle or /moveto command</p> <ul> <li>When this fires this will display a warning message and notify you</li> <li>There is now a new parameter to reset this, /stick imsafe, which will allow command usage once again</li> <li> <p>For macros that may continually trigger BreakOnSummon, but you still want to use it, there are new TLOs:</p> <ul> <li>${Stick.Summoned} ${Circle.Summoned} ${MoveTo.Summoned} - TRUE / FALSE</li> <li>These apply across the board, meaning they all will be true or they all will be false, so use whichever you</li> </ul> <p>like. So in theory if you know something is going to fire breakonsummoned but you still want to use it for</p> <p>other cases, you could issue the command, check the state of the TLO and then have your macro issue a</p> <p>/stick imsafe to undo the command halting</p> </li> <li> <p>BreakOnSummon defaults to false now instead of true since its more assertive</p> </li> <li>Fixed a bug with BreakOnWarp where if you have a camp setup and you issued a /stick or /moveto it would report</li> </ul> <p>that mob had warped out of range when the mob never really moved to begin with. If you are leashed you should still</p> <p>not be able to go to the mob, just for different reasons</p> <ul> <li>Renamed TurnDirection \\(ini setting\\) to TurnIncrement to be more appropriate for what it actually does.</li> <li>Thanks to deadchicken, /moveto loose is improved. There is now an additional check comparing your current heading</li> </ul> <p>to the heading you want to go to, and if its larger than a \u00bc turn, you will spin before you begin moving instead</p> <p>of trying to spin while moving. This prevents the endless \"orbiting\" in circles without ever being able to reach</p> <p>your destination</p> <ul> <li>LooseMoveTo in the ini \\(always use loose when using _/moveto_\\) now defaults to true because this is really superior</li> </ul> <p>now, and you should use this to prevent the fast facing that goes on if its false. It is very noticeable and</p> <p>detectable. Should you still want the fast facing, then you can either set LooseMoveTo to 'off' in the ini, or type</p> <p>/moveto toggle alwaysloose to toggle it off, then issue a /moveto save to save it to your ini as well</p> <ul> <li>/moveto toggle alwaysloose is restricted to the /moveto command, and doesnt work if you use /stick or</li> </ul> <p>/circle. I plan to keep them command-based in the future as well</p> <ul> <li>Starting to add more comments to the source for those of you trying to learn how it works</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81015a-breakonsummon","title":"Beta - 8.1015a - breakonsummon","text":"<ul> <li>Added a new feature, BreakOnSummon</li> <li> <p>This command works like BreakOnWarp except it checks the distance change of your own x / y locations from pulse</p> <p>to pulse, not related to the mob</p> </li> <li> <p>If your own x / y changes too drastically, with this enabled it will halt all commands.</p> </li> <li> <p>This is useful for COH, or mob summon \\(though I guess not if to the mob you are sticking\\), but more important if</p> <p>you are summoned by those invisible people in short distances where breakonwarp normally wouldn't fire due to</p> <p>what they do, small repeated summons, doesnt matter with the large distance check you want to use for mob-warp</p> <p>checking. this one you can safely set to a small amount and not worry about your stick breaking from mobs</p> <p>warping small distances</p> </li> <li> <p>the default is set to 20 soas not to interfere with summon from mob you are stuck to, but it may need to be set</p> <p>smaller to be effective, or larger if the mobs you fight you get summoned more than 20 range. it seems the max</p> <p>you move onpulse is around 2.0 with runspeed5, but bard or mount may be higher than that</p> </li> <li> <p>Added new INI settings for this</p> <ul> <li> 'BreakOnSummon' - on / off</li> <li> 'BreakSummonDist' - distance to consider summoned \\(default 20.0\\)</li> </ul> </li> <li>Added toggle: /stick toggle breakonsummon</li> <li>Related to this, I fixed a since-inception bug with breakonwarp that only worked on half of the angles from your</li> </ul> <p>mob. the math \\(if sqrt\\(yourdist\\) - sqrt\\(mob dist\\) &gt; breakdist) never worked when the differences were negative. now</p> <p>they do.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81015-pause-logic","title":"Beta - 8.1015 - pause logic","text":"<ul> <li>mpause, if set to ON, will now apply to mouselook as well.</li> <li>you can mouselook or mouselook+left click to move around and it will return based on min/max delay</li> <li>if mpause is set OFF, unlike pressing a key, mouselook will not break your command</li> <li> <p>it will no longer fight with you for the heading. it will allow you to move with the mouse but once you let go</p> <p>of mouselook it will resume the previous command immediately.</p> </li> <li> <p>/stick toggle mousepause</p> <ul> <li>this works independently of mpause now. its optional and works identically to mpause for keyboard movement.</li> <li>it saves to the ini as MousePause as well. if turned on, any movement of the mouse while mouselook (turn</li> </ul> <p>head with right-click-hold only, or move by right-click-hold plus left-click) will pause the command and</p> <p>return after the min/max delays. if its turned off it will behave like it always did and fight with you for</p> <p>the heading if you try to do anything. to overcome that there is now another option   * /stick toggle breakonmouse * this works like mpause=off used to work for keyboard movement * if you move the mouse while a command is active, it will break from the command altogether * you can set this under  'BreakOnMouse' in the ini   * /stick toggle breakonkb * this works like mpause=off used to * mpause=off will not break from your current commands any longer, it will resume immediately as opposed to</p> <p>with a delay, and fight you for the keyboard.</p> <ul> <li>you need to set breakonkb or \\(BreakOnKB in the ini\\) the way you like it</li> <li>breakonkb will default to true since this was the old default behavior</li> <li>Pause and break turn each other off, but do not turn the others on.</li> <li>You can have mpause and breakonkb both off, but breakonkb on = mpause off and mpause on = breakonkb off.</li> <li>If you like and use mpause, but decided to try breakonkb, then turned breakonkb off, mpause needs to be turned</li> </ul> <p>back on</p> </li> <li> <p>trying to turn both true in the ini will result in breaks being off and pauses being on.</p> </li> <li>ManualPause changed to KeyboardPause in the ini. command still is mpause though.</li> <li>Fixed a bug with /makecamp on </li> <li>/makecamp radius and /makecamp on  and /makecamp player and /makecamp   commands now also</li> </ul> <p>enforce leash size update if leash is smaller than camp radius \\(before only /makecamp with no params did this\\)</p> <ul> <li>Put the stick dir\\(normal\\) dist\\(\\#\\) mod\\(\\#\\) hold\\(no\\) loose\\(no\\) msg on verbosity instead of fullverbosity</li> <li>Failing to input a command-specific parameter correctly will no longer issue help for the entire plugin, only the</li> </ul> <p>command it relates to.</p> <ul> <li>Typing '/command help' if HideHelp option is on now assumes you wanted the display and will output the help one time</li> </ul> <p>instead of blocking it in this case.</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81014-tlo-adds","title":"Beta - 8.1014 - TLO adds","text":"<ul> <li>Added New TLOs:</li> <li>${Stick.DistMod} - value set with /stick mod # or /stick -#</li> <li>${Stick.DistModPercent} - value set with /stick #%</li> <li>${Stick.Always} - PAUSED / TRUE / FALSE - \\(true if '/stick \\[parameters\\] always' was activated\\)</li> <li>${Stick.Aggro} - PAUSED / TRUE / FALSE - \\(true if NoHoTT detects aggro\\)</li> <li>Help output completed, hence the new hidehelp option since it is spamcity</li> <li>INI Revamp - ini file now breaks down into logical sections</li> <li> </li> <li>INI file supports many more features. I suggest you backup your current one and delete it, then log in game and</li> </ul> <p>/stick save to output a new one.</p> <p>Then edit in your old values from backup and save the file and then /stick load.</p> <p>That way you can see all the new features organized correctly.</p> <p>Loading all values from  will no longer work in this version, but some still remain there.</p> <ul> <li>New INI Options</li> <li> 'HideHelp' - never display spam-filled help syntax</li> <li> 'AwareAggro' - NoHoTT checking on/off</li> <li> 'StickDistMod' - always use specific dist mod</li> <li> 'StickDistModPercent' - always use specific dist mod percent</li> <li> 'ArrivalDist' - max dist from moveto loc that is acceptable</li> <li> 'LooseMoveTo' - always use loose heading</li> <li> 'MoveToMod' - always use specific moveto dist mod</li> <li> 'AlwaysBackwards' - always run backwards</li> <li> 'AlwaysCounterClockwise' - always run in a counter-clockwise circle</li> <li> 'AlwaysDrunken' - always use drunken movement</li> <li> 'RadiusSize' - always use specific radius size</li> <li>New primary command parameters \\(_usable with /stick, /moveto, /makecamp, or /circle_\\):</li> <li>/stick toggle hidehelp - toggle hidehelp on/off</li> <li>/stick toggle breakongate - toggle on/off</li> <li>/stick toggle breakonwarp - toggle on/off</li> <li>/circle toggle alwaysdrunk - toggle default to drunken</li> <li>/circle toggle alwaysbackwards - toggle default to backwards</li> <li>/circle toggle alwaysccw - toggle default to counterclockwise</li> <li>issue a '/stick save' afterwards to write these changes to ini if desired</li> <li>Experimental new command: '/stick advancedautopause'</li> <li> <p>this will attempt to turn on walk, stop moving, turn to the right to force a position update to prevent casting</p> <p>while moving from getting interrupted. i dont know how well it will work or not, since the current</p> <p>implementation only is good for stopping you from moving if already stationary then casting.</p> </li> </ul> <pre><code>*this doesnt work, need a better way to check if casting before the bar pops up*\n</code></pre>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81013-minor","title":"Beta - 8.1013 - minor","text":"<ul> <li>My attempt to fix the negative stick/movedist halting movement broke the mod applied and forced a very close stick</li> </ul> <p>value. Fixed this.</p> <ul> <li>You can now set the modifier independently. This will not turn stick on or modify current stick, just change the</li> </ul> <p>base value.</p> <ul> <li>Before you had to set the mod with: /stick -5</li> </ul> <pre><code>This would subtract 5 from whatever value you used (or mob melee range, which i believe is the intention of this\nwhole thing) every time.\n\nIt defaulted to 0, but once you set it, you were stuck with negative forever.\n\n-   Now using */stick mod \\[#\\]*, you can:\n    -   reset it to zero (*/stick mod 0*)\n    -   or use a positive number (*/stick mod 5* would make */stick 10* function as */stick 15*.\n\n\nThis will defeat the purpose of melee range checking but would be good for increasing the number for macros that use\ntoo small of number or something along those lines. It is there if you can find a use for it.\n</code></pre> <ul> <li>Added output for modchanges without any verbosity check \\(will move it to Verbosity once its all correct\\) so you can</li> </ul> <p>see these actions taking place. FullVerbosity also displays the mod on every use of /stick.</p> <ul> <li>Added toggle for Verbosity option</li> <li>Added toggle for FullVerbosity option</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81012a-minor","title":"Beta - 8.1012a - minor","text":"<ul> <li>Added Circle TLOs</li> <li>\\([string]()\\) - ${Circle} - ON / OFF / PAUSED</li> <li>\\([string]()\\) - ${Circle.Status} - ON / OFF/ PAUSED</li> <li>\\([float](../../../reference/data-types/datatype-float.md)\\) - ${Circle.CircleX} - location of the center X</li> <li>\\([float](../../../reference/data-types/datatype-float.md)\\) - ${Circle.CircleY} - location of the center Y</li> <li>\\([bool](../../../reference/data-types/datatype-bool.md)\\) - ${Circle.Drunken} - TRUE / FALSE</li> <li>\\([string]()\\) - ${Circle.Rotation} - CW / CCW</li> <li>\\([string]()\\) - ${Circle.Direction} - FORWARDS / BACKWARDS</li> <li>Added the ability to change circle radius</li> <li>Before you had to re-issue /circle on  to change the radius\\(size\\) of the circle.</li> <li>This would plant the anchor where you were at, forcing you to reset any custom anchor or options.</li> <li>Now you can do this:<ul> <li>/circle radius  - will keep circling but increase the radius on the fly</li> </ul> </li> <li>Removed the ability to do /moveto  because it was having conflicts. To set the moveto distance now you</li> </ul> <p>need to use:</p> <ul> <li>/moveto dist  - to set distance</li> <li>/moveto dist  - to subtract from currently set distance</li> <li> <p>You can no longer set stick or moveto distance to a value below 0.</p> <p>Negative numbers halted all movement so any attempt to do so will force the distance value to 1.</p> </li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81012-makecamp-player","title":"Beta - 8.1012 - makecamp player","text":"<ul> <li>Fixed two more crash bugs \\(thanks ieatacid\\)</li> <li>Added /makecamp player  </li> <li>Makecamp player works if you supply a valid name of a PC in the zone</li> <li> <p>uses your current target \\(fails if target is not SPAWN\\_PLAYER\\) if you do not supply the name.</p> <p>This will create a dynamic camp based on the location of this player as they move, using the current 'radius'</p> <p>and 'leash' values that you are used to.</p> </li> <li> <p>This works like a ghetto autofollow and actually appears somewhat natural because it uses moveto logic instead</p> <p>of stick logic.</p> </li> <li> <p>This means no fast/loose facing the person, just moving to their general area \\(which is cool\\).</p> </li> <li>If the camp is based around your puller, that is a bad idea, don't do it.</li> <li>If the person you supply is really far away when you issue the command, it may have trouble getting to them.</li> <li>If the person magically warps/gets summoned way far away, it will likely have problems.</li> <li> <p>Also note this still uses the mindelay and maxdelay values for deciding when to move, so it will look like you</p> <p>are really two/three/four/etc-boxing and moving them if you set the values correctly.</p> </li> <li> <p>The downside to this is that if the character is on the very edge of the leash length and you are taking small</p> <p>steps forward it will take its own small steps forward as well, based on the min/max delays, so that can look</p> <p>weird</p> </li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81011-minor","title":"Beta - 8.1011 - minor","text":"<ul> <li>attempt a fix at a crash bug related to verbosity output. Went through the whole source and that was the only time</li> </ul> <p>the writechat was used incorrectly in that way</p> <ul> <li>Please report any occurrences of new \"NULL POINTER ERROR\" message or new \"NO TARGET\" error message (both relate to</li> </ul> <p>only the verbose output for /stick) and how to reproduce it</p> <ul> <li>The old NULL POINTER message still exists as it always did in original moveutils</li> </ul>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#beta-81002-complete-rewrite-first-beta","title":"Beta - 8.1002 - complete rewrite \\(first beta\\)","text":"<ul> <li>Command Syntax - Many base commands all can be used from every command</li> </ul> <p>i.e. /circle load, /stick load, /makecamp load, /moveto load - all will do the same thing</p> <p>*INI File - many more settings supported</p> <ul> <li>INI File Verbosity - Changed from 1/0 to on/off. It will auto-correct old files, so you dont need to mess with it.</li> </ul> <p>Just a FYI.</p> <ul> <li>Output - drastically changed, may break macro events \\(tried to keep the most common ones the same\\)</li> <li>Issuing one command completely ends the other - This does not apply to /makecamp, only /circle, /moveto, and</li> </ul> <p>/stick</p> <ul> <li>Feign Support - added feign parameter or  in the INI.</li> </ul> <p>When enabled this will not begin your command if you are FD until you manually stand up</p> <p>*AutoSave - automatically save ini like old save cmd \\(/stick save\\) every time you change a setting</p> <ul> <li>New TLOs</li> <li>\\([string]()\\) - ${MakeCamp.InUseBy} - which command is active</li> <li> <p>\\([string]()\\) - ${Stick.StickTargetName} - name of stick target if using /stick id,</p> <p>or /stick hold, otherwise will be target name/NONE</p> </li> </ul> <p>*Additional Verbosity - fullverbosity option \\(ini file\\) to output more detailed information. original verbosity still exists and fullverbosity does NOT turn on original stick verbosity messages. you have to set each independently *StuckLogic Toggle - added a toggle for stucklogic, no longer need to reload ini file *AutoPause Toggle - added a toggle for autopause, no longer need to reload ini file *New Stick Parameter 'always' - Usage:</p> <pre><code>/stick [other parameters] always\n</code></pre> <ul> <li> <ul> <li>Putting 'always' at the end will not require another /stick after you lose your target \\(i.e. mob dies\\).</li> </ul> </li> <li> <p>This behaves the same way as if you /stick something, then change the target before it dies which uses the same</p> <p>settings as the last time you typed the command.</p> </li> <li> <p>This does not work with stick hold or stick id.</p> </li> <li> <p>This only works with NPC targets \\(not their pets\\), so changing to other target types like PC, chest, corpse,</p> <p>etc. will not make you run around constantly.</p> </li> <li> <p>This works great if you pass targets with EQBC for example.</p> </li> <li>Using this on your puller or when cross-zone targeting will probably cause you problems.</li> <li> <p>This setting cannot be saved and will reset upon any new command typed by design because of its potential</p> <p>misuse. Don't ask for huge features on this. I can see it being used carelessly so be careful.</p> </li> </ul> <p>*Check for aggro if you dont have HoTT - this is experimental and still needs improvement</p>"},{"location":"plugins/community-plugins/mq2moveutils/mq2moveutils-v11-revisions/#original-80913-first-moveutils-change","title":"Original - 8.0913 - first moveutils change","text":"<ul> <li>every 'break' function that used this method to stop moving seems to be failing:</li> </ul> <pre><code>MQ2Globals::ExecuteCmd(FindMappableCommand(\"forward\"),0,0);\n</code></pre> <ul> <li>Changed the ExecuteCmds to supply a down then up to stop the issue:</li> </ul> <pre><code>MQ2Globals::ExecuteCmd(FindMappableCommand(\"forward\"),1,0);\nMQ2Globals::ExecuteCmd(FindMappableCommand(\"forward\"),0,0);\n</code></pre>"},{"location":"plugins/community-plugins/mq2twist/","title":"MQ2Twist","text":""},{"location":"plugins/community-plugins/mq2twist/#general-details","title":"General Details","text":""},{"location":"plugins/community-plugins/mq2twist/#description","title":"Description","text":"<p>MQ2Twist is a plugin for bards which allows them to \"twist\" a number of songs and/or items together very reliably. It takes care of missed notes and interrupts automatically, and can swap in items to cast too.</p> <p>This plugin was developed by koad, CyberTech, Cr4zyb4rd and Pheph, and can be downloaded from here VIP ACCESS REQUIRED it was last edited by Cr4zyb4rd on Wed Jun 21, 2006.</p> <p>Winnower is the last one to post an updated file but it is user modified and that was on Wed Jul 29, 2015 here,</p> <p>I am unable to find a current stable version. If you happen to find one please update this Wiki. -\\(Description updated by Valendar 6-15-16\\)</p>"},{"location":"plugins/community-plugins/mq2twist/#development-notes","title":"Development Notes","text":"<p>For the development history of this plugin see the article MQ2Twist Revision History</p>"},{"location":"plugins/community-plugins/mq2twist/#commands","title":"Commands","text":"<ul> <li>/twist # # # # #</li> </ul> <p>Twists the songs/items in the order specified \\(up to 10 can be specified\\).</p> <p>Valid options are 1 thru NUM_SPELL_GEMS \\(EQData.h\\) for song gems, and 21 thru 29 for item clicks. These may be mixed in any order, and repeats are allowable. If a song is specified with a duration longer than standard \\(eg. Selo's Accelerating Chorus\\), that song will be twisted in based on it's duration. For example, riz+mana+selos</p> <p><code>would be a 2 song twist with selos pulsed every 2.5 min.</code></p> <ul> <li>/twist once # # # # #</li> </ul> <p>Twists in songs once the order given, then reverts back to original twist</p> <ul> <li>/twist hold #</li> </ul> <p>Pause twisting and sing only the specified song</p> <ul> <li>/twist stop/end/off</li> </ul> <p>Stop twisting, does not clear the twist queue</p> <ul> <li>/twist or /twist start</li> </ul> <p>Resume the twist after using /twist hold or /twist stop</p> <ul> <li>/twist reset</li> </ul> <p>Reset timers for item clicks and long duration songs</p> <ul> <li>/twist clear</li> </ul> <p>Stop twist and clear song list</p> <ul> <li>/twist delay #</li> </ul> <p>Specify the delay to be used before starting a new song \\(in 10ths of a second\\). The minimum is 30, default is 33</p> <ul> <li>/twist adjust #</li> </ul> <p>How early to recast long duration songs \\(in ticks\\)</p> <ul> <li>/twist reload</li> </ul> <p>Reload the INI file to update item clicks</p> <ul> <li>/twist slots</li> </ul> <p>List the slots/items defined in the INI and their item numbers</p> <ul> <li>/twist quiet</li> </ul> <p>Toggles songs listing and start/stop messages for one-shot twists</p> <ul> <li>/sing</li> </ul> <p>Alias for /twist hold</p> <ul> <li>/stoptwist</li> </ul> <p>Alias for /twist stop</p>"},{"location":"plugins/community-plugins/mq2twist/#top-level-objects","title":"Top-Level Objects","text":"<ul> <li>bool ${Twist}</li> </ul> <p>Same as ${Twist.Twisting} \\(see below\\)</p> <ul> <li>bool ${Twist.Twisting}</li> </ul> <p>Returns TRUE if currently twisting, FALSE if not and NULL if plugin not loaded.</p> <ul> <li>int ${Twist.Current}</li> </ul> <p>Returns the current gem being sung, -1 for item or 0 if not twisting</p> <ul> <li>int ${Twist.Next}</li> </ul> <p>Returns the next gem to be sung, -1 for item or 0 if not twisting</p> <ul> <li>string ${Twist.List}</li> </ul> <p>Returns the twist sequence in a format suitable for /twist.</p>"},{"location":"plugins/community-plugins/mq2twist/#examples","title":"Examples","text":"<p><code>/twist 1 Sing gem 1 forever</code> <code>/twist 1 2 3 Twist gems 1,2, and 3 forever</code> <code>/twist 1 2 3 10 Twist gems 1,2,3, and clicky 10, forever</code> <code>/twist hold 4 Sing gem 4 forever, until another singing-related /twist command is given</code> <code>/sing 4 Same as above</code></p> <p>/twist set 16 32 120 \"Cassindra's Chorus of Clarity\" AA</p> <p><code>Set Click_16 to CastTime=32, ReCastTime=120, Name=\"Cassindra's Chorus of Clarity\", Slot=AA ; and save to INI</code></p>"},{"location":"plugins/community-plugins/mq2twist/#ini-file","title":"INI File","text":"<p><code>[MQ2Twist]</code> <code>Delay=32 Delay between twists (in 10ths of a second). Lag &amp; System dependant.</code> <code>Adjust=1 This defines how many ticks before the 'normal'</code> <code>recast time to cast a long song.</code></p> <p>Long songs are defined as songs greater than 3 ticks in length. If set to 1 tick, and a song lasts 10 ticks, the song will be recast at the 8 tick mark, instead of at the 9 tick mark as it normally would.</p> <p><code>[Click_21] through [Click_29]</code> <code>CastTime=30 Casting Time, -1 to use the normal song delay</code> <code>ReCastTime=0 How often to recast, 0 to twist normally.</code> <code>Name=\"Fife of Battle\" Item name for /itemnotify</code> <code>Slot=neck Slot name for /itemnotify</code></p> <ul> <li>Delay, CastTime and ReCastTime are specified in 10ths of a second \\(so 10 = 1 second\\)</li> <li>The INI file allows you to specify items by name \\(with Name=\\), or by inventory slot (with</li> </ul> <p>Slot=).</p> <ul> <li> <p>If both a Name and Slot are defined for an item, the plugin will attempt to swap the item into that slot using</p> <p>the /exchange command. After casting, it will replace the original item.</p> </li> <li> <p>If only Name or Slot are specified, \"/itemnotify Slot rightmouseup\" is used to</p> <p>perform item clicks.</p> </li> </ul>"},{"location":"plugins/community-plugins/mq2twist/#item-click-method","title":"item click method","text":"<p><code>MQ2Twist uses /itemnotify slotname rightmouseup to perform item clicks.</code></p> <p><code>The INI file allows you to specify items by name (with name=itemname), or by</code> <code>inventory slot (with slot=slotname). If both a name and slot are defined for an</code> <code>item, the plugin will attempt to swap the item into that slot (via the /exchange</code> <code>command) and replace the original item when casting is complete.</code> <code>```` The example INI file below contains examples of the types of usage.\\</code></p>"},{"location":"plugins/community-plugins/mq2twist/#ini-file-example","title":"ini file example","text":"<pre><code>            [MQ2Twist]\n            Delay=31\n            Quiet=0\n\n            ;Shadowsong cloak\n            [Click_21]\n            CastTime=30\n            ReCastTime=350\n            Name=Shadowsong Cloak\n            Slot=DISABLED\n\n            ;girdle of living thorns (current belt will be swapped out)\n            [Click_22]\n            CastTime=0\n            ReCastTime=11600\n            Name=Girdle of Living Thorns\n            Slot=waist\n\n            ;nature's melody\n            [Click_23]\n            CastTime=-1\n            ReCastTime=135\n            Name=DISABLED\n            Slot=mainhand\n\n            ;lute of the flowing waters\n            [Click_24]\n            CastTime=0\n            ReCastTime=0\n            Name=Lute of the Flowing Waters\n            Slot=DISABLED\n\n            ;lute of the flowing waters\n            [Click_25]\n            CastTime=32\n            ReCastTime=120\n            Name=Cassindra's Chorus of Clarity\n            Slot=AA\n\n         [Click_26] ... [Click_30]\n            CastTime=33\n            ReCastTime=0\n            Name=DISABLED\n            Slot=DISABLED\n</code></pre>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/","title":"MQ2Twist:Revisions","text":"<p>__FORCETOC__</p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#mq2twist-revision-history","title":"MQ2Twist Revision History","text":""},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#htw-10-13-09","title":"htw 10-13-09","text":"<p><code>Added flag in SetGameState() to prevent INI init on zone</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#htw-10-12-09","title":"htw 10-12-09","text":"<p><code>Corrected item swap in index, added a few more info lines if debug mode is on</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#htw-10-10-09","title":"htw 10-10-09","text":"<p><code>Corrected max check for items on song rotation</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#htw-09-22-09","title":"htw 09-22-09","text":"<p>See changes below</p> <p><code>Changed click/aa entries to STL, added class (a couple members for future direction), a few other changes</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#dewey2461-09-19-09","title":"dewey2461 09-19-09","text":"<p>Updated to let you twist AA abilities and define clicky/AA songs from inside the game</p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#12-23-08","title":"12-23-08","text":"<p><code>Updated array lengths to add more clicky slots</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#minosdis-05-01-08","title":"MinosDis 05-01-08","text":"<p>Updated to fix /twist once</p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#simkin-12-17-07","title":"Simkin 12-17-07","text":"<p>Updated for Secrets of Faydwer 10 Songs</p> <p><code>Support items Secrets of Faydwer 10 Songs</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#10-05-04","title":"10-05-04","text":"<p><code>Support \"swap in and click\" items</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#09-15-04","title":"09-15-04","text":"<p><code>Support extra spell slot from Omens of War AA</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#09-01-04","title":"09-01-04","text":"<p><code>Command: /twist quiet to toggle some of the spam on/off</code> <code>Various code fixes/speedups</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#08-29-04","title":"08-29-04","text":"<p><code>Moved LONGSONG_ADJUST into INI file and made /twist adjust command to set it on</code> <code>the fly</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#08-25-04","title":"08-25-04","text":"<p><code>Changed output for /twist once to be slightly less misleading</code> <code>Reset click/song timers every time they're called with /twist hold or /twist once;</code> <code>if the user's specifying that song, they obviously want to cast it anyway.</code> <code>Removed the variable MissedNote as close inspection revealed the only place it was</code> <code>checked for was the line that set it. /boggle</code> <code>Minor code tweaks, cleanups, formatting changes, etc</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#pheph-08-24-04","title":"Pheph 08-24-04","text":"<p>cleaning up use of MQ2Data</p> <p><code>Modified it to use only one TLO, as I found it somewhat messy having 4 different ones.</code> <code>All the functionality of the old TLO's are now members of ${Twist}</code> <code>${Twising} is now ${Twist.Twisting}, or just ${Twist}</code> <code>${TwistCurrent} is now ${Twist.Current}</code> <code>${TwistNext} is now ${Twist.Next}</code> <code>${TwistList} is now ${Twist.List}</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#08-23-04","title":"08-23-04","text":"<p><code>Reset_ItemClick_Timers was being called far too often. Now the only time we reset</code> <code>is if a new list of songs are specified. \"/twist ${TwistList}\" is a useful alias</code> <code>if you for some reason want the old behavior.</code> <code>Sing or /twist hold now resets the cast/item timer for that song only, rather than</code> <code>the entire list.</code> <code>Command: /twist reset calls Reset_ItemClick_Timers without interfering with the</code> <code>state of the current twists.</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#08-22-04","title":"08-22-04","text":"<p><code>Command: /twist once [songlist] will cycle through the songs entered once, then</code> <code>revert to the old twist, starting with the song that was interrupted.</code> <code>Removed command \"/twist on\", it was making the string compare for \"once\" annoying,</code> <code>and I didn't think it was worth the effort for a redundant command.</code> <code>/twist delay with no argument now returns the delay without resetting it. Values</code> <code>less than 30 now give a warning...maybe they're not bards or have some other</code> <code>reason for using a low value.</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#cr4zyb4rd-08-19-04","title":"Cr4zyb4rd 08-19-04","text":"<p>taking over janitorial duties</p> <p><code>Minor revamp of item notification. Removed ITEMNOTIFY define and kludged in some</code> <code>changes from Virtuoso65 to get casting by item name working. /cast is no longer</code> <code>used.</code> <code>Added INI file support for above change. File now uses distinct entries for item</code> <code>names and slots. *Quotes not required for multi-word item names in INI.*</code> <code>Fixed the MQ2Data value TwistCurrent to display the current song as-advertised, and</code> <code>added a new value TwistNext with the old behavior of showing the next song in the</code> <code>queue. (Useful in scripting)</code> <code>Removed a few DebugSpews that were mega-spamming my debugger output.</code> <code>CastTime of -1 in the INI file now causes the default delay to be used.</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#06-01-04","title":"06-01-04","text":"<p><code>Added LONGSONG_ADJUST (default to 1 tick) to help with the timing of recasting long</code> <code>songs, such as selo's.</code> <code>Twisting is now paused when you sit (this would include camping). This fixes</code> <code>problems reported by Chyld989 (twisting across chars) and Kiniktoo (new autostand on</code> <code>cast 'feature' in EQ makes twisting funky)</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#05-19-04","title":"05-19-04","text":"<p><code>Added workaround for incorrect duration assumption for durationtype=5 songs, such as</code> <code>Cassindra's Chant of Clarity or Cassindra's Chorus of Clarity.</code> <code>Added check of char state before casting a song. Actually added for 1.05</code> <code>Checked states and resulting action are:</code> <code>Feigned, or Ducking = /stand</code> <code>Stunned = Delay</code> <code>Dead - Stop twisting.</code> <code>If you're a monk using this to click your epic, you'll want to disable the autostand on feign code =)</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#05-05-04","title":"05-05-04","text":"<p><code>Fixed CTD on song unmem or death, while twisting. Oops</code> <code>Removed circle functionality. It's better suited for a plugin like the MQ2MoveUtils</code> <code>plugin by tonio at</code><code>http://macroquest.sourceforge.net/phpBB3/viewtopic.php?t=6973</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#05-01-04","title":"05-01-04","text":"<p><code>Fixed problem with using pchar before state-&gt;ingame causing CTD on eq load (thanks MTBR)</code> <code>Fixed vc6 compile error w/ reset_itemclick_timers</code> <code>Replaced various incantations of pChar and pSpawn with GetCharInfo()</code> <code>Fixed /circle behavior w/ unspecified y/x</code> <code>Fixed /circle on when already circling and you want to update loc</code> <code>Added output of parsed circle parameters on start.</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#04-25-04","title":"04-25-04","text":"<p><code>Converted to MQ2Data</code> <code>Top Level Objects:</code> <code>bool Twisting (if NULL plugin is not loaded)</code> <code>int TwistCurrent</code> <code>string TwistList</code> <code>Removed $Param synatax for above</code> <code>Added check to make sure item twists specified are defined</code> <code>Fixed error with twist parameter processing</code> <code>Changed twist startup output to be more verbose</code> <code>Command: /twist on added as alias for /twist start</code> <code>INI File is now named per-character (MQ2Twist_Charname.ini)</code> <code>* Be sure to rename existing ini files</code> <code>Modified twist routine to take into account songs with</code> <code>non-0 recast times or longer than 3 tick durations,</code> <code>and only re-cast them after the appropriate delay.</code> <code>This is for songs like Selos 2.5 min duration, etc.</code> <code>* Note that this makes no attempt to recover if the song</code> <code>effect is dispelled, your macro will need to take care</code> <code>of that.</code> <code>Added ability to compile-time change the method used for</code> <code>clicking items.</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#04-13-04","title":"04-13-04","text":"<p><code>Changed /circle command to allow calling w/o specifying loc</code> <code>Corrected a problem with multiple consecutive missed notes</code> <code>Added handling of attempting to sing while stunned</code> <code>Command: /twist slots, to list the slot to # associations</code> <code>Command: /twist reload, to reload the ini file on the fly</code> <code>Command: /twist end, /twist off as aliases for /twist stop</code> <code>Command: /sing #, as an alias for /twist hold #</code></p> <p><code>Added support for item clickies. Clickies are specified</code> <code>as \"gem\" 10-19. For example, /twist 1 2 10 12</code></p> <p><code>Added INI file support for storing item clicky info</code> <code>and default twist delay.</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#04-11-04","title":"04-11-04","text":"<p><code>Integrated the /circle code from Easar, runs in a circle. type</code> <code>/circle for help.</code></p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#cybertech-03-31-04","title":"CyberTech 03-31-04","text":"<p>w/ code/ideas from Falco72 &amp; Space-boy</p>"},{"location":"plugins/community-plugins/mq2twist/mq2twist-revisions/#koad-03-24-04","title":"koad 03-24-04","text":"<p>Original plugin \\([http://macroquest.sourceforge.net/phpBB3/viewtopic.php?t=5962&amp;start=2](http://macroquest.sourceforge.net/phpBB3/viewtopic.php?t=5962&amp;start=2)\\)</p>"},{"location":"plugins/core-plugins/","title":"Core Plugins","text":""},{"location":"plugins/core-plugins/mq2autologin/","title":"MQ2AutoLogin","text":"","tags":["plugin"]},{"location":"plugins/core-plugins/mq2autologin/#description","title":"Description","text":"<p>AutoLogin is a plugin that automatically logs in your characters. It can also switch characters, servers and login new accounts via commandline. It was originally made by ieatacid.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2autologin/#setting-up-profiles-via-tray-icon","title":"Setting up profiles via tray icon","text":"<p>Right click on your MacroQuest tray icon</p> <p>Select Profiles-&gt;Create New.</p> <p>You'll be asked to enter nine fields:</p> <ol> <li>Profile Set: (This creates \"groups\" of profiles, enter any custom name)</li> <li>EQ Path: (Path to eqgame.exe)</li> <li>Login: (EverQuest login)</li> <li>Password:  (EverQuest password)</li> <li>Server: (Server short name)</li> <li>Character Name:</li> <li>Class: (Optional)</li> <li>Level: (Optional)</li> <li>Hotkey: (Assign a key or combination of keys to bring this character's window to the front)</li> </ol> <p>Upon clicking \"Save\", your profile will be encrypted and saved in MQ2AutoLogin.ini</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2autologin/#commands","title":"Commands","text":"<p><code>/switchserver &lt;server short name&gt; &lt;character name&gt;</code></p> <p>Will log out your current character and log in the specified server/character on the same account.</p> <p><code>/switchchar &lt;name&gt;</code></p> <p>Will log out your current character and log in the specified character on the same account/server.</p> <p><code>/loginchar [server:character|profile_server:character|server^login^character^password|server^login^password]</code></p> <p>Will open a new EverQuest instance and login the specified character. Example: <code>/loginchar vox:bobby</code></p> <p><code>/relog [#s|#m]</code></p> <p>Will log character out, and then log back in after specified time. Default time is in seconds. Example: <code>/relog 5m</code></p> <p><code>END</code> and <code>HOME</code></p> <p>Pressing the \"END\" key at the character select screen will pause autologin, \"HOME\" will unpause.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2autologin/#ini","title":"INI","text":"<p>MQ2AutoLogin.ini has the following global settings, <pre><code>[Settings]\n;The following settings are global. Settings changed for specific characters will override them.\nNotifyOnServerUp=1\n;0 is off, 1 is beep, 2 is email via MQ2Gmail\nKickActiveCharacter=1\n;0 is off, 1 is on. Will attempt to boot an active player to log in.\nEndAfterCharSelect=1\n;0 is off, 1 is on.\nCharSelectDelay=3\n;seconds to wait at the character select screen. Default is 3\nConnectRetries=0\n;How many attempts to connect after a failure\nUseMQ2Login=1\n;Uses the default, encrypted method of autologin\nUseStationNamesInsteadOfSessions=0\n;Stores your login and pass in plaintext in MQ2AutoLogin.ini, but is compatible with ISBoxer/WinEQ.\n</code></pre> If you're using <code>UseMQ2Login=1</code> and have created profiles via the tray icon, there will be additional sections such as <code>[Profiles]</code> and profile names. These should be left alone, as their settings are best changed via the GUI.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2autologin/#alternate-login-methods","title":"Alternate login methods","text":"<p>There are two alternate login methods: Sessions (compatible with the EverQuest launcher and \"-patchme\" login method) and Station Names (best for WinEQ and ISBoxer)</p> <p>If you'd like to use sessions, set <code>UseMQ2Login=0</code>, and add sessions to the MQ2AutoLogin.ini in this format,</p> <p>Sessions example INI <pre><code>[Settings]\nUseMQ2Login=0\n\n[Session1]\nStationName=StationNameforSession\nPassword=PasswordforSession\nServer=ServerforSession\nCharacter=Name\n\n[Session2]\nStationName=StationNameforSession\nPassword=PasswordforSession\nServer=ServerforSession\nCharacter=Name\n</code></pre></p> <p>If you're using ISBoxer, set <code>UseMQ2Login=0</code> AND <code>UseStationNamesInsteadOfSessions=1</code>, and add station names to the MQ2AutoLogin.ini in this format,</p> <p>Station names example INI <pre><code>[Settings]\nUseMQ2Login=0\nUseStationNamesInsteadOfSessions=1\n\n[StationName1]\nPassword=PasswordforThisLoginName\nServer=ServerforThisLoginName\nCharacter=CharacterforThisLoginName\n\n[StationName2]\nPassword=PasswordforThisLoginName\nServer=ServerforThisLoginName\nCharacter=CharacterforThisLoginName\n</code></pre></p> <p>Additional settings from the global section, such as <code>KickActiveCharacter=1</code> can be added to session or station name sections to affect only that character.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2autologin/#list-of-server-short-names","title":"List of server short names","text":"<pre><code>antonius\nbertox\nbristle\ncazic\ndrinal\nerollisi\nfiriona\nluclin\nphinigel\npovar\nragefire\nrathe\nrizlona\ntunare\nvox\nxegony\nzek\ntest\nbeta\n</code></pre>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2autologin/#custom-server-names","title":"Custom server names","text":"<p>To add a new server with a custom short name, which is particularly important for emulators, edit your MQ2AutoLogin.ini with the following format: <pre><code>[Servers]\nshortname=Exact long name (as it appears on login screen)\n</code></pre></p> <p>Make sure <code>shortname</code> matches servers internal shortname exactly.  You can get this information from logging into the server and running <code>/echo ${EverQuest.Server}</code></p> <p>For example, here are the most popular macroquest-compatible emu servers as of 8/5/2022: <pre><code>; Host=login.eqemulator.net\n[Servers]\nEZ (Linux) x4 Exp=[] EZ Server - Custom Zones, Vendors, Quests, Items, etc\nImperium_EQ=[] Imperium Server - Solo Level/Duo+ Raid\nPEQTGC=[] PEQ] The Grand Creation | Dragons of Norrath\nProject Lazarus=[] Project Lazarus\nHiddenForest=[] The Hidden Forest [ www.thehiddenforest.org ]\nHaven=[] Wayfarers Haven [wayfarershaven.com]\nCWR=[] Clumsy's World [Velious, Semi-Custom, QoL+]\nDxBx=[] DreadBox:Re-Dredged BETA\nE9 Profusion=[] Enine's ProFusion\nEQTitan=[] EQT ) EQTitan [Legit PoP/LDoN/GoD]\nThe Firiona Vie Project=[] FVP - The Firiona Vie Project (Kunark)\nIxiQuest=IxiQuest - (ixiquest.com) Classic to Velious +\nKMRA=Raid Atticts (Fully Custom) [Solo/Group/Raid]\nThe Dark Exile=[] The Dark Exile\nShowdowrest=[[R] ] Shadowrest\nAlternate Everquest=[[R] ]Alternate\nEQ Might=[[R] ] EQ Might\n</code></pre></p> <pre><code>; Host=login.projecteq.net\n[Servers]\nProject Lazarus=Project Lazarus\n</code></pre>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2autologin/#mq2login-profiles-gui","title":"MQ2Login Profiles GUI","text":"<p>Right click on the MacroQuest tray icon -&gt; Profiles</p> <p><code>Check marks:</code></p> <p>A checked character will be loaded when clicking \"Profile-&gt;Load All\". Right-clicking a character's name will toggle the checkmark on or off.</p> <p><code>Loading individual accounts:</code></p> <p>Left click on a character name and if checked, it will login and load MacroQuest. Left-clicking a loaded character will unload MacroQuest for that character.</p> <p><code>Batch Files and hotkeys:</code></p> <p>If you currently use batch files or hotkeys or whatever, those should still be usable if you don't want to click the menu. Example: \\(this example assumes you HAVE profiles created with \"Create New...\" in mq2autologin.ini\\) Batch file can launch your accounts by sending the server_charname to the eqgame client like this:  patchme /login:drinal_eqmule And that's really all there is to it... You would of course change the server and Charname to your server and your char \\(drinal and eqmule\\)</p> <p><code>Encryption:</code></p> <p>If you make profiles via the tray icon GUI, they are encrypted in your MQ2AutoLogin.ini. Moving your file to another computer or changing computer hardware will invalidate these logins, so please use import/export for backup and moving purposes.</p> <p><code>Import/Export</code></p> <p>This helps export and import login profiles, which are otherwise hard to decrypt.</p> <p><code>Launch Clean</code></p> <p>Launch single sessions without logging in.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2chat/","title":"MQ2Chat","text":"","tags":["plugin"]},{"location":"plugins/core-plugins/mq2chat/#description","title":"Description","text":"<p>This plugin directs all of the MQ2 output to your main EQ chat window. Be careful if doing a /report or /petition because MQ2 output will be visible in the /report lines that you send.</p> <p>By default, MQ2 output is set to go to a separate MQ2 window, which is handled by the MQ2ChatWnd plugin.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2eqbugfix/","title":"MQ2EQBugFix","text":"","tags":["plugin"]},{"location":"plugins/core-plugins/mq2eqbugfix/#description","title":"Description","text":"<p>This plugin is used to correct bugs in EQ.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2labels/","title":"MQ2Labels","text":"","tags":["plugin"]},{"location":"plugins/core-plugins/mq2labels/#description","title":"Description","text":"<p>This plugin allows you to use MQ2Data within your EQ UI.</p> <ul> <li>It provides a number of EQTypes that can be used exactly as you use the built-in EQTypes.</li> <li>If there is not a suitable EQType for your use, you can use ToolTips to display custom information.</li> </ul>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2labels/#mq-eqtypes","title":"MQ EQTypes","text":"<ul> <li>1000: ${Me.CurrentMana}</li> <li>1001: ${Me.MaxMana}</li> <li>1002: ${Me.State}</li> <li>1003: ${Me.Speed}</li> <li>1004: ${Me.Heading}</li> <li>1005: ${Me.X}</li> <li>1006: ${Me.Y}</li> <li>1007: ${Me.Z}</li> <li>1008: ${Me.Dar}</li> <li>1009: ${Me.Cash}</li> <li>1010: ${Me.CashBank}</li> <li>1011: ${Me.Platinum}</li> <li>1012: ${Me.PlatinumShared}</li> <li>1013: ${Me.Gold}</li> <li>1014: ${Me.SilverBank}</li> <li>1015: ${Me.CopperBank}</li> </ul> <p>* 2000: ${Target.Level}</p> <ul> <li>2001: ${Target.Class}</li> <li>2002: ${Target.Race}</li> <li>2003: ${Target.Distance}</li> <li>2004: none</li> <li>2005: ${Target.State}</li> <li>2006: ${Target.X}</li> <li>2007: ${Target.Y}</li> <li>2008: ${Target.Z}</li> <li>2009: ${Target.Heading}</li> <li>2010: ${Target.Speed}</li> <li>2011: ${Target.ID}</li> </ul> <p>* 3000: ${Zone}</p> <ul> <li>3001: none</li> <li>3002: ${Me.Bound}</li> <li>3003: ${Time.Time24}</li> <li>3004: ${Time.Hour}</li> <li>3005: ${Time.Minute}</li> <li>3006: ${Time.Second}</li> <li>3007: ${Time.Date}</li> <li>3008: ${Time.Year}</li> <li>3009: ${Time.Month}</li> <li>3010: ${Time.Day}</li> <li>3011: \\({If\\[\\){Spawn.ID},TRUE,FALSE]}</li> <li>3012: ${Me.FreeInventory}</li> </ul>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2labels/#example","title":"Example","text":"<p>TargetLevel2000 2true243322140255255 **0**truefalsetruefalse</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2labels/#using-tooltips","title":"Using Tooltips","text":"<p>Tooltips can be used to add any information \\(even information from plugins or macros\\) that doesn't have a built-in EQType. You add the EQType of 9999 and then add the MQ2Data string that gives you your required information within the</p> <p>tags.`9999``${variable}`</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2labels/#example_1","title":"Example","text":"<p>Buff0Duration9999${Me.Buff1.Duration} 2true23315314255255 **255**truefalsefalse</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2labels/#note-about-tooltipreference","title":"Note about ToolTipReference","text":"<p>There are certain characters that are used in XML Code that are reserved. If these characters are used in the tooltipreference they will cause errors and the UI will fail to load. The most notable of these characters is the \"\\&lt;\" symbol. The \"&gt;\" symbol can still be used for comparisons. So In cases where you would use \"\\&lt;\", rephase the statement to use \"&gt;\" instead. The \"&amp;\" character also causes problems. In the case where you use a \"&amp;&amp;\" in your if statements use nested ifs to get around the problem.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2labels/#example_2","title":"Example","text":"<p>\\({If\\[\\) &amp;&amp; \\({Target.Casting},\\)} is casting.,]</p> <p>would become</p> <p>\\({If\\[\\),\\({If\\[\\)},${Target.CleanName} is casting.,]},]</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2bzsrch/","title":"MQ2Bzsrch","text":"","tags":["plugin"]},{"location":"plugins/core-plugins/mq2bzsrch/#description","title":"Description","text":"<p>This plugin adds some bazaar searching functionality.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2bzsrch/#commands","title":"Commands","text":"<p>/bzsrch  </p> <ul> <li> can be one of the following:</li> <li>race any|barbarian|dark elf|dwarf|etc</li> <li>class any|bard|beastlord|berserker|etc</li> <li>stat any|armor class|agility|charisma|etc</li> <li>slot any|ammo|arms|back|charm|chest|etc</li> <li>type any|1h slashing|1h blunt|2h blunt|etc</li> <li>price  </li> <li> is the name or partial name of the item you wish to search for</li> </ul>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2bzsrch/#top-level-objects","title":"Top-Level Objects","text":"<ul> <li>bazaar Bazaar</li> </ul>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2bzsrch/#data-types","title":"Data types","text":"<ul> <li>bazaar</li> <li>bazaaritem</li> </ul>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2bzsrch/#examples","title":"Examples","text":"","tags":["plugin"]},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-datatype-bazaar/","title":"DataType:bazaar","text":"","tags":["datatype"]},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-datatype-bazaar/#members","title":"Members","text":"bool Done Search complete? int Count Number of results bazaaritem Item Result info by index \\(1-based\\) To String Same as Done","tags":["datatype"]},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-datatype-bazaaritem/","title":"DataType:bazaaritem","text":"","tags":["datatype"]},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-datatype-bazaaritem/#members","title":"Members","text":"string Name Item name spawn Trader The guy selling it int Price Price the guy is selling it for int Quantity Number of this item this guy has int ItemID The item's ID number int Value Value in the \"Stat column\" \\(last column of the search window, eg. save vs fire, int, wis, etc\\). NOT the value of the Item. Returns 0 if nothing is there. To String Same as Name","tags":["datatype"]},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-tlo-bazaar/","title":"TLO:Bazaar","text":"","tags":["tlo"]},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-tlo-bazaar/#description","title":"Description","text":"<p>Object containing bazaar search data.</p>","tags":["tlo"]},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-tlo-bazaar/#forms","title":"Forms","text":"<ul> <li>bazaar Bazaar</li> </ul>","tags":["tlo"]},{"location":"plugins/core-plugins/mq2bzsrch/mq2bzsrch-tlo-bazaar/#access-to-types","title":"Access to Types","text":"<ul> <li>bazaar bazaar</li> </ul>","tags":["tlo"]},{"location":"plugins/core-plugins/mq2chatwnd/","title":"MQ2ChatWnd","text":"","tags":["plugin"]},{"location":"plugins/core-plugins/mq2chatwnd/#description","title":"Description","text":"<p>This plugin adds an additional window to your UI which displays ALL information generated by MQ2.</p> <p>Note: Any information displayed or typed in this window will NOT go into your character log. It is invisible to EverQuest \\(and invisible to /petitions and /reports too\\).</p> <p>This plugin is setup by default and very much recommended. You can however use the MQ2Chat plugin to force MQ2 information to the main EQ chat window if you wish to ignore this recommendation.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2chatwnd/#commands","title":"Commands","text":"<ul> <li>/style 0xN</li> </ul> <p>Set the style bit corresponding to 0xN or unset it if ! is supplied. See EQ documentation for further details about WindowStyle.</p> <ul> <li>/mqfont #</li> </ul> <p>Sets the font size on this window. Note: This is not the same as the EQ command /chatfontsize; /mqfont reduces the spacing between the lines of text within the window.</p> <ul> <li>/mqmin</li> </ul> <p>Toggle the minimization of MQ2ChatWnd</p> <ul> <li>/mqclear</li> </ul> <p>Clears the chat buffer of MQ2ChatWnd</p> <ul> <li>/mqchat reset</li> </ul> <p>Resets the location and options for the MQ2 Chat window</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2chatwnd/#configuration","title":"Configuration","text":"<p>MQ2ChatWnd stores a configuration file to the root MQ2 folder, MQ2ChatWnd.ini. This file stores the chat window position, color, title, and other settings for every character you create, by default. There are new user-configurable options that have been added:</p> <pre><code>[Settings]\nAutoScroll=on\nNoCharSelect=off\nSaveByChar=on\n</code></pre> <ul> <li>AutoScroll</li> </ul> <p>By default set to on, this automatically scrolls to the bottom of the chat window every time a new text line is displayed. If you set this option to off, the chat window will retain your current slider position rather than automatically scroll to the bottom.</p> <ul> <li>NoCharSelect</li> </ul> <p>By default set to off, this displays the chat window at the character select screen. If you set this option to on, the chat window will only display when you have entered or re-entered the world.</p> <ul> <li>SaveByChar</li> </ul> <p>By default set to on, this creates a new INI entry for every character that you log in so that each character uses its own window position and settings. If you set this option to off, a single  section will be created and all characters will use the same window position and settings.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2chatwnd/#key-binding","title":"Key Binding","text":"<p>MQ2 creates a key binding for MQ2ChatWnd by default \\(the . key\\). This entry is created in a similar manner to the /bind command, and will create an entry in your MacroQuest.ini file under the  section. The default entry is given the name MQ2CHAT_Nrm, and may be changed by the user prior to starting MQ2, or using the /bind command.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2chatwnd/mqclear/","title":"/mqclear","text":"","tags":["command"]},{"location":"plugins/core-plugins/mq2chatwnd/mqclear/#syntax","title":"Syntax","text":"<p>/mqclear</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2chatwnd/mqclear/#description","title":"Description","text":"<p>Clears the chat buffer in the MQ2ChatWnd.</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2chatwnd/mqfont/","title":"/mqfont","text":"","tags":["command"]},{"location":"plugins/core-plugins/mq2chatwnd/mqfont/#syntax","title":"Syntax","text":"<p>/mqfont #</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2chatwnd/mqfont/#description","title":"Description","text":"<p>Changes the size of the font in the MQ2ChatWnd.</p> <p>Notes</p> <ul> <li>The font sizes are not the same as EQ's chat window sizes</li> <li>Suggested use: numbers in the range of -3 to 2</li> </ul>","tags":["command"]},{"location":"plugins/core-plugins/mq2chatwnd/mqmin/","title":"/mqmin","text":"","tags":["command"]},{"location":"plugins/core-plugins/mq2chatwnd/mqmin/#syntax","title":"Syntax","text":"<p>/mqmin</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2chatwnd/mqmin/#description","title":"Description","text":"<p>Minimizes the MQ2ChatWnd.</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2custombinds/","title":"MQ2CustomBinds","text":"","tags":["plugin"]},{"location":"plugins/core-plugins/mq2custombinds/#description","title":"Description","text":"<p>This plugin allows you to specify custom commands that are executed when specific key combinations are pressed.</p> <p>You may specify a command for when the key is pressed \\(down\\), and another for when it is released \\(up\\).</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2custombinds/#commands","title":"Commands","text":"<p>/custombind</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2custombinds/custombind/","title":"/custombind","text":"","tags":["command"]},{"location":"plugins/core-plugins/mq2custombinds/custombind/#syntax","title":"Syntax","text":"<p>/custombind  ] </p>","tags":["command"]},{"location":"plugins/core-plugins/mq2custombinds/custombind/#description","title":"Description","text":"<p>This command is used to add, delete, list or change custom key bindings. See /bind and /dumpbinds.</p> /custombind list Lists all your custom bind names and commands \\(the key combinations must be set using /bind\\) /custombind add bindname Add a new bind called bindname ready for use. /custombind delete bindname Remove the custom bind bindname. /custombind clear name This will clear a specific command for a custom bind. If -up or -down is not specified it defaults to -down. /custombind set bindname Will set a specific command for a custom bind. This too defaults to -down if not specified.","tags":["command"]},{"location":"plugins/core-plugins/mq2custombinds/custombind/#example","title":"Example","text":"<p>Note</p> <p>MQ's very first bind command is \"RANGED\" so you do not need to do this, it is just listed here as an example.</p> <pre><code>    /custombind add mybind\n    /custombind set mybind /ranged\n    /bind mybind n\n</code></pre> <p>This binds the /ranged command to the n key.</p> <p>Example of using down and up</p> <pre><code>/custombind add echotest\n/custombind set echotest-down /echo n key is down!\n/custombind set echotest-up /echo n key is up!\n/bind echotest n\n</code></pre>","tags":["command"]},{"location":"plugins/core-plugins/mq2hud/","title":"MQ2HUD","text":"","tags":["plugin"]},{"location":"plugins/core-plugins/mq2hud/#description","title":"Description","text":"<p>This plugin provides a Heads Up Display for your EQ window, which can provide a large amount of information in a relatively small amount of space. The HUD acts as a transparent background layer, upon which any information can be displayed. Each element of the HUD gets parsed each time MQ2Data is displayed, so there is no need to reload the HUD after making changes to the .ini file, they are instantly available as soon as you save.</p> <p>The HUD is customized by entries in the MQ2HUD.ini file. The .ini file allows any number of HUDs to be created and saved within. Loading a new HUD from the .ini file can be done with <code>/loadhud</code>. The entry names are not case-sensitive.</p> <p>The default HUD entry is called  and can be loaded with the <code>/defaulthud</code> command.</p> <p>You can toggle the display of the HUD by using F11.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2hud/#commands","title":"Commands","text":"<ul> <li>/hud</li> <li>/loadhud</li> <li>/defaulthud</li> <li>/classhud</li> <li>/zonehud</li> </ul>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2hud/#top-level-objects","title":"Top-Level Objects","text":"<ul> <li>string HUD</li> </ul> <p>Name of currently loaded HUD</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2hud/#ini-file-format","title":"INI File Format","text":"<p>Entries in the MQ2HUD.ini file are in the following format:</p> <p><code>[Elements]</code> <code>TYPE,X,Y,RED,GREEN,BLUE,TEXT</code></p> <ul> <li>TYPE can be a combination of the following \\(just add the numbers\\):</li> <li>1: Display in non-fullscreen mode</li> <li>2: Display in fullscreen mode \\(\"F10 mode\"\\)</li> <li>4: Based on cursor location</li> <li>8: Display at charselect</li> <li>16: Only parse if a macro IS running</li> <li>X and Y denote the location of the entry on the screen \\(0,0 is the upper left of your screen\\)</li> <li>RED, GREEN and BLUE are RGB values for the TEXT color \\(255,255,255 is white; 0,0,0 is black\\)</li> <li>TEXT is the MQ2Data you wish to display. As a tip, the If TLO is very useful here.</li> </ul>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2hud/#examples","title":"Examples","text":"<p><code>[Elements]</code> <code>TargetInfo=3,5,35,255,255,255,${Target}</code> <code>GMIndicator=3,5,45,0,0,255,${Spawn[gm]}</code> <code>CursorItemName=7,-15,-15,255,255,255,${If[${Cursor.ID},${Cursor},]}</code> <code>ClickMeForFun=6,-25,-25,255,255,255,${If[!${Cursor.ID},click me,]}</code> <code>MacroName=19,5,70,255,255,255,${If[${Bool[${Macro}]}, Current Macro Running - ${Macro},]}</code></p> <p>In the above HUD, the CursorItemName entry states that it will show the name of your cursor item in all modes. Using 6 as the TYPE will display the cursor in full-screen mode only.</p> <p><code>/loadhud bard</code></p> <p>This will load the  section of the MQ2HUD.ini.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2hud/#code-segments","title":"Code Segments","text":"<p>This section contains code segments to help you customize your HUD. Please be sure to substitute the X, Y cords for the location you'd like to see them on your HUD.</p> <p><code>//AAXP</code> <code>AAXPText=3,X,Y,255,234,8,AAXP</code> <code>AAXP=3,X,Y,255,234,8,${Me.PctAAExp}</code></p> <p><code>//AttackSpeed</code> <code>AttackSpeedText=3,X,Y,255,234,8,AttackSpeed :</code> <code>AttackSpeed=3,X,Y,255,234,8,${Me.AttackSpeed}</code></p> <p><code>//Date</code> <code>Datetext=3,X,Y,255,234,8,Todays Date Is</code> <code>Date=3,X,Y,255,234,8,${Time.Date}</code></p> <p><code>//Damage Absorb Left</code> <code>DamageShieldText=3,X,Y,255,234,8,Dmg Abs. Left</code> <code>DamageShield=3,X,Y,255,234,8,${Me.Dar}</code></p> <p><code>//Vet AA's</code> <code>ThroneText=3,500,402,255,234,8,GL Port - - - -</code> <code>ThroneReadyText=3,610,402,0,255,0,${If[${Me.AltAbilityReady[Throne Of Heroes]},Ready,]}</code> <code>ThroneNotReady=3,610,402,255,0,0,${If[!${Me.AltAbilityReady[Throne Of Heroes]},${Me.AltAbilityTimer[Throne Of Heroes].TimeHMS},]}</code></p> <p><code>//what macro is currently running</code> <code>Macro1=3,110,110,0,250,0,${If[${Macro.Name.NotEqual[\"NULL\"]},${Macro.Name},]}</code> <code>Macro2=3,10,110,225,250,225,MACRO RUNNING =</code></p> <p><code>//if the macro Raid Druid (Autobot) is currently paused</code> <code>RDPauseInd1=3,10,122,225,250,225,RD PAUSED =</code> <code>RDPauseInd2=3,85,122,225,0,0,${RDPause}</code></p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2hud/classhud/","title":"/classhud","text":"","tags":["command"]},{"location":"plugins/core-plugins/mq2hud/classhud/#syntax","title":"Syntax","text":"<p>/classhud</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2hud/classhud/#description","title":"Description","text":"<ul> <li>Loads the HUD section for your class</li> <li>You must have a  section in MQ2HUD.ini</li> </ul>","tags":["command"]},{"location":"plugins/core-plugins/mq2hud/defaulthud/","title":"/defaulthud","text":"","tags":["command"]},{"location":"plugins/core-plugins/mq2hud/defaulthud/#syntax","title":"Syntax","text":"<p>/defaulthud</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2hud/defaulthud/#description","title":"Description","text":"<p>Loads the default HUD.</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2hud/hud/","title":"/hud","text":"","tags":["command"]},{"location":"plugins/core-plugins/mq2hud/hud/#syntax","title":"Syntax","text":"<p>/hud </p>","tags":["command"]},{"location":"plugins/core-plugins/mq2hud/hud/#description","title":"Description","text":"<p>Defines how the HUD is displayed.</p> <ul> <li>Normal</li> <li>Above the EQ UI but will not be displayed if pressing F11.</li> <li>UnderUI</li> <li>Under the EQ UI and will disappear if F11 is pressed.</li> <li>Always</li> <li>The HUD will always be present above the EQ UI and will not disappear when F11 is pressed.</li> </ul>","tags":["command"]},{"location":"plugins/core-plugins/mq2hud/loadhud/","title":"/loadhud","text":"","tags":["command"]},{"location":"plugins/core-plugins/mq2hud/loadhud/#syntax","title":"Syntax","text":"<p>/loadhud hudname</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2hud/loadhud/#description","title":"Description","text":"<p>Load the specified HUD defined in MQ2HUD.ini</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2hud/zonehud/","title":"/zonehud","text":"","tags":["command"]},{"location":"plugins/core-plugins/mq2hud/zonehud/#syntax","title":"Syntax","text":"<p>'''/zonehud</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2hud/zonehud/#description","title":"Description","text":"<ul> <li>Loads the HUD section for your current zone</li> <li>You must have a  section in MQ2HUD.ini</li> </ul>","tags":["command"]},{"location":"plugins/core-plugins/mq2itemdisplay/","title":"MQ2ItemDisplay","text":"","tags":["plugin"]},{"location":"plugins/core-plugins/mq2itemdisplay/#description","title":"Description","text":"<p>This plugin shows spell and item data in the item display window.</p> <p>\\(MQ2GearScore has since been merged with MQ2itemdisplay\\)</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2itemdisplay/#commands","title":"Commands","text":"<p>/inote \"Comment\" Add/delete a note to a specific item number. This information will be displayed within the item info window, under all the other information.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2itemdisplay/#_1","title":"MQ2ItemDisplay","text":"","tags":["plugin"]},{"location":"plugins/core-plugins/mq2itemdisplay/#top-level-objects","title":"Top-Level Objects","text":"<ul> <li>item DisplayItem</li> </ul> <p>This references the last item display window that was opened.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2itemdisplay/#ini-file","title":"INI File","text":"<p>All the /inote information is stored in the MQ2ItemDisplay.ini file in the following format:</p> <pre><code>[Notes]\n0019542=This is found on the Great Saprophyte in EC&lt;nowiki&gt;&lt;br&gt;&lt;/nowiki&gt;Rarity is about 1 in 5\n</code></pre> <p>The <code>&lt;br&gt;</code> tag can be used to insert a line break. Sometimes it is easier to edit the file itself rather than type the whole string from within the game \\(also makes copying and pasting easier\\). The INI file is re-read every time the item display window is opened, so changes take effect immediately.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2itemdisplay/#example","title":"Example","text":"<p>In the following example, the line is broken into 4 for readability, in the MQ2ItemDisplay.ini file, it would all be 1 line.</p> <p><code>0017910&lt;br&gt;Field.....Round....Large....Wood....16&lt;br&gt;Field.....Round....Medium.Wood...36&lt;br&gt;Field.....Parab.....Large....Wood...46&lt;br&gt;Field.....Round....Small...Wood....56&lt;br&gt;Field.....Round....Large...Bone.....68&lt;br&gt;Field.....Shield....Large...Wood....82&lt;br&gt;Hooked.Round....Large...Wood....102&lt;br&gt;Field.....Wood*...Large...Wood....122&lt;br&gt;Field.....Round....Large..Ceramic.135&lt;br&gt;Field.....Bone*....Large..Wood.....162&lt;br&gt;Silver....Round....Large..Wood.....182&lt;br&gt;Field....Ceramic*.Large..Wood.....202</code></p> <p>The info displayed would look like this: Note: Field.....Round....Large....Wood....16 Field.....Round....Medium.Wood...36 Field.....Parab.....Large....Wood...46 Field.....Round....Small...Wood....56 Field.....Round....Large...Bone.....68 Field.....Shield....Large...Wood....82 Hooked.Round....Large...Wood....102 Field.....Wood*...Large...Wood....122 Field.....Round....Large..Ceramic.135 Field.....Bone*....Large..Wood.....162 Silver....Round....Large..Wood.....182 Field....Ceramic*.Large..Wood.....202</p> <p>See here and here \\(VIP only\\) for some user-contributed ini file entries.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2itemdisplay/inote/","title":"/inote","text":"","tags":["command"]},{"location":"plugins/core-plugins/mq2itemdisplay/inote/#syntax","title":"Syntax","text":"<p>/inote add|del # </p>","tags":["command"]},{"location":"plugins/core-plugins/mq2itemdisplay/inote/#description","title":"Description","text":"<ul> <li>This is used to add additional text to the display window for a certain item</li> <li>The item number # must always be present</li> <li>The comment text can contain   tags to break the line of text</li> </ul>","tags":["command"]},{"location":"plugins/core-plugins/mq2itemdisplay/inote/#example","title":"Example","text":"<pre><code>/inote add 19542 This is found on the Great Saphrophyte in EC&lt;br&gt;Rarity is about 1 in 5\n</code></pre> <p>The text at the end of the additional information in blue on the item display window will be:</p> <pre><code>Note: This is found on the Great Saphrophyte in EC\nRarity is about 1 in 5\n</code></pre>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/","title":"MQ2Map","text":"","tags":["plugin"]},{"location":"plugins/core-plugins/mq2map/#description","title":"Description","text":"<p>This plugin provides additional functionality to the in game map.</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2map/#commands","title":"Commands","text":"<ul> <li>/highlight</li> <li>/mapclick</li> <li>/mapfilter</li> <li>/maphide</li> <li>/mapnames</li> <li>/mapshow</li> </ul>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2map/#top-level-objects","title":"Top-Level Objects","text":"<ul> <li>spawn MapSpawn</li> </ul> <p>Object that is created when your cursor hovers over a spawn on the map</p>","tags":["plugin"]},{"location":"plugins/core-plugins/mq2map/highlight/","title":"/highlight","text":"","tags":["command"]},{"location":"plugins/core-plugins/mq2map/highlight/#syntax","title":"Syntax","text":"<p>/highlight spawnname </p>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/highlight/#description","title":"Description","text":"<ul> <li>Temporarily highlights spawnname on the in-game map</li> <li>Color # # # can be used to specify an RGB value for the highlighted spawn\\(s\\)</li> <li>Note: You can use Spawn Search filters in spawnname</li> </ul>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapclick/","title":"/mapclick","text":"","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapclick/#syntax","title":"Syntax","text":"<p>/mapclick  command</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapclick/#description","title":"Description","text":"<p>Allows you to define custom commands to execute when right-clicking with a certain key combination on the in-game map.</p> <ul> <li>List will show you the current mapclicks that have been defined.</li> <li>Keycombo can be one or more of the following \\(multiple keys must be specified with +\\):</li> <li>ctrl</li> <li>lalt</li> <li>ralt</li> <li>shift</li> <li>The default mapclicks are the following:</li> </ul> ctrl /maphide id %i Hides that spawn from the map lalt /highlight id %i Highlights the clicked spawn","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapclick/#example","title":"Example","text":"<pre><code>/mapclick lalt+shift /mycommand %i\n</code></pre> <p>When holding down the left alt, shift and then right-clicking a spawn on the map, \"/mycommand %i\" will be executed.</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapfilter/","title":"Mapfilter","text":"","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapfilter/#syntax","title":"Syntax","text":"<p>/mapfilter help|option </p>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapfilter/#description","title":"Description","text":"<p>This controls what appears or does not appear on the in-game map provided by MQ2Map.</p> <ul> <li>Help will show all current settings.</li> <li>Option can be one of the following followed by \"show\" or \"hide\". If no show/hide argument is given, it will</li> </ul> <p>toggle the setting between show and hide.</p> All Shows/hides all map items that have already been set to \"show\". Aura Show/hide auras. Banner Show/hide guild banner. Campfire Show/hide campfire. CastRadius # Show a cast radius circle around your own spawn on the map. Set to \"hide\" or \"0\" to disable. Chest Show/hide chests. Corpse Master toggle to show/hide all corpses \\(PC and NPC\\). Custom searchfilter Set a custom filter, which can contain any filtering arguments from the Spawn Search page. Group Whether group members should be listed in another color. Ground Show/hide ground spawns. Merceneary Show/hide mercenaries. Menu Enable or disable the right-click context menu Mount Show/hide mounts. Named Displays only 'named' NPCs, other NPCs are filtered out \\(not perfect\\). NormalLabels Toggles normal EQ \\(non-MQ2\\) label display. NPC Show/hide all NPCs. NPCConColor Whether the dots on the map should be the same as the NPCs con colors. NPCCorpse Show/hide NPC corpses. Object Show/hide destructible objects \\(as were implemented in Prophecy of Ro expansion\\), like catapults, tents, practice dummies, etc. PC Show/hide all Player Characters. PCConColor Whether the dots on the map should be the same as the PCs con colors. PCCorpse Show/hide Player corpses. Pet Show/hide pets. SpellRadius # Show another radius circle around your own spawn. Functions the same way as CastRadius. Target Show your target in a different color. TargetLine Draw a line between yourself and your target. TargetMelee Draw a melee range circle around your target. TargetRadius # Draw a radius of # around your target. Using \"hide\" or \"0\" will disable the TargetRadius circle. Timer Show/hide timers. Trigger Show/hide trigger locations. Trap Show/hide traps. Vector Display heading vectors. Untargettable Show/hide untargettable spawns. <ul> <li>Any of the above options can have \"color R# G# B#\" added to them, to set the color for that specific option. Omit</li> </ul> <p>the R# G# B# values to reset them back to default.</p> <p>Note: The use of custom is a one time event, it is not persistent.</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapfilter/#examples","title":"Examples","text":"<p>This will set a red CastRadius circle around your own spawn on the MQ2 map.</p> <p><code>/mapfilter castradius color 255 0 0</code></p> <p>This will display all NPCs between level 60 and 65 within a radius of 50</p> <p><code>/mapfilter custom npc range 60 65 radius 50</code></p> <p>This will display all NPCs within a radius of 1000</p> <p><code>/mapfilter custom npc radius 1000</code></p> <p>This command can also be used at larger ranges by entering a larger number.</p> <p>To restore the settings saved in your ini and remove your custom filters use the command without any parameters.</p> <p><code>/mapfilter custom</code></p>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapfilter/#troubleshooting","title":"Troubleshooting","text":"<p>Question:</p> <p>My map is no different than normal and /mapfilter all had no effect, what did I do wrong?</p> <p>Answer:</p> <p>Each individual filter needs to be turned on individually, /mapfilter all show does not toggle all filters to \"show\" as might be expected.</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/maphide/","title":"/maphide","text":"","tags":["command"]},{"location":"plugins/core-plugins/mq2map/maphide/#syntax","title":"Syntax","text":"<p>/maphide spawnname </p>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/maphide/#description","title":"Description","text":"<p>This will hide spawnname from the map. Hidden spawns are in effect until you reset /maphide, or the mapped spawns are regenerated \\(such as changing certain map filters\\).</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/maphide/#examples","title":"Examples","text":"<ul> <li>Re-generates the spawn list</li> </ul> <pre><code>/maphide reset\n</code></pre> <ul> <li>Hides all spawns level 39 and below</li> </ul> <pre><code>/maphide npc range 1-39\n</code></pre>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapnames/","title":"/mapnames","text":"","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapnames/#syntax","title":"Syntax","text":"<p>/mapnames  </p>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapnames/#description","title":"Description","text":"<p>Sets how spawn names will be displayed on the MQ2 map, for your target or all other spawns. *This command takes a parameter specifying normal/target, and then an optional custom string.</p> <ul> <li>With no arguments, /mapnames will display the current settings for target and normal (both are set to %N by</li> </ul> <p>default).</p> <ul> <li>The plugin will replace the %l %r %c %N options with a piece of information.</li> <li>Each option is case sensitive and exactly one character in length.</li> <li>It is important to note that names are not updated continually (except for your target if the target map filter</li> </ul> <p>is on).</p> <ul> <li>You may use the following options to customize the display string:</li> </ul> <p>{| border=\"1\" cellpadding=\"2\" cellspacing=\"0\" |%n |The default unique \"name\" of the target, like \"a_coyote34\" |- |%N |The cleaned up name of the target, like \"a coyote\" |- |%h*|Current HP percentage |- |%i* |Spawn ID |- |%x*|X coordinate |- |%y* |Y coordinate |- |%z*|Z coordinate |- |%R* |Full race name \\(eg. Dwarf\\) |- |%r*|3-letter race code \\(eg. DWF\\) |- |%C* |Class full name \\(eg. Shaman\\) |- |%c*|3-letter class code \\(eg. SHM\\) |- |%l* |Level |- |%%'' |\"%\" sign |} Note: All other characters will be displayed as normal.</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapnames/#examples","title":"Examples","text":"<pre><code>/mapnames normal [%l %R %C] %N - %h%%\n</code></pre> <p>Will display all spawns in the following format:</p> <pre><code>[40 Human Banker] Banker Tawler - 100%\n[70 Wood Elf Ranger] BillyBob - 100%\n</code></pre>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapshow/","title":"/mapshow","text":"","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapshow/#syntax","title":"Syntax","text":"<p>/mapshow spawnname </p>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapshow/#description","title":"Description","text":"<p>Explicitly shows spawnname on the map. Only in effect until the mapped spawns are re-generated \\(same as /maphide\\)</p>","tags":["command"]},{"location":"plugins/core-plugins/mq2map/mapshow/#examples","title":"Examples","text":"","tags":["command"]},{"location":"plugins/developing/","title":"Developing Plugins","text":"<p>Warning</p> <p>This content is outdated or incomplete.</p>"},{"location":"plugins/developing/actors/","title":"How to use Actors","text":"<p>Actors are a subsystem added to the MQ ecosystem to allow for different clients and applications to communicate with one another simply. The underlying tech for local (same computer) communication is Windows Named Pipes, and is very fast -- essentially no different than just using shared memory. The tech for remote communication is still WIP and is currently planned to be ASIO-based TCP communication with a UDP discovery mechanism and the ability to specify peers.</p> <p>The entire system hinges on the launcher (MacroQuest.exe) being present as the central routing mechanism. If the launcher goes down, then all routing will stop and the system will become inoperable.</p> <p>While messaging can use any serialization for internal mailbox communication, protobuf has been utilized to wrap these messages in routing packages to allow for system-independent communication, implicit versioning, and efficient marshalling/unmarshalling. When selecting a serialization strategy, be aware that there are protobuf examples in code and you are probably already building the library.</p> <p>The point of using this technology is to allow for consistent and simple communication between processes that couldn't communicate before. The framework is ideally highly extensible with a minimum amount of boilerplate needed to set up, feedback is welcome.</p>"},{"location":"plugins/developing/actors/#terminology","title":"Terminology","text":"<ul> <li>Actor: An actor is self-contained computational entity that receives messages and performs actions based on the content of those messages such as side effects and composing replies.</li> <li>Mailbox: This is the receiver of messages. Each actor has exactly one, and this provides the unique address for said actor. A mailbox is set up by taking a callback function to process a message.</li> <li>Dropbox: This is the sender of messages. Each actor again has exactly one, and this provides automatic return address composition as well as an interface to the application's central Post Office.</li> <li>Post Office: The central authority for message routing in a single application. Each independent application will need to set one post office up for actors in that application to register mailboxes. This will maintain ownership of the mailboxes and dropboxes and route all messages received by the application.</li> <li>Address: A specifier for routing a message. On the sending side, this does not have to be unique -- one could address a message to all applications that have a certain mailbox, for instance. There are two levels of addressing: mailbox, and postoffice. On the receiving side, the post office must be fully qualified with one of three strategies:<ul> <li>By name: You can specify a unique name for an application, which is useful for external application naming. There is one name-specified application that should always be present: <code>launcher</code> -- the MQ launcher</li> <li>By pid: You can use the PID of the application (not very useful to the sender as it is not deterministic)</li> <li>By EQ information: The most available of the following three strings: account, server, character. All three of these strings present means that the address must be unique, and this type of addressing replaces name as a convenience mechanism.</li> </ul> </li> <li>Envelope: This is a protobuf spec that all messages that need to be routed to actors will get wrapped in automatically (as a function of using the Dropbox) so the routing system can ensure it ends up at the correct post offices and mailboxes.</li> </ul>"},{"location":"plugins/developing/actors/#in-plugins","title":"In Plugins","text":"<p>Plugins are a special case for the actor API as the post office itself is maintained within mq2main.dll and is not exposed at all to any plugins. Instead, plugins will have access to an actor API by including:</p> <pre><code>#include \"mq/api/ActorAPI.h\"\n</code></pre> <p>This include provides everything necessary for creating and registering an actor, as well as sending (and receiving) messages. There is one free function (with two overloads) that creates a new actor provided as part of this API:</p>"},{"location":"plugins/developing/actors/#addactor","title":"AddActor","text":"<pre><code>using ReceiveCallbackAPI = std::function&lt;void(const std::shared_ptr&lt;Message&gt;&amp;)&gt;;\n\nDropboxAPI AddActor(const char* localAddress, ReceiveCallbackAPI&amp;&amp; receive);\nDropboxAPI AddActor(ReceiveCallbackAPI&amp;&amp; receive);\n</code></pre> <p>Both of these functions return a <code>DropboxAPI</code> object, which serves as the interface to the dropbox functionality needed to operate the actor. If a <code>localAddress</code> is not specified, then the canonical name of the plugin is used as the mailbox name (convenient for when you only need one mailbox in a plugin, which should be pretty common).</p> <p>An important implementation detail is that mailbox names are mutated when they are set to ensure that they are unique in the post office. The <code>localAddress</code> specified is the mailbox name local to the plugin and not the full mailbox name that is stored in the mailbox. This registration function will prepend the mailbox with the canonical plugin name followed by a colon like so: <code>myplugin:mymailbox</code>. This is only important to the plugin author if they need to send messages to mailboxes outside their plugin, otherwise the send functions will handle this implementation detail opaquely.</p> <p>There is one more free function provided by the API to send \"anonymous\" messages to actors. The point of using this function is when you want to send a message to a recipient, but don't want to set up an actor and message handler in the local script. The signature is as follows:</p> <pre><code>using ResponseCallbackAPI = std::function&lt;void(int, const std::shared_ptr&lt;Message&gt;&amp;)&gt;;\n\ntemplate &lt;typename T&gt;\nvoid SendToActor(const Address&amp; address, const T&amp; obj, const ResponseCallbackAPI&amp; callback = nullptr);\n</code></pre> <p>Because the default handling of objects is protobuf, T is assumed to be a protobuf type. There is one exception, this function is specialized for <code>T = std::string</code>, which is used as a data container and just serializes the string directly to the message being sent. <code>Address</code> is talked about below, and is how you would direct the message to an actor. <code>Message</code> is also talked about below and is the actual message being sent to the actor. The callback is optional, and is specified when the receiving actor will send a response to the sent message.</p> <p>There are three more structures to explore in a plugin, <code>Address</code>, <code>Message</code>, and <code>DropboxAPI</code>.</p>"},{"location":"plugins/developing/actors/#address","title":"Address","text":"<p>An address is a shim to the protobuf-defined address, and follows the same rules as the terminology section above. The API provides this shim as a simple struct where you can set the address parameters directly like this (as an example):</p> <pre><code>postoffice::Address addr;\naddr.Server = \"test\";\naddr.Character = \"target\";\n</code></pre> <p>The one difference to note is that there is a member of this address called <code>AbsoluteMailbox</code>. If this is set to true, then all values of the address are passed as-is without any modification, useful only for sending messages to actors that are created outside the plugin. Otherwise, the mailbox name follows these rules:</p> <ul> <li>If no mailbox is specified at all, then the plugin name becomes the target mailbox.</li> <li>If a mailbox is specified, then the target mailbox becomes <code>&lt;pluginName&gt;:&lt;mailbox&gt;</code> as was noted in the implementation details specified in <code>AddActor</code></li> </ul>"},{"location":"plugins/developing/actors/#message","title":"Message","text":"<p>A message consists of 2 parts useful to the plugin author, <code>Sender</code> and <code>Payload</code>. Both are optional (and are wrapped in <code>std::optional</code>), so the author will need to handle the absence of either.</p> <ul> <li><code>Sender</code>: This is the address of the message sender. It's useful if message handling is dependent on the source of the message.</li> <li><code>Payload</code>: This is the actual message payload. It is represented as a string, which is a convenient data storage mechanism that provides bytes and length, and is deserializable directly as a protobuf message. It could be any data that your plugin can handle though, since the handling of it is local to your plugin.</li> </ul>"},{"location":"plugins/developing/actors/#dropboxapi","title":"DropboxAPI","text":"<p>This is the object that is returned when an actor is added to the postoffice via the API. The plugin author should store this somewhere where it can be accessed because they will need to use it to send messages and unregister the actor. The object provides the following functions:</p> <ul> <li><code>Post(address, data, callback)</code>: Send a message to an address. <code>data</code> is what you want to send, which can be any protobuf object or a <code>std::string</code>. <code>callback</code> is a to be used to handle a response to the message sent; setting this parameter (to something other than <code>nullptr</code>) will send a message that expects a response, and will send back an error status if none is received.</li> <li><code>PostReply(message, data, status)</code>: This is a method mostly to be used in message handling. <code>message</code> is a <code>std::shared_ptr</code> of the original message that is expecting a response. <code>data</code> is as above, and <code>status</code> is a signed 8-bit parameter that defaults to 0 that some actors expect as a response (mostly used as error codes).</li> <li><code>Remove()</code>: Remove the actor from the post office. Will unregister the actor, clean up the internal dropbox, and will ensure that any further use of the <code>DropboxAPI</code> does nothing.</li> </ul>"},{"location":"plugins/discontinued/","title":"Discontinued / Unsupported","text":""},{"location":"plugins/discontinued/mq2web/","title":"MQ2Web","text":"<p>Warning</p> <p>This plugin is deprecated in live clients. The web browser component was removed from EverQuest.</p>","tags":["plugin"]},{"location":"plugins/discontinued/mq2web/#description","title":"Description","text":"<p>Created by ieatacid</p> <p>The two offsets at the top will need to be updated after each patch, more than likely. This adds the <code>/web</code> command. Follow it with a URL (\"http://\" is added if you don't include it yourself).</p> <p>It works to open any web page. For instance, \"/web google.com\" opens the google home page.</p> <p>You can find the latest version of MQ2Web here.</p>","tags":["plugin"]},{"location":"plugins/discontinued/mq2web/#commands","title":"Commands","text":"<ul> <li>/web</li> <li>/web target = searches Allakhazam for your target's name if an NPC, Magelo if a PC</li> <li>Shift+click an item link looks up the item on Lucy</li> <li>Ctrl+click an item link looks up the item on EQItems</li> </ul>","tags":["plugin"]},{"location":"plugins/discontinued/mq2eqim/","title":"MQ2EQIM","text":"","tags":["plugin"]},{"location":"plugins/discontinued/mq2eqim/#description","title":"Description","text":"<ul> <li>Keeps your list of buddies (per character) and the last time they were seen online or on EQIM (by any character).</li> </ul> <p>Your friends list is automatically added as buddies.</p> <ul> <li>Notifies you when someone on your EQIM buddy list logs in or out.</li> </ul> <p>Note: Since changing the EQ chat system to the Universal Chat System, this plugin \\(and Sony's official EQIM\\) no longer works.</p>","tags":["plugin"]},{"location":"plugins/discontinued/mq2eqim/#top-level-objects","title":"Top-Level Objects","text":"buddy Buddy Info on buddy with this name buddy Buddy Buddy with this index number in the system","tags":["plugin"]},{"location":"plugins/discontinued/mq2eqim/#data-types","title":"Data types","text":"<p>buddy buddy</p>","tags":["plugin"]},{"location":"plugins/discontinued/mq2eqim/mq2eqim-datatype-buddy/","title":"MQ2EQIM:DataType:buddy","text":"","tags":["datatype"]},{"location":"plugins/discontinued/mq2eqim/mq2eqim-datatype-buddy/#members","title":"Members","text":"int Buddies Size of the buddy index \\(will not necessarily be equal to the number of buddies, but n in Buddy\\[n\\] will never exceed this number\\) string Name Buddy's name \\(may be fennin.Name or just Name, depending on how you added them\\) string Status \"Removed from list\", \"Offline\", \"EQIM\", \"EQIM \\(AFK\\)\", \"Unknown Status\\(4\\)\", \"Playing\", \"Playing \\(AFK\\)\" int StatusID Numeric representation of the above \\(0,1,2,3,4,5,6\\) time LastSeen Last time this buddy was on/seen To String Same as Name","tags":["datatype"]},{"location":"plugins/discontinued/mq2fps/","title":"MQ2FPS","text":"<p>Warning</p> <p>This plugin is deprecated and no longer available for MacroQuest. Framelimiting functionality is now part of main.</p>","tags":["plugin"]},{"location":"plugins/discontinued/mq2fps/#description","title":"Description","text":"<p>MQ2FPS \\(VIP only\\) is a plugin that changes the frames per second of the Everquest screen when it is in focus and when it is in the background.</p> <p>Commands</p> <ul> <li>/fps</li> <li>/render</li> <li>/maxfps</li> </ul> <p>/fps  /fps  /fps mode </p> <ul> <li>On/Off enables or disables the FPS display.</li> <li>Use x and y to control the location of the FPS display on the screen.</li> <li>With mode you can change the FPS limiter mode to the one specified \\(absolute or calculate\\) or toggle between the</li> </ul> <p>two if no mode is specified.</p> <p>**/render  </p>","tags":["plugin"]},{"location":"plugins/discontinued/mq2fps/#_1","title":"|~#**","text":"<p>This sets the foreground or background rendering rate \\(ie. how many frames will be drawn\\). Setting the rendering rate does not slow down the game at all. The client still responds to the mouse and keyboard the same, the UI is still drawn, but the world itself is not drawn as often.</p> <ul> <li>With #, MQ2FPS will drawn 1 out of # frames.</li> <li>The use of ~# will cause MQ2FPS to draw #-1 out of # frames.</li> </ul> <p>Example</p> <pre><code> /render bg 3              Draws 1 out of 3 frames\n /render bg ~3             Draws 2 out of 3 frames\n</code></pre> <p>/maxfps   Sets the foreground or background framerate.</p> <p>Example</p> <pre><code> /maxfps fg 30            Sets foreground framerate to 30 FPS\n /maxfps bg 5             Sets background framerate to 5 FPS\n</code></pre>","tags":["plugin"]},{"location":"plugins/discontinued/mq2fps/#top-level-objects","title":"Top-Level Objects","text":"<p>fps FPS</p>","tags":["plugin"]},{"location":"plugins/discontinued/mq2fps/#data-types","title":"Data types","text":"<p>fps fps</p>","tags":["plugin"]},{"location":"plugins/discontinued/mq2fps/#examples","title":"Examples","text":"<p><code>/maxfps fg 25</code> <code>/maxfps bg 25</code> <code>/fps on</code> <code>/fps mode absolute</code> <code>/fps 10,25</code> <code>/render fg 1</code> <code>/render bg 75</code></p>","tags":["plugin"]},{"location":"plugins/discontinued/mq2fps/#sample-ini-file","title":"Sample INI File","text":"<p><code>ForegroundMaxFPS=25</code> <code>BackgroundMaxFPS=25</code> <code>Indicator=1</code> <code>Mode=1</code> <code>IndicatorX=10</code> <code>IndicatorY=25</code> <code>[Rendering]</code> <code>FGRate=1</code> <code>ReverseFGRate=0</code> <code>BGRate=75</code> <code>ReverseBGRate=0</code></p>","tags":["plugin"]},{"location":"plugins/discontinued/mq2fps/datatype-fps/","title":"DataType:fps","text":"","tags":["datatype"]},{"location":"plugins/discontinued/mq2fps/datatype-fps/#description","title":"Description","text":"","tags":["datatype"]},{"location":"plugins/discontinued/mq2fps/datatype-fps/#members","title":"Members","text":"Type Member Description float FPS Current frames per second int MaxFPS Current max frames per second bool Foreground Is this session in the foreground? string To String Same as FPS","tags":["datatype"]},{"location":"plugins/discontinued/mq2fps/tlo-fps/","title":"TLO:FPS","text":"","tags":["tlo"]},{"location":"plugins/discontinued/mq2fps/tlo-fps/#description","title":"Description","text":"<p>This TLO contains information about the number of Frames Per Second that the EQ client is rendering.</p>","tags":["tlo"]},{"location":"plugins/discontinued/mq2fps/tlo-fps/#forms","title":"Forms","text":"<ul> <li>fps FPS</li> </ul>","tags":["tlo"]},{"location":"plugins/discontinued/mq2fps/tlo-fps/#access-to-types","title":"Access to Types","text":"<ul> <li>fps fps</li> </ul>","tags":["tlo"]},{"location":"plugins/discontinued/mq2irc/","title":"MQ2IRC","text":"","tags":["plugin"]},{"location":"plugins/discontinued/mq2irc/#description","title":"Description","text":"<p>MQ2IRC is the plugin which provides the ability to connect to an IRC server from within EQ.</p> <p>This is most commonly used as a method to exchange information between bots without going through the EQ servers. It's faster as well as safer.</p>","tags":["plugin"]},{"location":"plugins/discontinued/mq2irc/#commands","title":"Commands","text":"<ul> <li>/i</li> <li>/iconnect</li> <li>/istatus</li> </ul>","tags":["plugin"]},{"location":"plugins/discontinued/mq2irc/#top-level-objects","title":"Top-Level Objects","text":"<ul> <li>irc Irc</li> </ul>","tags":["plugin"]},{"location":"plugins/discontinued/mq2irc/#data-types","title":"Data Types","text":"<ul> <li>irc irc</li> </ul>","tags":["plugin"]},{"location":"plugins/discontinued/mq2irc/#ini-file","title":"INI File","text":"<p>The MQ2IRC.ini creates a new section for every server that it connects to, and keeps your settings for future use. It also stores the last server connected to and its settings so that you may use /iconnect to reconnect to that server quickly.</p>","tags":["plugin"]},{"location":"plugins/discontinued/mq2irc/mq2irc-datatype-irc/","title":"MQ2IRC:DataType:irc","text":"","tags":["datatype"]},{"location":"plugins/discontinued/mq2irc/mq2irc-datatype-irc/#members","title":"Members","text":"string Server IRC server name string Channel Current channel name string Nick Current nickname int Port IRC server port To String Same as Connected","tags":["datatype"]},{"location":"plugins/discontinued/mq2irc/tlo-irc/","title":"TLO:Irc","text":"","tags":["tlo"]},{"location":"plugins/discontinued/mq2irc/tlo-irc/#description","title":"Description","text":"<p>Object which access all IRC-related information.</p>","tags":["tlo"]},{"location":"plugins/discontinued/mq2irc/tlo-irc/#forms","title":"Forms","text":"<ul> <li>irc Irc</li> </ul>","tags":["tlo"]},{"location":"plugins/discontinued/mq2irc/tlo-irc/#access-to-types","title":"Access to Types","text":"<ul> <li>irc irc</li> </ul>","tags":["tlo"]},{"location":"plugins/discontinued/mq2irc/tlo-irc/#examples","title":"Examples","text":"<p><code>/if (${Irc.Connected}) {</code> <code>/echo I'm connected</code> <code>}</code></p>","tags":["tlo"]},{"location":"plugins/discontinued/mq2irc/commands/","title":"Commands","text":""},{"location":"plugins/discontinued/mq2irc/commands/i/","title":"/i","text":"","tags":["command"]},{"location":"plugins/discontinued/mq2irc/commands/i/#syntax","title":"Syntax","text":"<p>/i help|nick name|join #channel|part |whois nickname|msg nickname **_**text_|say **_**text_|raw **_**command_**|quit|names|x**</p>","tags":["command"]},{"location":"plugins/discontinued/mq2irc/commands/i/#description","title":"Description","text":"<p>This is the main IRC slash command and controls most things related to IRC communication. All the commands below must be entered after you have connected with /iconnect.</p> <ul> <li>help: Show a list of commands that can be issued after /i.</li> <li>nick: Change your nick to name.</li> <li>join: Join the channel #channel. The channel must have a # in front of it.</li> <li>part: Leave #channel. If no channel is given, it will leave the last-joined channel.</li> <li>whois: Display information available on nickname.</li> <li>msg: Send a directed message of \"text\" to nickname. This is the IRC equivalent of a tell.</li> <li>say: Speak \"text\" in the current channel. This text will be visible to everyone in the channel.</li> <li>raw: Send command to the server. This is useful for other IRC commands that are not available with /i (eg. \"/i</li> </ul> <p>raw list\" to list all channels on the server).</p> <ul> <li>quit: Leave the server \\(same as the IRC command /quit\\).</li> <li>names: List all nicknames on the current channel.</li> <li>x: Not sure.</li> </ul>","tags":["command"]},{"location":"plugins/discontinued/mq2irc/commands/iconnect/","title":"/iconnect","text":"","tags":["command"]},{"location":"plugins/discontinued/mq2irc/commands/iconnect/#syntax","title":"Syntax","text":"<p>/iconnect  </p>","tags":["command"]},{"location":"plugins/discontinued/mq2irc/commands/iconnect/#description","title":"Description","text":"<p>This will allow you to connect to an IRC server. The MQ2IRC plugin stores all previously connected servers in the MQ2IRC.ini file, so you need not specify any options as it will connect to the last server you connected to.</p> <p>Omitting any of the other options will use defaults from the INI file.</p>","tags":["command"]},{"location":"plugins/discontinued/mq2irc/commands/istatus/","title":"/istatus","text":"","tags":["command"]},{"location":"plugins/discontinued/mq2irc/commands/istatus/#syntax","title":"Syntax","text":"<p>/istatus</p>","tags":["command"]},{"location":"plugins/discontinued/mq2irc/commands/istatus/#description","title":"Description","text":"<ul> <li>Displays MQ2IRC status</li> <li>It shows if you are ONLINE \\(ie. connected to a server\\) or OFFLINE</li> <li>If ONLINE it shows the server and port connected to, as well as the channel\\(s\\) you've joined and your nickname.</li> </ul>","tags":["command"]},{"location":"plugins/discontinued/mq2telnet/","title":"MQ2Telnet","text":"","tags":["plugin"]},{"location":"plugins/discontinued/mq2telnet/#description","title":"Description","text":"<p>This plugin adds a telnet server, which can be used to access your EQ session remotely.</p>","tags":["plugin"]},{"location":"plugins/discontinued/mq2telnet/#ini-file","title":"INI File","text":"<p>By default, the telnet server is disabled. If you want to use it, you will need to edit the mq2telnet.ini file and do the following:</p> <ul> <li>Define a port number that the server will run on:</li> </ul> <pre><code>Port=6669\n</code></pre> <ul> <li>Add some users and passwords under the  section:</li> </ul> <pre><code>[Users]\nwassup=ubahmanualguy\n</code></pre> <ul> <li>It is recommended that you change the Welcome message.</li> <li>The following setting will limit the connection to just one user. Setting it to 0 and defining usernames and</li> </ul> <p>passwords will allow multiple users to connect.</p> <pre><code>LocalOnly=1\n</code></pre>","tags":["plugin"]},{"location":"plugins/discontinued/mq2telnet/#using-the-telnet-server","title":"Using the Telnet server","text":"<ul> <li>Use a real telnet client to connect \\(Putty works well\\).</li> <li>After entering your username and password, you will be presented with your Welcome message.</li> <li>From now, and commands you enter in the telnet session will work the same as typing them into your EQ console.</li> <li>Any chat output will be sent to your telnet session.</li> </ul> <p>To disconnect from the server, just close your telnet client. The plugin will notice when the connection is no longer active and will clean up.</p>","tags":["plugin"]},{"location":"plugins/discontinued/mq2telnet/#commands","title":"Commands","text":"<ul> <li>/telnet</li> </ul>","tags":["plugin"]},{"location":"plugins/discontinued/mq2telnet/telnet/","title":"/telnet","text":"","tags":["command"]},{"location":"plugins/discontinued/mq2telnet/telnet/#syntax","title":"Syntax","text":"<p>/telnet</p>","tags":["command"]},{"location":"plugins/discontinued/mq2telnet/telnet/#description","title":"Description","text":"<p>Part of the MQ2Telnet plugin, this command lists all the remote IP addresses that are connected to your telnet server.</p>","tags":["command"]},{"location":"reference/","title":"MacroQuest Reference","text":"<p>The reference section contains descriptions of the various commands, datatypes, tlos, etc that are available to macroquest content authors.</p> <p>See the sections in the sidebar to navigate to the appropriate content.</p>"},{"location":"reference/commands/","title":"Slash Commands","text":""},{"location":"reference/commands/#base","title":"Base","text":"/aa /advloot /alert /alias /altkey /banklist /beep /benchmark /beepontells /bind /buyitem /caption /captioncolor /cast /cecho /cleanup /char /click /combine /ctrlkey /custombind /destroy /docommand /doors /doortarget /dosocial /drop /dumpbinds /echo /eqtarget /exec /face /filter /flashontells /foreground /framelimiter /help /hotbutton /identify /ini /itemnotify /items /itemtarget /keepkeys /keypress /loadcfg /loadspells /location /loginname /look /lootall /memspell /mouseto /multiline /mqcopylayout /mqlog /mqsettings /mqtarget /multiline /netstatusxpos /netstatusypos /nomodkey /noparse /notify /plugin /popcustom /popup /popupecho /ranged /reloadui /removeaura /removebuff /removelev /removepetbuff /screenmode /selectitem /sellitem /setautorun /setprio /setwintitle /shiftkey /skills /spellslotinfo /spew /squelch /target /timed /timestamp /unload /useitem /where /who /whofilter /whotarget /cachedbuffs /convertitem /crash /doability /dumpstack /engine /executelink /getwintitle /insertaug /itemslots /makemevisible /mercswitch /mqanon /mqconsole /mqlistmodules /mqlistprocesses /mqoverlay /msgbox /no /pet /pickzone /profile /quit /removeaug /taskquit /tloc /usercamera /yes /windows /windowstate"},{"location":"reference/commands/#macroingflow-control","title":"Macroing/Flow Control","text":"/break /call /clearerrors /continue /declare /delay /deletevar /doevents /endmacro /for /goto /if /invoke /listmacros /macro /mqpause /next /return /seterror /varcalc /vardata /varset /while"},{"location":"reference/commands/#from-plugins","title":"From Plugins","text":"MQ2ChatWnd MQ2HUD MQ2ItemDisplay MQ2Map /mqfont /hud /inote /highlight /defaulthud /mapclick /loadhud /mapfilter /classhud /maphide /zonehud /mapnames /mapshow"},{"location":"reference/commands/aa/","title":"/aa","text":"","tags":["command"]},{"location":"reference/commands/aa/#syntax","title":"Syntax","text":"<p>/aa [list (all | timers)] [info abilityname ] [act abilityname ]</p>","tags":["command"]},{"location":"reference/commands/aa/#description","title":"Description","text":"<p>Used to retrieve information on AA Abilities, or to activate an AA ability.</p>","tags":["command"]},{"location":"reference/commands/aa/#examples","title":"Examples","text":"/aa list all Lists all AA abilities available to you (doesn't mean you have them) in format [ID : name] /aa list timers Lists just the AA you have that have timers /aa info abilityname Gives information about a particular AA ability /aa act abilityname Works like \"/alt act ##\", but takes the name instead of ## (note: You will notice a fraction of a second delay using this method vs. the /alt act ## method).","tags":["command"]},{"location":"reference/commands/advloot/","title":"/advloot","text":"","tags":["command"]},{"location":"reference/commands/advloot/#syntax","title":"Syntax","text":"<p>/advloot {personal | shared} {set | \"item name\" | #index } window option [ quantity ]</p>","tags":["command"]},{"location":"reference/commands/advloot/#description","title":"Description","text":"<p>Extends EverQuest's <code>/advloot</code> command to allow control of the advloot window, including item-specific control.</p>","tags":["command"]},{"location":"reference/commands/advloot/#personal-loot-window","title":"Personal Loot Window","text":"<p>Options:</p> <ul> <li><code>item</code>, <code>name</code>, <code>loot</code>, <code>leave</code>, <code>an</code>, <code>ag</code>, <code>never</code></li> </ul>","tags":["command"]},{"location":"reference/commands/advloot/#shared-loot-window","title":"Shared Loot Window","text":"<p>Options:</p> <ul> <li><code>item</code>, <code>name</code>, <code>status</code>, <code>action</code>, <code>manage</code>, <code>autoroll</code>, <code>nd</code>, <code>gd</code>, <code>no</code>, <code>an</code>, <code>ag</code>, <code>nv</code></li> </ul> <p>Window Commands:</p> <ul> <li><code>giveto &lt;name&gt; [&lt;quantity&gt;]</code> - Give to player (must be in group/raid)</li> <li><code>leave</code> - Leaves the item on the corpse (Note: to unlock the corpse from timer, ALL items related to that corpse must be looted or left on it)</li> <li><code>set &lt;option&gt;</code> - Option from the \"Set all to:\" combo box. Can be a player name or any of the other names that exist in that combo box</li> </ul>","tags":["command"]},{"location":"reference/commands/advloot/#examples","title":"Examples","text":"Command Description <code>/advloot shared 2 leave</code> Leave second item on corpse <code>/advloot shared \"spiderling silk\" leave</code> Leave first matching silk on corpse <code>/advloot personal 3 ag</code> Set third item to Always Greed <code>/advloot shared 1 giveto brainiac 10</code> Give 10 of first item to brainiac","tags":["command"]},{"location":"reference/commands/alert/","title":"/alert","text":"","tags":["command"]},{"location":"reference/commands/alert/#syntax","title":"Syntax","text":"<p>/alert { add | remove | clear | list } #list [ Spawn Search ]</p>","tags":["command"]},{"location":"reference/commands/alert/#description","title":"Description","text":"<p>Used to manipulate alert lists which \"watch\" for spawns. Uses Spawn Search.</p>","tags":["command"]},{"location":"reference/commands/alert/#options","title":"Options","text":"Option Description <code>add | remove</code> Adds or removes spawn search item from alert list <code>clear</code> Clear all entries from the specified alert list <code>list</code> Display all entries in the specified alert list","tags":["command"]},{"location":"reference/commands/alert/#spawn-search","title":"Spawn Search","text":"<p>Any valid Spawn Search parameter can be used. Common examples include:</p> Parameter Description Example <code>pc|npc|corpse|any</code> Basic spawn types <code>npc</code> <code>class &lt;classname&gt;</code> Class name (use long name) <code>class warrior</code> <code>race &lt;racename&gt;</code> Race name <code>race troll</code> <code>radius #</code> Search radius around you <code>radius 100</code> <code>zradius #</code> Vertical (Z-axis) radius <code>zradius 50</code> <code>range &lt;lower&gt; &lt;upper&gt;</code> Level range to search <code>range 30 35</code> <code>name &lt;name&gt;</code> Name to search for <code>name Fippy</code> <code>id #</code> Specific spawn ID <code>id 1234</code>","tags":["command"]},{"location":"reference/commands/alert/#examples","title":"Examples","text":"Command Description <code>/alert add 1 \"Lady Vox\"</code> Adds Lady Vox to alert list 1 <code>/alert add 1 npc class warrior radius 100</code> Alerts on warrior NPCs within 100 radius <code>/alert add 2 npc race iksar range 30 35</code> Alerts on iksar NPCs between levels 30-35 <code>/alert add 3 named radius 200</code> Alerts on named mobs within 200 radius <code>/alert clear 1</code> Clears all members from alert list 1 <code>/alert list 1</code> Lists all members of alert list 1 <code>/alert remove 1 id 1234</code> Removes the entry in alert list 1 for spawn ID 1234 <p>See Spawn Search for a complete list of available search parameters.</p>","tags":["command"]},{"location":"reference/commands/alias/","title":"/alias","text":"","tags":["command"]},{"location":"reference/commands/alias/#syntax","title":"Syntax","text":"<p>/alias aliasname command | [list | reload | aliasname delete]</p>","tags":["command"]},{"location":"reference/commands/alias/#description","title":"Description","text":"<p>Creates custom command shortcuts. Aliases are saved in MacroQuest.ini and persist between sessions.</p>","tags":["command"]},{"location":"reference/commands/alias/#examples","title":"Examples","text":"Command Description /alias /hp /echo My health is ${Me.PctHPs} Creates an alias where typing /hp will display your current health percentage /alias list Lists all currently defined aliases /alias reload Reloads all aliases from MacroQuest.ini /alias aliasname delete Deletes the specified alias","tags":["command"]},{"location":"reference/commands/altkey/","title":"/altkey","text":"","tags":["command"]},{"location":"reference/commands/altkey/#syntax","title":"Syntax","text":"<p>/altkey command</p>","tags":["command"]},{"location":"reference/commands/altkey/#description","title":"Description","text":"<p>Execute command while telling the window manager that the alt key is pressed. Can also be used together with /ctrlkey , /shiftkey , or both as in:</p> <pre><code> /ctrlkey /altkey /shiftkey command\n</code></pre>","tags":["command"]},{"location":"reference/commands/banklist/","title":"/banklist","text":"","tags":["command"]},{"location":"reference/commands/banklist/#syntax","title":"Syntax","text":"<p>/banklist</p>","tags":["command"]},{"location":"reference/commands/banklist/#description","title":"Description","text":"<p>Displays an inventory of the currently logged in character in this format:</p> <pre><code>Bankslot#:Typeofcontainer\n-ContainerSlot1:Item\n-Containerslot2:Item\n-etc\n</code></pre>","tags":["command"]},{"location":"reference/commands/beep/","title":"/beep","text":"","tags":["command"]},{"location":"reference/commands/beep/#syntax","title":"Syntax","text":"<p>/beep [ filename ]</p>","tags":["command"]},{"location":"reference/commands/beep/#description","title":"Description","text":"<p>Invokes a system beep (beep from the built-in PC speaker).</p> <p>Adding filename will play a .wav file located in your Everquest directory. This function uses the In-game sound so while a normal /beep will sound if you have EQ muted, this will not.</p> <p>If you prefer you can play the sounds in the Everquest \"sounds\" directory by using something like</p> <p>/beep sounds/filename</p>","tags":["command"]},{"location":"reference/commands/beepontells/","title":"/beepontells","text":"","tags":["command"]},{"location":"reference/commands/beepontells/#syntax","title":"Syntax","text":"<p>/beepontells [on|off]</p>","tags":["command"]},{"location":"reference/commands/beepontells/#description","title":"Description","text":"<p>Beeps when you receive a tell from another player. If no parameter is provided, it toggles the current setting.</p>","tags":["command"]},{"location":"reference/commands/beepontells/#notes","title":"Notes","text":"<ul> <li>The setting is saved in MacroQuest.ini under the [MacroQuest] section as <code>BeepOnTells=1</code> or <code>BeepOnTells=0</code></li> <li>Only triggers on tells from other players (ignores tells from NPCs, merchants, and your own pet)</li> </ul>","tags":["command"]},{"location":"reference/commands/beepontells/#see-also","title":"See Also","text":"<ul> <li>/flashontells - Controls window flashing on tells</li> </ul>","tags":["command"]},{"location":"reference/commands/benchmark/","title":"/benchmark","text":"","tags":["command"]},{"location":"reference/commands/benchmark/#syntax","title":"Syntax","text":"<p>/benchmark [command]</p>","tags":["command"]},{"location":"reference/commands/benchmark/#description","title":"Description","text":"<p>Produces a list of all active benchmarks, or times the execution of a command.</p>","tags":["command"]},{"location":"reference/commands/benchmark/#examples","title":"Examples","text":"Command Description /benchmark /who all Times the execution of the <code>/who all</code> command","tags":["command"]},{"location":"reference/commands/bind/","title":"/bind","text":"","tags":["command"]},{"location":"reference/commands/bind/#syntax","title":"Syntax","text":"<p>/bind [~]name [ keycombo | clear] | [list | eqlist]</p>","tags":["command"]},{"location":"reference/commands/bind/#description","title":"Description","text":"<p>Bind a key combination to a specific key.</p> /bind list Lists all MQ binds /bind eqlist Lists all EverQuest binds /bind name keycombo Binds name to the normal key combination keycombo /bind ~name keycombo Binds name to the alternate key combination keycombo /bind name clear Clears the key combination from name /bind ~name clear Clears the alternate key combination from name <p>Note: keycombo can be any combination of \"alt\", \"shift\" and \"ctrl\" plus a key.</p>","tags":["command"]},{"location":"reference/commands/bind/#examples","title":"Examples","text":"/bind forward e Binds the forward command to key e /bind ~forward up Binds the forward command to alternate key uparrow /bind forward clear Clears the key used for the forward command <p>Note: Changing EQ binds will not immediately update the display in the options window. Change the bind list selection in the options window to see the updated keys.</p>","tags":["command"]},{"location":"reference/commands/break/","title":"/break","text":"","tags":["command"]},{"location":"reference/commands/break/#syntax","title":"Syntax","text":"<p>/break</p>","tags":["command"]},{"location":"reference/commands/break/#description","title":"Description","text":"<p>End a /for or /while loop immediately.</p>","tags":["command"]},{"location":"reference/commands/break/#example","title":"Example","text":"<pre><code> /for varname 1 to 5\n   /if ({$varname} == 3) /break\n   /echo ${varname}\n /next varname\n</code></pre> <p>Will output:</p> <pre><code> 1\n 2\n</code></pre>","tags":["command"]},{"location":"reference/commands/buyitem/","title":"/buyitem","text":"","tags":["command"]},{"location":"reference/commands/buyitem/#syntax","title":"Syntax","text":"<p>/buyitem [quantity]</p>","tags":["command"]},{"location":"reference/commands/buyitem/#description","title":"Description","text":"<p>Purchases the currently selected item from a merchant window. You must have an item selected in the merchant window for this command to work.</p>","tags":["command"]},{"location":"reference/commands/buyitem/#examples","title":"Examples","text":"<ul> <li><code>/buyitem 20</code> - Buys 20 of the currently selected item</li> </ul>","tags":["command"]},{"location":"reference/commands/cachedbuffs/","title":"/cachedbuffs","text":"","tags":["command"]},{"location":"reference/commands/cachedbuffs/#syntax","title":"Syntax","text":"<p>/cachedbuffs [cleartarget|reset]</p>","tags":["command"]},{"location":"reference/commands/cachedbuffs/#description","title":"Description","text":"<p>Clear cached buffs for your current target (cleartarget) or all cached buffs (reset).</p>","tags":["command"]},{"location":"reference/commands/call/","title":"/call","text":"","tags":["command"]},{"location":"reference/commands/call/#syntax","title":"Syntax","text":"<p>/call subroutine [Param0... ]</p>","tags":["command"]},{"location":"reference/commands/call/#description","title":"Description","text":"<p>Calls subroutine (defined later in the macro by \"Sub subroutine\").</p> <p>(See Subroutines for detailed information)</p>","tags":["command"]},{"location":"reference/commands/call/#examples","title":"Examples","text":"**** /call MySub Executes the MySub subroutine /call MySub var1 var2 var3 Executes the MySub and passes it parameters var1, var, var3 /call MySub ${var1} ${var2} Executes the MySub subroutine and passes it variables var1, var2 as parameters","tags":["command"]},{"location":"reference/commands/caption/","title":"/caption","text":"","tags":["command"]},{"location":"reference/commands/caption/#syntax","title":"Syntax","text":"<p>/caption list | update # | MQCaptions [on|off] | reload | type value </p>","tags":["command"]},{"location":"reference/commands/caption/#description","title":"Description","text":"<p>Customize spawn captions (names, titles, linkdead, etc.). You can also limit how many captions are processed to improve performance.</p>","tags":["command"]},{"location":"reference/commands/caption/#options","title":"Options","text":"<ul> <li>list - List custom captions</li> <li>reload - Update captions from .ini</li> <li>Update - The number of nearest spawns which will have their caption updated each pass. The default is 35.</li> <li>MQCaptions [on|off] - Turns captions on or off</li> <li>The anon option has been deprecated, please use /mqanon instead</li> <li>type value - The spawn type and the value for its caption. Available types are:</li> </ul> Type Description Player1-6 Player captions for /shownames 1-6 Pet Pet captions Merc Mercenary captions NPC NPC captions Corpse Corpse captions","tags":["command"]},{"location":"reference/commands/caption/#examples","title":"Examples","text":"<p>Default captions can be overriden in the <code>[Captions]</code> section of your MacroQuest.ini file. </p> <pre><code>[Captions]\n# Player1 (basic), /shownames 1\nPlayer1=${If[${NamingSpawn.Mark},${NamingSpawn.Mark} - ,]}${If[${NamingSpawn.Trader},Trader ,]}${If[${NamingSpawn.Invis},(${NamingSpawn.DisplayName}),${NamingSpawn.DisplayName}]}${If[${NamingSpawn.AFK}, AFK,]}${If[${NamingSpawn.Linkdead}, LD,]}${If[${NamingSpawn.LFG}, LFG,]}${If[${NamingSpawn.GroupLeader}, LDR,]}\n\n# Player3 (with guild), /shownames 3\nPlayer3=${If[${NamingSpawn.Mark},${NamingSpawn.Mark} - ,]}${If[${NamingSpawn.Trader},Trader ,]}${If[${NamingSpawn.Invis},(${NamingSpawn.DisplayName}),${NamingSpawn.DisplayName}]}${If[${NamingSpawn.Surname.Length}, ${NamingSpawn.Surname},]}${If[${NamingSpawn.AFK}, AFK,]}${If[${NamingSpawn.Linkdead}, LD,]}${If[${NamingSpawn.LFG}, LFG,]}${If[${NamingSpawn.GroupLeader}, LDR,]}${If[${NamingSpawn.Guild.Length},\\n&lt;${NamingSpawn.Guild}&gt;,]}\n\n# NPC\nNPC=${If[${NamingSpawn.Mark},${NamingSpawn.Mark} - ,]}${If[${NamingSpawn.Assist},&gt;&gt; ,]}${NamingSpawn.DisplayName}${If[${NamingSpawn.Assist}, - ${NamingSpawn.PctHPs}%&lt;&lt;,]}${If[${NamingSpawn.Surname.Length},\\n(${NamingSpawn.Surname}),]}\n\n# Corpse\nCorpse=${NamingSpawn.DisplayName}'s corpse\n</code></pre> <ul> <li>NamingSpawn is an internal TLO, so it's not documented along with other TLOs since it will always return NULL outside of caption processing. It inherits all spawn members. (e.g., DisplayName from <code>${NamingSpawn.DisplayName}</code> is a spawn member.)</li> <li>Use <code>\\n</code> to add a new line when setting captions</li> <li>To set a caption in-game,   <pre><code>/caption Corpse ${NamingSpawn.DisplayName}'s corpse\n</code></pre></li> <li>To revert to the default, you can delete the [Captions] section of your MacroQuest.ini file or clear the specific type with an empty value command like so,   <pre><code>/caption Corpse\n</code></pre></li> </ul>","tags":["command"]},{"location":"reference/commands/caption/#see-also","title":"See Also","text":"<ul> <li>/captioncolor</li> </ul>","tags":["command"]},{"location":"reference/commands/captioncolor/","title":"/captioncolor","text":"","tags":["command"]},{"location":"reference/commands/captioncolor/#syntax","title":"Syntax","text":"<p>/captioncolor list | \"name\" [ off | on | r g b ]</p>","tags":["command"]},{"location":"reference/commands/captioncolor/#description","title":"Description","text":"<p>Allows you to change the color of the captions that appear above the heads of PCs and NPCs, based on various factors.</p> <p>Note: raid class colors can only be set through the raid options window.</p>","tags":["command"]},{"location":"reference/commands/captioncolor/#settings","title":"Settings","text":"<p>Below are the default settings for each of the possible Caption Colors:</p> Color Type Default Setting Description PC OFF Default color for PCs PCCon OFF Color PCs by con color PCPVPTeam OFF Color PCs by PVP Team color PCRaid OFF Default color for all raid members PCClass OFF Color PCs by class (raid settings) PCGroup OFF Default color for group members PCTrader ON Default color for PC traders: 255 127 0 NPC OFF Default color for all NPCs NPCCon ON Color NPCs by con color NPCClass OFF Color NPCs by class (raid settings) NPCMerchant ON Default color for NPC merchants: 255 127 0 NPCBanker ON Default color for NPC banker: 200 0 255 NPCAssist ON Default color for the main assist NPC: 255 255 0 NPCMark ON Default color for marked NPCs: 255 255 0 PetNPC OFF Default color for all pets with NPC owners PetPC OFF Default color for all pets with PC owners PetClass OFF Color pets by class Corpse OFF Default color for corpses CorpseClass OFF Color corpses by class","tags":["command"]},{"location":"reference/commands/captioncolor/#examples","title":"Examples","text":"<p><code>/captioncolor list</code> <code>/captioncolor pcclass on</code> <code>/captioncolor pctrader on</code> <code>/captioncolor pctrader 255 128 0</code></p>","tags":["command"]},{"location":"reference/commands/captioncolor/#see-also","title":"See Also","text":"<ul> <li>/caption</li> </ul>","tags":["command"]},{"location":"reference/commands/cast/","title":"/cast","text":"","tags":["command"]},{"location":"reference/commands/cast/#syntax","title":"Syntax","text":"<p>/cast [ list | \"spellname\" | item \"itemname\" ] [ loc x y z ]</p>","tags":["command"]},{"location":"reference/commands/cast/#description","title":"Description","text":"<p>MacroQuest adds additional functionality to EverQuest's <code>/cast #</code> (gem number) command: cast by spell name, use items that have a \"click\" spell effect, and cast splash spells at a specific location.</p>","tags":["command"]},{"location":"reference/commands/cast/#options","title":"Options","text":"<ul> <li>list - List of spells currently memorized and their gems</li> <li>\"spellname\" - Name or partial name of the spell to cast (case-insensitive). Quotes required for multi-word names.</li> <li>item \"itemname\" - Name of an item with an activated click effect. The item must be in your inventory.</li> <li>loc x y z - For splash-type spells only: Casts at specified coordinates (uses target's location if omitted)</li> </ul>","tags":["command"]},{"location":"reference/commands/cast/#examples","title":"Examples","text":"<pre><code>/cast \"Complete Healing\"\n/cast 1\n/cast item \"mana robe\"\n/cast list\n/cast \"Reforming Splash\" loc 123 456 789\n</code></pre>","tags":["command"]},{"location":"reference/commands/cecho/","title":"/cecho","text":"","tags":["command"]},{"location":"reference/commands/cecho/#syntax","title":"Syntax","text":"<p>/cecho text</p>","tags":["command"]},{"location":"reference/commands/cecho/#description","title":"Description","text":"<p>Echoes the provided text verbatim. Escape codes are not supported.</p>","tags":["command"]},{"location":"reference/commands/char/","title":"/char","text":"","tags":["command"]},{"location":"reference/commands/char/#syntax","title":"Syntax","text":"<p>/char</p>","tags":["command"]},{"location":"reference/commands/char/#description","title":"Description","text":"<p>Extends EverQuest's <code>/charinfo</code> to display character bind points. The alias <code>/char</code> must be used if you want MacroQuest's information included. </p>","tags":["command"]},{"location":"reference/commands/char/#note","title":"Note","text":"<p>Uses Y, X, Z location to match the convention used by EQ (Rather than X, Y, Z used by the rest of the world and MQ internally).</p>","tags":["command"]},{"location":"reference/commands/cleanup/","title":"/cleanup","text":"","tags":["command"]},{"location":"reference/commands/cleanup/#syntax","title":"Syntax","text":"<p>/cleanup</p>","tags":["command"]},{"location":"reference/commands/cleanup/#description","title":"Description","text":"<p>Closes all open windows and then opens inventory window.</p>","tags":["command"]},{"location":"reference/commands/clearerrors/","title":"/clearerrors","text":"","tags":["command"]},{"location":"reference/commands/clearerrors/#syntax","title":"Syntax","text":"<p>/clearerrors</p>","tags":["command"]},{"location":"reference/commands/clearerrors/#description","title":"Description","text":"<p>Clears each of the last errors in the macroquest type:</p> <ul> <li>${MacroQuest.Error}</li> <li>${MacroQuest.MQ2DataError}</li> <li>${MacroQuest.SyntaxError}</li> </ul>","tags":["command"]},{"location":"reference/commands/click/","title":"/click","text":"","tags":["command"]},{"location":"reference/commands/click/#syntax","title":"Syntax","text":"<p>/click [ left | right ] [ target | item | door | switch | center | x y ]</p>","tags":["command"]},{"location":"reference/commands/click/#description","title":"Description","text":"<p>Executes a left or right mouse button click on targets or specific screen location.  </p>","tags":["command"]},{"location":"reference/commands/click/#click-targets","title":"Click targets","text":"<ul> <li>target: Clicks your current target (PC, NPC)</li> <li>item: Clicks the currently \"/itemtarget\"-ed ground item or container  </li> <li>door or switch: Clicks the currently \"/doortarget\"-ed door or switch  </li> <li>center: Clicks the center of the viewport  </li> <li>x y: Clicks anywhere on the screen by specifying coordinates (absolute or relative, e.g. \"100 200\" or \"+10 -20\").</li> </ul> <p>If no target argument is specified then the mouse button is clicked at the current mouse position.</p> <p>Certain commands (e.g., \"/shiftkey /click right target\") can be chained to combine keystroke modifiers with clicking actions.</p>","tags":["command"]},{"location":"reference/commands/click/#examples","title":"Examples","text":"Example Description /click left Left-clicks at the current mouse position /click right target Right-clicks your currently selected target /click left item Left-clicks a ground item. Requires setting a ground item first via /itemtarget /click left door Left-clicks a door or switch. Requires setting a door via /doortarget /click right center Right-clicks the center of the viewport /click left +10 +10 Moves the mouse 10 px right/down from the current position and left-clicks /click right 100 200 Moves the mouse to coordinates (100,200) and right-clicks","tags":["command"]},{"location":"reference/commands/combine/","title":"/combine","text":"","tags":["command"]},{"location":"reference/commands/combine/#syntax","title":"Syntax","text":"<p>/combine pack#</p>","tags":["command"]},{"location":"reference/commands/combine/#description","title":"Description","text":"<p>Activates the Combine button of pack#</p>","tags":["command"]},{"location":"reference/commands/combine/#examples","title":"Examples","text":"<pre><code>/combine pack8\n</code></pre>","tags":["command"]},{"location":"reference/commands/continue/","title":"/continue","text":"","tags":["command"]},{"location":"reference/commands/continue/#syntax","title":"Syntax","text":"<p>/continue</p>","tags":["command"]},{"location":"reference/commands/continue/#description","title":"Description","text":"<p>When in a /for or /while loop try the next iteration.</p>","tags":["command"]},{"location":"reference/commands/continue/#example","title":"Example","text":"<pre><code>/for varname 1 to 5\n  /if ({$varname} == 3) /continue\n  /echo ${varname}\n/next varname\n\n/declare varname int 0\n/while (${varname} &lt; 5) {\n  /varcalc varname ${varname}+1\n  /if ({$varname} == 3) /continue\n  /echo ${varname} \n}\n</code></pre> <p>Each loop will output:</p> <pre><code> 1\n 2\n 4\n 5\n</code></pre>","tags":["command"]},{"location":"reference/commands/convertitem/","title":"/convertitem","text":"","tags":["command"]},{"location":"reference/commands/convertitem/#syntax","title":"Syntax","text":"<p>/convertitem item name</p>","tags":["command"]},{"location":"reference/commands/convertitem/#description","title":"Description","text":"<p>Triggers convert on the item.</p>","tags":["command"]},{"location":"reference/commands/convertitem/#examples","title":"Examples","text":"<p><code>/convertitem \"Wishing Lamp\"</code></p>","tags":["command"]},{"location":"reference/commands/crash/","title":"/crash","text":"","tags":["command"]},{"location":"reference/commands/crash/#syntax","title":"Syntax","text":"<p>/crash [force]</p>","tags":["command"]},{"location":"reference/commands/crash/#description","title":"Description","text":"<p>Create a synthetic crash for debugging purposes.</p>","tags":["command"]},{"location":"reference/commands/crash/#examples","title":"Examples","text":"<ul> <li><code>/crash</code> - Creates a synthetic crash dump</li> <li><code>/crash force</code> - Forces an immediate access violation crash</li> </ul> <p>Note: Requires crash submissions to be enabled</p>","tags":["command"]},{"location":"reference/commands/ctrlkey/","title":"/ctrlkey","text":"","tags":["command"]},{"location":"reference/commands/ctrlkey/#syntax","title":"Syntax","text":"<p>/ctrlkey command</p>","tags":["command"]},{"location":"reference/commands/ctrlkey/#description","title":"Description","text":"<p>Execute command while telling the window manager that the ctrl key is pressed. Can also be used together with /altkey , /shiftkey , or both in this format:</p> <p>/ctrlkey /altkey /shiftkey /command</p>","tags":["command"]},{"location":"reference/commands/ctrlkey/#examples","title":"Examples","text":"<p><code>/ctrlkey /itemnotify pack1 leftmouseup</code></p>","tags":["command"]},{"location":"reference/commands/declare/","title":"/declare","text":"","tags":["command"]},{"location":"reference/commands/declare/#syntax","title":"Syntax","text":"<p>/declare varname | varname[array extents] [ type ] [ local | global | outer ] [ defaultvalue ]</p>","tags":["command"]},{"location":"reference/commands/declare/#description","title":"Description","text":"<p>This creates a variable or array of a particular type with a particular scope, and a default value if desired. The parameters must be given in order, but any after varname may be skipped to use the defaults.</p> <p>Notes</p> <ul> <li>The default type is string</li> <li>The default scope is local</li> <li>The default value is nothing (empty string, or 0)</li> </ul> <p>These variables can be of any type that exist in MQ2DataVars. The variable will then have access to the members of that type.</p>","tags":["command"]},{"location":"reference/commands/delay/","title":"/delay","text":"","tags":["command"]},{"location":"reference/commands/delay/#syntax","title":"Syntax","text":"<p>/delay #[s|m] [ condition ]</p>","tags":["command"]},{"location":"reference/commands/delay/#description","title":"Description","text":"<p>Fully pauses the macro for the amount of time specified, or until condition is met.</p> <p>Time can be specified in 10ths of a second (a number by itself) or in seconds \\(number followed by an \"s\"\\) or minutes (number followed by \"m\").</p>","tags":["command"]},{"location":"reference/commands/delay/#examples","title":"Examples","text":"<ul> <li>Simple examples:</li> </ul> <pre><code>/delay 7                                       Delays the macro for 7 tenths of a second\n/delay 2s                                      Delays the macro for 2 seconds\n/delay 3m                                      Delays the macro for 3 minutes\n</code></pre> <ul> <li>Example using MQ2Data:</li> </ul> <pre><code>/delay ${Math.Rand[10]}s                       Delays the macro for a random amount of seconds in the range of 0 to 10\n/delay ${Math.Calc[${Math.Rand[10]}+5]}s       Delays the macro for a random amount of seconds in the range of 5 to 15\n</code></pre> <ul> <li>The below example will hold down the forward key and will execute \"/keypress forward\" (press forward once) when <code>${Spawn[1234\\].Distance}&lt;${$Spawn[1234].MaxMeleeTo}</code> evaluates to TRUE or after 1 second passes.</li> </ul> <pre><code>/keypress forward hold\n/delay 1s ${Spawn[1234].Distance}&lt;${Spawn[1234].MaxMeleeTo}\n/keypress forward\n</code></pre>","tags":["command"]},{"location":"reference/commands/deletevar/","title":"/deletevar","text":"","tags":["command"]},{"location":"reference/commands/deletevar/#syntax","title":"Syntax","text":"<p>/deletevar varname [* global]</p>","tags":["command"]},{"location":"reference/commands/deletevar/#description","title":"Description","text":"<p>Deletes the variable varname. Using <code>* global</code> will delete all global variables.</p>","tags":["command"]},{"location":"reference/commands/destroy/","title":"/destroy","text":"","tags":["command"]},{"location":"reference/commands/destroy/#syntax","title":"Syntax","text":"<p>/destroy</p>","tags":["command"]},{"location":"reference/commands/destroy/#description","title":"Description","text":"<p>Destroys whatever you have on your cursor with no confirmation, even if you have \"Destroy Confirmation\" enabled in your EQ options. Use with care.</p>","tags":["command"]},{"location":"reference/commands/destroy/#examples","title":"Examples","text":"<pre><code>/if ( ${Cursor.Name.Find[rusty]} ) /destroy\n</code></pre>","tags":["command"]},{"location":"reference/commands/doability/","title":"/doability","text":"","tags":["command"]},{"location":"reference/commands/doability/#syntax","title":"Syntax","text":"<p>/doability [list | ability]</p>","tags":["command"]},{"location":"reference/commands/doability/#description","title":"Description","text":"<p>Extends EverQuest's doability command (/doability 1-10) to list available abilities and perform them by name or ID. </p>","tags":["command"]},{"location":"reference/commands/doability/#options","title":"Options","text":"<ul> <li>list - List all available abilities.</li> <li>ability - Perform the ability by name or ID.</li> </ul>","tags":["command"]},{"location":"reference/commands/doability/#examples","title":"Examples","text":"<ul> <li><code>/doability Fishing</code> - Casts your fishing pole.</li> <li><code>/doability 5</code> - Activates ability in slot 5 (default EverQuest handling)</li> <li><code>/doability 29</code> - Activates Hide using its real ability ID</li> </ul>","tags":["command"]},{"location":"reference/commands/docommand/","title":"/docommand","text":"","tags":["command"]},{"location":"reference/commands/docommand/#syntax","title":"Syntax","text":"<p>/docommand command</p>","tags":["command"]},{"location":"reference/commands/docommand/#description","title":"Description","text":"<p>Executes command, parsing MQ2Data first. This is useful for executing commands using MQ2Data that do not parse immediately, as well as executing a command stored in a variable.</p>","tags":["command"]},{"location":"reference/commands/docommand/#examples","title":"Examples","text":"<ul> <li>A simple example that echoes \"sitting\" if sitting, and \"not sitting\" if not</li> </ul> <pre><code>/docommand ${If[${Me.Sitting},/echo sitting,/echo not sitting]}\n</code></pre> <ul> <li>A simple example that activates AA 177 if you have a target, and echoes \"no target\" if not.</li> </ul> <pre><code>/docommand ${If[${Target.ID},/alt activate 177,/echo No Target]}\n</code></pre>","tags":["command"]},{"location":"reference/commands/doevents/","title":"/doevents","text":"","tags":["command"]},{"location":"reference/commands/doevents/#syntax","title":"Syntax","text":"<p>/doevents [ flush ] [ specificevent ]</p>","tags":["command"]},{"location":"reference/commands/doevents/#description","title":"Description","text":"<p>Runs the first event of any type in the queue, flushes all queued events, or runs/flushes just the specificevent event.</p>","tags":["command"]},{"location":"reference/commands/doevents/#examples","title":"Examples","text":"<pre><code>/doevents                         This will run all queued events\n/doevents chat                    This will run only the chat event(s) \n/doevents flush                   Clears all events in the queue without running them\n/doevents SpellFizzle             Run SpellFizzle event(s)\n\n/doevents flush SpellFizzle       Clears SpellFizzle events in the queue\n</code></pre>","tags":["command"]},{"location":"reference/commands/doors/","title":"/doors","text":"","tags":["command"]},{"location":"reference/commands/doors/#syntax","title":"Syntax","text":"<p>/doors [ filter ]</p>","tags":["command"]},{"location":"reference/commands/doors/#description","title":"Description","text":"<p>Lists all doors in the zone, or those that match filter.</p>","tags":["command"]},{"location":"reference/commands/doortarget/","title":"/doortarget","text":"","tags":["command"]},{"location":"reference/commands/doortarget/#syntax","title":"Syntax","text":"<p>/doortarget [ clear | id # | name ]</p>","tags":["command"]},{"location":"reference/commands/doortarget/#description","title":"Description","text":"<p>\"Targets\" a door or Switch for further manipulation (eg. /face door). The targeting of doors, switches will not show up in the target window, however MQ will show indication of your /doortarget. Can target by ID or name.</p>","tags":["command"]},{"location":"reference/commands/doortarget/#examples","title":"Examples","text":"Example Description /doortarget Will target closest door/switch /doortarget id 27 If you are in PoK will target the portal stone to Rathemtn /doortarget clear Clears current doortarget","tags":["command"]},{"location":"reference/commands/doortarget/#see-also","title":"See Also","text":"<p>For scripts, targeting the door is usually unecessary.  Instead look at Switch TLO for discovery / triggering.</p>","tags":["command"]},{"location":"reference/commands/dosocial/","title":"/dosocial","text":"","tags":["command"]},{"location":"reference/commands/dosocial/#syntax","title":"Syntax","text":"<p>/dosocial [ list | social name ]</p>","tags":["command"]},{"location":"reference/commands/dosocial/#description","title":"Description","text":"<p>This command allows you to list all your current socials, by name and number, or activate them by name. It is useful in that you could activate a social by name as long as it is in your social window without having to change hotbar pages, or call a social by name from a macro.</p>","tags":["command"]},{"location":"reference/commands/dosocial/#examples","title":"Examples","text":"","tags":["command"]},{"location":"reference/commands/dosocial/#list-parameter","title":"list parameter","text":"<ul> <li>/dosocial list output for a newly-created character</li> </ul> <pre><code>Socials: (page,number) name\n(1, 1) Afk\n1:/afk\n(1, 2) Anon\n1:/anon\n(1, 3) Split\n1: /autosplit\n(1, 4) Bug\n1: /bug\n\n...and so on\n</code></pre> <ul> <li>/dosocial list for custom multi-line socials</li> </ul> <pre><code>same stuff as above example\n\n(2, 7) MyMacro\n1: /macro MyMacro\n2: /echo I have activated MyMacro.mac via a social button\n</code></pre>","tags":["command"]},{"location":"reference/commands/dosocial/#calling-a-social-by-name","title":"calling a social by name","text":"<pre><code>/dosocial \"MyMacro\"\n</code></pre> <p>Typing the command in this way would execute Line 1 and 2 of the above example MyMacro social button.</p>","tags":["command"]},{"location":"reference/commands/drop/","title":"/drop","text":"","tags":["command"]},{"location":"reference/commands/drop/#syntax","title":"Syntax","text":"<p>/drop</p>","tags":["command"]},{"location":"reference/commands/drop/#description","title":"Description","text":"<p>Drops the item currently on the cursor.</p>","tags":["command"]},{"location":"reference/commands/dumpbinds/","title":"/dumpbinds","text":"","tags":["command"]},{"location":"reference/commands/dumpbinds/#syntax","title":"Syntax","text":"<p>/dumpbinds [ filename ]</p>","tags":["command"]},{"location":"reference/commands/dumpbinds/#description","title":"Description","text":"<p>Dumps all current keybinds to a file in the Configs directory.</p>","tags":["command"]},{"location":"reference/commands/dumpbinds/#examples","title":"Examples","text":"<p><code>/dumpbinds</code> \u2192 Creates <code>Configs/binds.cfg</code> <code>/dumpbinds mybinds</code> \u2192 Creates <code>Configs/mybinds.cfg</code> <code>/dumpbinds backups/oldbinds</code> \u2192 Creates <code>Configs/backups/oldbinds.cfg</code></p>","tags":["command"]},{"location":"reference/commands/dumpstack/","title":"/dumpstack","text":"","tags":["command"]},{"location":"reference/commands/dumpstack/#syntax","title":"Syntax","text":"<p>/dumpstack</p>","tags":["command"]},{"location":"reference/commands/dumpstack/#description","title":"Description","text":"<p>For debugging macroscript, outputs the current macro call stack</p>","tags":["command"]},{"location":"reference/commands/echo/","title":"/echo","text":"","tags":["command"]},{"location":"reference/commands/echo/#syntax","title":"Syntax","text":"<p>/echo text</p>","tags":["command"]},{"location":"reference/commands/echo/#description","title":"Description","text":"<p>Echoes the specified text (or variables) to the MQ Console window.</p>","tags":["command"]},{"location":"reference/commands/echo/#examples","title":"Examples","text":"<p>Colorized usage</p> <pre><code>/echo \\amThis is a \\attest\\ax \\n\\a-gAll done, let's show a backslash: \\ar\\\\\n</code></pre> <p>Output:</p> <p>[MQ] This is a test All done, let's show a backslash:  \\ </p> <p>Variable usage</p> <pre><code>/echo My current health percent is ${Me.PctHPs}\n</code></pre> <p>[MQ] My current health percent is 100</p>","tags":["command"]},{"location":"reference/commands/echo/#color-codes","title":"Color Codes","text":"Code Color Code Dark Variant <code>\\ab</code> Black <code>\\a-b</code> Black (dark) <code>\\ag</code> Green <code>\\a-g</code> Green (dark) <code>\\am</code> Magenta <code>\\a-m</code> Magenta (dark) <code>\\ao</code> Orange <code>\\a-o</code> Orange (dark) <code>\\ap</code> Purple <code>\\a-p</code> Purple (dark) <code>\\ar</code> Red <code>\\a-r</code> Red (dark) <code>\\at</code> Cyan <code>\\a-t</code> Cyan (dark) <code>\\au</code> Blue <code>\\a-u</code> Blue (dark) <code>\\aw</code> White <code>\\a-w</code> White (dark) <code>\\ay</code> Yellow <code>\\a-y</code> Yellow (dark) <code>\\ax</code> Previous color (Default if none)","tags":["command"]},{"location":"reference/commands/echo/#special-codes","title":"Special Codes","text":"Code Description <code>\\n</code> Newline <code>\\d</code> Down (same as newline, LamahHerder knows not why)","tags":["command"]},{"location":"reference/commands/endmacro/","title":"/endmacro","text":"","tags":["command"]},{"location":"reference/commands/endmacro/#syntax","title":"Syntax","text":"<p>/endmacro</p>","tags":["command"]},{"location":"reference/commands/endmacro/#description","title":"Description","text":"<p>Stops the current macro.</p>","tags":["command"]},{"location":"reference/commands/engine/","title":"/engine","text":"","tags":["command"]},{"location":"reference/commands/engine/#syntax","title":"Syntax","text":"<p>/engine type version [noauto] </p>","tags":["command"]},{"location":"reference/commands/engine/#description","title":"Description","text":"<p>Allows for switching engines. Full documentation at https://gitlab.com/Knightly1/mq2-parser-changes</p>","tags":["command"]},{"location":"reference/commands/eqtarget/","title":"/eqtarget","text":"","tags":["command"]},{"location":"reference/commands/eqtarget/#syntax","title":"Syntax","text":"<p>/eqtarget name | group 1-6</p>","tags":["command"]},{"location":"reference/commands/eqtarget/#description","title":"Description","text":"<p>Functions identically to how <code>/target</code> worked prior to loading MacroQuest, targets <code>&lt;name&gt;</code> or group member <code>&lt;#&gt;</code>. </p>","tags":["command"]},{"location":"reference/commands/eqtarget/#options","title":"Options","text":"<ul> <li> <p>name   - Name to target</p> </li> <li> <p>group #  - Target group member 1-6. Similar to the default keys F1-F6.</p> </li> </ul>","tags":["command"]},{"location":"reference/commands/eqtarget/#examples","title":"Examples","text":"<p><code>/eqtarget group 3</code> - Targets group member 3</p>","tags":["command"]},{"location":"reference/commands/eqtarget/#see-also","title":"See Also","text":"<ul> <li>/mqtarget</li> <li>/target</li> </ul>","tags":["command"]},{"location":"reference/commands/exec/","title":"/exec","text":"","tags":["command"]},{"location":"reference/commands/exec/#syntax","title":"Syntax","text":"<p>/exec command [ parameters | bg] [bg]</p>","tags":["command"]},{"location":"reference/commands/exec/#description","title":"Description","text":"<p>Executes the specified command as if from the command line.  If parameters are passed in, it will execute those parameters.  If \"bg\" is passed as either the second or third parameter, it will execute the program in the background, otherwise it executes in the foreground.</p> <p>The Application Paths section in the MacroQuest.ini file allows you to specify aliases for applications, but it's not necessary for usage.</p>","tags":["command"]},{"location":"reference/commands/exec/#ini-example","title":"Ini Example","text":"<p>MacroQuest.ini <pre><code>[Application Paths]\nvscode=\"C:\\Users\\YourName\\AppData\\Local\\Programs\\Microsoft VS Code\\bin\\code.cmd\"\n</code></pre></p>","tags":["command"]},{"location":"reference/commands/exec/#examples","title":"Examples","text":"<p>Shutdown the computer: <pre><code>/exec shutdown /s\n</code></pre> Force shutdown the computer: <pre><code>/exec shutdown \"/s /f\"\n</code></pre> Open Notepad in the background: <pre><code>/exec notepad bg\n</code></pre></p> <p>Open your MacroQuest.ini file in Visual Studio Code when using the above ini: <pre><code>/exec vscode \"${MacroQuest.Path[mqini]}\"\n</code></pre></p> <p>Or the same thing if vscode is just in your path, with no ini: <pre><code>/exec code \"${MacroQuest.Path[mqini]}\"\n</code></pre></p>","tags":["command"]},{"location":"reference/commands/executelink/","title":"/executelink","text":"","tags":["command"]},{"location":"reference/commands/executelink/#syntax","title":"Syntax","text":"<p>/executelink &lt;link text&gt;</p>","tags":["command"]},{"location":"reference/commands/executelink/#description","title":"Description","text":"<p>Simulates clicking on formatted link text.</p>","tags":["command"]},{"location":"reference/commands/face/","title":"/face","text":"","tags":["command"]},{"location":"reference/commands/face/#syntax","title":"Syntax","text":"<p>/face [predict] [fast] [nolook] [away] [ loc y,x[,z] | heading angle | item | door|switch | id # | Spawn Search ]</p>","tags":["command"]},{"location":"reference/commands/face/#description","title":"Description","text":"<p>Turns your character in the specified direction.</p>","tags":["command"]},{"location":"reference/commands/face/#options","title":"Options","text":"Option Description predict Returns an estimated distance/location, unless the target is stationary fast Faces you instantly nolook Faces your target without changing your vertical viewing angle (looking up/date at the target) away Turn you in the opposite direction of your target loc y,x[,z] Face specific coordinates (y,x,z format, z optional) heading angle Face specific compass direction (0-360 degrees, accepts decimal values and automatically wraps beyond 360\u00b0) item Face currently /itemtarget-ed ground item door or switch Face currently /doortarget-ed door id # Face specific spawn ID name/Spawn Search Face a target by its name, or any other Spawn Search parameter","tags":["command"]},{"location":"reference/commands/face/#examples","title":"Examples","text":"Example Description /face Turns you to face and look at your selected target /face nolook Faces your target without changing your vertical view angle /face fast Immediately turns your character to face and look at your target /face fast predict Immediately turns your character to face and look at your target's estimated position /face fast nolook Immediately turns your character to face your target without changing your vertical view angle /face item Faces and looks at the item following an /itemtarget /face fast item Immediately faces and looks at the item following an /itemtarget /face loc 100,100,100 Faces the given loc (note: no spaces in 'y,x,z' portion)","tags":["command"]},{"location":"reference/commands/filter/","title":"/filter","text":"","tags":["command"]},{"location":"reference/commands/filter/#syntax","title":"Syntax","text":"<p>/filter [macros {all|enhanced|none}] [skills {all|increase|none}] [target|money|food|encumber|debug {on|off}] [name {add|remove} text ] [zrange # ] [mq {on|off}]</p>","tags":["command"]},{"location":"reference/commands/filter/#description","title":"Description","text":"<p>Extends the EverQuest command to allow filtering many types of messages, such as the annoying \"You are out of food and drink\" alert. </p> Command Description /filter /filter on its own will open the chat filter section of the EQ options window macros all/enhanced/none all will filter all macro messages, except for macro end  enhanced is currently not in use, and does nothing  none turns the filtering off skills all/increase/none all will filter all skill related messages  increase filters out skill increases only  None turns the filtering off target / money / food / encumber / debug on/off target filter out target lost messages  money filter loot messages about money  food filters hungry and thirsty messages (food/drink alerts)  encumber filters out encumbrance messages  debug on/off Turns on debug filters or not zrange # Sets vertical detection range for /itemtarget ground items mq on/off Filters out any plugin or macro messages, so if you want a quiet mq chat window this is for you name add/remove text Sets up custom filters, see examples below.","tags":["command"]},{"location":"reference/commands/filter/#notes","title":"Notes","text":"<p>Filters added through <code>/filter</code> are excluded from EverQuest's logging (<code>/log</code>) system.</p> <p>Important: Overly broad filters may capture unintended messages. For example, filtering out <code>A rat</code> will also hide messages containing that exact phrase, such as /con messages.</p>","tags":["command"]},{"location":"reference/commands/filter/#examples","title":"Examples","text":"<pre><code>/filter name add Joe         This will add a filter that ignores all lines that start with \"Joe\"\n/filter name add *Joe        This will add a filter that ignores all lines that have \"Joe\" anywhere in them\n</code></pre>","tags":["command"]},{"location":"reference/commands/flashontells/","title":"/flashontells","text":"","tags":["command"]},{"location":"reference/commands/flashontells/#syntax","title":"Syntax","text":"<p>/flashontells [on|off]</p>","tags":["command"]},{"location":"reference/commands/flashontells/#description","title":"Description","text":"<ul> <li>You can use it to turn flashing of the eq window on or off when you recieve a tell.</li> <li>On/Off enables or disables</li> <li>using just \"/flashontells\" will toggle the setting</li> <li>Or just set it in MacroQuest.ini to FlashOnTells=1 in the [MacroQuest] section.</li> </ul> <p>NOTE: You have to have tell windows enabled in options for this to work.</p>","tags":["command"]},{"location":"reference/commands/for/","title":"/for","text":"","tags":["command"]},{"location":"reference/commands/for/#syntax","title":"Syntax","text":"<p>/for varname initial-value to|downto final-value [step interval]</p> <p>/next varname</p>","tags":["command"]},{"location":"reference/commands/for/#description","title":"Description","text":"<p>This runs all commands between the /for line and the /next line, after which it increments/decrements the varname number (#1) by step number \\(\\#3\\) (default is 1) before running through the commands again. It will keep doing this until the varname number equals #2. You can end a /for loop immediately with /break or try the next iteration with /continue.</p>","tags":["command"]},{"location":"reference/commands/for/#examples","title":"Examples","text":"<p>Simplest</p> <pre><code>/declare varname int local\n/for varname 1 to 5\n    /echo ${varname}\n/next varname\n\n\n| Will output:\n|  1\n|  2\n|  3\n|  4\n|  5\n</code></pre> <p>Using /continue</p> <pre><code>/declare varname int local\n/for varname 1 to 5\n   /if ({$varname} == 3) /continue\n   /echo ${varname}\n/next varname\n\n\n| Will output:\n|  1\n|  2\n|  4\n|  5\n</code></pre> <p>Using /break</p> <pre><code>/declare varname int local\n/for varname 1 to 5\n    /if (${varname} == 3) /break\n    /echo ${varname}\n/next varname\n\n\n| Will output:\n|  1\n|  2\n</code></pre> <p>With a pre-defined ending variable</p> <pre><code>/declare foo int local 5\n\n/declare varname int local\n/for varname 1 ${foo}\n  /echo ${varname}\n/next varname\n\n| Will output:\n|  1\n|  2\n|  3\n|  4\n|  5\n</code></pre>","tags":["command"]},{"location":"reference/commands/foreground/","title":"/foreground","text":"","tags":["command"]},{"location":"reference/commands/foreground/#syntax","title":"Syntax","text":"<p>/foreground</p>","tags":["command"]},{"location":"reference/commands/foreground/#description","title":"Description","text":"<p>Brings the EverQuest game window that entered the command to the front of your desktop. Useful when switching between multiple EQ windows or other applications.</p>","tags":["command"]},{"location":"reference/commands/framelimiter/","title":"/framelimiter","text":"","tags":["command"]},{"location":"reference/commands/framelimiter/#syntax","title":"Syntax","text":"<p>/framelimiter [COMMAND] {OPTIONS}</p>","tags":["command"]},{"location":"reference/commands/framelimiter/#description","title":"Description","text":"<p>Frame limiter tool: allows adjusting internal frame limiter settings.</p>","tags":["command"]},{"location":"reference/commands/framelimiter/#examples","title":"Examples","text":"/framelimiter enable turn the framelimiter on (background) /framelimiter on turn the framelimiter on (background) /framelimiter disable turn the rendering client off /framelimiter off turn the rendering client off /framelimiter toggle set/toggle the framelimiter functionality /framelimiter enablefg turn the framelimiter on (foreground) /framelimiter onfg turn the framelimiter on (foreground) /framelimiter disablefg turn the framelimiter off (foreground) /framelimiter offfg turn the framelimiter off (foreground) /framelimiter togglefg set/toggle the framelimiter (foreground) /framelimiter savebychar set/toggle saving settings by character","tags":["command"]},{"location":"reference/commands/getwintitle/","title":"/getwintitle","text":"","tags":["command"]},{"location":"reference/commands/getwintitle/#syntax","title":"Syntax","text":"<p>/getwintitle</p>","tags":["command"]},{"location":"reference/commands/getwintitle/#description","title":"Description","text":"<p>Retrieves and displays the current window title of the EverQuest client window. This is useful for debugging title changes made with /setwintitle.</p>","tags":["command"]},{"location":"reference/commands/goto/","title":"/goto","text":"","tags":["command"]},{"location":"reference/commands/goto/#syntax","title":"Syntax","text":"<p>/goto :labelname</p>","tags":["command"]},{"location":"reference/commands/goto/#description","title":"Description","text":"<p>This moves the macro execution to the location of :labelname in the macro.</p>","tags":["command"]},{"location":"reference/commands/goto/#example","title":"Example","text":"<pre><code>:MyLabel\n/if ( ${Me.Moving} ) /goto :MyLabel\n/echo I am no longer moving!\n</code></pre>","tags":["command"]},{"location":"reference/commands/help/","title":"/help","text":"","tags":["command"]},{"location":"reference/commands/help/#syntax","title":"Syntax","text":"<p>/help macro</p>","tags":["command"]},{"location":"reference/commands/help/#description","title":"Description","text":"<p>Extends the EverQuest command to add the \"macro\" parameter, which lists all MacroQuest commands available to the client.</p>","tags":["command"]},{"location":"reference/commands/hotbutton/","title":"/hotbutton","text":"","tags":["command"]},{"location":"reference/commands/hotbutton/#syntax","title":"Syntax","text":"<p>/hotbutton name [color] [line:][cursor:]text]</p>","tags":["command"]},{"location":"reference/commands/hotbutton/#description","title":"Description","text":"<p>Extends the built in /hotbutton command with multiple lines support, cursor attachment, and \"names with spaces\" (in quotes) support.</p>","tags":["command"]},{"location":"reference/commands/hotbutton/#examples","title":"Examples","text":"Example Description /hotbutton TheName 14 1:0:/echo hi Where 14 1:0: in this case means use color 14, then place /echo hi on LINE 1 and NO Cursor Attachment. /hotbutton TheName 14 1:/echo hi Where 14 1: in this case means use color 14, then place /echo hi on LINE 1. /hotbutton TheName 1:0:/echo hi Where 1:0: in this case means place /echo hi on LINE 1 and NO Cursor Attachment. /hotbutton TheName 1:/echo hi Where 1: in this case means place /echo hi on LINE 1. /hotbutton TheName 0:/echo hi Where 0: in this case means NO Cursor Attachment. /hotbutton TheName 14 /echo hi just calls the eq function like before. /hotbutton TheName /echo hi just calls the eq function like before.","tags":["command"]},{"location":"reference/commands/identify/","title":"/identify","text":"","tags":["command"]},{"location":"reference/commands/identify/#syntax","title":"Syntax","text":"<p>/identify</p>","tags":["command"]},{"location":"reference/commands/identify/#description","title":"Description","text":"<p>Displays further information about the item on the cursor, similar to the spell Identify and item lore displayed by MQ in the item stats UI window.</p>","tags":["command"]},{"location":"reference/commands/if/","title":"/if","text":"","tags":["command"]},{"location":"reference/commands/if/#syntax","title":"Syntax","text":"<p>/if ( formula ) {</p> <p>commands</p> <p>} [ else  { ]</p> <p>...</p> <p>}</p>","tags":["command"]},{"location":"reference/commands/if/#description","title":"Description","text":"<p>This will run all commands between the braces ( {} ) if formula evaluates to something other than 0.</p> <ul> <li>Formulas are numeric operations ONLY. You must use MQ2Data string comparison to turn strings comparisons into</li> </ul> <p>numeric operations (eg. Using .Equal or .NotEqual).</p> <ul> <li>You may use &amp;&amp; and || freely within formula, which will be evaluated down to a single term before proceeding.</li> <li>Multiple commands may be included within the braces.</li> <li>There is no need to use ${Math.Calc[]} in /if statements, since the formula is automatically converted into</li> </ul> <p>numeric operations.</p> <ul> <li>Else and else /if can be used to further refine how/which commands are run.</li> <li>This will not work on some older versions of MQ2 (IE Jan 25, 2004) You will get a \"Failed to parse /if command\"</li> </ul>","tags":["command"]},{"location":"reference/commands/if/#examples","title":"Examples","text":"<pre><code>/if (${Target.ID}) {\n /call Cast \"Complete Healing\" gem1\n}\n\n/if (${Target.ID}) {\n /echo I have a target\n} else {\n /echo No target\n}\n\n/if (${Target.CleanName.Equal[Banker Denton]}) {\n /echo Banker targeted\n} else /if (${Target.CleanName.Equal[Ward Toft]}) {\n /echo Ward targeted\n} else {\n /echo Banker or Ward not targeted\n}\n</code></pre> <p>Return to Slash Commands</p>","tags":["command"]},{"location":"reference/commands/ini/","title":"/ini","text":"","tags":["command"]},{"location":"reference/commands/ini/#syntax","title":"Syntax","text":"<p>/ini \"filename\" \"keyname\" \"valuename\" \"value\"</p>","tags":["command"]},{"location":"reference/commands/ini/#description","title":"Description","text":"<p>This is used to write data to an ini file. Currently there is no way to delete an ini file entry.</p>","tags":["command"]},{"location":"reference/commands/ini/#example","title":"Example","text":"<p>Stuff.ini contains the following data:</p> <pre><code>[MySection]\n; This is a comment\nKey1=123\nKey2=This is cool!\nKey3=Wheeee... 15\n</code></pre> <p>After running the following command:</p> <pre><code>/ini \"stuff.ini\" \"Section2\" \"ANewKey\" \"Some Data!\"\n</code></pre> <p>Stuff.ini will contain the following:</p> <pre><code>[MySection]\n; This is a comment\nKey1=123\nKey2=This is cool!\nKey3=Wheeee... 15 \n\n[Section2]\nANewKey=Some Data!\n</code></pre>","tags":["command"]},{"location":"reference/commands/insertaug/","title":"/insertaug","text":"","tags":["command"]},{"location":"reference/commands/insertaug/#syntax","title":"Syntax","text":"<p>/insertaug [ itemID | \"Item Name\" | slot1 slot2 ]</p>","tags":["command"]},{"location":"reference/commands/insertaug/#description","title":"Description","text":"<p>Inserts an augment from your cursor into a target item. Requires an augment item on cursor, and automatically finds first available valid augment slot. It will bypass confirmation dialogs for attuneable items and solvents. </p>","tags":["command"]},{"location":"reference/commands/insertaug/#examples","title":"Examples","text":"<p><code>/insertaug 41302</code> - insters the aug into item ID 41302</p> <p><code>/insertaug \"Darkened Thick Banded Belt\"</code> - insters the aug into item name \"Darkened Thick Banded Belt\"</p>","tags":["command"]},{"location":"reference/commands/insertaug/#see-also","title":"See Also","text":"<ul> <li>/removeaug</li> </ul>","tags":["command"]},{"location":"reference/commands/invoke/","title":"/invoke","text":"","tags":["command"]},{"location":"reference/commands/invoke/#syntax","title":"Syntax","text":"<p>/invoke ${TLO.[XXX].Action}</p>","tags":["command"]},{"location":"reference/commands/invoke/#description","title":"Description","text":"<p>This will invoke the action portion of some of the new TLO additions. This has the potential to shorten macros and make them more powerful.</p> <p>The current methods that are available for use and testing are:</p> <p>For the Task TLO:</p> <p><code>.Select</code></p> <p>For the Spawn[]. TLO:</p> <p><code>.DoTarget</code> <code>.DoFace</code> <code>.DoAssist</code> <code>.LeftClick</code> <code>.RightClick</code></p> <p>For the Me. TLO:</p> <p><code>.Stand</code> <code>.Sit</code> <code>.Dismount</code> <code>.StopCast</code></p> <p>For the Me.Buff TLO Member:</p> <p><code>.Remove</code></p> <p>For the Switch TLO:</p> <p><code>.Toggle</code></p> <p>For the Ground TLO:</p> <p><code>.Grab</code></p> <p>For the Window TLO:</p> <p><code>.LeftMouseDown</code> <code>.LeftMouseUp</code> <code>.LeftMouseHeld</code> <code>.LeftMouseHeldUp</code> <code>.RightMouseDown</code> <code>.RightMouseUp</code> <code>.RightMouseHeld</code> <code>.RightMouseHeldUp</code> <code>.Select</code></p>","tags":["command"]},{"location":"reference/commands/invoke/#examples","title":"Examples","text":"<p><code>/invoke ${Spawn[eqmule].DoTarget}</code></p> <p>if spawn \"eqmule\" is found, will target</p> <p><code>/invoke ${Me.Buff[Cred].Remove}</code></p> <p>If a buff with the partial name \"Cred\" is found it will remove it</p>","tags":["command"]},{"location":"reference/commands/itemnotify/","title":"/itemnotify","text":"","tags":["command"]},{"location":"reference/commands/itemnotify/#syntax","title":"Syntax","text":"<p>/itemnotify [ slotname | # | in bag slot# | itemname ] notification</p>","tags":["command"]},{"location":"reference/commands/itemnotify/#description","title":"Description","text":"<p>Simulates inventory interactions. Similar to /click without the mouse click.</p>","tags":["command"]},{"location":"reference/commands/itemnotify/#parameters","title":"Parameters","text":"<ul> <li>slotname - any one of the equipment Slot Names.</li> <li># - any slot number.</li> <li>in bag slot# - can be pack1-pack8 or bank1-bank24, followed by a slot number.<ul> <li>Not supported: sharedbank, trade slots</li> </ul> </li> <li>itemname - first match in inventory</li> <li>notification can be any one of the following:</li> </ul> Notification Action leftmouseup Left click (press + release) leftmouseheld Left mouse hold leftmouseheldup Release after left hold rightmouseup Right click (press + release) rightmouseheld Right mouse hold rightmouseheldup Release after right hold","tags":["command"]},{"location":"reference/commands/itemnotify/#examples","title":"Examples","text":"<p>Exchange the item in slot1 of pack8 with the item in your main hand:</p> <pre><code> /itemnotify in pack8 1 leftmouseup\n /itemnotify mainhand leftmouseup\n /itemnotify in pack8 1 leftmouseup\n</code></pre> <p>Right-click your Shrunken Goblin Skull Earring:</p> <pre><code> /itemnotify \"Shrunken Goblin Skull Earring\" rightmouseup\n</code></pre>","tags":["command"]},{"location":"reference/commands/items/","title":"/items","text":"","tags":["command"]},{"location":"reference/commands/items/#syntax","title":"Syntax","text":"<p>/items [filter]</p>","tags":["command"]},{"location":"reference/commands/items/#description","title":"Description","text":"<ul> <li>Lists all ground spawns and environmental containers in the zone that match filter</li> <li>All items will be listed if no filter is supplied</li> </ul>","tags":["command"]},{"location":"reference/commands/itemslots/","title":"/itemslots","text":"","tags":["command"]},{"location":"reference/commands/itemslots/#syntax","title":"Syntax","text":"<p>/itemslots</p>","tags":["command"]},{"location":"reference/commands/itemslots/#description","title":"Description","text":"<p>Lists available item slots, including equipped, inventory, bank, shared, current container, and so on. Output is in the following format:</p> <p>[index]: [container location] [slot numbers] [item name]</p>","tags":["command"]},{"location":"reference/commands/itemtarget/","title":"/itemtarget","text":"","tags":["command"]},{"location":"reference/commands/itemtarget/#syntax","title":"Syntax","text":"<p>/itemtarget \"itemname\"</p>","tags":["command"]},{"location":"reference/commands/itemtarget/#description","title":"Description","text":"<p>\"Targets\" a ground spawn or environmental container. The item targeted will not show up in the target window.</p>","tags":["command"]},{"location":"reference/commands/keepkeys/","title":"/keepkeys","text":"","tags":["command"]},{"location":"reference/commands/keepkeys/#syntax","title":"Syntax","text":"<p>/keepkeys [off|on]</p>","tags":["command"]},{"location":"reference/commands/keepkeys/#description","title":"Description","text":"<p>Keeps keys that were pressed with /keypress, in their current state when a macro ends. /keepkeys with no arguments displays the current on/off state.</p>","tags":["command"]},{"location":"reference/commands/keypress/","title":"/keypress","text":"","tags":["command"]},{"location":"reference/commands/keypress/#syntax","title":"Syntax","text":"<p>/keypress name [hold|chat]</p>","tags":["command"]},{"location":"reference/commands/keypress/#description","title":"Description","text":"<p>Simulates key presses for keybinds (e.g. \"jump\", \"forward\"), virtual keyboard (e.g. \"shift+b\"), or direct chat window input. Does not physically press keys, making it safe for background operation.</p> <p>Note: /keypress usage outside of a script is not recommended nor consistent.</p>","tags":["command"]},{"location":"reference/commands/keypress/#parameters","title":"Parameters","text":"Parameter Description hold Maintains key in pressed state until released chat Directs input to chat/UI fields instead of game world <p>Note: Cannot use both together. For chat input, use simple key names (\"X\" not \"shift+x\"). \"hold\" works with movement/toggle commands.</p>","tags":["command"]},{"location":"reference/commands/keypress/#examples","title":"Examples","text":"","tags":["command"]},{"location":"reference/commands/keypress/#equi-and-mq-keybinds","title":"EQUI and MQ Keybinds","text":"<pre><code>/keypress jump         # Simulate the key mapped to JUMP\n/keypress HAIL         # Simulate the key mapped to the HAIL emote\n/keypress NETSTAT      # Simulate the key mapped to the NETSTAT command\n</code></pre>","tags":["command"]},{"location":"reference/commands/keypress/#keys-and-key-combinations","title":"Keys and Key Combinations","text":"<pre><code>/keypress h              # Virtual h key press (will trigger HAIL by default)\n/keypress shift+b        # Virtual shift+B key press\n/keypress ctrl+i         # Virtual control+I key press\n</code></pre>","tags":["command"]},{"location":"reference/commands/keypress/#advanced-usage","title":"Advanced Usage","text":"<pre><code>/keypress forward hold # Begin moving forward\n/keypress forward      # Stop moving forward\n/keypress r chat       # Type 'r' in chat input\n/keypress R chat       # Type 'R' in chat input\n</code></pre>","tags":["command"]},{"location":"reference/commands/keypress/#key-reference","title":"Key Reference","text":"","tags":["command"]},{"location":"reference/commands/keypress/#common-equi-keybinds","title":"Common EQUI Keybinds","text":"Command Description OPEN_INV_BAGS Toggle inventory bags TOGGLE_MAPWIN Show/hide map CAST1-CAST12 Spell gem hotkeys HOT1_1-HOT1_12 Hotbar buttons <p>Use the /bind command to view your client's EQ binds <code>/bind eqlist</code> or all binds <code>/bind list</code>.</p>","tags":["command"]},{"location":"reference/commands/keypress/#virtual-keys","title":"Virtual Keys","text":"<p><pre><code>Esc  F1-F12  ` 1 2 3 4 5 6 7 8 9 0 - = [ ] \\\nTab  Q W E R T Y U I O P \nCaps_Lock A S D F G H J K L ; ' \nShift Z X C V B N M , . / Right_Shift\nCtrl Alt Space Enter Backspace\n</code></pre> For complete key names and codes, including mouse and media keys, see: src/eqdata/dikeys.h</p> <p>See also: /bind, /doability</p>","tags":["command"]},{"location":"reference/commands/listmacros/","title":"/listmacros","text":"","tags":["command"]},{"location":"reference/commands/listmacros/#syntax","title":"Syntax","text":"<p>/listmacros [filter]</p>","tags":["command"]},{"location":"reference/commands/listmacros/#description","title":"Description","text":"<ul> <li>Lists all files in the \"Macros\" directory that match filter</li> <li>Results are sorted alphabetically</li> </ul>","tags":["command"]},{"location":"reference/commands/loadcfg/","title":"/loadcfg","text":"","tags":["command"]},{"location":"reference/commands/loadcfg/#syntax","title":"Syntax","text":"<p>/loadcfg filename</p>","tags":["command"]},{"location":"reference/commands/loadcfg/#description","title":"Description","text":"<p>Loads the specified .cfg file. To use .cfg files, see this guide.</p>","tags":["command"]},{"location":"reference/commands/loadcfg/#notes","title":"Notes","text":"<ul> <li>Plugins can use LoadCfgFile(filename)</li> <li> <p>Automatic config loading occurs for:</p> <ul> <li> <p>autoexec.cfg - Executed on first initialization</p> </li> <li> <p>charselect.cfg - Runs at character selection screen</p> </li> <li> <p>server_character.cfg (e.g. <code>bertox_lordsoth.cfg</code>) - Character-specific config</p> </li> <li> <p>mapshortname.cfg (e.g. <code>oot.cfg</code>) - Zone-specific config</p> </li> <li> <p>pluginname-autoexec.cfg (e.g. <code>MQ2Map-AutoExec.cfg</code>) - Plugin initialization config</p> </li> </ul> </li> </ul>","tags":["command"]},{"location":"reference/commands/loadcfg/#examples","title":"Examples","text":"<ul> <li>bertox_mycharacter.cfg</li> </ul> <p>Config file that will load for Mycharacter on the Bertox server when she first enters world.</p> <ul> <li>oot.cfg, soldungb.cfg, soldunga.cfg, take.cfg</li> </ul> <p>Config file that will load when entering a specific zone</p>","tags":["command"]},{"location":"reference/commands/loadspells/","title":"/loadspells","text":"","tags":["command"]},{"location":"reference/commands/loadspells/#syntax","title":"Syntax","text":"<p>/loadspells [list|\"name\"]</p>","tags":["command"]},{"location":"reference/commands/loadspells/#description","title":"Description","text":"<p>Loads or lists saved spell sets. Similar to /memspellset, but it only memorizes the spellset if it's not already memorized. This command was part of MQ years before EQ was inspired to add /memspellset.</p>","tags":["command"]},{"location":"reference/commands/loadspells/#parameters","title":"Parameters","text":"<ul> <li>/loadspells list - Shows all saved spell sets with their index numbers</li> <li>/loadspells \"name\" - Loads a spell set by exact name match (case insensitive)</li> </ul>","tags":["command"]},{"location":"reference/commands/location/","title":"/location","text":"","tags":["command"]},{"location":"reference/commands/location/#syntax","title":"Syntax","text":"<p>/location</p>","tags":["command"]},{"location":"reference/commands/location/#description","title":"Description","text":"<p>Extends the EverQuest Y, X, Z coordinates to add the direction you're facing from a 16-wind compass. </p>","tags":["command"]},{"location":"reference/commands/location/#example-output","title":"Example Output","text":"<p><pre><code>Your Location is 100, 200, 10, and are heading west by southwest.\n</code></pre> </p>","tags":["command"]},{"location":"reference/commands/loginname/","title":"/loginname","text":"","tags":["command"]},{"location":"reference/commands/loginname/#syntax","title":"Syntax","text":"<p>/loginname</p>","tags":["command"]},{"location":"reference/commands/loginname/#description","title":"Description","text":"<p>Displays the login name of the account you are currently logged into.</p>","tags":["command"]},{"location":"reference/commands/look/","title":"/look","text":"","tags":["command"]},{"location":"reference/commands/look/#syntax","title":"Syntax","text":"<p>/look [angle]</p>","tags":["command"]},{"location":"reference/commands/look/#description","title":"Description","text":"<p>Changes the angle you are looking. Angle can be any value between -128 (directly down) and 128 (directly up). The default for angle is 0 (straight ahead).</p>","tags":["command"]},{"location":"reference/commands/look/#examples","title":"Examples","text":"<ul> <li>Changes your look angle to +50</li> </ul> <pre><code>/look 50\n</code></pre> <ul> <li>Changes your look angle to -75 (down)</li> </ul> <pre><code>/look -75\n</code></pre>","tags":["command"]},{"location":"reference/commands/lootall/","title":"/lootall","text":"","tags":["command"]},{"location":"reference/commands/lootall/#syntax","title":"Syntax","text":"<p>/lootall</p>","tags":["command"]},{"location":"reference/commands/lootall/#description","title":"Description","text":"<p>Automatically loots all non-\"No Trade\" items from corpses. If EverQuest's <code>/lootnodrop</code> command is enabled, it will loot all items. Otherwise, single No Trade items leave others lootable, while multiple No Trade items disable auto-looting entirely, requiring manual collection of all items.</p>","tags":["command"]},{"location":"reference/commands/lootall/#examples","title":"Examples","text":"<ul> <li>Will loot everything:</li> </ul> <pre><code>Slot 1: Diamond\nSlot 2: Jacinth\nSlot 3: No Trade Item\n</code></pre> <ul> <li>Will not loot everything:</li> </ul> <pre><code>Slot 1: Diamond\nSlot 2: Jacinth\nSlot 3: No Trade Item\nSlot 4: No Trade Item\n</code></pre>","tags":["command"]},{"location":"reference/commands/macro/","title":"/macro","text":"","tags":["command"]},{"location":"reference/commands/macro/#syntax","title":"Syntax","text":"<p>/macro filename [ param0 [ param1 [...]]]</p>","tags":["command"]},{"location":"reference/commands/macro/#description","title":"Description","text":"<p>Executes a macro file. Supports passing parameters to the macro's <code>Sub Main</code> entry point.</p>","tags":["command"]},{"location":"reference/commands/macro/#notes","title":"Notes","text":"<ul> <li>Calling a macro from another macro will immediately terminate the calling macro (no cleanup).  </li> <li>Parameters are passed as space-separated values to <code>Sub Main</code> (params with spaces must be quoted)</li> <li>File resolution:<ul> <li>Appends <code>.mac</code> extension if missing</li> <li>Searches relative to <code>Macros/</code> directory</li> <li>Supports absolute paths</li> </ul> </li> </ul>","tags":["command"]},{"location":"reference/commands/macro/#examples","title":"Examples","text":"<pre><code>/macro mymacro\n/macro subdir/mymacro \"goblin\" 5\n/macro \"/full/path/to/macros/tradeskill.mac\" \"Smithing\"\n</code></pre>","tags":["command"]},{"location":"reference/commands/makemevisible/","title":"/makemevisible","text":"","tags":["command"]},{"location":"reference/commands/makemevisible/#syntax","title":"Syntax","text":"<p>/makemevisible</p>","tags":["command"]},{"location":"reference/commands/makemevisible/#description","title":"Description","text":"<p>This will make your toon visible</p>","tags":["command"]},{"location":"reference/commands/makemevisible/#example","title":"Example","text":"<p><code>/makemevisible</code></p>","tags":["command"]},{"location":"reference/commands/memspell/","title":"/memspell","text":"","tags":["command"]},{"location":"reference/commands/memspell/#syntax","title":"Syntax","text":"<p>/memspell gem \"spellname\"</p>","tags":["command"]},{"location":"reference/commands/memspell/#description","title":"Description","text":"<p>Attempts to memorize \"spellname\" into gem gem. Any spellname with more than one word must be surrounded by quotes.</p>","tags":["command"]},{"location":"reference/commands/memspell/#example","title":"Example","text":"<p><code>/memspell 1 \"Shallow Breath\"</code></p>","tags":["command"]},{"location":"reference/commands/mercswitch/","title":"/mercswitch","text":"","tags":["command"]},{"location":"reference/commands/mercswitch/#syntax","title":"Syntax","text":"<p>/mercswitch type</p>","tags":["command"]},{"location":"reference/commands/mercswitch/#description","title":"Description","text":"<p>Extends the default EverQuest command to add the <code>&lt;type&gt;</code> option. Valid types are: Healer, Damage Caster, Melee Damage, Tank. A list of your mercenaries, their types and indices can be found in the \"Switch\" tab of your <code>/mercwindows</code>. </p>","tags":["command"]},{"location":"reference/commands/mercswitch/#examples","title":"Examples","text":"<p><code>/mercswitch healer</code> will switch to your first \"healer\" merc. <code>/mercswitch damage caster</code> will switch to your first \"damage caster\" merc.</p>","tags":["command"]},{"location":"reference/commands/mouseto/","title":"/mouseto","text":"","tags":["command"]},{"location":"reference/commands/mouseto/#syntax","title":"Syntax","text":"<p>/mouseto X or X offset [ Y or Y offset ]</p>","tags":["command"]},{"location":"reference/commands/mouseto/#description","title":"Description","text":"<p>Moves the mouse to the specified location.</p> <p>When an absolute location is specified (a number from 0 through 9) the mouse is moved to the absolute position.</p> <p>When a relative position is specified (using - or + in front of the X or Y) the mouse is moved by that offset.</p>","tags":["command"]},{"location":"reference/commands/mouseto/#examples","title":"Examples","text":"<p>Move the mouse to X=1 Y=1</p> <pre><code>/mouseto 1 1\n</code></pre> <p>Move the mouse by 1 positive unit vertically and horizontally</p> <pre><code>/mouseto +1 +1\n</code></pre>","tags":["command"]},{"location":"reference/commands/mqanon/","title":"/mqanon","text":"","tags":["command"]},{"location":"reference/commands/mqanon/#syntax","title":"Syntax","text":"<p>/mqanon [command] [parameters] [strategy]</p>","tags":["command"]},{"location":"reference/commands/mqanon/#description","title":"Description","text":"<p>Anonymization tool that filters words in-game, designed for streaming and recording. It handles both the active player and any party/raid/fellowship members. It does not grant full-fledged anonymization, but is a tool to help with the process of anonymizing words (names, guilds, etc) in-game. For more (especially for plugin authors), see the Anonymize feature.</p> <p>Important Notes: - Login/character screens contain no anonymization, this command is in-game only. Any text at server select, character select, login, etc will not be filtered. Please make any considerations necessary to prevent visibility of the client outside of actual in-game experiences. - Requires <code>/caption MQCaptions on</code> for name sprite anonymization. See /caption.</p>","tags":["command"]},{"location":"reference/commands/mqanon/#command-reference","title":"Command Reference","text":"<ul> <li>no arguments: toggle on/off state of anonymization</li> <li><code>asterisk &lt;name&gt;</code><ul> <li>add a filter for <code>name</code> and replace it with asterisks</li> </ul> </li> <li><code>class &lt;name&gt;</code><ul> <li>add a filter for <code>name</code> and replace it with class information</li> </ul> </li> <li><code>custom &lt;name&gt; &lt;text&gt;</code><ul> <li>add a filter for <code>name</code> and replace it with custom <code>text</code></li> </ul> </li> <li><code>drop &lt;name&gt;</code><ul> <li>remove the filter for <code>name</code></li> </ul> </li> <li><code>alias &lt;name&gt; &lt;alternate&gt;</code><ul> <li>add an alternate for <code>name</code></li> <li>will use the same replacement strategy as <code>name</code></li> </ul> </li> <li><code>unalias [name] &lt;alternate&gt;</code><ul> <li>remove an alternate from <code>name</code></li> <li>specifying the name is optional here</li> </ul> </li> <li><code>me [asterisk|class|me|none]</code><ul> <li>set self anonymization to strategy</li> <li>if no argument is specified, will use the <code>me</code> strategy</li> </ul> </li> <li><code>group &lt;asterisk|class|none&gt;</code><ul> <li>set group anonymization to strategy</li> </ul> </li> <li><code>fellowship &lt;asterisk|class|none&gt;</code><ul> <li>set fellowship anonymization to strategy</li> </ul> </li> <li><code>guild &lt;asterisk|class|none&gt;</code><ul> <li>set guild anonymization to strategy</li> </ul> </li> <li><code>raid &lt;asterisk|class|none&gt;</code><ul> <li>set raid anonymization to strategy</li> </ul> </li> <li><code>all &lt;asterisk|class|none&gt;</code><ul> <li>set all anonymization strategies at once</li> </ul> </li> <li><code>save</code><ul> <li>save the current configuration</li> </ul> </li> <li><code>load</code><ul> <li>load the configuration from file (for use when editing the config externally)</li> </ul> </li> <li><code>[command] -h</code> or <code>[command] --help</code><ul> <li>display help</li> <li>commands that take arguments also allow this switch</li> </ul> </li> </ul>","tags":["command"]},{"location":"reference/commands/mqanon/#replacement-strategies","title":"Replacement Strategies","text":"<p>Strategies</p> Asterisk Class Me Custom  <p>Replaces middle characters with asterisks.</p> <p>Example: <code>/mqanon me asterisk</code></p> <p>Result: Myname \u2192 <code>M****e</code></p> <p>Replaces name with level and class information, like <code>[${Spawn[pc {0}].Level}] ${Spawn[pc {0}].Class}\"</code></p> <p>Example: <code>/mqanon class Bigtank</code></p> <p>Result: Bigtank \u2192 <code>[60] WAR</code></p> <p>Replaces name with information like, <code>[${Me.Level}] ${Me.Race} ${Me.Class}</code></p> <p>Example: <code>/mqanon me</code></p> <p>Result: Myname \u2192 <code>[60] Barbarian Warrior</code></p> <p>Make a custom replacement, allows TLO parsing.</p> <p>Example: <code>/mqanon custom Littlewiz \"Little ${Spawn[pc {Littlewiz}].Class} [${Spawn[pc {Littlewiz}].Level}]\"</code></p> <p>Result: Littlewiz \u2192 <code>Little Wizard [69]</code></p>","tags":["command"]},{"location":"reference/commands/mqanon/#replacement-priority","title":"Replacement Priority","text":"<p>Since the same character can exist in multiple groupings (guild/group/raid, etc) and each grouping can have a separate strategy, the priority is as follows with \"custom\" having the highest priority:</p> <p>\u27a4 Custom \u00a0\u00a0\u21b3 Self \u00a0\u00a0\u00a0\u00a0\u21b3 Group \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u21b3 Fellowship \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u21b3 Guild \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u21b3 Raid</p>","tags":["command"]},{"location":"reference/commands/mqanon/#configuration","title":"Configuration","text":"<p>Settings are stored in <code>Config/MQ2Anonymize.yaml</code>. Example configuration: <pre><code>enabled: true\ngroup: asterisk\nfellowship: none\nguild: class\nraid: none\nself: me\n\nreplacers:\n  - name: \"Bigtank\"\n    strategy: \"custom\"\n    target: \"[${Spawn[pc {Bigtank}].Level}] ${Spawn[pc {Bigtank}].Class}] MT\"\n    alternates:\n        - \"TankAlt\"\n        - \"OldTankName\"\n\n  - name: \"Banker\"\n    strategy: \"asterisk\"\n    alternates:\n        - \"Mule\"\n</code></pre></p>","tags":["command"]},{"location":"reference/commands/mqconsole/","title":"/mqconsole","text":"","tags":["command"]},{"location":"reference/commands/mqconsole/#syntax","title":"Syntax","text":"<p>/mqconsole [clear | toggle | show | hide]</p>","tags":["command"]},{"location":"reference/commands/mqconsole/#description","title":"Description","text":"<p>Brings up an external MacroQuest console </p>","tags":["command"]},{"location":"reference/commands/mqconsole/#parameters","title":"Parameters","text":"<ul> <li>clear - Clears the text in the console</li> <li>toggle - Toggles the window. Good to hotkey.</li> <li>show - Forces console to appear</li> <li>hide - Hides the console</li> </ul>","tags":["command"]},{"location":"reference/commands/mqconsole/#configuration","title":"Configuration","text":"<p>INI settings in MacroQuest.ini, <pre><code>[MacroQuest]\nShowMacroQuestConsole=1 # Show the console on startup\n[Console]\nPersistentCommandHistory=1 # Maintain command history between sessions\nMaxBufferLines=5000 # Maximum lines kept in scrollback buffer\nLocalEcho=1 # Show executed commands in console\n</code></pre></p>","tags":["command"]},{"location":"reference/commands/mqcopylayout/","title":"/mqcopylayout","text":"","tags":["command"]},{"location":"reference/commands/mqcopylayout/#syntax","title":"Syntax","text":"<p>/mqcopylayout charname server [res:WxH] [nohot] [noload] [nosoc] [none]</p>","tags":["command"]},{"location":"reference/commands/mqcopylayout/#description","title":"Description","text":"<p>Intelligent copying of EverQuest's UI layout. By default copies all options (hotbuttons, loadouts, socials) using the windowed resolution.</p>","tags":["command"]},{"location":"reference/commands/mqcopylayout/#options","title":"Options","text":"<ul> <li>charname - Name of the character whose UI to copy</li> <li>server - Server shortname where character exists</li> <li>[res:WxH] - Specific resolution to copy (if exists in UI INI)</li> <li>nohot - Exclude hotbuttons</li> <li>noload - Exclude loadouts</li> <li>nosoc - Exclude socials</li> <li>none - Exclude all options (equivalent to nohot+noload+nosoc)</li> </ul>","tags":["command"]},{"location":"reference/commands/mqcopylayout/#examples","title":"Examples","text":"<p><code>/mqcopylayout bobby vox</code></p> <p>Copies everything including hotbuttons, loadouts, and socials using windowed resolution</p> <p><code>/mqcopylayout bobby vox nohot</code></p> <p>Copies layout excluding hotbuttons</p> <p><code>/mqcopylayout bobby vox nohot noload</code></p> <p>Copies layout excluding hotbuttons and loadouts</p> <p><code>/mqcopylayout bobby vox nohot noload nosoc</code></p> <p>Copies layout excluding hotbuttons, loadouts, and socials</p> <p><code>/mqcopylayout bobby vox none</code></p> <p>Same as above (excludes all options)</p> <p><code>/mqcopylayout bobby vox res:1600x900</code></p> <p>Copies layout for specific 1600x900 resolution (if exists)</p>","tags":["command"]},{"location":"reference/commands/mqlistmodules/","title":"/mqlistmodules","text":"","tags":["command"]},{"location":"reference/commands/mqlistmodules/#syntax","title":"Syntax","text":"<p>/mqlistmodules [name]</p>","tags":["command"]},{"location":"reference/commands/mqlistmodules/#description","title":"Description","text":"<p>List loaded modules in the MQ directory to help with debugging stuck and/or broken dependencies/plugins. <code>&lt;name&gt;</code> is a filter. </p>","tags":["command"]},{"location":"reference/commands/mqlistprocesses/","title":"/mqlistprocesses","text":"","tags":["command"]},{"location":"reference/commands/mqlistprocesses/#syntax","title":"Syntax","text":"<p>/mqlistprocesses [name]</p>","tags":["command"]},{"location":"reference/commands/mqlistprocesses/#description","title":"Description","text":"<p>List relevant processes to help debug stuck and/or broken dependencies/plugins. <code>&lt;name&gt;</code> is a filter. </p>","tags":["command"]},{"location":"reference/commands/mqlog/","title":"/mqlog","text":"","tags":["command"]},{"location":"reference/commands/mqlog/#syntax","title":"Syntax","text":"<p>/mqlog clear | text</p>","tags":["command"]},{"location":"reference/commands/mqlog/#description","title":"Description","text":"<p>This will log text to a log file in the \"Logs\" directory. Clear will delete everything in the log file.</p> <p>Notes</p> <ul> <li>The log filename will be macroname.mac.log if run from within a macro</li> <li>The log filename will be MacroQuest.log if issued normally</li> </ul>","tags":["command"]},{"location":"reference/commands/mqlog/#example","title":"Example","text":"<pre><code>/mqlog The number of combines completed is: ${CombineCount}\n</code></pre>","tags":["command"]},{"location":"reference/commands/mqoverlay/","title":"/mqoverlay","text":"","tags":["command"]},{"location":"reference/commands/mqoverlay/#syntax","title":"Syntax","text":"<p>/mqoverlay [reload | resume | stop | start | cursor [on|off] debug [mouse|graphics|fonts|cursor]]</p>","tags":["command"]},{"location":"reference/commands/mqoverlay/#description","title":"Description","text":"<p>Simple controls for the imgui overlay in MacroQuest. If imgui crashes, it can be resumed with this command. </p>","tags":["command"]},{"location":"reference/commands/mqoverlay/#parameters","title":"Parameters","text":"<ul> <li>reload - Reloads the overlay</li> <li>resume - If imgui crashes, it can be resumed with this option.</li> <li>start|stop - Starts or stops the overlay</li> <li>debug - overlay debug info</li> </ul>","tags":["command"]},{"location":"reference/commands/mqpause/","title":"/mqpause","text":"","tags":["command"]},{"location":"reference/commands/mqpause/#syntax","title":"Syntax","text":"<p>/mqpause [on|off] | chat [on|off]</p>","tags":["command"]},{"location":"reference/commands/mqpause/#description","title":"Description","text":"<p>Pauses/resumes a macro. Not using a parameter will toggle pausing on/off.</p>","tags":["command"]},{"location":"reference/commands/mqpause/#parameters","title":"Parameters","text":"<ul> <li>on|off - Pauses or resumes a macro</li> <li>chat [on|off] - controls whether macro will pause while in chat mode</li> </ul>","tags":["command"]},{"location":"reference/commands/mqsettings/","title":"/mqsettings","text":"","tags":["command"]},{"location":"reference/commands/mqsettings/#syntax","title":"Syntax","text":"<p>/mqsettings [Section to Open]</p>","tags":["command"]},{"location":"reference/commands/mqsettings/#description","title":"Description","text":"<p>Open the MacroQuest Settings window -- optionally, to a specific area.</p>","tags":["command"]},{"location":"reference/commands/mqsettings/#examples","title":"Examples","text":"/mqsettings Toggles the window open or closed /mqsettings console Opens the settings window and changes to the console tab /mqsettings fps limiter Opens the settings window and changes to the FPS Limiter tab /mqsettings plugins/lua Opens the settings window and changes to the plugins \u2192 Lua tab","tags":["command"]},{"location":"reference/commands/mqtarget/","title":"/mqtarget","text":"","tags":["command"]},{"location":"reference/commands/mqtarget/#syntax","title":"Syntax","text":"<p>/mqtarget option</p>","tags":["command"]},{"location":"reference/commands/mqtarget/#description","title":"Description","text":"<p>Targets whatever is matched by one or more of the following options:</p> clear Clears your current target mycorpse Your own corpse (nearest) myself Target yourself Anything Else Anything else is considered a Spawn Search","tags":["command"]},{"location":"reference/commands/mqtarget/#examples","title":"Examples","text":"<pre><code>/mqtarget npc radius 100 zradius 50 alert 1\n/mqtarget pc range 30 35 lfg\n/mqtarget npc los radius 220\n/mqtarget ${Spawn[alert 1]}\n/mqtarget ${Spawn[noalert 1]}\n</code></pre>","tags":["command"]},{"location":"reference/commands/msgbox/","title":"/msgbox","text":"","tags":["command"]},{"location":"reference/commands/msgbox/#syntax","title":"Syntax","text":"<p>/msgbox message</p>","tags":["command"]},{"location":"reference/commands/msgbox/#description","title":"Description","text":"<p>Creates a windows message box with message, user clicks \"ok\" to close. </p>","tags":["command"]},{"location":"reference/commands/multiline/","title":"/multiline","text":"","tags":["command"]},{"location":"reference/commands/multiline/#syntax","title":"Syntax","text":"<p>/multiline delimiter command [ delimiter command [...] ]</p>","tags":["command"]},{"location":"reference/commands/multiline/#description","title":"Description","text":"<p>Executes multiple commands using a single line separated by the delimiter.</p> <p>Notes</p> <ul> <li>This is useful for keybinds</li> <li>There must be a space before and after the defined delimiter. e.g. /multiline ; command</li> <li>You do not need to put a space before and after the delimiter separating the individual commands</li> <li> <p>The delimiter is 1 parameter, and the list of commands is 1 parameter, ergo you need a space separating the</p> <p>delimiter from the list of commands. The delimiter may be anything of your choosing e.g ; | word @ # !  * /call, /return and /delay are line based and their use on a /multiline line is unpredictable.</p> </li> </ul>","tags":["command"]},{"location":"reference/commands/multiline/#examples","title":"Examples","text":"<pre><code>; using one multline\n/if ( ${Target.ID} &amp;&amp; ${Target.Type.Equal[NPC]} &amp;&amp; !${Me.Combat} ) {\n       /multiline ; /echo Attacking ${Target.DisplayName}; /attack on\n}\n\n; use more than one multiline\n/multiline ; /target clear; /mqp on; /timed 200 /multiline | mqp off | /beep\n</code></pre>","tags":["command"]},{"location":"reference/commands/netstatusxpos/","title":"/netstatusxpos","text":"","tags":["command"]},{"location":"reference/commands/netstatusxpos/#syntax","title":"Syntax","text":"<p>/netstatusxpos XXX</p>","tags":["command"]},{"location":"reference/commands/netstatusxpos/#description","title":"Description","text":"<p>used for moving the X coordinates of the Network Status Indicator</p>","tags":["command"]},{"location":"reference/commands/netstatusypos/","title":"/netstatusypos","text":"","tags":["command"]},{"location":"reference/commands/netstatusypos/#syntax","title":"Syntax","text":"<p>/netstatusypos XXX</p>","tags":["command"]},{"location":"reference/commands/netstatusypos/#description","title":"Description","text":"<p>Used to change the Y coordinates of the Network Status Indicator</p>","tags":["command"]},{"location":"reference/commands/next/","title":"/next","text":"","tags":["command"]},{"location":"reference/commands/next/#syntax","title":"Syntax","text":"<p>/for varname initial-value to|downto final-value [step interval]</p> <p>/next varname</p>","tags":["command"]},{"location":"reference/commands/next/#description","title":"Description","text":"<p>This runs all commands between the /for line and the /next line, after which it increments/decrements the varname number (#1) by step number (#3) (default is 1) before running through the commands again. It will keep doing this until the varname number equals #2. You can end a /for loop immediately with /break or try the next iteration with /continue.</p>","tags":["command"]},{"location":"reference/commands/no/","title":"/no","text":"","tags":["command"]},{"location":"reference/commands/no/#syntax","title":"Syntax","text":"<p>/no</p>","tags":["command"]},{"location":"reference/commands/no/#description","title":"Description","text":"<p>Clicks \"no\" on in-game dialogues and popups. Technically not a command, this is an /alias that's included by default.</p>","tags":["command"]},{"location":"reference/commands/no/#examples","title":"Examples","text":"<p>Here's what the alias is really doing behind the scenes. From your MacroQuest.ini, </p> <pre><code>/no=/multiline ; /squelch /notify LargeDialogWindow LDW_NoButton leftmouseup ; /squelch /notify ConfirmationDialogBox CD_No_Button leftmouseup ; /squelch /notify ConfirmationDialogBox CD_Cancel_Button leftmouseup ; /squelch /notify TradeWND TRDW_Cancel_Button leftmouseup ; /squelch /notify GiveWnd GVW_Cancel_Button leftmouseup ; /squelch /notify ProgressionSelectionWnd ProgressionTemplateSelectCancelButton leftmouseup ; /squelch /notify TaskSelectWnd TSEL_DeclineButton leftmouseup ; /squelch /notify RaidWindow RAID_DeclineButton leftmouseup\n</code></pre>","tags":["command"]},{"location":"reference/commands/nomodkey/","title":"/nomodkey","text":"","tags":["command"]},{"location":"reference/commands/nomodkey/#syntax","title":"Syntax","text":"<p>/nomodkey command</p>","tags":["command"]},{"location":"reference/commands/nomodkey/#description","title":"Description","text":"<p>Releases all ctrl/alt/shift keys while executing command</p>","tags":["command"]},{"location":"reference/commands/noparse/","title":"/noparse","text":"","tags":["command"]},{"location":"reference/commands/noparse/#syntax","title":"Syntax","text":"<p>/noparse command</p>","tags":["command"]},{"location":"reference/commands/noparse/#description","title":"Description","text":"<p>Prevents any MQ2Data from being parsed when used in command.</p>","tags":["command"]},{"location":"reference/commands/noparse/#example","title":"Example","text":"<ul> <li>Here the literal string \"${stuff}\" is added to the ini file, as opposed to the current value of ${stuff}.</li> </ul> <pre><code>/noparse /ini stuff.ini MySection MyVal ${stuff}\n</code></pre> <p>*Here is another example. First we declare a variable</p> <pre><code>/declare NotDisplayed string outer DISPLAYED\n</code></pre> <ul> <li>Using echo by itself, the MQ2Data is parsed and displayed in the chatwnd:</li> </ul> <pre><code>/echo ${NotDisplayed}\n[MQ2] DISPLAYED\n</code></pre> <ul> <li>Using /noparse, we do not parse the MQ2Data, and the literal string is displayed in the chatwnd</li> </ul> <pre><code>/noparse /echo ${NotDisplayed}\n[MQ2] ${NotDisplayed}\n</code></pre>","tags":["command"]},{"location":"reference/commands/notify/","title":"/notify","text":"","tags":["command"]},{"location":"reference/commands/notify/#syntax","title":"Syntax","text":"<p>/notify windowname control [ notification [ data ] ]</p>","tags":["command"]},{"location":"reference/commands/notify/#description","title":"Description","text":"<p>This command is used to interact with UI windows. It can simulate various mouse and keyboard interactions with UI elements.</p>","tags":["command"]},{"location":"reference/commands/notify/#parameters","title":"Parameters","text":"<ul> <li>windowname is the name of the window (e.g., \"HotButtonWnd\"). Use the Window Inspector (preferred) within the /mqconsole or the /windows command to list all available windows.</li> <li>control can be:<ul> <li>Control name (e.g., \"HB_Button1\")</li> <li>\"0\" to send the notification to the window itself (commonly used for \"close\" and other window-level notifications)</li> </ul> </li> <li>The data parameter is primarily used with notifications like \"newvalue\" for sliders or \"listselect\" for lists</li> </ul>","tags":["command"]},{"location":"reference/commands/notify/#notifications","title":"Notifications:","text":"Notification Description Data Required leftmouseup Left-click on controlname No leftmouseheld Left-click and hold controlname until leftmouseheldup is performed No leftmouseheldup Releases the mouse from leftmouseheld No rightmouseup Right-click on controlname No rightmouseheld Right-click and hold controlname until rightmouseheldup is performed No rightmouseheldup Releases the mouse from rightmouseheld No enter Press the enter key on controlname No close Clicks the Close Window gadget of windowname No mouseover Hovers the mouse over controlname No newvalue # Changes the value in controlname to # Yes - number listselect # Selects the #th item in the controlname list Yes - number leftmouse # Clicks the #th item in the controlname list Yes - number tabselect # Selects the #th tab in the controlname list Yes - number menuselect Selects context menu item Yes - menu item number/text history Used for command history in input boxes No link Handles clickable links in windows No contextmenu Opens context menu No resetdefaultposition Resets window position to default No","tags":["command"]},{"location":"reference/commands/notify/#examples","title":"Examples","text":"<pre><code>/notify hotbuttonwnd HB_Button1 leftmouseup                                        Activates the first hotkey \n/notify somewindow SomeSlider newvalue 100                                         Moves the referenced slider in the window to 100 \n/notify trackingwnd 0 close                                                        Closes the tracking window \n/notify TradeskillWnd RecipeList listselect 1                                      Selects the first item in the RecipeList listbox\n/notify BuffWindow Buff${Math.Calc[${Me.Buff[BuffName].ID}-1].Int} leftmouseup     Cancels the buff called \"BuffName\"\n/notify InventoryWindow IW_Subwindows tabselect 4                                  Select 4th tab in the Inventory window  \n/notify AuraWindow Remove_Aura leftmouseup                                         Removes aura through the aura window\n/notify QuantityWnd QTYW_slider newvalue #                                         Adjust the value of the slider in Quantity Window.\n</code></pre> <p>Put the item name in the bazaar search dialog box</p> <pre><code>/echo ${SelectedItem.Name}\n/notify BazaarSearchWnd ${SelectedItem.Name}\n</code></pre> <p>Select and click an item in a list</p> <pre><code>/notify TaskWnd TASK_TaskList listselect 1\n/delay 4\n/notify TaskWnd TASK_TaskList leftmouse 1\n/delay 4\n</code></pre> <p>Select Parcel tab on Parcel Merchant and click Receive All button</p> <pre><code>/notify MerchantWnd MW_MerchantSubWindows tabselect 3\n/delay 1s\n/notify MerchantWnd MW_Retrieve_All_Button leftmouseup\n</code></pre>","tags":["command"]},{"location":"reference/commands/pet/","title":"/pet","text":"","tags":["command"]},{"location":"reference/commands/pet/#syntax","title":"Syntax","text":"<p>/pet action spawnid</p>","tags":["command"]},{"location":"reference/commands/pet/#description","title":"Description","text":"<p>MacroQuest extends EverQuest's <code>/pet</code> command to allow attacking by spawn #.</p>","tags":["command"]},{"location":"reference/commands/pet/#options","title":"Options","text":"<ul> <li>attack # - Can specify the spawn ID number to attack</li> <li>qattack # - Can specify the spawn ID number to queue an attack</li> </ul>","tags":["command"]},{"location":"reference/commands/pet/#examples","title":"Examples","text":"<pre><code>/pet attack 1234\n/pet qattack 1234\n</code></pre>","tags":["command"]},{"location":"reference/commands/pickzone/","title":"/pickzone","text":"","tags":["command"]},{"location":"reference/commands/pickzone/#syntax","title":"Syntax","text":"<p>/pickzone #</p>","tags":["command"]},{"location":"reference/commands/pickzone/#description","title":"Description","text":"<p>Extends EverQuest's <code>/pickzone</code> command to allow picking a zone by number. 0 is the main instance.</p>","tags":["command"]},{"location":"reference/commands/pickzone/#examples","title":"Examples","text":"<ul> <li>/pickzone 0 - Main Instance</li> <li>/pickzone 1 - Picks zone 1</li> </ul>","tags":["command"]},{"location":"reference/commands/plugin/","title":"/plugin","text":"","tags":["command"]},{"location":"reference/commands/plugin/#syntax","title":"Syntax","text":"<p>/plugin name [ load | unload | toggle ] [noauto] | [list]</p>","tags":["command"]},{"location":"reference/commands/plugin/#description","title":"Description","text":"<p>The plugin command can be used to list all plugins currently loaded, to load a new plugin, or to unload a plugin that is already loaded. Loading a plugin will also add an entry to the [Plugins] section of the MacroQuest.ini file thereby loading it next session. Using the noauto switch prevents this modification to MacroQuest.ini from occurring.</p>","tags":["command"]},{"location":"reference/commands/plugin/#examples","title":"Examples","text":"<p><code>/plugin list</code> </p> <p><code>/plugin mq2melee load</code> </p> <p><code>/plugin mq2moveutils unload noauto</code></p>","tags":["command"]},{"location":"reference/commands/popcustom/","title":"/popcustom","text":"","tags":["command"]},{"location":"reference/commands/popcustom/#syntax","title":"Syntax","text":"<p>/popcustom [color] [time_in_seconds_to_display_message] message</p>","tags":["command"]},{"location":"reference/commands/popcustom/#description","title":"Description","text":"<p>Creates an in-game overlay message. See also /popupecho.</p>","tags":["command"]},{"location":"reference/commands/popcustom/#color-chart","title":"Color Chart","text":"Number Color 1, 3, 8, 9, 11, 17, 19, 21+ dark grey 2 light green 4 dark blue 5 pink 6, 12 light grey 7, 10 white 13 red 14 bright green 15 yellow 16 bright blue 18 cyan 20 black","tags":["command"]},{"location":"reference/commands/popcustom/#examples","title":"Examples","text":"Example Output /popcustom hi there Will display \"hi there\" on the screen just like /popup /popcustom 13 hi there Will display \"hi there\" on the screen in red, for 3 seconds (/popup's default) /popcustom 13 5 hi there Will display \"hi there\" on the screen in red, for 5 seconds. <p>If you type <code>/popcustom</code> with no parameters, it will display the help output for this information.</p>","tags":["command"]},{"location":"reference/commands/popup/","title":"/popup","text":"","tags":["command"]},{"location":"reference/commands/popup/#syntax","title":"Syntax","text":"<p>/popup text</p>","tags":["command"]},{"location":"reference/commands/popup/#description","title":"Description","text":"<p>Displays text in the center of your screen. Currently the text is a fixed font and color.</p> <p>See Also: /popcustom</p>","tags":["command"]},{"location":"reference/commands/popup/#examples","title":"Examples","text":"<ul> <li>Displays Current Mana: 65%</li> </ul> <pre><code>/popup Current Mana: ${Me.CurrentMana}\n</code></pre> <ul> <li>Displays Run away! Run away!</li> </ul> <pre><code>/popup Run away! Run away!\n</code></pre>","tags":["command"]},{"location":"reference/commands/popupecho/","title":"/popupecho","text":"","tags":["command"]},{"location":"reference/commands/popupecho/#syntax","title":"Syntax","text":"<p>/popupecho [color] [time_in_seconds_to_display_message] message</p>","tags":["command"]},{"location":"reference/commands/popupecho/#description","title":"Description","text":"<p>Same as /popcustom but also echos the message to chat.</p>","tags":["command"]},{"location":"reference/commands/popupecho/#color-chart","title":"Color Chart","text":"Number Color 1, 3, 8, 9, 11, 17, 19, 21+ dark grey 2 light green 4 dark blue 5 pink 6, 12 light grey 7, 10 white 13 red 14 bright green 15 yellow 16 bright blue 18 cyan 20 black","tags":["command"]},{"location":"reference/commands/profile/","title":"/profile","text":"","tags":["command"]},{"location":"reference/commands/profile/#syntax","title":"Syntax","text":"<p>/profile profile</p>","tags":["command"]},{"location":"reference/commands/profile/#description","title":"Description","text":"<p>This runs a macro just like /mac does, but when the macro ends it will output a csv file of every subroutine that has been called, and how long it took. The file will be in Macros/profiles, named for the macro and the time it started.</p>","tags":["command"]},{"location":"reference/commands/profile/#settings","title":"Settings","text":"<p>The output file contains one line per subroutine call, in the order they were called in. The columns are:</p> <ul> <li>Command Count - how many commands (lines) have been run from the start of the macro to now</li> <li>Seconds Since Start - how long the macro's been running</li> <li>Stack Depth - how many subroutines deep we are (Main is one, anything called from Main is 2, next call is 3, etc)</li> <li>Subroutine - Name of the sub</li> <li>Subroutine (tabbed) - Name of the sub, but with a few spaces for each increase in depth so it looks kinda tree like</li> <li>Commands (inc Children) - How many commands were executed by this sub and any subs it called</li> <li>Commands (ex Children) - How many commands were executed by just this subroutine, not including those executed by called subs</li> <li>ms inc - How long did this sub and its children take to run</li> <li>ms ex - How long did just this sub take to run, excluding time taken by its called subs</li> <li>Called Children - How many other subs were called by this sub (does not include subs called by children)</li> <li>Return Value - Value from /return if any</li> <li>Arguments - Arguments supplied to the sub, one per column</li> </ul> <p>Goes nicely with a pivot table in excel.</p>","tags":["command"]},{"location":"reference/commands/quit/","title":"/quit","text":"","tags":["command"]},{"location":"reference/commands/quit/#syntax","title":"Syntax","text":"<p>/quit</p>","tags":["command"]},{"location":"reference/commands/quit/#description","title":"Description","text":"<p>Extends EverQuest's <code>/quit</code> command to allow quitting from the character select screen.</p>","tags":["command"]},{"location":"reference/commands/ranged/","title":"/ranged","text":"","tags":["command"]},{"location":"reference/commands/ranged/#syntax","title":"Syntax","text":"<p>/ranged [ spawnID ]</p>","tags":["command"]},{"location":"reference/commands/ranged/#description","title":"Description","text":"<p>Performs a ranged attack.</p> <p>Notes</p> <ul> <li>No parameter executes a ranged attack on your current target</li> <li>If spawnID is supplied this will attempt to execute a ranged attack on that spawn if it exists.</li> </ul>","tags":["command"]},{"location":"reference/commands/reloadui/","title":"/reloadui","text":"","tags":["command"]},{"location":"reference/commands/reloadui/#syntax","title":"Syntax","text":"<p>/reloadui</p>","tags":["command"]},{"location":"reference/commands/reloadui/#description","title":"Description","text":"<p>It works just like /loadskin 1 but with less typing</p>","tags":["command"]},{"location":"reference/commands/removeaug/","title":"/removeaug","text":"","tags":["command"]},{"location":"reference/commands/removeaug/#syntax","title":"Syntax","text":"<p>/removeaug augment item</p>","tags":["command"]},{"location":"reference/commands/removeaug/#description","title":"Description","text":"<p>Removes the specified augment from the specified item. Uses appropriate augment solvent from your inventory.</p> <p>Note</p> <p>augment and item can be either the numeric item id OR a quoted item name</p>","tags":["command"]},{"location":"reference/commands/removeaug/#see-also","title":"See Also","text":"<ul> <li>/insertaug</li> </ul>","tags":["command"]},{"location":"reference/commands/removeaura/","title":"/removeaura","text":"","tags":["command"]},{"location":"reference/commands/removeaura/#syntax","title":"Syntax","text":"<p>/removeaura Name Of Aura</p>","tags":["command"]},{"location":"reference/commands/removeaura/#description","title":"Description","text":"<p>Will remove an aura by name or partial name</p>","tags":["command"]},{"location":"reference/commands/removeaura/#example","title":"Example","text":"<p><code>/removeaura Frostweave Aura</code></p>","tags":["command"]},{"location":"reference/commands/removebuff/","title":"/removebuff","text":"","tags":["command"]},{"location":"reference/commands/removebuff/#syntax","title":"Syntax","text":"<p>/removebuff [-pet|-both] Name Of Buff</p>","tags":["command"]},{"location":"reference/commands/removebuff/#description","title":"Description","text":"<p>Will remove a buff or song by the name of the buff.  It can be used to remove buffs from the player, the pet, or both.  By default it does a partial match, but you can force an exact compare with the equals sign.</p>","tags":["command"]},{"location":"reference/commands/removebuff/#example","title":"Example","text":"<pre><code> /removebuff Resolution\n /removebuff -pet Resolution\n /removebuff -both Resolution\n\n /removebuff Illusion: Dark Elf\n /removebuff =Some Overlapping Buffname\n</code></pre>","tags":["command"]},{"location":"reference/commands/removelev/","title":"/removelev","text":"","tags":["command"]},{"location":"reference/commands/removelev/#syntax","title":"Syntax","text":"<p>/removelev</p>","tags":["command"]},{"location":"reference/commands/removelev/#description","title":"Description","text":"<p>Will attempt to remove any levitation buffs on you that are found in the buff or shortbuff window.</p>","tags":["command"]},{"location":"reference/commands/removelev/#example","title":"Example","text":"<pre><code> /removelev\n</code></pre>","tags":["command"]},{"location":"reference/commands/removepetbuff/","title":"/removepetbuff","text":"","tags":["command"]},{"location":"reference/commands/removepetbuff/#syntax","title":"Syntax","text":"<p>/removepetbuff Buff Name</p>","tags":["command"]},{"location":"reference/commands/removepetbuff/#description","title":"Description","text":"<p>Removes a pet buff using either the buff name, or a partial name.  If an exact match is required, the equals sign can be used to force the exact match.</p>","tags":["command"]},{"location":"reference/commands/removepetbuff/#example","title":"Example","text":"<pre><code>/removepetbuff Burnout\n/removepetbuff \"Burnout XVII\"\n/removepetbuff =Burnout XVII\n/removepetbuff \"=Burnout XVI\"\n</code></pre>","tags":["command"]},{"location":"reference/commands/return/","title":"/return","text":"","tags":["command"]},{"location":"reference/commands/return/#syntax","title":"Syntax","text":"<p>/return [value|${varname}]</p>","tags":["command"]},{"location":"reference/commands/return/#description","title":"Description","text":"<p>Returns to the line immediately following the call. Can return values or variables.</p>","tags":["command"]},{"location":"reference/commands/return/#examples","title":"Examples","text":"<pre><code>Sub Add(int A, int B)\n  /declare Sum int local ${Math.Calc[${A}+${B}]}\n/return ${Sum}\n</code></pre> <p>Return can also be used to exit out of a subroutine early.</p> <pre><code>Sub Evade\n  /if (!${Me.AbilityReady[Hide]}) {\n     /echo Hide has not refreshed, so we are leaving early.\n     /return\n  }\n  /echo Hide is ready, so we will continue processing\n  /attack off\n  /doability Hide\n  /delay 5\n  /attack on\n/return\n</code></pre>","tags":["command"]},{"location":"reference/commands/screenmode/","title":"/screenmode","text":"","tags":["command"]},{"location":"reference/commands/screenmode/#syntax","title":"Syntax","text":"<p>/screenmode #</p>","tags":["command"]},{"location":"reference/commands/screenmode/#description","title":"Description","text":"<p>Where 2 is normal and 3 is no windows. 1 is Unknown. Experimental. </p>","tags":["command"]},{"location":"reference/commands/screenmode/#examples","title":"Examples","text":"<p>/screenmode 2</p> <ul> <li>TLO:EverQuest</li> </ul>","tags":["command"]},{"location":"reference/commands/selectitem/","title":"/selectitem","text":"","tags":["command"]},{"location":"reference/commands/selectitem/#syntax","title":"Syntax","text":"<p>/selecitem \"itemname\"</p>","tags":["command"]},{"location":"reference/commands/selectitem/#description","title":"Description","text":"<p>Selects items in your inventory when you have a merchant open. /selectitem \"bottle of\" will select a \"bottle of vinegar\" you can also do \"=bottle of vinegar\" to match EXACT name (its not case sensitive though)</p>","tags":["command"]},{"location":"reference/commands/selectitem/#examples","title":"Examples","text":"<p><code>/selectitem \"bottle of\"</code></p> <p>Will select a \"bottle of vinegar\" you can also do \"=bottle of vinegar\" to match EXACT name (its not case sensitive though)</p>","tags":["command"]},{"location":"reference/commands/sellitem/","title":"/sellitem","text":"","tags":["command"]},{"location":"reference/commands/sellitem/#syntax","title":"Syntax","text":"<p>/sellitem [#]</p>","tags":["command"]},{"location":"reference/commands/sellitem/#description","title":"Description","text":"<p>Sells the selected item. If # is specified it will sell that # of a stacked item.</p>","tags":["command"]},{"location":"reference/commands/setautorun/","title":"/setautorun","text":"","tags":["command"]},{"location":"reference/commands/setautorun/#syntax","title":"Syntax","text":"<p>/setautorun</p>","tags":["command"]},{"location":"reference/commands/setautorun/#description","title":"Description","text":"<p>Creates an ini entry in Macroquest.ini that performs a command automatically after entering world. This may be deprecated in favor of .cfg files.</p>","tags":["command"]},{"location":"reference/commands/seterror/","title":"/seterror","text":"","tags":["command"]},{"location":"reference/commands/seterror/#syntax","title":"Syntax","text":"<p>/seterror [ error ]</p>","tags":["command"]},{"location":"reference/commands/seterror/#description","title":"Description","text":"<ul> <li>Sets ${MacroQuest.Error} to error</li> <li>Omitting error will clear ${MacroQuest.Error}</li> </ul>","tags":["command"]},{"location":"reference/commands/setprio/","title":"/setprio","text":"","tags":["command"]},{"location":"reference/commands/setprio/#syntax","title":"Syntax","text":"<p>/setprio #</p>","tags":["command"]},{"location":"reference/commands/setprio/#description","title":"Description","text":"<p>Sets process priority (like in Windows Task Manager), where 1 is low 2 is below normal 3 is normal 4 is above normal 5 is high and 6 is real time. The default value is 3.</p>","tags":["command"]},{"location":"reference/commands/setprio/#examples","title":"Examples","text":"<p>You need to build something quick in Visual Studio, just do a /bcga //setprio 2 and it will zoom by real fast.</p>","tags":["command"]},{"location":"reference/commands/setwintitle/","title":"/setwintitle","text":"","tags":["command"]},{"location":"reference/commands/setwintitle/#syntax","title":"Syntax","text":"<p>/setwintitle Window Name</p>","tags":["command"]},{"location":"reference/commands/setwintitle/#description","title":"Description","text":"<p>Sets the window title (the name shown at the top of the window and in the task bar tray) to whatever text you specify.</p>","tags":["command"]},{"location":"reference/commands/setwintitle/#examples","title":"Examples","text":"<p>Set the window title to \"My Very Cool Window\" <pre><code>/setwintitle My Very Cool Window\n</code></pre> Set the window title to \"EverQuest - &lt;Your character name&gt;\" <pre><code>/setwintitle EverQuest - ${Me.Name}\n</code></pre></p>","tags":["command"]},{"location":"reference/commands/shiftkey/","title":"/shiftkey","text":"","tags":["command"]},{"location":"reference/commands/shiftkey/#syntax","title":"Syntax","text":"<p>/shiftkey command</p>","tags":["command"]},{"location":"reference/commands/shiftkey/#description","title":"Description","text":"<p>Execute command while telling the window manager that the shift key is pressed. Can also be used together with /altkey , /ctrlkey , or both in this format:</p> <pre><code>/ctrlkey /altkey /shiftkey /command\n</code></pre>","tags":["command"]},{"location":"reference/commands/shiftkey/#examples","title":"Examples","text":"<pre><code>/shiftkey /itemnotify pack1 leftmouseup\n</code></pre>","tags":["command"]},{"location":"reference/commands/skills/","title":"/skills","text":"","tags":["command"]},{"location":"reference/commands/skills/#syntax","title":"Syntax","text":"<p>/skills [ skillname ]</p>","tags":["command"]},{"location":"reference/commands/skills/#description","title":"Description","text":"<p>Lists the skill level(s) that match skillname if provided, or all possible skills if no parameter given.</p>","tags":["command"]},{"location":"reference/commands/skills/#examples","title":"Examples","text":"<ul> <li>Lists all of your skills with skill level</li> </ul> <pre><code>/skills\n</code></pre> <ul> <li>Returns your pottery skill</li> </ul> <pre><code>/skills pottery\n</code></pre>","tags":["command"]},{"location":"reference/commands/spellslotinfo/","title":"/spellslotinfo","text":"","tags":["command"]},{"location":"reference/commands/spellslotinfo/#syntax","title":"Syntax","text":"<p>/spellslotinfo [#|\"spell name\"]</p>","tags":["command"]},{"location":"reference/commands/spellslotinfo/#description","title":"Description","text":"<p>You can use this to see the spell slot</p> <p>Information for any spell without having to right-click display through the MQ2ItemDisplay plugin.</p>","tags":["command"]},{"location":"reference/commands/spew/","title":"/spew","text":"","tags":["command"]},{"location":"reference/commands/spew/#syntax","title":"Syntax","text":"<p>/spew [on|off]</p>","tags":["command"]},{"location":"reference/commands/spew/#description","title":"Description","text":"<p>Enables or disables the output of Debug Spew to the \"\\Logs\\DebugSpew.log\" file.</p>","tags":["command"]},{"location":"reference/commands/squelch/","title":"/squelch","text":"","tags":["command"]},{"location":"reference/commands/squelch/#syntax","title":"Syntax","text":"<p>/squelch command</p>","tags":["command"]},{"location":"reference/commands/squelch/#description","title":"Description","text":"<p>Executes command while preventing any output from that command.</p> <p>Basically, it does the following:</p> <ol> <li>Turns mq filter off</li> <li>Executes command</li> <li>Turns mq filter back to the state it was in before step 1</li> </ol>","tags":["command"]},{"location":"reference/commands/squelch/#example","title":"Example","text":"<pre><code>/squelch /attack on\n</code></pre>","tags":["command"]},{"location":"reference/commands/target/","title":"/target","text":"<p>Deprecated</p> <p>This command name has been deprecated and may be removed in a future version. Please update your scripts to use /mqtarget instead. Users who rightly want the native command should use /eqtarget for now.</p>","tags":["command"]},{"location":"reference/commands/target/#syntax","title":"Syntax","text":"<p>/target option</p>","tags":["command"]},{"location":"reference/commands/target/#description","title":"Description","text":"<p>Targets whatever is matched by one or more of the following options:</p> clear Clears your current target mycorpse Your own corpse (nearest) myself Target yourself Anything Else Anything else is considered a Spawn Search","tags":["command"]},{"location":"reference/commands/target/#examples","title":"Examples","text":"<pre><code>/target npc radius 100 zradius 50 alert 1\n/target pc range 30 35 lfg\n/target npc los radius 220\n/target ${Spawn[alert 1]}\n/target ${Spawn[noalert 1]}\n</code></pre>","tags":["command"]},{"location":"reference/commands/target/#see-also","title":"See Also","text":"<ul> <li>/mqtarget</li> <li>/eqtarget</li> </ul>","tags":["command"]},{"location":"reference/commands/taskquit/","title":"/taskquit","text":"","tags":["command"]},{"location":"reference/commands/taskquit/#syntax","title":"Syntax","text":"<p>/taskquit [name]</p>","tags":["command"]},{"location":"reference/commands/taskquit/#description","title":"Description","text":"<p>MacroQuest extends the <code>/taskquit</code> command to quit solo tasks by specifying the exact task name.</p>","tags":["command"]},{"location":"reference/commands/timed/","title":"/timed","text":"","tags":["command"]},{"location":"reference/commands/timed/#syntax","title":"Syntax","text":"<p>/timed # command</p>","tags":["command"]},{"location":"reference/commands/timed/#description","title":"Description","text":"<p>Executes command after a specified duration, given in deciseconds.</p> <p>Notes</p> <ul> <li>This does not pause successive commands.</li> <li>The first argument must be a literal integer (e.g. 2)</li> <li>It is not parsed for MQ2Data, so the following will not work</li> </ul> <pre><code>    /timed ${Math.Calc[1+1]} /echo This does not work\n\n-   An exception to this being the use of /docommand in combination with /timed\n\n\n    /docommand /timed ${Math.Calc[1+1]} /echo This works\n</code></pre>","tags":["command"]},{"location":"reference/commands/timed/#examples","title":"Examples","text":"<pre><code>/timed 10 /echo 1 second has passed\n</code></pre>","tags":["command"]},{"location":"reference/commands/timestamp/","title":"/timestamp","text":"","tags":["command"]},{"location":"reference/commands/timestamp/#syntax","title":"Syntax","text":"<p>/timestamp [on|off]</p>","tags":["command"]},{"location":"reference/commands/timestamp/#description","title":"Description","text":"<p>Toggles timestamps on all chat messages. It can be set in MacroQuest.ini via <code>TimeStampChat=1</code> (1=ON, 0=OFF) in the [MacroQuest] section.</p> <p><code>NOTE:</code> The timestamp is added before the message reaches game UI but after MQ's chat event processing. This should not have any adverse effects when turned on.</p>","tags":["command"]},{"location":"reference/commands/tloc/","title":"/tloc","text":"","tags":["command"]},{"location":"reference/commands/tloc/#syntax","title":"Syntax","text":"<p>/tloc</p>","tags":["command"]},{"location":"reference/commands/tloc/#description","title":"Description","text":"<p>Returns your target's location. Technically not a command, this is an alias that's included by default. </p>","tags":["command"]},{"location":"reference/commands/unload/","title":"/unload","text":"","tags":["command"]},{"location":"reference/commands/unload/#syntax","title":"Syntax","text":"<p>/unload</p>","tags":["command"]},{"location":"reference/commands/unload/#description","title":"Description","text":"<p>Unloads MacroQuest.</p>","tags":["command"]},{"location":"reference/commands/useitem/","title":"/useitem","text":"","tags":["command"]},{"location":"reference/commands/useitem/#syntax","title":"Syntax","text":"<p>/useitem item name</p>","tags":["command"]},{"location":"reference/commands/useitem/#description","title":"Description","text":"<p>Extends the default EverQuest command to support partial matching for the item name.</p>","tags":["command"]},{"location":"reference/commands/usercamera/","title":"/usercamera","text":"","tags":["command"]},{"location":"reference/commands/usercamera/#syntax","title":"Syntax","text":"<p>/usercamera [ 0-7 |on|off|save [ charname ]|load [ charname ]]</p>","tags":["command"]},{"location":"reference/commands/usercamera/#description","title":"Description","text":"<p>Switch to a specified camera view or manage the User Camera 1 position settings.</p>","tags":["command"]},{"location":"reference/commands/usercamera/#options","title":"Options","text":"","tags":["command"]},{"location":"reference/commands/usercamera/#camera-numbers-0-7","title":"Camera Numbers (0-7)","text":"<p>Switches to the specified camera view:</p> <ul> <li>0: First Person Camera</li> <li>1: Overhead Camera</li> <li>2: Chase Camera</li> <li>3: User Camera 1</li> <li>4: User Camera 2</li> <li>5: Tether Camera</li> <li>6: Zoom Camera</li> <li>7: Internal Camera (used for character customization and similar features)</li> </ul>","tags":["command"]},{"location":"reference/commands/usercamera/#display-controls","title":"Display Controls","text":"<ul> <li><code>on</code> - Enable Window Selector Display for current camera</li> <li><code>off</code> - Disable Window Selector Display for current camera</li> </ul>","tags":["command"]},{"location":"reference/commands/usercamera/#position-management","title":"Position Management","text":"<ul> <li><code>save [charname]</code> - Save the current User Camera 1 position, optionally for a specific character</li> <li><code>load [charname]</code> - Load a saved User Camera 1 position, optionally for a specific character</li> </ul>","tags":["command"]},{"location":"reference/commands/varcalc/","title":"/varcalc","text":"","tags":["command"]},{"location":"reference/commands/varcalc/#syntax","title":"Syntax","text":"<p>/varcalc varname formula</p>","tags":["command"]},{"location":"reference/commands/varcalc/#description","title":"Description","text":"<ul> <li>Sets a variable directly to the numeric result of a calculation (formula)</li> <li>Keep in mind that the type of the variable may itself reject this value depending on what you give it</li> <li>This will not work on strings!</li> </ul>","tags":["command"]},{"location":"reference/commands/varcalc/#examples","title":"Examples","text":"<pre><code>/varcalc MyInt 1+2*2+1\n/varcalc MyInt 1+(2*2)+1\n\n/varcalc MyInt ${MyInt}+6\n</code></pre>","tags":["command"]},{"location":"reference/commands/vardata/","title":"/vardata","text":"","tags":["command"]},{"location":"reference/commands/vardata/#syntax","title":"Syntax","text":"<p>/vardata varname newMQ2Datavalue</p>","tags":["command"]},{"location":"reference/commands/vardata/#description","title":"Description","text":"<p>Sets a variable directly to the end result of a MQ2Data string. *To use this, do not put ${} around the outer data to parse.</p> <ul> <li>This is more efficient than using /varset as it skips a step</li> <li>/varset first converts the MQ2Data to text, and then back to MQ2Data</li> <li>/vardata converts directly through MQ2Data</li> </ul>","tags":["command"]},{"location":"reference/commands/vardata/#examples","title":"Examples","text":"<pre><code>/vardata MyFloat Math.Calc[${Me.X}+${Me.Y}]\n\n/vardata M_Assist Param0\n\n| using /vardata with non-basic data types\n\n/declare x int local\n/declare xSpawn spawn local\n/for x 1 to ${SpawnCount[pc]}\n   /vardata xSpawn NearestSpawn[${x},pc]\n   /echo ID:${xSpawn.ID} NAME:${xSpawn.Name}\n/next x\n</code></pre>","tags":["command"]},{"location":"reference/commands/varset/","title":"/varset","text":"","tags":["command"]},{"location":"reference/commands/varset/#syntax","title":"Syntax","text":"<p>/varset varname [ newvalue ]</p>","tags":["command"]},{"location":"reference/commands/varset/#description","title":"Description","text":"<p>Sets a variable directly to a new value.</p> <ul> <li>Keep in mind that the type of the variable may itself reject this value depending on what you give it.</li> <li>To clear the value of the variable, you may omit the new value.</li> </ul>","tags":["command"]},{"location":"reference/commands/varset/#examples","title":"Examples","text":"<pre><code> /varset MyString ${MyString}stuff             Concatenate a string variable\n /varset MyString stuff${MyString}             Inserts stuff at the front of ${MyString}\n /varset MyInt 123                             Sets MyInt to 123\n /varset MyTimer 123s                          Sets MyTimer to 123 seconds\n /varset MyFloat 1.23                          Sets MyFloat to 1.23\n /varset MyIntArray[n] 123                     Sets array element n to 123\n</code></pre>","tags":["command"]},{"location":"reference/commands/where/","title":"/where","text":"","tags":["command"]},{"location":"reference/commands/where/#syntax","title":"Syntax","text":"<p>/where [ pc | npc ] [ spawnname ]</p>","tags":["command"]},{"location":"reference/commands/where/#description","title":"Description","text":"<p>Lists where the closest PC, NPC or spawnname is. The message returned is:</p> <pre><code>The closest 'spawnname' is a level # &lt;race&gt; &lt;class&gt; and &lt;distance&gt; away to the &lt;direction&gt;, Z difference = #.##.\n</code></pre>","tags":["command"]},{"location":"reference/commands/where/#examples","title":"Examples","text":"<pre><code> /where                   Lists the closest PC or NPC\n /where pc                Lists the closest PC\n /where npc               Lists the closest NPC\n /where npc \"orc pawn\"    Lists where the closest orc pawn is\n</code></pre>","tags":["command"]},{"location":"reference/commands/while/","title":"/while","text":"","tags":["command"]},{"location":"reference/commands/while/#syntax","title":"Syntax","text":"<p>/while (condition) {</p> <p><code>...</code></p> <p>}</p>","tags":["command"]},{"location":"reference/commands/while/#description","title":"Description","text":"<p>Executes the commands between { and } while the expression condition evaluates to true. Note that } must be on a line by its own. You can end a /while loop immediately with /break or try the next iteration with /continue.</p>","tags":["command"]},{"location":"reference/commands/while/#examples","title":"Examples","text":"<pre><code>/declare varname int 0\n/while (${varname) &lt; 5) {\n  /varcalc varname ${varname}+1\n  /echo ${varname}\n}\n</code></pre> <p>Will output:</p> <pre><code> 1\n 2\n 3\n 4\n 5\n\n/declare varname int 0\n/while (${varname) &lt; 5) {\n  /varcalc varname ${varname}+1\n  /if ({$varname} == 3) /continue\n  /echo ${varname}\n}\n</code></pre> <p>Will output:</p> <pre><code> 1\n 2\n 4\n 5\n\n/declare varname int 0\n/while (${varname) &lt; 5) {\n  /varcalc varname ${varname}+1\n  /if ({$varname} == 3) /break\n  /echo ${varname}\n}\n</code></pre> <p>Will output:</p> <pre><code> 1\n 2\n</code></pre>","tags":["command"]},{"location":"reference/commands/who/","title":"/who","text":"","tags":["command"]},{"location":"reference/commands/who/#syntax","title":"Syntax","text":"<p>/who options</p>","tags":["command"]},{"location":"reference/commands/who/#description","title":"Description","text":"<p>Searches the current zone for the spawns matching the specified Spawn Search options, with the addition of:</p> <ul> <li>all: Scan all zones. Note: this reverts to the native /who command.</li> <li>concolor: Displays the results in consider colors</li> <li>sort : Sort by this metric</li> </ul>","tags":["command"]},{"location":"reference/commands/who/#examples","title":"Examples","text":"<ul> <li>/who npc named</li> </ul> <p>Displays a List of The Named NPC in Zone</p> <ul> <li>/who pc Cleric</li> </ul> <p>Displays a List of Player Clerics (Even if Anon or /role)</p> <ul> <li>/who npc pixtt</li> </ul> <p>Diplays a List of NPC's with pixtt in their name</p> <ul> <li>/who npc 64</li> </ul> <p>Displays a List of NPC's who are level 64</p> <ul> <li>/who pc 70</li> </ul> <p>Displays a List of PC's Who are level 70</p> <ul> <li>/who race human</li> </ul> <p>Displays a List of PC's Who are Human</p> <ul> <li>/whotarget (/whot)</li> </ul> <p>Displays a /who for your target, works on npc/pc shows even if role/anon, Shows if sneaking as well.</p>","tags":["command"]},{"location":"reference/commands/whofilter/","title":"/whofilter","text":"","tags":["command"]},{"location":"reference/commands/whofilter/#syntax","title":"Syntax","text":"<p>/whofilter lastname|class|race|body|level|gm|guild|ld|sneak|lfg|npctag|spawnid|trader|afk|anon|distance|light|holding|concolor|invisible [on|off]</p>","tags":["command"]},{"location":"reference/commands/whofilter/#description","title":"Description","text":"<p>Toggles the display of the specified spawn(s) when using /who</p>","tags":["command"]},{"location":"reference/commands/whotarget/","title":"/whotarget","text":"","tags":["command"]},{"location":"reference/commands/whotarget/#syntax","title":"Syntax","text":"<p>/whotarget</p>","tags":["command"]},{"location":"reference/commands/whotarget/#description","title":"Description","text":"<p>MQ enhances this EQ command by allowing you to use it on any target (including NPCs). Output is the same as the /who command (set by /whofilter), displaying the target's class, race, level, guild, con color, and distance regardless of the player being in anonymous or roleplaying mode.</p>","tags":["command"]},{"location":"reference/commands/windows/","title":"/windows","text":"","tags":["command"]},{"location":"reference/commands/windows/#syntax","title":"Syntax","text":"<p>/windows [ windowname | open ]</p>","tags":["command"]},{"location":"reference/commands/windows/#description","title":"Description","text":"<p>Lists all available UI windows. These are usable with /notify. You can alternately use the Window Inspector within the /mqconsole to find windows and controls.</p>","tags":["command"]},{"location":"reference/commands/windows/#examples","title":"Examples","text":"<ul> <li>Display all open windows in UI</li> </ul> <p><code>/windows open</code></p> <ul> <li>Display all child windows and buttons inside the player window</li> </ul> <p><code>/windows playerwindow</code></p>","tags":["command"]},{"location":"reference/commands/windowstate/","title":"/windowstate","text":"","tags":["command"]},{"location":"reference/commands/windowstate/#syntax","title":"Syntax","text":"<p>/windowstate window [open|close]</p>","tags":["command"]},{"location":"reference/commands/windowstate/#description","title":"Description","text":"<p>Opens or closes the specified window.</p> <p>Notes</p> <ul> <li>These commands affect the client at an unnecessarily low level</li> <li>The best practice is to use /keypress for opening that window instead</li> </ul>","tags":["command"]},{"location":"reference/commands/yes/","title":"/yes","text":"","tags":["command"]},{"location":"reference/commands/yes/#syntax","title":"Syntax","text":"<p>/yes</p>","tags":["command"]},{"location":"reference/commands/yes/#description","title":"Description","text":"<p>Clicks \"yes\" on in-game dialogues and popups. Technically not a command, this is an /alias that's included by default.</p>","tags":["command"]},{"location":"reference/commands/yes/#examples","title":"Examples","text":"<p>Here's what the alias is really doing behind the scenes. From your MacroQuest.ini, </p> <pre><code>/yes=/multiline ; /squelch /notify LargeDialogWindow LDW_YesButton leftmouseup ; /squelch /notify LargeDialogWindow LDW_OKButton leftmouseup ; /squelch /notify ConfirmationDialogBox CD_Yes_Button leftmouseup ; /squelch /notify ConfirmationDialogBox CD_OK_Button leftmouseup ; /squelch /notify TradeWND TRDW_Trade_Button leftmouseup ; /squelch /notify GiveWnd GVW_Give_Button leftmouseup ; /squelch /notify ProgressionSelectionWnd ProgressionTemplateSelectAcceptButton leftmouseup ; /squelch /notify TaskSelectWnd TSEL_AcceptButton leftmouseup ; /squelch /notify RaidWindow RAID_AcceptButton leftmouseup\n</code></pre>","tags":["command"]},{"location":"reference/commands/eq/lootnodrop/","title":"/lootnodrop","text":"","tags":["command"]},{"location":"reference/commands/eq/lootnodrop/#syntax","title":"Syntax","text":"<p>/lootnodrop [always | sometimes | never]</p>","tags":["command"]},{"location":"reference/commands/eq/lootnodrop/#description","title":"Description","text":"<p>This is an EverQuest command, not related to MacroQuest2, used to specify how you loot no drop items on corpses.</p> <ul> <li>Always is the default and will cause a confirmation box to always be shown when looting no drop items.</li> <li>Sometimes will cause a confirmation box to be shown when looting no drop items not usable by your character.</li> <li>Never will never display a confirmation box when looting no drop items.</li> </ul>","tags":["command"]},{"location":"reference/data-types/","title":"Data Types","text":"<p>See Also: Top Level Objects Reference.</p> <p>See sidebar for full list.</p>"},{"location":"reference/data-types/datatype-achievement/","title":"<code>achievement</code>","text":"<p>Provides the details about a single achievement and allows access to an achievement's objective.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#Completed","title":"bool <code>Completed</code>","text":"True if the achievement has been completed","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#CompletedTime","title":"time <code>CompletedTime</code>","text":"Calendar time when the achievement was completed.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#Description","title":"string <code>Description</code>","text":"The achievement's description","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#Hidden","title":"bool <code>Hidden</code>","text":"True if the achievement is hidden","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#IconID","title":"int <code>IconID</code>","text":"ID of the Achievement's Icon. See Achievement Icon below.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#ID","title":"int <code>ID</code>","text":"The achievement's unique ID.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#Index","title":"int <code>Index</code>","text":"The index of the achievement. See Achievement Indices for more information.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#Link[opt:","title":"string <code>Link[opt: Name]</code>","text":"Generate an achievement link. An optional name can be provided to display in the achievement, otherwise the current character's name will be used.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#Locked","title":"bool <code>Locked</code>","text":"True if the achievement is locked","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#Name","title":"string <code>Name</code>","text":"The achievement's name","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#Objective[#|Description]","title":"achievementobj <code>Objective[#|Description]</code>","text":"Find an objective by its objective ID or Description.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#ObjectiveByIndex[#]","title":"achievementobj <code>ObjectiveByIndex[#]</code>","text":"Find an objective by its visual ordering as displayed in the achievements window.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#ObjectiveCount","title":"int <code>ObjectiveCount</code>","text":"The number of objectives in this achievement.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#Open","title":"bool <code>Open</code>","text":"True if the achievement is open","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#Points","title":"int <code>Points</code>","text":"The point value for the achievement","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#State","title":"string <code>State</code>","text":"The achievement state. See Achievement State below.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#achievement-state","title":"Achievement State","text":"<p>An achievement has one of the following mutually exclusive states, accessed via State</p> State Description OPEN The achievement is available and not completed. COMPLETED The achievement has been completed LOCKED The achievement is \"locked\" and has criteria that must be completed to be unlocked. HIDDEN The achievement is hidden and not available to be earned. Hidden achievements include those that do not apply to the current character class.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#achievement-icon","title":"Achievement Icon","text":"<p>Each achievement has an icon associated with it. This icon id represents a cell in the <code>A_DragItem</code> texture. To access the cell, subtract 500 from the icon id.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#examples","title":"Examples","text":"<p>Link an achievement into chat</p> MQScriptLua <pre><code>/say This is an achievement link: ${Achievement[2801001].Link}\n</code></pre> <pre><code>mq.cmdf(\"/say This is an achievement link: %s\", mq.TLO.Achievement(2801001).Link())\n</code></pre> <p>Print a message if an achievement has been completed. This example also demonstrates how to properly use an achievement index.</p> MQScriptLua <pre><code>| 500980300 = Wayfarers Brotherhood Adventurer's Stone (Various 20+)\n/declare achievementIndex int local ${Achievement[500980300].Index}\n/echo ${achievementIndex}\n\n/if (${Achievement.AchievementByIndex[${achievementIndex}].Completed}) {\n    /echo ${Achievement.AchievementByIndex[${achievementIndex}].Name} is completed on ${Achievement.AchievementByIndex[${achievementIndex}].CompletedTime.Date}\n} else {\n    /echo ${Achievement.AchievementByIndex[${achievementIndex}].Name} is not completed!\n}\n</code></pre> <pre><code>-- 500980300 = Wayfarers Brotherhood Adventurer's Stone (Various 20+)\nlocal achievementIndex = mq.TLO.Achievement(500980300).Index()\n\nlocal achievement = mq.TLO.Achievement.AchievementByIndex(achievementIndex)\nif achievement.Completed() then\n    printf('%s is completed on %s', achievement.Name(), achievement.CompletedTime.Date())\nelse\n    print(achievement.Name() .. ' is not completed!')\nend\n</code></pre> <p>Print how many humans you have left to kill for the \"I'm a People Person!\" achievement</p> MQScriptLua <pre><code>| 11000028 = I'm a People Person!\n/if (${Achievement[11000028].Completed}) {\n    /echo ${Achievement[11000028].Name} is complete!\n} else {\n    | 300197 = Humans\n    /if (!${Achievement[11000028].Objective[300197].Completed}) {\n        /echo You have ${Math.Calc[${Achievement[11000028].Objective[300197].RequiredCount} - ${Achievement[11000028].Objective[300197].Count}].Int} humans left to kill!\n    } else {\n        /echo Done killing humans!\n    }\n}\n</code></pre> <pre><code>local achievement = mq.TLO.Achievement(\"I'm a People Person!\")\n\nif achievement.Completed() then\n    print(\"Achievement completed!\")\nelse\n    local objective = achievement.Objective(\"Humans\")\n    if not objective.Completed() then\n        printf(\"You have %d humans left to kill!\", objective.RequiredCount() - objective.Count())\n    else\n        print(\"Done killing humans!\")\n    end\nend\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-achievement/#methods","title":"Methods","text":"Name Action Inspect Opens the achievement display window for this achievement","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/","title":"<code>achievementcat</code>","text":"<p>Provides access to achievement categories. Achievements are organized hierarchically in the achievements window by categories.</p> <p>While not required to access achievements, categories may be useful for enumerating lists of achievements.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/#Achievement[#|Name]","title":"achievement <code>Achievement[#|Name]</code>","text":"Find an achievement in this category by its ID or name.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/#AchievementByIndex[#]","title":"achievement <code>AchievementByIndex[#]</code>","text":"Find an achievement by its index in this category.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/#AchievementCount","title":"int <code>AchievementCount</code>","text":"The number of achievements in this category.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/#Category[#|Name]","title":"achievementcat <code>Category[#|Name]</code>","text":"Find a child category in this category by its ID or name.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/#CategoryByIndex","title":"achievementcat <code>CategoryByIndex</code>","text":"Find a child category by its index in this category.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/#CategoryCount","title":"int <code>CategoryCount</code>","text":"The number of child categories in this category.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/#CompletedAchievements","title":"int <code>CompletedAchievements</code>","text":"The number of achievements earned in this category and its subcategories","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/#Description","title":"string <code>Description</code>","text":"The category's description","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/#ID","title":"int <code>ID</code>","text":"The unique ID for the category","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/#ImageTextureName","title":"string <code>ImageTextureName</code>","text":"Name of the image texture that is used to represent this category in the Achievements Window.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/#Index","title":"int <code>Index</code>","text":"The index of the category in the achievement manager. For more information see Achievement Indices.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/#Name","title":"string <code>Name</code>","text":"The category's display name","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/#Points","title":"int <code>Points</code>","text":"The total earned points of achievements in this category.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/#TotalAchievements","title":"int <code>TotalAchievements</code>","text":"The total number of achievements in this category and its subcategories.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementcat/#examples","title":"Examples","text":"<p>List the unearned achievements in the EverQuest / Exploration category:</p> MQScriptLua <pre><code>/declare cat achievementcat local\n/vardata cat Achievement.Category[EverQuest].Category[Exploration]\n\n/echo Unearned achievements in the ${cat.Name} category:\n/declare i int local\n/for i 1 to ${cat.AchievementCount} {\n    /if (!${cat.AchievementByIndex[${i}].Completed}) {\n        /echo ${cat.AchievementByIndex[${i}].Name}\n    }\n    /next i\n}\n</code></pre> <pre><code>local category = mq.TLO.Achievement.Category('EverQuest').Category('Exploration')\nfor i = 1, category.AchievementCount() do\n    local achievement = category.AchievementByIndex(i)\n    if not achievement.Completed() then\n        print(achievement.Name())\n    end\nend\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementobj/","title":"<code>achievementobj</code>","text":"<p>Represents a single objective of an achievement</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementobj/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementobj/#Completed","title":"bool <code>Completed</code>","text":"True if the objective has been completed.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementobj/#Count","title":"int <code>Count</code>","text":"The current count recorded by the objective.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementobj/#Description","title":"string <code>Description</code>","text":"Text describing this objective.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementobj/#ID","title":"int <code>ID</code>","text":"The objective's unique ID.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementobj/#Index","title":"int <code>Index</code>","text":"Visual index of the objective as displayed in the achievement window. Can be used with Achievement.ObjectiveByIndex.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementobj/#RequiredCount","title":"int <code>RequiredCount</code>","text":"The total count required to be complete the objective. For objectives that don't require a count, this will be zero.","tags":["datatype"]},{"location":"reference/data-types/datatype-achievementobj/#example","title":"Example","text":"<p>List the objectives that are still left to complete the achievement \"Norrathian Explorer\":</p> MQScriptLua <pre><code>/declare ach achievement local Norrathian Explorer\n\n/if (${ach.Completed}) {\n    /echo ${ach.Name} is complete!\n} else {\n    /echo The following objectives for ${ach.Name} are incomplete:\n    /declare i int local\n    /for i 1 to ${ach.ObjectiveCount} {\n        /if (!${ach.ObjectiveByIndex[${i}].Completed}) {\n            /echo ${ach.ObjectiveByIndex[${i}].Description}\n        }\n        /next i\n    }\n}\n</code></pre> <pre><code>local achievement = mq.TLO.Achievement('Norrathian Explorer')\n\nif achievement.Completed() then\n    print(string.format('%s complete!', achievement.Name()))\nelse\n    print(string.format('The following objectives for %s are incomplete:', achievement.Name()))\n    for i = 1, achievement.ObjectiveCount() do\n        local objective = achievement.ObjectiveByIndex(i)\n        if not objective.Completed() then\n            print(achievement.ObjectiveByIndex(i).Description())\n        end\n    end\nend\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/","title":"<code>altability</code>","text":"<p>Contains all the data related to alternate abilities</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#AARankRequired","title":"int <code>AARankRequired</code>","text":"Rank required to train","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#CanTrain","title":"bool <code>CanTrain</code>","text":"Returns true/false on if the Alternative Ability can be trained","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#Category","title":"string <code>Category</code>","text":"The name of the category that this AA belongs to.","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#Cost","title":"int <code>Cost</code>","text":"Base cost to train","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#Description","title":"string <code>Description</code>","text":"Basic description","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#Expansion","title":"int <code>Expansion</code>","text":"Expansion level for the ability.","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#Flags","title":"int <code>Flags</code>","text":"Flags value (Currently unknown?).","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#GroupID","title":"int <code>GroupID</code>","text":"ID of the AA group that this AA belongs to","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#ID","title":"int <code>ID</code>","text":"ID","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#Index","title":"int <code>Index</code>","text":"Returns the index number of the Alternative Ability","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#MaxRank","title":"int <code>MaxRank</code>","text":"Max rank available in this ability","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#MinLevel","title":"int <code>MinLevel</code>","text":"Minimum level to train","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#MyReuseTime","title":"int <code>MyReuseTime</code>","text":"Reuse time (in seconds) that takes into account any hastened AA abilities","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#Name","title":"string <code>Name</code>","text":"Name","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#NextIndex","title":"int <code>NextIndex</code>","text":"Returns the next index number of the Alternative Ability","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#Passive","title":"bool <code>Passive</code>","text":"Returns true/false on if the Alternative Ability is passive","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#PointsSpent","title":"int <code>PointsSpent</code>","text":"Returns the amount of points spent on an AA","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#Rank","title":"int <code>Rank</code>","text":"Returns the Rank of the AA","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#RequiresAbility","title":"altability <code>RequiresAbility</code>","text":"Required ability (if any)","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#RequiresAbilityPoints","title":"int <code>RequiresAbilityPoints</code>","text":"Points required in above ability","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#ReuseTime","title":"int <code>ReuseTime</code>","text":"Reuse time in seconds","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#ShortName","title":"string <code>ShortName</code>","text":"First line of button label (if any)","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#ShortName2","title":"string <code>ShortName2</code>","text":"Second line of button label (if any)","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#Spell","title":"spell <code>Spell</code>","text":"Spell used by the ability (if any)","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#Type","title":"int <code>Type</code>","text":"Type (1-6)","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-altability/#examples","title":"Examples","text":"<p>If the AA \"Companion's Aegis\" can be trained, buy the next index/rank of it</p> MQScsriptLua <pre><code>/if (${AltAbility[Companion's Aegis].CanTrain}) {\n    /alt buy ${AltAbility[Companion's Aegis].NextIndex}\n}\n</code></pre> <pre><code>if mq.TLO.AltAbility(\"Companion's Aegis\").CanTrain() then\n    mq.cmd.alt('buy '..mq.TLO.AltAbility(\"Companion's Aegis\").NextIndex())\nend\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-argb/","title":"<code>argb</code>","text":"<p>Represents a color</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-argb/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-argb/#A","title":"int <code>A</code>","text":"Alpha channel value.","tags":["datatype"]},{"location":"reference/data-types/datatype-argb/#R","title":"int <code>R</code>","text":"Red color value.","tags":["datatype"]},{"location":"reference/data-types/datatype-argb/#G","title":"int <code>G</code>","text":"Green color value.","tags":["datatype"]},{"location":"reference/data-types/datatype-argb/#B","title":"int <code>B</code>","text":"Blue color value.","tags":["datatype"]},{"location":"reference/data-types/datatype-argb/#Int","title":"int <code>Int</code>","text":"The integer formed by the ARGB.","tags":["datatype"]},{"location":"reference/data-types/datatype-argb/#string-to-string","title":"string To String","text":"The hex value of the integer formed by the ARGB.","tags":["datatype"]},{"location":"reference/data-types/datatype-array/","title":"<code>array</code>","text":"<p>Data related to arrays.</p> <p>Note</p> <p>Array indexing starts at 1.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-array/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-array/#Dimensions","title":"int <code>Dimensions</code>","text":"Number of dimensions in the array","tags":["datatype"]},{"location":"reference/data-types/datatype-array/#Size","title":"int <code>Size</code>","text":"Total number of elements in the array","tags":["datatype"]},{"location":"reference/data-types/datatype-array/#Size[N]","title":"int <code>Size[N]</code>","text":"Total number of elements stored in the N th dimension of the array","tags":["datatype"]},{"location":"reference/data-types/datatype-array/#usage","title":"Usage","text":"<p>To create an array, attach square brackets to the end of the variable name and place in it the number of elements per dimension.</p> <p>Tip</p> <p>This array syntax only applies to MQScript. For lua, use tables instead.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-array/#examples","title":"Examples","text":"<p>This creates a single-dimension local array of int with 10 elements (1-10) all 0:</p> <pre><code>/declare MyArray[10] int\n</code></pre> <p>This creates a 2-dimensional 10x10 elements(1-10,1-10) int array of scope outer with all values of 5:</p> <pre><code>/declare MyArray[10,10] int outer 5\n</code></pre> <p>This creates a 3-dimensional array with 4x5x6 elements (1-4,1-5, 1-6) with UNDEFINED-ARRAY-ELEMENT in each location:</p> <pre><code>/declare MyArray[4,5,6] string outer UNDEFINED-ARRAY-ELEMENT\n</code></pre> <p>There is no limit to the number of dimensions or the number of elements in each dimension, but use your own good judgement.</p> <p>Note: You cannot make an array of timers.</p> <p>Example</p> ArrayExample.mac<pre><code>sub main\n    /declare myArray[9] int local 0\n    /declare myCounter int local\n\n    /echo =============[Put Data]=================\n    /for myCounter 1 to ${myArray.Size}\n        /varset myArray[${myCounter}] ${Math.Rand[999]}\n        /echo Put a random number in Index ${myCounter} of myArray\n    /next myCounter\n\n    /echo =============[Get Data]=================\n    /for myCounter 1 to ${myArray.Size}\n        /echo Index ${myCounter} in myArray is ${myArray[${myCounter}]}\n    /next myCounter\n/return\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-augtype/","title":"<code>augtype</code> Type","text":"<p>Describes data about an augmentation slot in an item.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-augtype/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-augtype/#Empty","title":"bool <code>Empty</code>","text":"True if the slot is empty","tags":["datatype"]},{"location":"reference/data-types/datatype-augtype/#Infusable","title":"bool <code>Infusable</code>","text":"True if this is a hidden energeian power source slot.","tags":["datatype"]},{"location":"reference/data-types/datatype-augtype/#Item","title":"item <code>Item</code>","text":"The item socketed in this slot, if any.","tags":["datatype"]},{"location":"reference/data-types/datatype-augtype/#Name","title":"string <code>Name</code>","text":"The name of the item socketed in this slot, if any.","tags":["datatype"]},{"location":"reference/data-types/datatype-augtype/#Slot","title":"int <code>Slot</code>","text":"Index of the augment slot.","tags":["datatype"]},{"location":"reference/data-types/datatype-augtype/#Solvent","title":"int <code>Solvent</code>","text":"Item ID of the solvent used to remove this item, if any.","tags":["datatype"]},{"location":"reference/data-types/datatype-augtype/#Type","title":"int <code>Type</code>","text":"Type of augment slot.","tags":["datatype"]},{"location":"reference/data-types/datatype-augtype/#Visible","title":"int <code>Visible</code>","text":"True if this slot is visible to the user.","tags":["datatype"]},{"location":"reference/data-types/datatype-auratype/","title":"<code>auratype</code> Type","text":"<p>Describes an aura.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-auratype/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-auratype/#ID","title":"int <code>ID</code>","text":"ID of the Aura","tags":["datatype"]},{"location":"reference/data-types/datatype-auratype/#Name","title":"string <code>Name</code>","text":"Name of the Aura","tags":["datatype"]},{"location":"reference/data-types/datatype-auratype/#SpawnID","title":"int <code>SpawnID</code>","text":"ID of the spawn that emits aura","tags":["datatype"]},{"location":"reference/data-types/datatype-auratype/#methods","title":"Methods","text":"Name Action Remove Remove the aura","tags":["datatype"]},{"location":"reference/data-types/datatype-bandolier/","title":"<code>bandolier</code>","text":"<p>Used to access information about bandolier sets on your character.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-bandolier/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-bandolier/#Active","title":"bool <code>Active</code>","text":"Indicates if the bandolier set is active","tags":["datatype"]},{"location":"reference/data-types/datatype-bandolier/#Index","title":"int <code>Index</code>","text":"Returns the index number of the bandolier set","tags":["datatype"]},{"location":"reference/data-types/datatype-bandolier/#Item[Index]","title":"bandolieritem <code>Item[Index]</code>","text":"Provides information about the specified item. Returns the Nth item in the set (Primary, Secondary, Ranged, Ammo)","tags":["datatype"]},{"location":"reference/data-types/datatype-bandolier/#Name","title":"string <code>Name</code>","text":"Returns the name of the bandolier set","tags":["datatype"]},{"location":"reference/data-types/datatype-bandolier/#methods","title":"Methods","text":"Name Action Activate Activate the bandolier profile","tags":["datatype"]},{"location":"reference/data-types/datatype-bandolier/#associated-datatypes","title":"Associated DataTypes","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-bandolier/#bandolieritem","title":"<code>bandolieritem</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-bandolier/#IconID","title":"int <code>IconID</code>","text":"Returns the icon id for the item","tags":["datatype"]},{"location":"reference/data-types/datatype-bandolier/#ID","title":"int <code>ID</code>","text":"Returns the item id for the item","tags":["datatype"]},{"location":"reference/data-types/datatype-bandolier/#Name","title":"string <code>Name</code>","text":"Returns the name of the item","tags":["datatype"]},{"location":"reference/data-types/datatype-bandolier/#examples","title":"Examples","text":"<p>Example</p> MQScriptLua <pre><code>| Activate the bandolier set named \"1HB\"\n/if (!${Me.Bandolier[1HB].Active}) {\n    /echo Player want us to activate Bandolier: 1HB.\n    /invoke ${Me.Bandolier[1HB].Activate}\n}\n\n| Print the weapon in the primary bandolier slot\n/echo I have a ${Me.Bandolier[1HB].Item[1].Name} in my primary bandolier slot\n</code></pre> <pre><code>-- Activate the bandolier set named \"1HB\"\nif not mq.TLO.Me.Bandolier('1HB').Active() then\n    print('Player wants us to activate Bandodlier: 1HB')\n    mq.TLO.Me.Bandolier('1HB').Activate()\nend\n\n-- Print the weapon in the primary bandolier slot\nprint('I have a ', mq.TLO.Me.Bandolier('1HB').Item(1).Name(), ' in my primary bandolier slot')\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-bank/","title":"<code>bank</code>","text":"<p>This is the type for your bank (not including shared bank or other bank features).</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-bank/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-bank/#BagSlots","title":"int <code>BagSlots</code>","text":"How many bag slots (base slots for bags/items) your bank has.","tags":["datatype"]},{"location":"reference/data-types/datatype-bank/#FreeSlots","title":"int <code>FreeSlots</code>","text":"How many free (empty) slots your bank has.  This includes slots where you have a bag and the bag has empty slots.  It accepts an index specifying one of the case insensitive bag sizes (tiny, small, medium, large, giant) or the corresponding number (0, 1, 2, 3, 4).  An invalid string specifying size will return NULL.  Specifying a numeric value less than 0 will use 0 and a value greater than 4 will use 4.","tags":["datatype"]},{"location":"reference/data-types/datatype-bank/#TotalSlots","title":"int <code>TotalSlots</code>","text":"How many total slots your bank has.  This includes slots where you have a bag and the bag has items in.  It accepts an index specifying one of the bag sizes or the corresponding number (see FreeSlots for a longer explanation).","tags":["datatype"]},{"location":"reference/data-types/datatype-bank/#Platinum","title":"int <code>Platinum</code>","text":"How much platinum you have in your bank.","tags":["datatype"]},{"location":"reference/data-types/datatype-bank/#Gold","title":"int <code>Gold</code>","text":"How much gold you have in your bank.","tags":["datatype"]},{"location":"reference/data-types/datatype-bank/#Silver","title":"int <code>Silver</code>","text":"How much silver you have in your bank.","tags":["datatype"]},{"location":"reference/data-types/datatype-bank/#Copper","title":"int <code>Copper</code>","text":"How much copper you have in your bank.","tags":["datatype"]},{"location":"reference/data-types/datatype-bank/#examples","title":"Examples","text":"<p>Example</p> MQScript <p>How many giant items can I add to my bank?</p> <p><pre><code>/echo ${Inventory.Bank.FreeSlots[giant]}\n</code></pre> or</p> <pre><code>/echo ${Inventory.Bank.FreeSlots[4]}\n</code></pre> <p>How many total slots are there in my bank?</p> <pre><code>/echo ${Inventory.Bank.TotalSlots}\n</code></pre> <p>How many large slots are there in my bank (used and unused)?</p> <p><pre><code>/echo ${Inventory.Bank.TotalSlots[large]}\n</code></pre> or</p> <pre><code>/echo ${Inventory.Bank.TotalSlots[3]}\n</code></pre> Lua <p>How many giant items can I add to my bank?</p> <p><pre><code>print(mq.TLO.Inventory.Bank.FreeSlots('giant')())\n</code></pre> or</p> <pre><code>print(mq.TLO.Inventory.Bank.FreeSlots(4)())\n</code></pre> <p>How many total slots are there in my bank?</p> <pre><code>print(mq.TLO.Inventory.Bank.TotalSlots())\n</code></pre> <p>How many large slots are there in my bank (used and unused)?</p> <p><pre><code>print(mq.TLO.Inventory.Bank.TotalSlots('large')())\n</code></pre> or</p> <pre><code>print(mq.TLO.Inventory.Bank.TotalSlots(3)())\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-body/","title":"<code>body</code>","text":"<p>Contains data about spawn body types</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-body/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-body/#ID","title":"int <code>ID</code>","text":"The ID of the body type","tags":["datatype"]},{"location":"reference/data-types/datatype-body/#Name","title":"string <code>Name</code>","text":"The full name of the body type","tags":["datatype"]},{"location":"reference/data-types/datatype-body/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-body/#usage","title":"Usage","text":"<p>Example</p> <p>Prints true if a summoned npc is targeted</p> MQScriptLua <pre><code>/echo ${Target.Body.Name.Equal[Undead Pet]}`\n</code></pre> <pre><code>print(mq.TLO.Target.Boddy.Name === 'Undead Pet')\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-bool/","title":"<code>bool</code>","text":"<p>A Boolean expression is one that has just two possible outcomes: 1 (TRUE) and 0 (FALSE). Technically TRUE doesn't have to be 1, but it's always treated that way.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-bool/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-bool/#string-to-string","title":"string <code>To String</code>","text":"\"TRUE\" for non-zero, or \"FALSE\" for zero","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/","title":"<code>buff</code>","text":"<p>This is the type for any buffs currently affecting you, both long duration and short duration buffs.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#members","title":"Members","text":"<p>This type inherits members from spell.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#Caster","title":"string <code>Caster</code>","text":"Name of the caster who cast the buff, if available.","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#CountersCorruption","title":"int64 <code>CountersCorruption</code>","text":"The number of corruption counters.","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#CountersCurse","title":"int64 <code>CountersCurse</code>","text":"The number of curse counters.","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#CountersDisease","title":"int64 <code>CountersDisease</code>","text":"The number of disease counters.","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#CountersPoison","title":"int64 <code>CountersPoison</code>","text":"The number of poison counters.","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#Dar","title":"int64 <code>Dar</code>","text":"The remaining damage absorption of the buff (if any). This is not entirely accurate, it will only show you to the Dar of your spell when it was initially cast, or what it was when you last zoned (whichever is more recent).","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#Duration","title":"timestamp <code>Duration</code>","text":"The time remaining before the buff fades (not total duration)","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#HitCount","title":"int <code>HitCount</code>","text":"?","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#ID","title":"int <code>ID</code>","text":"The ID of the buff or shortbuff slot","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#Level","title":"int <code>Level</code>","text":"The level of the person that cast the buff on you (not the level of the spell)","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#Mod","title":"float <code>Mod</code>","text":"The modifier to a bard song","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#Spell","title":"spell <code>Spell</code>","text":"The spell","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#TotalCounters","title":"int64 <code>TotalCounters</code>","text":"The total number of counters on the buff.","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#methods","title":"Methods","text":"Name Action Remove Removes the named/partial name buff","tags":["datatype"]},{"location":"reference/data-types/datatype-buff/#examples","title":"Examples","text":"<p>Example</p> <p>Remove the buff named \"Credence\"</p> MQScriptLua <pre><code>/invoke ${Me.Buff[Credence].Remove}\n</code></pre> <pre><code>mq.TLO.Me.Buff(\"Credence\").Remove()\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-byte/","title":"<code>byte</code>","text":"<p>Represents an 8 bit integer, with values randing from 0 to 255. This is a pure DataType and has no members</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-cachedbuff/","title":"<code>cachedbuff</code>","text":"<p>Info</p> <p>\"Cached Buffs\" used to be a new way to access buff information on players without needing to re-target them. Now, this functionality is fully integrated into MacroQuest and available through the buff datatype. As a result, using cached buffs is now discouraged.</p> <p>You should only used this type if you need access to its \"unique\" style of buff lookup.</p> <p>Information about cached buffs on a player. Data must be populated on a player by first targeting them.</p> <p>See also: Cached Buffs.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-cachedbuff/#inheritance","title":"Inheritance","text":"<p>This type inherits members from spell.</p> <pre><code>classDiagram\n  spell &lt;|-- cachedbuff\n  direction RL\n  class cachedbuff {\n  }\n  class spell {\n  }</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-cachedbuff/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-cachedbuff/#Caster","title":"string <code>Caster</code>","text":"Same as CasterName, added for consistency.","tags":["datatype"]},{"location":"reference/data-types/datatype-cachedbuff/#CasterName","title":"string <code>CasterName</code>","text":"Returns the name of the caster who applied the buff (Deprecated, use Caster instead).","tags":["datatype"]},{"location":"reference/data-types/datatype-cachedbuff/#Count","title":"int <code>Count</code>","text":"Returns the amount of buffs catched, or -1 it none","tags":["datatype"]},{"location":"reference/data-types/datatype-cachedbuff/#Duration","title":"int <code>Duration</code>","text":"Returns the duration of the buff","tags":["datatype"]},{"location":"reference/data-types/datatype-cachedbuff/#OriginalDuration","title":"int <code>OriginalDuration</code>","text":"Original duration of the buff.","tags":["datatype"]},{"location":"reference/data-types/datatype-cachedbuff/#Slot","title":"int <code>Slot</code>","text":"Returns the buff slot the target had the buff in","tags":["datatype"]},{"location":"reference/data-types/datatype-cachedbuff/#Spell","title":"spell <code>Spell</code>","text":"Access the spell.","tags":["datatype"]},{"location":"reference/data-types/datatype-cachedbuff/#SpellID","title":"int <code>SpellID</code>","text":"Returns the buff's spell ID","tags":["datatype"]},{"location":"reference/data-types/datatype-cachedbuff/#Staleness","title":"timestamp <code>Staleness</code>","text":"How long it has been since this information was refreshed.","tags":["datatype"]},{"location":"reference/data-types/datatype-cachedbuff/#usage","title":"Usage","text":"<p>Example</p> <p>Check the time left on a group member's buff. Assumes that data has already been populated by targeting them at some point in the recent past.</p> MQScriptLua <pre><code>/echo ${Group.Member[2].CachedBuff[Spirit of Wolf].Duration}\n</code></pre> <pre><code>print(mq.TLO.Group.Member(2).CachedBuff(\"Spirit of Wolf\").Duration())\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-character/","title":"<code>character</code>","text":"<p>This data type contains all the information about your character.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#inheritance","title":"Inheritance","text":"<p>This type inherits members from spawn.</p> <pre><code>classDiagram\n  spawn &lt;|-- character\n  direction RL\n  class spawn {\n  }\n  class character {\n  }</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#members","title":"Members","text":"<p>The source always has the latest data members. If something is missing here, you can check the source to see if it exists.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AAExp","title":"int <code>AAExp</code>","text":"AA exp as a raw number out of 10,000 (10,000=100%)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AAPoints","title":"int <code>AAPoints</code>","text":"Unused AA points","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AAPointsAssigned","title":"int <code>AAPointsAssigned</code>","text":"Number of AA Points currently assigned","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AAPointsSpent","title":"int <code>AAPointsSpent</code>","text":"The number of points you have spent on AA abilities","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AAPointsTotal","title":"int <code>AAPointsTotal</code>","text":"The total number of AA points you have","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AAVitality","title":"int64 <code>AAVitality</code>","text":"The total number of AA Vitality you have","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AAVitalityCap","title":"int64 <code>AAVitalityCap</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Ability[name]","title":"string <code>Ability[name]</code>","text":"Skill name assigned to this doability button","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Ability[#|name]","title":"bool <code>Ability[#|name]</code>","text":"Whether you have this ability or not","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AbilityReady[#|name]","title":"bool <code>AbilityReady[#|name]</code>","text":"Whether this ability is ready (false if you do not have the ability)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AbilityTimer[#|name]","title":"timestamp <code>AbilityTimer[#|name]</code>","text":"How long before an ability can be used again. Zero if it can currently be used or you do not have the ability.  nil if the skill is not an ability or the ability does not exist.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AbilityTimerTotal[#|name]","title":"timestamp <code>AbilityTimerTotal[#|name]</code>","text":"The total amount of time an ability takes to refresh. Zero if it is not currently active.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AccuracyBonus","title":"int <code>AccuracyBonus</code>","text":"Accuracy bonus from gear and spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ActiveDisc","title":"spell <code>ActiveDisc</code>","text":"Returns a spell if melee discipline is active.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ActiveFavorCost","title":"int <code>ActiveFavorCost</code>","text":"If Tribute is active, how much it is costing you every 10 minutes. Returns NULL if tribute is inactive.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AdoptiveCoin","title":"int <code>AdoptiveCoin</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Aego","title":"buff <code>Aego</code>","text":"Returns the name of the Aegolism buff or equivalent (Aego, HP Buff, Symbol) from a Cleric.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AggroLock","title":"spawn <code>AggroLock</code>","text":"Spawn info for aggro lock player","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AGI","title":"int <code>AGI</code>","text":"Character Agility","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AirSupply","title":"int <code>AirSupply</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AltAbility[#|name]","title":"altability <code>AltAbility[#|name]</code>","text":"Returns the total number of points you have spent in ability # or name","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AltAbilityReady[#|name]","title":"bool <code>AltAbilityReady[#|name]</code>","text":"Alt ability # or name ready?","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AltAbilityTimer[#|name]","title":"int <code>AltAbilityTimer[#|name]</code>","text":"Alt ability reuse time remaining (in ticks) for ability # or name","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AltCurrency[name]","title":"int <code>AltCurrency[name]</code>","text":"The amount of alternate currency given the name (e.g. Marks of Valor)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AltTimerReady","title":"bool <code>AltTimerReady</code>","text":"Alternate timer ready? (Bash/Slam/Frenzy/Backstab). Note: ${AbilityReady} works fine with most of these.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AmIGroupLeader","title":"bool <code>AmIGroupLeader</code>","text":"Am I the group leader?","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AncientDraconicCoin","title":"int <code>AncientDraconicCoin</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AncientSebilisianCoins","title":"int <code>AncientSebilisianCoins</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AssistComplete","title":"bool <code>AssistComplete</code>","text":"returns true/false if the assist is complete","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AttackBonus","title":"int <code>AttackBonus</code>","text":"Attack bonus from gear and spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AttackSpeed","title":"int <code>AttackSpeed</code>","text":"Your Attack Speed. No haste spells/items = AttackSpeed of 100. A 41% haste item will result in an AttackSpeed of 141. This variable does not take into account spell or song haste.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Aura","title":"auratype <code>Aura</code>","text":"Aura data, if an aura is active.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AutoFire","title":"bool <code>AutoFire</code>","text":"Is Autofire on?","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AutoSkill","title":"skill <code>AutoSkill</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#AvoidanceBonus","title":"int <code>AvoidanceBonus</code>","text":"Avoidance bonus from gear/spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Bandolier","title":"bandolier <code>Bandolier</code>","text":"Gives access to the bandolier datatype.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Bank","title":"item <code>Bank</code>","text":"Item in this bankslot #","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#BardSongPlaying","title":"bool <code>BardSongPlaying</code>","text":"Is a bard song playing?","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#BaseAGI","title":"int <code>BaseAGI</code>","text":"Base Agility","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#BaseCHA","title":"int <code>BaseCHA</code>","text":"Base Charisma","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#BaseDEX","title":"int <code>BaseDEX</code>","text":"Base Dexterity","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#BaseINT","title":"int <code>BaseINT</code>","text":"Base Intelligence","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#BaseSTA","title":"int <code>BaseSTA</code>","text":"Base Stamana","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#BaseSTR","title":"int <code>BaseSTR</code>","text":"Base Strength","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#BaseWIS","title":"int <code>BaseWIS</code>","text":"Base Wisdom","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#BathezidTradeGems","title":"int <code>BathezidTradeGems</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Bayle","title":"int <code>Bayle</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Beneficial","title":"buff <code>Beneficial</code>","text":"Returns the first Beneficial buff found in your list of buffs","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#BifurcatedCoin","title":"int <code>BifurcatedCoin</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#BlockedBuff","title":"spell <code>BlockedBuff</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#BlockedPetBuff[name]","title":"spell <code>BlockedPetBuff[name]</code>","text":"Buff blocked by pet with this name","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#BlockedPetBuff[#]","title":"spell <code>BlockedPetBuff[#]</code>","text":"Buff at this index slot # of the blocked pet buffs","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Book[name]","title":"int <code>Book[name]</code>","text":"Slot in your spell book assigned to spell name","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Book[#]","title":"spell <code>Book[#]</code>","text":"Spell assigned to this slot # in your spell book","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#BoundLocation[#]","title":"worldlocation <code>BoundLocation[#]</code>","text":"Returns information about your bind points (0-4)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Brellium","title":"int <code>Brellium</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Brells","title":"buff <code>Brells</code>","text":"Returns the Brell's line HP buff from a Paladin","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#BronzeFiats","title":"int <code>BronzeFiats</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Buff[name]","title":"buff <code>Buff[name]</code>","text":"The buff with this name","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Buff[#]","title":"buff <code>Buff[#]</code>","text":"The buff in this slot #","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CanMount","title":"bool <code>CanMount</code>","text":"Can you use a mount here?","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CareerFavor","title":"int64 <code>CareerFavor</code>","text":"Career favor/tribute","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Cash","title":"int64 <code>Cash</code>","text":"Total cash on your character, expressed in coppers (eg. if you are carrying 100pp, Cash will return 100000)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CashBank","title":"int64 <code>CashBank</code>","text":"Total cash in your bank, expressed in coppers","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CastTimeLeft","title":"timestamp <code>CastTimeLeft</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CHA","title":"int <code>CHA</code>","text":"Character Charisma","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Charmed","title":"buff <code>Charmed</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Chronobines","title":"int <code>Chronobines</code>","text":"Chronobines on your character","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ClairvoyanceBonus","title":"int <code>ClairvoyanceBonus</code>","text":"Clairvoyance Bonus","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Clarity","title":"buff <code>Clarity</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Combat","title":"bool <code>Combat</code>","text":"In combat?","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CombatAbility[#]","title":"spell <code>CombatAbility[#]</code>","text":"The name of Combat Ability # in your list (not the same as anyone else's list!)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CombatAbility[name]","title":"int <code>CombatAbility[name]</code>","text":"The number of Combat ability name in your list (not the same as anyone else's list!)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CombatAbilityReady[name|#]","title":"bool <code>CombatAbilityReady[name|#]</code>","text":"Is this Combat Ability ready?","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CombatAbilityTimer[name|#]","title":"int <code>CombatAbilityTimer[name|#]</code>","text":"The time remaining (in seconds) before the Combat Ability name is usable","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CombatEffectsBonus","title":"int <code>CombatEffectsBonus</code>","text":"Combat Effects bonus from gear and spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CombatState","title":"string <code>CombatState</code>","text":"<p>Returns the current out-of-combat resting state.</p> Value Meaning COMBAT You are currently in a combat state and can not rest yet DEBUFFED You can't rest now. You need to be cleansed before the cooldown will start COOLDOWN You are cooling down. OOC regen is ready when you are done cooling down ACTIVE You can rest now. You can use the OOC regen if you want RESTING You ARE resting now. the OOC regen is active <p>If the client does not support this feature, ACTIVE will always be returned.</p> <p>Example</p> <pre><code>/if ${Me.CombatState.Equal[ACTIVE]} /echo I can now sit and regen fast\n/if ${Me.CombatState.Equal[DEBUFFED]} /echo I need cures before I can rest\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Commemoratives","title":"int <code>Commemoratives</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Copper","title":"int <code>Copper</code>","text":"Copper on your character","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CopperBank","title":"int <code>CopperBank</code>","text":"Copper in bank","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Corrupted","title":"spell <code>Corrupted</code>","text":"Returns the name of the Corrupted debuff if you have one","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CountBuffs","title":"int <code>CountBuffs</code>","text":"Number of buffs you have, not including short duration buffs","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CountersCorruption","title":"int64 <code>CountersCorruption</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CountersCurse","title":"int64 <code>CountersCurse</code>","text":"Number of curse counters you have","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CountersDisease","title":"int64 <code>CountersDisease</code>","text":"Number of disease counters you have","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CountersPoison","title":"int64 <code>CountersPoison</code>","text":"Number of poison counters you have","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CountSongs","title":"int <code>CountSongs</code>","text":"Number of songs you have","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Crippled","title":"int <code>Crippled</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CrystallizedFear","title":"int <code>CrystallizedFear</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CryrstallizedLuck","title":"int <code>CryrstallizedLuck</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CurrentEndurance","title":"int <code>CurrentEndurance</code>","text":"Current endurance","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CurrentFavor","title":"int64 <code>CurrentFavor</code>","text":"Current favor/tribute","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CurrentHPs","title":"int <code>CurrentHPs</code>","text":"Current hit points","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CurrentMana","title":"int <code>CurrentMana</code>","text":"Current mana","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CurrentWeight","title":"int <code>CurrentWeight</code>","text":"Current weight","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Cursed","title":"spell <code>Cursed</code>","text":"Returns the name of the Curse debuff if you are effected by one","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CursorCopper","title":"int <code>CursorCopper</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CursorGold","title":"int <code>CursorGold</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CursorKrono","title":"int <code>CursorKrono</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CursorPlatinum","title":"int <code>CursorPlatinum</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#CursorSilver","title":"int <code>CursorSilver</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#DamageShieldBonus","title":"int <code>DamageShieldBonus</code>","text":"Damage Shield bonus from gear and spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#DamageShieldMitigationBonus","title":"int <code>DamageShieldMitigationBonus</code>","text":"Damage Shield Mitigation bonus from gear and spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Dar","title":"int64 <code>Dar</code>","text":"Damage absorption remaining (eg. from Rune-type spells)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#DEX","title":"int <code>DEX</code>","text":"Character Dexterity","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#DiamondCoins","title":"int <code>DiamondCoins</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Diseased","title":"string <code>Diseased</code>","text":"Returns the name of first Disease spell on character","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#DoTShieldBonus","title":"int <code>DoTShieldBonus</code>","text":"DoT Shield bonus from gear and spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Dotted","title":"string <code>Dotted</code>","text":"Returns name of first DoT on character","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Doubloons","title":"int <code>Doubloons</code>","text":"Doubloons on your character","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Downtime","title":"ticks <code>Downtime</code>","text":"Downtime (Ticks left til combat timer end)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#DreadStones","title":"int <code>DreadStones</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Drunk","title":"int <code>Drunk</code>","text":"Drunkenness level","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#DSed","title":"buff <code>DSed</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#EbonCrystals","title":"int <code>EbonCrystals</code>","text":"Number of Ebon Crystals on your character","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Endurance","title":"int <code>Endurance</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#EnduranceBonus","title":"int <code>EnduranceBonus</code>","text":"Endurance bonus from gear and spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#EnduranceRegen","title":"int <code>EnduranceRegen</code>","text":"Endurance regen from the last tick","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#EnduranceRegenBonus","title":"int <code>EnduranceRegenBonus</code>","text":"Endurance regen bonus","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#EnergyCrystals","title":"int <code>EnergyCrystals</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#EntwinedDjinnCoins","title":"int <code>EntwinedDjinnCoins</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Exp","title":"int64 <code>Exp</code>","text":"Experience (out of 10,000 on Live / out of 330 on Emu)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ExpansionFlags","title":"int <code>ExpansionFlags</code>","text":"Returns a numeric number representing which expansions your toon is flagged for","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Faycites","title":"int <code>Faycites</code>","text":"Faycites on your character","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Feared","title":"buff <code>Feared</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Fellowship","title":"fellowship <code>Fellowship</code>","text":"Info about Fellowship","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#FetteredIfritCoins","title":"int <code>FetteredIfritCoins</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#FindBuff","title":"buff <code>FindBuff</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Fists","title":"int <code>Fists</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Focus","title":"buff <code>Focus</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#FreeBuffSlots","title":"int <code>FreeBuffSlots</code>","text":"Number of open buff slots (not counting the short duration buff slots)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#FreeInventory","title":"int <code>FreeInventory</code>","text":"Number of free inventory spaces","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#FreeInventory[#]","title":"int <code>FreeInventory[#]</code>","text":"Number of free inventory spaces of at least # size (giant=4)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#FroststoneDucat","title":"int <code>FroststoneDucat</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Gem[name]","title":"int <code>Gem[name]</code>","text":"Returns the slot # with the spell name","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Gem[#]","title":"spell <code>Gem[#]</code>","text":"The name of the spell in this slot #","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#GemTimer[name|#]","title":"ticks <code>GemTimer[name|#]</code>","text":"The timer for the spell with this name or in this gem #","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Gold","title":"int <code>Gold</code>","text":"Gold on character","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#GoldBank","title":"int <code>GoldBank</code>","text":"Gold in bank","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#GoldTokens","title":"int <code>GoldTokens</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#GroupAssistTarget","title":"spawn <code>GroupAssistTarget</code>","text":"Current group assist target","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Grouped","title":"bool <code>Grouped</code>","text":"Grouped?","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#GroupList","title":"string <code>GroupList</code>","text":"Returns a string of your group members (excluding you)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#GroupMarkNPC[#]","title":"spawn <code>GroupMarkNPC[#]</code>","text":"Current group marked NPC (1-3)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#GroupSize","title":"int <code>GroupSize</code>","text":"Size of group","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Growth","title":"buff <code>Growth</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#GukEarned","title":"int <code>GukEarned</code>","text":"Total LDoN points earned in Deepest Guk","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#GuildID","title":"int64 <code>GuildID</code>","text":"Returns the ID number of your guild","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Haste","title":"int <code>Haste</code>","text":"Total Combined Haste (worn and spell) as shown in Inventory Window stats","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Hasted","title":"buff <code>Hasted</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#HaveExpansion[#]","title":"bool <code>HaveExpansion[#]</code>","text":"Returns TRUE/FALSE if you have that expansion #","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#HealAmountBonus","title":"int <code>HealAmountBonus</code>","text":"Total Heal Amount bonus from gear","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#HeroicAGIBonus","title":"int <code>HeroicAGIBonus</code>","text":"Total Heroic Agility bonus from gear","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#HeroicCHABonus","title":"int <code>HeroicCHABonus</code>","text":"Total Heroic Charisma bonus from gear","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#HeroicDEXBonus","title":"int <code>HeroicDEXBonus</code>","text":"Total Heroic Dexterity bonus from gear","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#HeroicINTBonus","title":"int <code>HeroicINTBonus</code>","text":"Total Heroic Intelligence bonus from gear","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#HeroicSTABonus","title":"int <code>HeroicSTABonus</code>","text":"Total Heroic Stamina bonus from gear","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#HeroicSTRBonus","title":"int <code>HeroicSTRBonus</code>","text":"Total Heroic Strength bonus from gear","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#HeroicWISBonus","title":"int <code>HeroicWISBonus</code>","text":"Total Heroic Wisdom bonus from gear","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#HPBonus","title":"int <code>HPBonus</code>","text":"Hit point bonus from gear and spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#HPRegen","title":"int <code>HPRegen</code>","text":"Hit point regeneration from last tick","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#HPRegenBonus","title":"int <code>HPRegenBonus</code>","text":"HP regen bonus from gear and spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Hunger","title":"int <code>Hunger</code>","text":"Hunger level","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#HybridHP","title":"buff <code>HybridHP</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ID","title":"int <code>ID</code>","text":"Spawn ID","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#InInstance","title":"bool <code>InInstance</code>","text":"Returns TRUE/FALSE if you are in an instance.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Instance","title":"int <code>Instance</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#INT","title":"int <code>INT</code>","text":"Character Intelligence","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Inventory[#]","title":"item <code>Inventory[#]</code>","text":"Item in this slot #","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Inventory[slotname]","title":"item <code>Inventory[slotname]</code>","text":"Item in this slotname (inventory slots only). See Slot Names for a list of slotnames.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Invited","title":"bool <code>Invited</code>","text":"Invited to group?","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Inviter","title":"string <code>Inviter</code>","text":"Name of player sending group invite","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Invulnerable","title":"string <code>Invulnerable</code>","text":"<p>Returns the invulnerable spell name on you, can be used with spell datatype</p> <pre><code>${Me.Invulnerable.Spell.ID}\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#IsBerserk","title":"int <code>IsBerserk</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ItemReady[XXX]","title":"bool <code>ItemReady[XXX]</code>","text":"True/False on if the item is ready to cast.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Krono","title":"int <code>Krono</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LADelegateMA","title":"int <code>LADelegateMA</code>","text":"Level of Delegate MA of the current group leader (not your own ability level)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LADelegateMarkNPC","title":"int <code>LADelegateMarkNPC</code>","text":"Level of Delegate Mark NPC of the current group leader (not your own ability level)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LAFindPathPC","title":"int <code>LAFindPathPC</code>","text":"Level of Find Path PC of the current group leader (not your own ability level)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LAHealthEnhancement","title":"int <code>LAHealthEnhancement</code>","text":"Level of Health Enhancement of the current group leader (not your own ability level)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LAHealthRegen","title":"int <code>LAHealthRegen</code>","text":"Level of Health Regen of the current group leader (not your own ability level)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LAHoTT","title":"int <code>LAHoTT</code>","text":"Level of HoTT of the current group leader (not your own ability level)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LAInspectBuffs","title":"int <code>LAInspectBuffs</code>","text":"Level of Inspect Buffs of the current group leader (not your own ability level)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LAManaEnhancement","title":"int <code>LAManaEnhancement</code>","text":"Level of Mana Enhancement of the current group leader (not your own ability level)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LAMarkNPC","title":"int <code>LAMarkNPC</code>","text":"Level of Mark NPC of the current group leader (not your own ability level)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LANPCHealth","title":"int <code>LANPCHealth</code>","text":"Level of NPC Health of the current group leader (not your own ability level)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LAOffenseEnhancement","title":"int <code>LAOffenseEnhancement</code>","text":"Level of Offense Enhancement of the current group leader (not your own ability level)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LASpellAwareness","title":"int <code>LASpellAwareness</code>","text":"Level of Spell Awareness of the current group leader (not your own ability level)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Language[language","title":"int <code>Language[language name]</code>","text":"The EQ language number of the specified language. See languages.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Language[language","title":"string <code>Language[language number]</code>","text":"Returns the EQ language name of the language number specified. See languages.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LanguageSkill[language]","title":"int <code>LanguageSkill[language]</code>","text":"Your skill in language","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LargestFreeInventory","title":"int <code>LargestFreeInventory</code>","text":"Size of your largest free inventory space","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LargestFreeInventory","title":"int <code>LargestFreeInventory</code>","text":"Size of your largest free inventory space","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LastZoned","title":"timestamp <code>LastZoned</code>","text":"Returns a timestamp of last time you zoned","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LaurionInnVoucher","title":"int <code>LaurionInnVoucher</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LCK","title":"int <code>LCK</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LDoNPoints","title":"int <code>LDoNPoints</code>","text":"Available LDoN points","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#LoyaltyTokens","title":"int <code>LoyaltyTokens</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Maloed","title":"buff <code>Maloed</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ManaBonus","title":"int <code>ManaBonus</code>","text":"Mana bonus from gear and spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ManaRegen","title":"int <code>ManaRegen</code>","text":"Mana regeneration from last tick","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ManaRegenBonus","title":"int <code>ManaRegenBonus</code>","text":"Mana regen bonus from gear and spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MarksOfValor","title":"int <code>MarksOfValor</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MaxAirSupply","title":"int <code>MaxAirSupply</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MaxBuffSlots","title":"int <code>MaxBuffSlots</code>","text":"Max number of buffs you can have on you. /echo ${Me.MaxBuffSlots}","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MaxEndurance","title":"int <code>MaxEndurance</code>","text":"Max endurance","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MaxHPs","title":"int <code>MaxHPs</code>","text":"Max hit points","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MaxLevel","title":"int <code>MaxLevel</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MaxMana","title":"int <code>MaxMana</code>","text":"Max mana","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#McKenzie","title":"int <code>McKenzie</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MedalsOfConflict","title":"int <code>MedalsOfConflict</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MedalsOfHeroism","title":"int <code>MedalsOfHeroism</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MembershipLevel","title":"string <code>MembershipLevel</code>","text":"Account membership level: <code>GOLD</code>, <code>SILVER</code>, <code>FREE</code>. All-Access and Lifetime All-access are both considered Gold.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MercAAExp","title":"int64 <code>MercAAExp</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MercAAPoints","title":"int <code>MercAAPoints</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MercAAPointsSpent","title":"int <code>MercAAPointsSpent</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Mercenary","title":"string <code>Mercenary</code>","text":"The state of your Mercenary, ACTIVE, SUSPENDED, or UNKNOWN (If it's dead). Returns NULL if you do not have a Mercenary.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MercenaryStance","title":"string <code>MercenaryStance</code>","text":"Current active mercenary stance as a string, default is NULL.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MercListInfo","title":"string <code>MercListInfo</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Mezzed","title":"buff <code>Mezzed</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MirEarned","title":"int <code>MirEarned</code>","text":"Total LDoN points earned in Miragul's","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#MMEarned","title":"int <code>MMEarned</code>","text":"Total LDoN points earned in Mistmoore","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Motes","title":"int <code>Motes</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Moving","title":"bool <code>Moving</code>","text":"Moving? (including strafe)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Name","title":"string <code>Name</code>","text":"First name","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Nobles","title":"int <code>Nobles</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#NumBagSlots","title":"int <code>NumBagSlots</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#NumGems","title":"int <code>NumGems</code>","text":"Returns the amount of spell gems your toon has","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Origin","title":"zone <code>Origin</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Orux","title":"int <code>Orux</code>","text":"Orux on your character","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#OverseerTetradrachm","title":"int <code>OverseerTetradrachm</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ParcelStatus","title":"int <code>ParcelStatus</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PctAAExp","title":"float <code>PctAAExp</code>","text":"AA exp as a %","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PctAAVitality","title":"int <code>PctAAVitality</code>","text":"Percentage of AA Vitality your toon has","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PctAggro","title":"int <code>PctAggro</code>","text":"Your aggro percentage","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PctAirSupply","title":"int <code>PctAirSupply</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PctEndurance","title":"int <code>PctEndurance</code>","text":"Current endurance as a %","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PctExp","title":"float <code>PctExp</code>","text":"Experience as a %","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PctExpToAA","title":"int <code>PctExpToAA</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PctHPs","title":"int <code>PctHPs</code>","text":"Current HP as a %","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PctMana","title":"int <code>PctMana</code>","text":"Current mana as a %","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PctMercAAExp","title":"float <code>PctMercAAExp</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PctVitality","title":"int <code>PctVitality</code>","text":"Percentage of Vitality the toon has","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PersonaLevel[class]","title":"int <code>PersonaLevel[class]</code>","text":"Given the class shortname as a param, returns level of that class persona. e.g. ${Me.PersonaLevel[DRU]} returns the level of your Druid persona.  If you do not have a Persona of the given class, the member will return 0.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PersonaLevel[#]","title":"int <code>PersonaLevel[#]</code>","text":"Given the class ID # returns the persona level of that class. eg ${Me.PersonaLevel[11]} returns the level of your Necromancer persona.  If you do not have a Persona of the given class, the member will return 0.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PetBuff[#]","title":"spell <code>PetBuff[#]</code>","text":"The spell in this PetBuff slot #","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PetBuff[name]","title":"int <code>PetBuff[name]</code>","text":"Finds PetBuff slot with the spell name","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Phosphenes","title":"int <code>Phosphenes</code>","text":"Phosphenes on your character","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Phosphites","title":"int <code>Phosphites</code>","text":"Phosphites on your character","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PiecesofEight","title":"int <code>PiecesofEight</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Platinum","title":"int <code>Platinum</code>","text":"Platinum on your character","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PlatinumBank","title":"int <code>PlatinumBank</code>","text":"Platinum in bank","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PlatinumShared","title":"int <code>PlatinumShared</code>","text":"Platinum in shared bank","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Poisoned","title":"string <code>Poisoned</code>","text":"Returns the name of any Poison spell","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#PracticePoints","title":"<code>PracticePoints</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Pred","title":"buff <code>Pred</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#RadiantCrystals","title":"int <code>RadiantCrystals</code>","text":"Number of Radiant Crystals on your character","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#RaidAssistTarget[#]","title":"spawn <code>RaidAssistTarget[#]</code>","text":"Current raid assist target (1-3)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#RaidMarkNPC[#]","title":"spawn <code>RaidMarkNPC[#]</code>","text":"Current raid marked NPC (1-3)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#RangedReady","title":"bool <code>RangedReady</code>","text":"Ranged attack ready?","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#RebellionChits","title":"int <code>RebellionChits</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Reclamation","title":"int <code>Reclamation</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Regen","title":"buff <code>Regen</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#RemnantOfTranquility","title":"int <code>RemnantOfTranquility</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#RestlessMark","title":"int <code>RestlessMark</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#RevDSed","title":"buff <code>RevDSed</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Rooted","title":"buff <code>Rooted</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#RujEarned","title":"int <code>RujEarned</code>","text":"Total LDoN points earned in Rujarkian","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Running","title":"bool <code>Running</code>","text":"Do I have auto-run turned on?","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SathirsTradeGems","title":"int <code>SathirsTradeGems</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ScarletMarks","title":"int <code>ScarletMarks</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SE","title":"buff <code>SE</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SecondaryAggroPlayer","title":"spawn <code>SecondaryAggroPlayer</code>","text":"spawninfo for secondary aggro player","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SecondaryPctAggro","title":"int <code>SecondaryPctAggro</code>","text":"Secondary Percentage aggro","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ShadedSpecie","title":"int <code>ShadedSpecie</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ShadowStones","title":"int <code>ShadowStones</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ShalowainsPrivateReserve","title":"int <code>ShalowainsPrivateReserve</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SharedBank","title":"item <code>SharedBank</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ShieldingBonus","title":"int <code>ShieldingBonus</code>","text":"Shielding bonus from gear and spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Shining","title":"buff <code>Shining</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Shrouded","title":"bool <code>Shrouded</code>","text":"Am I Shrouded?","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Silenced","title":"buff <code>Silenced</code>","text":"Returns the buff of the Silence type effect on you","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Silver","title":"int <code>Silver</code>","text":"Silver on your character","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SilverBank","title":"int <code>SilverBank</code>","text":"Silver in bank","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SilverTokens","title":"int <code>SilverTokens</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Skill[name|#]","title":"int <code>Skill[name|#]</code>","text":"Skill level of skill with this name or ID #","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SkillBase","title":"int <code>SkillBase</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SkillCap[name|#]","title":"int <code>SkillCap[name|#]</code>","text":"Skill cap of skill with this name or ID #","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Skin","title":"buff <code>Skin</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Slowed","title":"buff <code>Slowed</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Snared","title":"buff <code>Snared</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Song[name]","title":"buff <code>Song[name]</code>","text":"Finds song with this name","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Song[#]","title":"buff <code>Song[#]</code>","text":"The song in this slot #","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SPA","title":"int <code>SPA</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Spawn","title":"spawn <code>Spawn</code>","text":"The character's spawn","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Spell","title":"spell <code>Spell</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SpellDamageBonus","title":"int <code>SpellDamageBonus</code>","text":"Spell Damage bonus","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SpellInCooldown","title":"bool <code>SpellInCooldown</code>","text":"returns TRUE if you have a spell in cooldown and FALSE when not.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SpellRankCap","title":"int <code>SpellRankCap</code>","text":"your characters spell rank cap. if it returns: 1 = Rk. I spells 2 = Rk. II spells 3 = Rk. III spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SpellReady[name|#]","title":"bool <code>SpellReady[name|#]</code>","text":"Gem with this spell name or in this gem # ready to cast?","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SpellShieldBonus","title":"int <code>SpellShieldBonus</code>","text":"Spell Shield bonus from gear and spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SpiritualMedallions","title":"int <code>SpiritualMedallions</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#STA","title":"int <code>STA</code>","text":"Character Stamina","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#STR","title":"int <code>STR</code>","text":"Character Strength","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Strength","title":"buff <code>Strength</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#StrikeThroughBonus","title":"int <code>StrikeThroughBonus</code>","text":"Strikethrough bonus from gear and spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Stunned","title":"bool <code>Stunned</code>","text":"Am I stunned?","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#StunResistBonus","title":"int <code>StunResistBonus</code>","text":"Stun Resist bonus from gear and spells","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Subscription","title":"string <code>Subscription</code>","text":"See MembershipLevel","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SubscriptionDays","title":"int <code>SubscriptionDays</code>","text":"The number of days left before subscription expires.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#SV","title":"buff <code>SV</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#svChromatic","title":"int <code>svChromatic</code>","text":"Your character's lowest resist","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#svCold","title":"int <code>svCold</code>","text":"Character Cold Resist","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#svCorruption","title":"int <code>svCorruption</code>","text":"Character Corruption Resist","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#svDisease","title":"int <code>svDisease</code>","text":"Character Disease Resist","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#svFire","title":"int <code>svFire</code>","text":"Character Fire Resist","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#svMagic","title":"int <code>svMagic</code>","text":"Character Magic Resist","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#svPoison","title":"int <code>svPoison</code>","text":"Character Poison Resist","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#svPrismatic","title":"int <code>svPrismatic</code>","text":"The average of your character's resists","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Symbol","title":"buff <code>Symbol</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#TakEarned","title":"int <code>TakEarned</code>","text":"Total LDoN points earned in Takish","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#TargetOfTarget","title":"spawn <code>TargetOfTarget</code>","text":"Target of Target (will only work when group or raid Target of Target is active; if not, it will return NULL)","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Tashed","title":"buff <code>Tashed</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Thirst","title":"int <code>Thirst</code>","text":"Thirst level","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#TotalCounters","title":"int64 <code>TotalCounters</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#TributeActive","title":"bool <code>TributeActive</code>","text":"Tribute Active","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#TributeTimer","title":"ticks <code>TributeTimer</code>","text":"Tribute Timer","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#UseAdvancedLooting","title":"bool <code>UseAdvancedLooting</code>","text":"TRUE/FALSE if using advanced looting","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#VeliumShards","title":"int <code>VeliumShards</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Vitality","title":"int64 <code>Vitality</code>","text":"Total amount of Vitality your toon has","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#VitalityCap","title":"int64 <code>VitalityCap</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Voucher","title":"int <code>Voucher</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#WarforgedEmblem","title":"int <code>WarforgedEmblem</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#WarlordsSymbol","title":"int <code>WarlordsSymbol</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#WIS","title":"int <code>WIS</code>","text":"Character Wisdom","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#XTAggroCount[N]","title":"int <code>XTAggroCount[N]</code>","text":"N is optional and defaults to 100.Returns the number of AUTO-HATER mobs on the extended target window where your aggro is less than the optional parameter N. N must be between 1-100 inclusive or it will be set to 100 (the default value).","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#XTarget[#]","title":"xtarget <code>XTarget[#]</code>","text":"Extended target data for the specified XTarget #. Note: Passing no index to this returns the number of current extended targets.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#XTargetSlots","title":"int <code>XTargetSlots</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#XTHaterCount","title":"int <code>XTHaterCount</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ZoneBound","title":"zone <code>ZoneBound</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ZoneBoundX","title":"float <code>ZoneBoundX</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ZoneBoundY","title":"float <code>ZoneBoundY</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#ZoneBoundZ","title":"float <code>ZoneBoundZ</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#Zoning","title":"bool <code>Zoning</code>","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#string-to-string","title":"string <code>To String</code>","text":"The character's name","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#methods","title":"Methods","text":"Name Action Dismount Causes character to dismount. Sit Causes character to sit if not already. Stand Causes character to stand if not already. StopCast Causes character to stop casting.","tags":["datatype"]},{"location":"reference/data-types/datatype-character/#usage","title":"Usage","text":"<p>Todo</p> <p>Add some examples</p> MQScript<pre><code>/assist PlayerName\n/delay 5s ${Me.AssistComplete}==TRUE\n</code></pre> <p>The delay will last either 5s OR until the assist is complete</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-charselectlist/","title":"<code>charselectlist</code>","text":"<p>Provides information about the character list.</p> <p>See Also: character, TLO:Me</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-charselectlist/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-charselectlist/#Class","title":"string <code>Class</code>","text":"Class of the character","tags":["datatype"]},{"location":"reference/data-types/datatype-charselectlist/#Count","title":"int <code>Count</code>","text":"Number of characters in the character select list","tags":["datatype"]},{"location":"reference/data-types/datatype-charselectlist/#Level","title":"int <code>Level</code>","text":"Level of the character","tags":["datatype"]},{"location":"reference/data-types/datatype-charselectlist/#Name","title":"string <code>Name</code>","text":"Name of the character","tags":["datatype"]},{"location":"reference/data-types/datatype-charselectlist/#Race","title":"string <code>Race</code>","text":"Race of the character","tags":["datatype"]},{"location":"reference/data-types/datatype-charselectlist/#ZoneID","title":"int <code>ZoneID</code>","text":"Id of the zone the character logged out in","tags":["datatype"]},{"location":"reference/data-types/datatype-class/","title":"<code>class</code>","text":"<p>Data about a particular character class</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-class/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-class/#CanCast","title":"bool <code>CanCast</code>","text":"Can cast spells, including Bard","tags":["datatype"]},{"location":"reference/data-types/datatype-class/#ClericType","title":"bool <code>ClericType</code>","text":"True if class is a Cleric or Paladin","tags":["datatype"]},{"location":"reference/data-types/datatype-class/#DruidType","title":"bool <code>DruidType</code>","text":"True if class is a Druid or Ranger","tags":["datatype"]},{"location":"reference/data-types/datatype-class/#HealerType","title":"bool <code>HealerType</code>","text":"True if class is a Healer (Cleric, Druid or Shaman)","tags":["datatype"]},{"location":"reference/data-types/datatype-class/#ID","title":"int <code>ID</code>","text":"The class numeric ID","tags":["datatype"]},{"location":"reference/data-types/datatype-class/#MercType","title":"bool <code>MercType</code>","text":"True if class is Mercenary","tags":["datatype"]},{"location":"reference/data-types/datatype-class/#Name","title":"string <code>Name</code>","text":"The full name of the class. Ex: \"Ranger\"","tags":["datatype"]},{"location":"reference/data-types/datatype-class/#NecromancerType","title":"bool <code>NecromancerType</code>","text":"True if class is a Necromancer or Shadow Knight","tags":["datatype"]},{"location":"reference/data-types/datatype-class/#PetClass","title":"bool <code>PetClass</code>","text":"True if class is a pet class (Shaman, Necromancer, Mage or Beastlord)","tags":["datatype"]},{"location":"reference/data-types/datatype-class/#PureCaster","title":"bool <code>PureCaster</code>","text":"True if class is a pure caster (Cleric, Druid, Shaman, Necromancer, Wizard, Mage or Enchanter)","tags":["datatype"]},{"location":"reference/data-types/datatype-class/#ShamanType","title":"bool <code>ShamanType</code>","text":"True if class is Shaman or Beastlord","tags":["datatype"]},{"location":"reference/data-types/datatype-class/#ShortName","title":"string <code>ShortName</code>","text":"The short name (three letter code) of the class. Ex: <code>RNG</code> for Ranger","tags":["datatype"]},{"location":"reference/data-types/datatype-class/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-class/#class-name-and-shortname-list","title":"Class name and ShortName list:","text":"Name ShortName Bard BRD Beastlord BST Berserker BER Cleric CLR Druid DRU Enchanter ENC Magician MAG Monk MNK Necromancer NEC Paladin PAL Ranger RNG Shadow Knight SHD Shaman SHM Warrior WAR Wizard WIZ Mercenary MER","tags":["datatype"]},{"location":"reference/data-types/datatype-corpse/","title":"<code>corpse</code>","text":"<p>Data related to the current lootable corpse. See Corpse.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-corpse/#inheritance","title":"Inheritance","text":"<p>This type inherits members from spawn.</p> <pre><code>classDiagram\n  spawn &lt;|-- corpse\n  direction RL\n  class spawn {\n  }\n  link spawn \"../datatype-spawn/\"\n  class corpse {\n  }</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-corpse/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-corpse/#Item[N]","title":"item <code>Item[N]</code>","text":"Nth item on the corpse","tags":["datatype"]},{"location":"reference/data-types/datatype-corpse/#Item[name]","title":"item <code>Item[name]</code>","text":"Finds an item by partial name in this corpse (use <code>=&lt;name&gt;</code> for exact match)","tags":["datatype"]},{"location":"reference/data-types/datatype-corpse/#Items","title":"int <code>Items</code>","text":"Number of items on the corpse","tags":["datatype"]},{"location":"reference/data-types/datatype-corpse/#Open","title":"bool <code>Open</code>","text":"Corpse open?","tags":["datatype"]},{"location":"reference/data-types/datatype-corpse/#string-to-string","title":"string <code>To String</code>","text":"Same as Open","tags":["datatype"]},{"location":"reference/data-types/datatype-corpse/#usage","title":"Usage","text":"<p>Example</p> MQScriptLua <pre><code>| Print a message if we have items to loot\n/if (${Corpse.Open} &amp;&amp; ${Corpse.Items}) /echo We are currently looting a corpse with items\n</code></pre> <pre><code>-- Print a message if we have items to loot\nif mq.TLO.Corpse.Open() and mq.TLO.Corpse.Items() &gt; 0 then\n    print('We are currently looting a corpse with items')\nend\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-currentzone/","title":"<code>currentzone</code>","text":"<p>Extends the zone type with additional information about the current zone.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-currentzone/#inheritance","title":"Inheritance","text":"<p>This type inherits members from zone.</p> <pre><code>classDiagram\n  zone &lt;|-- currentzone\n  direction RL\n  class zone {\n  }\n  link zone \"../datatype-zone/\"\n  class currentzone {\n  }</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-currentzone/#members","title":"Members","text":"<p>This type inherits members from zone.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-currentzone/#Dungeon","title":"bool <code>Dungeon</code>","text":"Same as Indoor.","tags":["datatype"]},{"location":"reference/data-types/datatype-currentzone/#ID","title":"int <code>ID</code>","text":"the ID of the zone.","tags":["datatype"]},{"location":"reference/data-types/datatype-currentzone/#Indoor","title":"bool <code>Indoor</code>","text":"True if this is an Indoor zone.","tags":["datatype"]},{"location":"reference/data-types/datatype-currentzone/#MaxClip","title":"float <code>MaxClip</code>","text":"Maximum clip plane allowed in zone.","tags":["datatype"]},{"location":"reference/data-types/datatype-currentzone/#MinClip","title":"float <code>MinClip</code>","text":"Minimum clip plane allowed in zone.","tags":["datatype"]},{"location":"reference/data-types/datatype-currentzone/#Name","title":"string <code>Name</code>","text":"Full zone name.","tags":["datatype"]},{"location":"reference/data-types/datatype-currentzone/#NoBind","title":"bool <code>NoBind</code>","text":"True if binding isn't allowed in this zone outside specified bindable areas.","tags":["datatype"]},{"location":"reference/data-types/datatype-currentzone/#Outdoor","title":"bool <code>Outdoor</code>","text":"True if this is an outdoor zone.","tags":["datatype"]},{"location":"reference/data-types/datatype-currentzone/#ShortName","title":"string <code>ShortName</code>","text":"Short zone name","tags":["datatype"]},{"location":"reference/data-types/datatype-currentzone/#Type","title":"int <code>Type</code>","text":"<p>Zone type</p> Value Meaning 0 Indoor Dungeon 1 Outdoor 2 Outdoor City 3 Dungeon City 4 Indoor City 5 Outdoor Dungeon","tags":["datatype"]},{"location":"reference/data-types/datatype-currentzone/#ZoneType","title":"int <code>ZoneType</code>","text":"Same as Type","tags":["datatype"]},{"location":"reference/data-types/datatype-currentzone/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-currentzone/#usage","title":"Usage","text":"<p>Example</p> MQScriptLua <pre><code>| echo if the current zone is indoors:\n/echo ${Zone.Indoor}\n</code></pre> <pre><code>-- echo if the current zone is indoors:\nprint(mq.TLO.Zone.Indoor())\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-deity/","title":"<code>deity</code> Type","text":"<p>Contains data related to deity members</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-deity/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-deity/#ID","title":"int <code>ID</code>","text":"The deity's ID #","tags":["datatype"]},{"location":"reference/data-types/datatype-deity/#Name","title":"string <code>Name</code>","text":"The full deity name","tags":["datatype"]},{"location":"reference/data-types/datatype-deity/#Team","title":"string <code>Team</code>","text":"The team name","tags":["datatype"]},{"location":"reference/data-types/datatype-deity/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-double/","title":"<code>double</code> Type","text":"<p>Represents a double precision (64-bit) floating point number.</p> <ul> <li>A floating-point number is one which has a decimal component (e.g. 1.01)</li> <li>Members of this DataType generally manipulate the number's precision (i.e. how many decimal places)</li> <li>They all round correctly with the exception of int</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-double/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-double/#Deci","title":"string <code>Deci</code>","text":"The number as a string with one place of precision, i.e. ###.#","tags":["datatype"]},{"location":"reference/data-types/datatype-double/#Centi","title":"string <code>Centi</code>","text":"The number as a string with two places of precision, i.e. ###.##","tags":["datatype"]},{"location":"reference/data-types/datatype-double/#Int","title":"int <code>Int</code>","text":"Integer portion of the number truncated rather than rounded, e.g. 12.779 returns 12","tags":["datatype"]},{"location":"reference/data-types/datatype-double/#Milli","title":"string <code>Milli</code>","text":"The number as a string with three places of precision, i.e. ###.###","tags":["datatype"]},{"location":"reference/data-types/datatype-double/#Precision[#]","title":"string <code>Precision[#]</code>","text":"The number as a string with # places of precision","tags":["datatype"]},{"location":"reference/data-types/datatype-double/#Prettify[precision]","title":"string <code>Prettify[precision]</code>","text":"Pretty print the number with commas, with optional precision (defaults to two decimal points).","tags":["datatype"]},{"location":"reference/data-types/datatype-double/#string-to-string","title":"string <code>To String</code>","text":"Same as Centi","tags":["datatype"]},{"location":"reference/data-types/datatype-dynamiczone/","title":"<code>dynamiczone</code>","text":"<p>Data for the current dynamic zone instance</p> <p>See Also: TLO:DynamicZone</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-dynamiczone/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-dynamiczone/#InRaid","title":"bool <code>InRaid</code>","text":"??","tags":["datatype"]},{"location":"reference/data-types/datatype-dynamiczone/#Leader","title":"dzmember <code>Leader</code>","text":"The leader of the dynamic zone","tags":["datatype"]},{"location":"reference/data-types/datatype-dynamiczone/#LeaderFlagged","title":"bool <code>LeaderFlagged</code>","text":"Returns true if the dzleader can successfully enter the dz (this also means the dz is actually Loaded.)","tags":["datatype"]},{"location":"reference/data-types/datatype-dynamiczone/#MaxMembers","title":"int <code>MaxMembers</code>","text":"Maximum number of characters that can enter this dynamic zone","tags":["datatype"]},{"location":"reference/data-types/datatype-dynamiczone/#MaxTimers","title":"int <code>MaxTimers</code>","text":"The number of timers present in Timers","tags":["datatype"]},{"location":"reference/data-types/datatype-dynamiczone/#Member[#|name]","title":"dzmember <code>Member[#|name]</code>","text":"The dynamic zone member # or name","tags":["datatype"]},{"location":"reference/data-types/datatype-dynamiczone/#Members","title":"int <code>Members</code>","text":"Current number of characters in the dynamic zone","tags":["datatype"]},{"location":"reference/data-types/datatype-dynamiczone/#MinMembers","title":"int <code>MinMembers</code>","text":"Minimum number of members required.","tags":["datatype"]},{"location":"reference/data-types/datatype-dynamiczone/#Name","title":"string <code>Name</code>","text":"The full name of the dynamic zone.","tags":["datatype"]},{"location":"reference/data-types/datatype-dynamiczone/#Timer[#|name]","title":"dztimer <code>Timer[#|name]</code>","text":"Access the list of current lockout timers. This is either an index from 1 to MaxTimers, or a \"Expedition|Event\" combination. Event is optional, but if multiple Expeditions match, the timer with the earliest lockout expiration will be returned.","tags":["datatype"]},{"location":"reference/data-types/datatype-dynamiczone/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-dynamiczone/#usage","title":"Usage","text":"<p>Example</p> <p>Example usage of Timer</p> MQScriptLua <pre><code>| Example output: 2:10:24\n/echo ${DynamicZone.Timer[Nagafen's Lair|Lord Nagafen].Timer.TimeDHM}\n</code></pre> <pre><code>-- Example output: 2:10:24\nprint(mq.TLO.DynamicZone.Timer(\"Nagafen's Lair|Lord Nagafen\").Timer.TimeDHM())\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-dynamiczone/#changelog","title":"Changelog","text":"<ul> <li>January 19<sup>th</sup>, 2022: Added MinMembers</li> <li>July 9<sup>th</sup>, 2021: Added MaxTimers, Timer</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-dzmember/","title":"<code>dzmember</code>","text":"<p>This DataType contains information on the members of the current dynamic zone instance</p> <p>See Also: DataType:dynamiczone, TLO:DynamicZone</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-dzmember/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-dzmember/#Flagged","title":"bool <code>Flagged</code>","text":"Returns true if the dzmember can successfully enter the dz. where x is either index or the name.","tags":["datatype"]},{"location":"reference/data-types/datatype-dzmember/#Name","title":"string <code>Name</code>","text":"The name of the member","tags":["datatype"]},{"location":"reference/data-types/datatype-dzmember/#Status","title":"string <code>Status</code>","text":"The status of the member - one of the following: Unknown, Online, Offline, In Dynamic Zone, Link Dead","tags":["datatype"]},{"location":"reference/data-types/datatype-dzmember/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-dztimer/","title":"<code>dztimer</code>","text":"<p>Provides information about a dynamic zone lockout timer</p> <p>See Also: DataType:dynamiczone, TLO:DynamicZone</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-dztimer/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-dztimer/#ExpeditionName","title":"string <code>ExpeditionName</code>","text":"The name of the expedition","tags":["datatype"]},{"location":"reference/data-types/datatype-dztimer/#EventName","title":"string <code>EventName</code>","text":"The name of the event","tags":["datatype"]},{"location":"reference/data-types/datatype-dztimer/#Timer","title":"timestamp <code>Timer</code>","text":"The timestamp indicating when this lockout expires","tags":["datatype"]},{"location":"reference/data-types/datatype-dztimer/#EventID","title":"int <code>EventID</code>","text":"ID of the event. These values are only unique per Expedition. Non-event lockouts (Replay Timer) will have a -1 event id.","tags":["datatype"]},{"location":"reference/data-types/datatype-dztimer/#string-to-string","title":"string <code>To String</code>","text":"Returns the string formatted as <code>\"ExpeditionName|EventName\"</code> |","tags":["datatype"]},{"location":"reference/data-types/datatype-dztimer/#changelog","title":"Changelog","text":"<ul> <li>July 9<sup>th</sup>, 2021: Initial version</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/","title":"<code>everquest</code>","text":"<p>Data types related to the current EverQuest session.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#CharSelectList","title":"int <code>CharSelectList</code>","text":"Currently returns the zone ID the character is currently in","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#ChatChannel[channelname]","title":"bool <code>ChatChannel[channelname]</code>","text":"Returns TRUE if channelname is joined","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#ChatChannel[#]","title":"string <code>ChatChannel[#]</code>","text":"Returns the name of chat channel #","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#ChatChannels","title":"int <code>ChatChannels</code>","text":"Returns the number of channels currently joined","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#CurrentUI","title":"string <code>CurrentUI</code>","text":"return a string representing the currently loaded UI skin","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#Foreground","title":"bool <code>Foreground</code>","text":"Returns TRUE if EverQuest is in Foreground","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#GameState","title":"string <code>GameState</code>","text":"Shows the current game state. Values: CHARSELECT, INGAME, PRECHARSELECT, UNKNOWN","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#HWND","title":"int64 <code>HWND</code>","text":"Window handle.","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#IsDefaultUILoaded","title":"bool <code>IsDefaultUILoaded</code>","text":"returns a bool true or false if the \"Default\" UI skin is the one loaded","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#LastCommand","title":"string <code>LastCommand</code>","text":"Last command entered","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#LastMouseOver","title":"window <code>LastMouseOver</code>","text":"Returns the last window you moused over","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#LastTell","title":"string <code>LastTell</code>","text":"Name of last person to send you a tell","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#LayoutCopyInProgress","title":"bool <code>LayoutCopyInProgress</code>","text":"Returns TRUE if a layoutcopy is in progress and FALSE if not.","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#LClickedObject","title":"bool <code>LClickedObject</code>","text":"Returns TRUE if an object has been left clicked","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#LoginName","title":"string <code>LoginName</code>","text":"Your station name","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#MaxBGFPS","title":"int <code>MaxBGFPS</code>","text":"Maximum background FPS","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#MaxFPS","title":"int <code>MaxFPS</code>","text":"Maximum foreground FPS","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#MouseX","title":"int <code>MouseX</code>","text":"Mouse's X location","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#MouseY","title":"int <code>MouseY</code>","text":"Mouse's Y location","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#Path","title":"string <code>Path</code>","text":"Path to the Everquest folder","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#PID","title":"int <code>PID</code>","text":"Your current (Process ID)","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#Ping","title":"int <code>Ping</code>","text":"Your current ping","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#Running","title":"int <code>Running</code>","text":"Running time of current MQ2 session, in milliseconds","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#ScreenMode","title":"int <code>ScreenMode</code>","text":"Returns the screenmode as an integer, 2 is Normal and 3 is No Windows","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#Server","title":"string <code>Server</code>","text":"Full name of your server","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#PPriority","title":"int <code>PPriority</code>","text":"Returns the processor priority that Everquest is set to. Values: UNKNOWN, LOW, BELOW NORMAL, NORMAL, ABOVE NORMAL, HIGH, REALTIME","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#UiScale","title":"float <code>UiScale</code>","text":"Returns the current UI scale","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#ValidLoc[coorrdinates]","title":"bool <code>ValidLoc[coorrdinates]</code>","text":"Returns true if the given coordinates are valid.","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#ViewportX","title":"int <code>ViewportX</code>","text":"EverQuest viewport upper left (X) position","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#ViewportXCenter","title":"int <code>ViewportXCenter</code>","text":"EverQuest viewport center (X) position","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#ViewportXMax","title":"int <code>ViewportXMax</code>","text":"EverQuest viewport lower right (X) position","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#ViewportY","title":"int <code>ViewportY</code>","text":"EverQuest viewport upper left (Y) position","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#ViewportYCenter","title":"int <code>ViewportYCenter</code>","text":"EverQuest viewport center (Y) position","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#ViewportYMax","title":"int <code>ViewportYMax</code>","text":"EverQuest viewport lower right (Y) position","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#WinTitle","title":"string <code>WinTitle</code>","text":"Titlebar text of the Everquest window.","tags":["datatype"]},{"location":"reference/data-types/datatype-everquest/#usage","title":"Usage","text":"<p>Example</p> <p>You can place the mouse over a window and then run the following command to see the name of the window that the mouse is hovering over:</p> <pre><code>/echo ${EverQuest.LastMouseOver.Name}\n</code></pre> <p>Example</p> <p>Using EverQuest.ValidLoc:</p> MQScriptLua <pre><code>| Will print TRUE or FALSE if the location is valid\n/echo ${EverQuest.ValidLoc[123 456 789]}\n</code></pre> <pre><code>-- Will print true or false if the location is valid\nprint(mq.TLO.EverQuest.ValidLoc(\"123 456 789\")())\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-evolving/","title":"<code>evolving</code>","text":"<p>A DataType that deals with evolving items.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-evolving/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-evolving/#ExpOn","title":"bool <code>ExpOn</code>","text":"Is evolving item experience turned on for this item?","tags":["datatype"]},{"location":"reference/data-types/datatype-evolving/#ExpPct","title":"float <code>ExpPct</code>","text":"Percentage of experience that the item has gained","tags":["datatype"]},{"location":"reference/data-types/datatype-evolving/#Level","title":"int <code>Level</code>","text":"The level of the evolving item.","tags":["datatype"]},{"location":"reference/data-types/datatype-evolving/#MaxLevel","title":"int <code>MaxLevel</code>","text":"The maximum level of the evolving item","tags":["datatype"]},{"location":"reference/data-types/datatype-evolving/#string-to-string","title":"string <code>To String</code>","text":"Same as ExpOn","tags":["datatype"]},{"location":"reference/data-types/datatype-evolving/#usage","title":"Usage","text":"<p>Example</p> MQScriptLua <pre><code>/echo ${FindItem[Blade of the Eclipse].Evolving.ExpPct}\n</code></pre> <pre><code>print(mq.TLO.FindItem(\"Blade of the Eclipse\").Evolving.ExpPct())\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/","title":"<code>fellowship</code>","text":"<p>Contains all the data about your fellowship</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/#Campfire","title":"bool <code>Campfire</code>","text":"TRUE if campfire is up, FALSE if not","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/#CampfireDuration","title":"ticks <code>CampfireDuration</code>","text":"Time left on current campfire","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/#CampfireX","title":"float <code>CampfireX</code>","text":"Campfire X location","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/#CampfireY","title":"float <code>CampfireY</code>","text":"Campfire Y location","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/#CampfireZ","title":"float <code>CampfireZ</code>","text":"Campfire Z location","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/#CampfireZone","title":"zone <code>CampfireZone</code>","text":"Zone information for the zone that contains your campfire","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/#Exists","title":"bool <code>Exists</code>","text":"Returns TRUE if a fellowship exists.","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/#ID","title":"int <code>ID</code>","text":"Fellowship ID","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/#Leader","title":"string <code>Leader</code>","text":"Fellowship leader's name","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/#Member[name|#]","title":"fellowshipmember <code>Member[name|#]</code>","text":"Member data by name or #","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/#Members","title":"int <code>Members</code>","text":"Number of members in the fellowship","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/#MotD","title":"string <code>MotD</code>","text":"Fellowship Message of the Day","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/#Sharing[N]","title":"bool <code>Sharing[N]</code>","text":"Returns TRUE if exp sharing is enabled for the Nth member","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/#string-to-string","title":"string <code>To String</code>","text":"TRUE if currently in a fellowship, FALSE if not","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowship/#changelog","title":"Changelog","text":"<ul> <li>May 13, 2022: Added Exists</li> <li>December 3<sup>rd</sup>, 2020: Added Sharing</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowshipmember/","title":"<code>fellowshipmember</code>","text":"<p>Contains all the data related to fellowship members</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowshipmember/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowshipmember/#Class","title":"class <code>Class</code>","text":"Member's class","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowshipmember/#LastOn","title":"ticks <code>LastOn</code>","text":"How long since member was last online","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowshipmember/#Level","title":"int <code>Level</code>","text":"Member's level","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowshipmember/#Name","title":"string <code>Name</code>","text":"Member's name","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowshipmember/#Sharing","title":"bool <code>Sharing</code>","text":"TRUE if member has exp sharing enabled","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowshipmember/#Zone","title":"zone <code>Zone</code>","text":"Zone information for the member's zone","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowshipmember/#string-to-string","title":"string <code>To String</code>","text":"player name","tags":["datatype"]},{"location":"reference/data-types/datatype-fellowshipmember/#changelog","title":"Changelog","text":"<ul> <li>March 7<sup>th</sup>, 2021: Added Sharing</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-float/","title":"<code>float</code> Type","text":"<p>Represents a single precision (32-bit) floatiang point number.</p> <ul> <li>A floating-point number is one which has a decimal component (e.g. 1.01)</li> <li>Members of this DataType generally manipulate the number's precision (i.e. how many decimal places)</li> <li>They all round correctly with the exception of int</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-float/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-float/#Centi","title":"string <code>Centi</code>","text":"The number as a string with two places of precision, i.e. ###.##","tags":["datatype"]},{"location":"reference/data-types/datatype-float/#Deci","title":"string <code>Deci</code>","text":"The number as a string with one place of precision, i.e. ###.#","tags":["datatype"]},{"location":"reference/data-types/datatype-float/#Int","title":"int <code>Int</code>","text":"Integer portion of the number truncated rather than rounded, e.g. 12.779 returns 12","tags":["datatype"]},{"location":"reference/data-types/datatype-float/#Milli","title":"string <code>Milli</code>","text":"The number as a string with three places of precision, i.e. ###.###","tags":["datatype"]},{"location":"reference/data-types/datatype-float/#Precision[#]","title":"string <code>Precision[#]</code>","text":"The number as a string with # places of precision","tags":["datatype"]},{"location":"reference/data-types/datatype-float/#Prettify[precision]","title":"string <code>Prettify[precision]</code>","text":"Pretty print the number with commas, with optional precision (defaults to two decimal points).","tags":["datatype"]},{"location":"reference/data-types/datatype-float/#Raw","title":"int <code>Raw</code>","text":"Returns IEEE 754 representation of floating point value.","tags":["datatype"]},{"location":"reference/data-types/datatype-float/#string-to-string","title":"string <code>To String</code>","text":"Same as Centi","tags":["datatype"]},{"location":"reference/data-types/datatype-framelimiter/","title":"<code>framelimiter</code>","text":"<p>Data type to access frame limiter information.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-framelimiter/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-framelimiter/#BackgroundFPS","title":"float <code>BackgroundFPS</code>","text":"Value of the target background fps setting.","tags":["datatype"]},{"location":"reference/data-types/datatype-framelimiter/#ClearScreen","title":"bool <code>ClearScreen</code>","text":"Value of the clear screen when not rendering setting.","tags":["datatype"]},{"location":"reference/data-types/datatype-framelimiter/#CPU","title":"float <code>CPU</code>","text":"Current CPU usage as %","tags":["datatype"]},{"location":"reference/data-types/datatype-framelimiter/#Enabled","title":"bool <code>Enabled</code>","text":"TRUE if the frame limiter feature is currently active.","tags":["datatype"]},{"location":"reference/data-types/datatype-framelimiter/#ForegroundFPS","title":"float <code>ForegroundFPS</code>","text":"Value of the target foreground fps setting.","tags":["datatype"]},{"location":"reference/data-types/datatype-framelimiter/#MinSimulationFPS","title":"float <code>MinSimulationFPS</code>","text":"Value of the minimum simualtion rate setting.","tags":["datatype"]},{"location":"reference/data-types/datatype-framelimiter/#RenderFPS","title":"float <code>RenderFPS</code>","text":"Current graphics scene frame rate (visible fps).","tags":["datatype"]},{"location":"reference/data-types/datatype-framelimiter/#SaveByChar","title":"bool <code>SaveByChar</code>","text":"TRUE if settings for the frame limiter are being saved by character.","tags":["datatype"]},{"location":"reference/data-types/datatype-framelimiter/#SimulationFPS","title":"float <code>SimulationFPS</code>","text":"Current simulation frame rate (game updates per second).","tags":["datatype"]},{"location":"reference/data-types/datatype-framelimiter/#Status","title":"string <code>Status</code>","text":"Either \"Foreground\" or \"Background\".","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/","title":"<code>ground</code>","text":"<p>Represents a ground item.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#DisplayName","title":"float <code>DisplayName</code>","text":"Displays name of the grounspawn","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#Distance","title":"int <code>Distance</code>","text":"Distance from player to ground item","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#Distance3D","title":"int <code>Distance3D</code>","text":"Distance from player to ground item","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#Heading","title":"heading <code>Heading</code>","text":"Ground item is facing this heading","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#HeadingTo","title":"heading <code>HeadingTo</code>","text":"Direction player must move to meet this ground item","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#ID","title":"int <code>ID</code>","text":"Ground item ID (not the same as item ID, this is like spawn ID)","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#LineOfSight","title":"bool <code>LineOfSight</code>","text":"Returns TRUE if ground spawn is in line of sight","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#Name","title":"string <code>Name</code>","text":"Name","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#SubID","title":"int <code>SubID</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#ZoneID","title":"int <code>ZoneID</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#X","title":"float <code>X</code>","text":"X coordinate","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#Y","title":"float <code>Y</code>","text":"Y coordinate","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#Z","title":"float <code>Z</code>","text":"Z coordinate","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#W","title":"float <code>W</code>","text":"X coordinate (Westward-positive)","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#N","title":"float <code>N</code>","text":"Y coordinate (Northward-positive)","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#U","title":"float <code>U</code>","text":"Z coordinate (Upward-positive)","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#First","title":"ground <code>First</code>","text":"First spawn","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#Last","title":"ground <code>Last</code>","text":"Last spawn","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#Next","title":"ground <code>Next</code>","text":"Next spawn","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#Prev","title":"ground <code>Prev</code>","text":"Prev spawn","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#string-to-string","title":"string <code>To String</code>","text":"Same as ID","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#methods","title":"Methods","text":"Name Action DoFace Will cause the toon to face the called for spawn if it exists DoTarget Will cause the toon to target the called for spawn if it exists Grab Picks up the ground spawn Reset Clears the currently selected ground spawn","tags":["datatype"]},{"location":"reference/data-types/datatype-ground/#examples","title":"Examples","text":"<p>Extended the Ground TLO to accept searches</p> <pre><code>/echo The closest ${Ground[brew].DisplayName} is ${Ground[brew].Distance3D} away from you.\n</code></pre> <p>Output: <pre><code>The closest Brew Barrel is 26.4 away from you.\n</code></pre></p> <p>Note that both of the search functions are case insensitive and are sorted by distance closest to you. The only acceptable parameter in the search filter is by name or partial name.</p> <pre><code>/echo ${Ground[egg].Doface.Distance3D}\n</code></pre> <p>Will face the closest item on the ground which has the word \"egg\" in it. and then echo the distance to it in the mq2 window. well if it finds an item with the word \"egg\" in it on the ground that is, otherwise it will just echo NULL .DoFace does NOT target the ground item, it just faces it.</p> <pre><code>/if (${Ground[egg].DoTarget.ID}) /echo we just targeted a ${Ground[egg]}\n</code></pre> <p>Will target the closest item on the ground which has the word \"egg\" in it. and then echo the distance to it in the mq2 window.</p> <pre><code>/if (${Ground[1].Doface.Distance3D}) /echo we just targeted a ${Ground[1].DisplayName}\n</code></pre> <p>Will face the closest item on the ground. and then echo the distance to it in the mq2 window. well if it finds an groundspawn, otherwise it will just echo NULL .DoFace does NOT target the ground item, it just faces it.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-group/","title":"<code>group</code>","text":"<p>Contains details about your group</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#AnyoneMissing","title":"bool <code>AnyoneMissing</code>","text":"True if somebody in the group is offline, in some other zone, or just simply dead.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#CasterMercCount","title":"int <code>CasterMercCount</code>","text":"The number of caster dps mercenaries in your group.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#Cleric","title":"spawn <code>Cleric</code>","text":"The first member of the group that is a cleric.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#GroupSize","title":"int <code>GroupSize</code>","text":"The number of members in your group, including yourself.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#HealerMercCount","title":"int <code>HealerMercCount</code>","text":"The number of healer mercenaries in your group.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#Injured[#]","title":"int <code>Injured[#]</code>","text":"The numbers of people in the group that has an hp percent lower than #.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#Leader","title":"groupmember <code>Leader</code>","text":"The leader of the group.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#LowMana[#]","title":"int <code>LowMana[#]</code>","text":"The number of people in the group that have a mana percent lower than #.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#MainAssist","title":"groupmember <code>MainAssist</code>","text":"The main assist of the group, if one is assigned.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#MainTank","title":"groupmember <code>MainTank</code>","text":"The main tank of the group, if one is assigned.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#MarkNpc","title":"groupmember <code>MarkNpc</code>","text":"The group member who can mark NPCs, if one is assigned.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#MasterLooter","title":"groupmember <code>MasterLooter</code>","text":"The master looter of the group, if one is assigned.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#MeleeMercCount","title":"int <code>MeleeMercCount</code>","text":"The number of melee mercenaries in your group.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#Member[#]","title":"groupmember <code>Member[#]</code>","text":"The Nth member of your group. 0 is always you. 1 is the first person in the group list, etc.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#Members[Name]","title":"int <code>Members[Name]</code>","text":"The group member of your group identified by Name.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#Members","title":"int <code>Members</code>","text":"The total number of group members, excluding yourself.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#MercenaryCount","title":"int <code>MercenaryCount</code>","text":"The total number of mercenaries that are in the group.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#MouseOver","title":"groupmember <code>MouseOver</code>","text":"<p>The name of the group member that the mouse is currently hovering over in the group window, if any.</p> <p>Note</p> <p>You can hover over your own name in the player window where you see your hp and it will return you.</p> Examples <pre><code>/echo Im hovering my mouse over ${Group.MouseOver.Name} which has ths spawnid: ${Group.MouseOver.ID}\n</code></pre> <pre><code>/bct ${Group.MouseOver.Name} hi there I dont want to change my target just to tell you: please heal ${Me.Mame}\n</code></pre> <pre><code>/bct soandso //casting \"Complete Heal\" -targetid|${Group.MouseOver.ID}\n</code></pre> <pre><code>/bct ${Group.MouseOver.CleanName} //setprio 2\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#Puller","title":"groupmember <code>Puller</code>","text":"The puller of the group, if one is assigned.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#TankMercCount","title":"int <code>TankMercCount</code>","text":"The number of tank mercenaries in your group.","tags":["datatype"]},{"location":"reference/data-types/datatype-group/#string-to-string","title":"string <code>To String</code>","text":"The number of members in the group, as a string.","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/","title":"<code>groupmember</code>","text":"<p>Contains data on a specific group member</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#members","title":"Members","text":"<p>This type inherits members from spawn if the member is in the current zone.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#Index","title":"int <code>Index</code>","text":"Which number in the group the member is","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#Leader","title":"bool <code>Leader</code>","text":"TRUE if the member is the group's leader, FALSE otherwise","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#Level","title":"int <code>Level</code>","text":"The member's level","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#MainAssist","title":"bool <code>MainAssist</code>","text":"TRUE if the member is designated as the group's Main Assist, FALSE otherwise","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#MainTank","title":"bool <code>MainTank</code>","text":"TRUE if the member is designated as the group's Main Tank, FALSE otherwise","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#MasterLooter","title":"bool <code>MasterLooter</code>","text":"TRUE if the member is designated as the group's Master Looter, FALSE otherwise","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#MarkNpc","title":"bool <code>MarkNpc</code>","text":"TRUE if the member is designated as the group roule Mark NPC, FALSE otherwise","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#Mercenary","title":"bool <code>Mercenary</code>","text":"TRUE if the member is a mercenary, FALSE otherwise","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#Name","title":"string <code>Name</code>","text":"The name of the group member. This works even if they are not in the same zone as you.","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#Offline","title":"bool <code>Offline</code>","text":"TRUE if the member is offline and FALSE if online","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#OtherZone","title":"bool <code>OtherZone</code>","text":"TRUE if the member is online but in another zone and FALSE if online and in same zone as you.","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#PctAggro","title":"int <code>PctAggro</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#Present","title":"bool <code>Present</code>","text":"TRUE if the member is online and in same zone and FALSE if online and not in same zone as you.","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#Puller","title":"bool <code>Puller</code>","text":"TRUE if the member is designated as the group's Puller, FALSE otherwise","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#Spawn","title":"spawn <code>Spawn</code>","text":"Accesses the group member's spawn. Not all members will have a spawn (if they are out of the zone).","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-groupmember/#examples","title":"Examples","text":"<pre><code>/echo ${Group.Member[0].Leader}\n</code></pre> <p>Echo TRUE if you are Group Leader.</p> <pre><code>/echo ${Group.Member[3].Puller}\n</code></pre> <p>Echo TRUE if Group Member 3 is marked as Role Puller</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-heading/","title":"<code>heading</code>","text":"<p>Represents a direction on a compass.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-heading/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-heading/#Clock","title":"int <code>Clock</code>","text":"The nearest clock direction, e.g. 1-12","tags":["datatype"]},{"location":"reference/data-types/datatype-heading/#Degrees","title":"float <code>Degrees</code>","text":"Heading in degrees (same as casting to float)","tags":["datatype"]},{"location":"reference/data-types/datatype-heading/#DegreesCCW","title":"float <code>DegreesCCW</code>","text":"Heading in degrees counter-clockwise (the way the rest of MQ2 and EQ uses it)","tags":["datatype"]},{"location":"reference/data-types/datatype-heading/#Name","title":"string <code>Name</code>","text":"The long compass direction, eg. \"south\", \"south by southeast\"","tags":["datatype"]},{"location":"reference/data-types/datatype-heading/#ShortName","title":"string <code>ShortName</code>","text":"The short compass direction, eg. \"S\", \"SSE\"","tags":["datatype"]},{"location":"reference/data-types/datatype-heading/#string-to-string","title":"string <code>(To String)</code>","text":"Same as ShortName","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/","title":"<code>hotbuttonwindow</code>","text":"<p>Data related to hotbuttons</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#AltAbility","title":"altability <code>AltAbility</code>","text":"If this hotbutton activates an alternate ability, this will return the alternate ability that is activated by pressing this button.","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#ButtonIndex","title":"int <code>ButtonIndex</code>","text":"<p>Returns the index of the button in the hotbutton page it resides on.</p> <p>e.g., if this hotbutton is the third button on the page, it will return 3.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#BarIndex","title":"int <code>BarIndex</code>","text":"<p>Returns which bar this button resides on.</p> <p>e.g. If this hotbutton is on the first (main) hotbutton bar, it will return 1.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#IconSlot","title":"int <code>IconSlot</code>","text":"<p>Returns the ID of the icon that is displayed by this hotbutton, if any. Which icon this identifies depends on the value of <code>IconType</code>.</p> <p>If no icon is present, this will return -1.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#IconType","title":"int <code>IconType</code>","text":"<p>Returns the type of icon that is displayed by this hotbutton. Each type of icon is read from a specific icon texture atlas.</p> <p>If no icon is present, this will return -1.</p> Value Meaning Texture Atlas -1 No icon n/a 0 Item icon A_DragItem 1 Spell Icons A_SpellGems 2 Menu Icons A_MenuIcons","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#Item","title":"item <code>Item</code>","text":"An item that is linked to the hot button","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#ItemGuid","title":"string <code>ItemGuid</code>","text":"<p>Unique identifier of the item associated with this hotbutton, if any.</p> <p>If no item is associated with this hotbutton, this will return an empty string.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#ItemId","title":"int <code>ItemId</code>","text":"<p>ID of the item associated with this hotbutton.</p> <p>If no item is associated with this hotbutton, this will return 0.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#ItemName","title":"string <code>ItemName</code>","text":"<p>Name of the item associated with this hotbutton.</p> <p>If no item is associated with this hotbutton, this will return an empty string.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#Label","title":"string <code>Label</code>","text":"Display label for this hotbutton.","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#PageIndex","title":"int <code>PageIndex</code>","text":"Returns the index of the page of the hotbar that this button resides on.","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#Slot","title":"int <code>Slot</code>","text":"<p>The meaning of this value depends on the type of hotbutton. The type of hotbutton can be determined with the <code>Type</code> member.</p> <p>See HotButton Types for the meaning of the Slot parameter.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#Social","title":"social <code>Social</code>","text":"Returns the social if this hotbutton is associated with a social. Otherwise returns NULL.","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#Spell","title":"string <code>Spell</code>","text":"<p>If the hotbutton is a spell gem, this will return the associated spell.</p> <p>If the hottbuton is an alternate ability, this will return the spell associated with the alternate ability.</p> <p>Otherwise, returns NULL.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#Type","title":"int <code>Type</code>","text":"Returns the type of hotbutton. See HotButton Types.","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#TypeName","title":"string <code>TypeName</code>","text":"Returns the type name of hotbutton. See HotButton Types.","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#methods","title":"Methods","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#Activate","title":"<code>Activate</code>","text":"<p>Activates the hotbutton as if it were clicked.</p> <p>Example</p> <p>Activate the first hotbutton on the first hotbar</p> LuaMQScript <pre><code>mq.TLO.Window(\"HotButtonWnd/HB_Button1\").HotButton.Activate()\n</code></pre> <pre><code>/invoke ${Window[HotButtonWnd/HB_Button1].HotButton.Activate}\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#hotbutton-types","title":"HotButton Types","text":"<p>Each hotbutton has a type that determines what it is associated with. The type also determines the meaning of the Slot</p> Type Type Name Contents Slot 0 None Empty hotbutton n/a 1 WeaponSlot The \"Melee Attack\" or \"Range Attack\" button 0 = melee attack, 1 = range attack 2 CombatSkill unused (deprecated) n/a 3 Ability unused (deprecated) n/a 4 Social Social macro or an AltAbility button 0-119 = social macro. 120+ = Alt ability (subtract 120 to get ability id) 5 InventorySlot An inventory slot Invslot id 6 MenuButton Menu item from the EQ menu Menu item id 7 SpellGem Memorized spell gem Spell gem slot number 8 PetCommand Pet command from the pet window Which pet command 9 Skill Skill or innate ability 0-100 = skill by id, 101-125 = innate skill 10 MeleeAbility unused (deprecated) n/a 11 LeadershipAbility Leadership ability button (emu only) First 3 bits (Slot &amp; 7) is the button number (1, 2, 3). Shift right 3 bits to get the leader ability id. 12 ItemLink A specific item Not used (uses item guid/id instead) 13 KronoSlot The krono slot n/a 14 Command Keybind command ID of the command 15 CombatAbility Combat ability Spell ID of the combat ability 16 MountLink Item link from mount keyring Not used (uses item guid/id instead) 17 IllusionLink Item link from illusion keyring Not used (uses item guid/id instead) 18 FamiliarLink Item link from familiar keyring Not used (uses item guid/id instead) 19 TeleportationLink Item link from teleportation keyring Not used (uses item guid/id instead)","tags":["datatype"]},{"location":"reference/data-types/datatype-hotbuttonwindow/#examples","title":"Examples","text":"<p>To access a hot button, go through the Window TLO:</p> <p>Example</p> <pre><code>&gt; /echo ${Window[HotButtonWnd2/HB_Button6].HotButton.Label}\nHarm Touch\n&gt; /echo ${Window[HotButtonWnd2/HB_Button6].HotButton.Type}\nSocial\n&gt; /echo ${Window[HotButtonWnd2/HB_Button6].HotButton.AltAbility}\n6000\n&gt; /echo ${Window[HotButtonWnd2/HB_Button6].HotButton.Spell}\nHarm Touch XXXII\n</code></pre> <p>The Window Inspector can be used to identify hotbars and hotbuttons.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-ini/","title":"<code>ini</code>","text":"<p>This is the type for an ini that you have referenced without an Index.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-ini/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-ini/#File","title":"inifile <code>File</code>","text":"<p>The ini file you would like to reference. \".ini\" is appended if there is no extension.</p> <p>Relative and absolute paths are allowed. Searching is performed using the macro directory and the config directory for relative paths.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-inifile/","title":"<code>inifile</code>","text":"<p>This is the type for the ini file that was referenced from TLO:Ini</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-inifile/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-inifile/#Exists","title":"bool <code>Exists</code>","text":"Whether the ini file exists or not.","tags":["datatype"]},{"location":"reference/data-types/datatype-inifile/#Section[opt:","title":"inifilesection <code>Section[opt: Section]</code>","text":"<p>A reference to the named or unnamed section of this ini file.</p> <p>The index is optional. Passing an index means it will search for matches to that index. Not passing an index references all sections for operations that allow it.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-inifile/#examples","title":"Examples","text":"<p>Example</p> <p>Does the file \"sample.ini\" exist?</p> MQScriptLua <pre><code>/echo ${Ini.File[sample].Exists}\n</code></pre> <pre><code>mq.TLO.Ini.File(\"sample\").Exists()\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-inifilesection/","title":"<code>inifilesection</code>","text":"<p>This is the type for the referenced section of an ini file.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-inifilesection/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-inifilesection/#Count","title":"int <code>Count</code>","text":"How many sections matching the Section[] index exist.","tags":["datatype"]},{"location":"reference/data-types/datatype-inifilesection/#Exists","title":"bool <code>Exists</code>","text":"Whether a specific section exists.","tags":["datatype"]},{"location":"reference/data-types/datatype-inifilesection/#Key[opt:","title":"inifilesectionkey <code>Key[opt: Key]</code>","text":"<p>A reference to the named or unnamed key in this specific ini file section.</p> <p>The index is optional. Passing an index means it will reference all keys that match that index. Not passing an index references all keys for operations that allow it.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-inifilesection/#examples","title":"Examples","text":"<p>Given the sample.ini file:</p> <pre><code>[Section1]\nKey1=foo\nKey2=bar\n[Section1]\nKey1=bar\nKey2=foo\n[Section2]\nKey=foo\nKey=bar\nKey=foobar\n</code></pre> <p>Example</p> MQScriptLua <p>How many sections are there?</p> <pre><code>| Prints 3\n/echo ${Ini.File[Sample].Section.Count}\n</code></pre> <p>How many sections named \"Section1\" are there?</p> <pre><code>| Orints 2\n/echo ${Ini.File[Sample].Section[Section1].Count}\n</code></pre> <p>Does \"Section3\" exist?</p> <pre><code>| Prints FALSE\n/echo ${Ini.File[Sample].Section[Section3].Exists}\n</code></pre> <p>How many sections are there?</p> <pre><code>-- prints 3\nprint(mq.TLO.Ini.File(\"Sample\").Section.Count())\n</code></pre> <p>How many sections named \"Section1\" are there?</p> <pre><code>-- prints 2\nprint(mq.TLO.Ini.File(\"Sample\").Section(\"Section1\").Count())\n</code></pre> <p>Does \"Section3\" exist?</p> <pre><code>-- prints false\nprint(mq.TLO.Ini.File(\"Sample\").Section(\"Section3\").Exists())\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-inifilesectionkey/","title":"<code>inifilesectionkey</code>","text":"<p>This is the type for the referenced key in a specific section of an ini file.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-inifilesectionkey/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-inifilesectionkey/#Count","title":"int <code>Count</code>","text":"How many keys matching the Key[] index exist.","tags":["datatype"]},{"location":"reference/data-types/datatype-inifilesectionkey/#Exists","title":"bool <code>Exists</code>","text":"Whether a specific key exists.","tags":["datatype"]},{"location":"reference/data-types/datatype-inifilesectionkey/#Value","title":"string <code>Value</code>","text":"The value for a specific key.  Accepts an Index to allow for returning a value if the key does not exist","tags":["datatype"]},{"location":"reference/data-types/datatype-inifilesectionkey/#KeyAtIndex","title":"string <code>KeyAtIndex</code>","text":"The name of the key at the specified index","tags":["datatype"]},{"location":"reference/data-types/datatype-inifilesectionkey/#ValueAtIndex","title":"string <code>ValueAtIndex</code>","text":"The value of the entry at the specified index","tags":["datatype"]},{"location":"reference/data-types/datatype-inifilesectionkey/#examples","title":"Examples","text":"<p>Given the sample.ini file:</p> <pre><code>[Section1]\nKey1=foo\nKey2=bar\n[Section2]\nKey=foo\nKey=bar\nKey=foobar\nKey4=foobarfour\n</code></pre> <p>Example</p> MQScriptLua <p>How many keys are there in Section1?</p> <pre><code>/echo ${Ini.File[Sample].Section[Section1].Key.Count}\n2\n</code></pre> <p>How many keys named \"Key\" are there in Section2?</p> <pre><code>/echo ${Ini.File[Sample].Section[Section2].Key[Key].Count}\n3\n</code></pre> <p>What is the value of Key1 in Section1?</p> <pre><code>/echo ${Ini.File[Sample].Section[Section1].Key[Key1].Value}\nfoo\n</code></pre> <p>What is the value of Key in Section2?</p> <pre><code>/echo ${Ini.File[Sample].Section[Section2].Key[Key].Value}\nfoo\n</code></pre> <p>What is the value of the 2<sup>nd</sup> key named \"Key\" in Section 2?</p> <pre><code>/echo ${Ini.File[Sample].Section[Section2].Key[Key].ValueAtIndex[2]}\nbar\n</code></pre> <p>Get the value of Section2, Key5 and if it doesn't exist, return \"foobarfive\":</p> <pre><code>/echo ${Ini.File[Sample].Section[Section2].Key[Key5].Value[foobarfive]}\nfoobarfive\n</code></pre> <p>How many keys are there in Section1?</p> <pre><code>print(mq.TLO.Ini.File(\"Sample\").Section(\"Section1\").Key.Count())\n2\n</code></pre> <p>How many keys named \"Key\" are there in Section2?</p> <pre><code>print(mq.TLO.Ini.File(\"Sample\").Section(\"Section2\").Key(\"Key\").Count())\n3\n</code></pre> <p>What is the value of Key1 in Section1?</p> <pre><code>print(mq.TLO.Ini.File(\"Sample\").Section(\"Section1\").Key(\"Key1\").Value())\nfoo\n</code></pre> <p>What is the value of Key in Section2?</p> <pre><code>print(mq.TLO.Ini.File(\"Sample\").Section(\"Section2\").Key(\"Key\").Value())\nfoo\n</code></pre> <p>What is the value of the 2<sup>nd</sup> key named \"Key\" in Section 2?</p> <pre><code>print(mq.TLO.Ini.File(\"Sample\").Section(\"Section2\").Key(\"Key\").ValueAtIndex(2))\nbar\n</code></pre> <p>Get the value of Section2, Key5 and if it doesn't exist, return \"foobarfive\":</p> <pre><code>print(mq.TLO.Ini.File(\"Sample\").Section(\"Section2\").Key(\"Key5\").Value(\"foobarfive\"))\nfoobarfive\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-int/","title":"<code>int</code> Type","text":"<p>Represents a 32-bit integer. Can hold values from -2,147,483,648 to 2,147,483,647.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-int/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-int/#Float","title":"float <code>Float</code>","text":"The number as a float (123 is represented as 123.0)","tags":["datatype"]},{"location":"reference/data-types/datatype-int/#Double","title":"double <code>Double</code>","text":"The number as a double (123 is represented as 123.0)","tags":["datatype"]},{"location":"reference/data-types/datatype-int/#Hex","title":"string <code>Hex</code>","text":"The hex value of the integer (10 is represented as 0xA)","tags":["datatype"]},{"location":"reference/data-types/datatype-int/#Reverse","title":"int <code>Reverse</code>","text":"Endianness reversed","tags":["datatype"]},{"location":"reference/data-types/datatype-int/#LowPart","title":"int <code>LowPart</code>","text":"Lower 16-bits of the value.","tags":["datatype"]},{"location":"reference/data-types/datatype-int/#HighPart","title":"int <code>HighPart</code>","text":"Upper 16-bits of the value.","tags":["datatype"]},{"location":"reference/data-types/datatype-int/#Prettify[precision]","title":"string <code>Prettify[precision]</code>","text":"Pretty print the number with commas, with optional precision","tags":["datatype"]},{"location":"reference/data-types/datatype-int/#string-to-string","title":"string <code>(To String)</code>","text":"The number as a string","tags":["datatype"]},{"location":"reference/data-types/datatype-int64/","title":"<code>int64</code> Type","text":"<p>Represents a 64-bit integer. Can hold values from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-int64/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-int64/#Float","title":"float <code>Float</code>","text":"The number as a float (123 is represented as 123.0)","tags":["datatype"]},{"location":"reference/data-types/datatype-int64/#Double","title":"double <code>Double</code>","text":"The number as a double (123 is represented as 123.0)","tags":["datatype"]},{"location":"reference/data-types/datatype-int64/#Hex","title":"string <code>Hex</code>","text":"The hex value of the integer (10 is represented as 0xA)","tags":["datatype"]},{"location":"reference/data-types/datatype-int64/#Reverse","title":"int64 <code>Reverse</code>","text":"Endianness reversed","tags":["datatype"]},{"location":"reference/data-types/datatype-int64/#LowPart","title":"int <code>LowPart</code>","text":"Lower 32-bits of the value.","tags":["datatype"]},{"location":"reference/data-types/datatype-int64/#HighPart","title":"int <code>HighPart</code>","text":"Upper 32-bits of the value.","tags":["datatype"]},{"location":"reference/data-types/datatype-int64/#Prettify[precision]","title":"string <code>Prettify[precision]</code>","text":"Pretty print the number with commas, with optional precision","tags":["datatype"]},{"location":"reference/data-types/datatype-int64/#string-to-string","title":"string <code>(To String)</code>","text":"The number as a string","tags":["datatype"]},{"location":"reference/data-types/datatype-inventory/","title":"<code>inventory</code>","text":"<p>This is the type for all things inventory related.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-inventory/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-inventory/#Bank","title":"bank <code>Bank</code>","text":"Your bank, only including the primary slots and currencies (not including shared or other features)","tags":["datatype"]},{"location":"reference/data-types/datatype-invslot/","title":"<code>invslot</code>","text":"<p>Data related to an inventory slot.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-invslot/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-invslot/#ID","title":"int <code>ID</code>","text":"ID of this item slot (usable directly by /itemnotify)","tags":["datatype"]},{"location":"reference/data-types/datatype-invslot/#Item","title":"item <code>Item</code>","text":"Item data for the item in this slot","tags":["datatype"]},{"location":"reference/data-types/datatype-invslot/#Name","title":"string <code>Name</code>","text":"For inventory slots not inside packs, the slot name, otherwise NULL","tags":["datatype"]},{"location":"reference/data-types/datatype-invslot/#Pack","title":"invslot <code>Pack</code>","text":"Container that must be opened to access the slot with /itemnotify","tags":["datatype"]},{"location":"reference/data-types/datatype-invslot/#Slot","title":"int <code>Slot</code>","text":"Slot number inside the pack which holds the item, otherwise NULL","tags":["datatype"]},{"location":"reference/data-types/datatype-invslot/#string-to-string","title":"string <code>To String</code>","text":"Same as ID","tags":["datatype"]},{"location":"reference/data-types/datatype-invslot/#example","title":"Example","text":"<p>Example</p> <p>Bag is a defined variable in a for loop in this case:</p> MQScriptLua <pre><code>/if (${InvSlot[pack${Bag}].Item.Item[${Slot}].NoDrop}) {\n    /echo I found a No Drop Item: \\ag${InvSlot[pack${Bag}].Item.Item[${Slot}].Name}\n    /return\n}\n</code></pre> <pre><code>local item = mq.TLO.InvSlot(\"pack\" .. Bag).Item.Item(Slot)\nif item.NoDrop() then\n    printf(\"I found a No Drop Item: \\ag%s\\ax\", item.Name())\n    return\nend\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-invslotwindow/","title":"<code>invslotwindow</code>","text":"<p>Contains information related to the specified inventory slot</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-invslotwindow/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-invslotwindow/#Background","title":"string <code>Background</code>","text":"Background image for the slot","tags":["datatype"]},{"location":"reference/data-types/datatype-invslotwindow/#FindSelected","title":"bool <code>FindSelected</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-invslotwindow/#HotButton","title":"bool <code>HotButton</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-invslotwindow/#InventorySlotLinked","title":"bool <code>InventorySlotLinked</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-invslotwindow/#ItemLocation","title":"int <code>ItemLocation</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-invslotwindow/#ItemIndexSlot","title":"int <code>ItemIndexSlot</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-invslotwindow/#Item","title":"item <code>Item</code>","text":"The item object of the slot","tags":["datatype"]},{"location":"reference/data-types/datatype-invslotwindow/#ItemOffsetX","title":"int <code>ItemOffsetX</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-invslotwindow/#ItemOffsetY","title":"int <code>ItemOffsetY</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-invslotwindow/#ItemTexture","title":"string <code>ItemTexture</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-invslotwindow/#Mode","title":"int <code>Mode</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-invslotwindow/#Quantity","title":"int <code>Quantity</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-invslotwindow/#Selected","title":"bool <code>Selected</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-invslotwindow/#Text","title":"string <code>Text</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/","title":"<code>item</code> Type","text":"<p>Contains the properties that describe an item.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#AC","title":"int <code>AC</code>","text":"AC value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Accuracy","title":"int <code>Accuracy</code>","text":"Accuracy","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#AGI","title":"int <code>AGI</code>","text":"AGI value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Attack","title":"int <code>Attack</code>","text":"Attack value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Attunable","title":"bool <code>Attunable</code>","text":"Attunable?","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#AugRestrictions","title":"int <code>AugRestrictions</code>","text":"Augment Restrictions","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Augs","title":"int <code>Augs</code>","text":"Number of augs on this item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#AugSlot","title":"augtype <code>AugSlot</code>","text":"Retrieve the augment in the specified slot number.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#AugSlot1","title":"int <code>AugSlot1</code>","text":"Returns the type of agument in slot 1","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#AugSlot2","title":"int <code>AugSlot2</code>","text":"Returns the type of agument in slot 2","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#AugSlot3","title":"int <code>AugSlot3</code>","text":"Returns the type of agument in slot 3","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#AugSlot4","title":"int <code>AugSlot4</code>","text":"Returns the type of agument in slot 4","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#AugSlot5","title":"int <code>AugSlot5</code>","text":"Returns the type of agument in slot 5","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#AugSlot6","title":"int <code>AugSlot6</code>","text":"Returns the type of agument in slot 6","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#AugType","title":"int <code>AugType</code>","text":"Augmentation slot type mask.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Avoidance","title":"int <code>Avoidance</code>","text":"Avoidance","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#BaneDMG","title":"<code>BaneDMG</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#BaneDMGType","title":"<code>BaneDMGType</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#BuyPrice","title":"int64 <code>BuyPrice</code>","text":"The cost to buy this item from active merchant","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#CanUse","title":"bool <code>CanUse</code>","text":"TRUE if you can use the item, otherwise FALSE","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#CastTime","title":"float <code>CastTime</code>","text":"Spell effect's cast time (in seconds)","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#CHA","title":"int <code>CHA</code>","text":"CHA value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Charges","title":"int <code>Charges</code>","text":"Charges","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Clairvoyance","title":"int <code>Clairvoyance</code>","text":"Clairvoyance","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Class[N]","title":"string <code>Class[N]</code>","text":"Returns the Nth long class name of the listed classes on an item. Items suitable for ALL classes will effectively have all 17 classes listed.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Classes","title":"int <code>Classes</code>","text":"The number of classes that can use the item. Items suitable for ALL classes will return 16.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Clicky","title":"itemspell <code>Clicky</code>","text":"Activatable spell effect, if any.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Collectible","title":"bool <code>Collectible</code>","text":"TRUE if the item is a collectible, otherwise FALSE","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Combinable","title":"<code>Combinable</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#CombatEffects","title":"int <code>CombatEffects</code>","text":"CombatEffects","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Container","title":"int <code>Container</code>","text":"Number of slots, if this is a container","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#ContentSize","title":"int <code>ContentSize</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Damage","title":"int <code>Damage</code>","text":"Base Damage of the item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#DamageShieldMitigation","title":"int <code>DamageShieldMitigation</code>","text":"Damage Shield Mitigation","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#DamShield","title":"int <code>DamShield</code>","text":"Damage Shield value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Deities","title":"int <code>Deities</code>","text":"The number of deities that can use the item. Items with no deity restrictions will return 0.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Deity[N]","title":"string <code>Deity[N]</code>","text":"Returns the Nth deity of the listed deities on an item. Items with no deity restrictions will return NULL for all values of N.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Delay","title":"<code>Delay</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#DEX","title":"int <code>DEX</code>","text":"DEX value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#DMGBonus","title":"<code>DMGBonus</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#DMGBonusType","title":"string <code>DMGBonusType</code>","text":"\"None\", \"Magic\", \"Fire\", \"Cold\", \"Poison\", \"Disease\"","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#DoTShielding","title":"int <code>DoTShielding</code>","text":"DoT Shielding","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#EffectType","title":"string <code>EffectType</code>","text":"Spell effect type (see below for spell effect types)","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Endurance","title":"int <code>Endurance</code>","text":"Endurance","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#EnduranceRegen","title":"int <code>EnduranceRegen</code>","text":"Endurance regen","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Evolving","title":"evolving <code>Evolving</code>","text":"Does this item have Evolving experience on?","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Expendable","title":"bool <code>Expendable</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Familiar","title":"itemspell <code>Familiar</code>","text":"Familiar spell effect, if any.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#FirstFreeSlot","title":"int <code>FirstFreeSlot</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Focus","title":"itemspell <code>Focus</code>","text":"First focus effect, if any.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Focus2","title":"itemspell <code>Focus2</code>","text":"Second focus effect, if any.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#FocusID","title":"<code>FocusID</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#FreeStack","title":"int <code>FreeStack</code>","text":"<p>The number of items needed to fill all the stacks of the item you have (with a stacksize of 20).</p> <p>If you have 3 stacks (1, 10, 20 in those stacks), you have room for 60 total and you have 31 on you, so FreeStack would return 29.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Haste","title":"int <code>Haste</code>","text":"Haste value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#HealAmount","title":"int <code>HealAmount</code>","text":"HealAmount (regen?)","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Heirloom","title":"bool <code>Heirloom</code>","text":"<p>::   ???</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#HeroicAGI","title":"int <code>HeroicAGI</code>","text":"Heroic AGI value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#HeroicCHA","title":"int <code>HeroicCHA</code>","text":"Heroic CHA value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#HeroicDEX","title":"int <code>HeroicDEX</code>","text":"Heroic DEX value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#HeroicINT","title":"int <code>HeroicINT</code>","text":"Heroic INT value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#HeroicSTA","title":"int <code>HeroicSTA</code>","text":"Heroic STA value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#HeroicSTR","title":"int <code>HeroicSTR</code>","text":"Heroic STR value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#HeroicSvCold","title":"int <code>HeroicSvCold</code>","text":"Heroic SvCold value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#HeroicSvCorruption","title":"int <code>HeroicSvCorruption</code>","text":"Heroic SvCorruption value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#HeroicSvDisease","title":"int <code>HeroicSvDisease</code>","text":"Heroic SvDisease value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#HeroicSvFire","title":"int <code>HeroicSvFire</code>","text":"Heroic SvFire value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#HeroicSvMagic","title":"int <code>HeroicSvMagic</code>","text":"Heroic SvMagic value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#HeroicSvPoison","title":"int <code>HeroicSvPoison</code>","text":"Heroic SvPoison value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#HeroicWIS","title":"int <code>HeroicWIS</code>","text":"Heroic WIS value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#HP","title":"int <code>HP</code>","text":"HP value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#HPRegen","title":"int <code>HPRegen</code>","text":"HPRegen value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Icon","title":"int <code>Icon</code>","text":"Item Icon","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#ID","title":"int <code>ID</code>","text":"Item ID","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#IDFile","title":"<code>IDFile</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#IDFile2","title":"<code>IDFile2</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Illusion","title":"itemspell <code>Illusion</code>","text":"Illusion spell effect, if any.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#InstrumentMod","title":"float <code>InstrumentMod</code>","text":"Instrument Modifier Value","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#InstrumentType","title":"<code>InstrumentType</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#INT","title":"int <code>INT</code>","text":"INT value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#InvSlot","title":"int <code>InvSlot</code>","text":"Inventory Slot Number (Historic and now deprecated, use ItemSlot and ItemSlot2)","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Item[N]","title":"item <code>Item[N]</code>","text":"Item in Nth slot, if this is a container or has augs","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#ItemDelay","title":"float <code>ItemDelay</code>","text":"Returns the delay of the weapon","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#ItemLink[CLICKABLE]","title":"string <code>ItemLink[CLICKABLE]</code>","text":"just prints the actual hexlink for an item (not clickable) unless [CLICKABLE] is included","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Items","title":"int <code>Items</code>","text":"Number of items, if this is a container.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#ItemSlot","title":"int <code>ItemSlot</code>","text":"Item Slot number see Slot Names","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#ItemSlot2","title":"int <code>ItemSlot2</code>","text":"Item Slot subnumber see Slot Names","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#LDoNCost","title":"<code>LDoNCost</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#LDoNTheme","title":"string <code>LDoNTheme</code>","text":"\"All\", \"Deepest Guk\", \"Miragul's\", \"Mistmoore\", \"Rujarkian\", \"Takish\", \"Unknown\"","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Level","title":"<code>Level</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Light","title":"<code>Light</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Lore","title":"bool <code>Lore</code>","text":"Lore?","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#LoreEquipped","title":"bool <code>LoreEquipped</code>","text":"Lore Equipped?","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#LoreText","title":"<code>LoreText</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Luck","title":"int <code>Luck</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Magic","title":"bool <code>Magic</code>","text":"Magic?","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Mana","title":"int <code>Mana</code>","text":"Mana value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#ManaRegen","title":"int <code>ManaRegen</code>","text":"ManaRegen value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#MaxLuck","title":"int <code>MaxLuck</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#MaxPower","title":"int <code>MaxPower</code>","text":"Max power on an power source","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#MerchQuantity","title":"int <code>MerchQuantity</code>","text":"Quantity of item active merchant has","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#MinLuck","title":"int <code>MinLuck</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Mount","title":"itemspell <code>Mount</code>","text":"Mount spell effect, if any.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Name","title":"string <code>Name</code>","text":"Name","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#NoDestroy","title":"bool <code>NoDestroy</code>","text":"<p>:</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#NoDrop","title":"bool <code>NoDrop</code>","text":"No Trade?","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#NoRent","title":"bool <code>NoRent</code>","text":"Temporary?","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#NoTrade","title":"bool <code>NoTrade</code>","text":"Synonym for NoDrop","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Open","title":"int <code>Open</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#OrnamentationIcon","title":"int <code>OrnamentationIcon</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#PctPower","title":"float <code>PctPower</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#PendingLore","title":"<code>PendingLore</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Power","title":"int <code>Power</code>","text":"Power left on power source","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Prestige","title":"bool <code>Prestige</code>","text":"Prestige item?","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Proc","title":"itemspell <code>Proc</code>","text":"Combat proc effect.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#ProcRate","title":"<code>ProcRate</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Purity","title":"int <code>Purity</code>","text":"Purity of item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Quality","title":"<code>Quality</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Quest","title":"bool <code>Quest</code>","text":"Quest item?","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Race[N]","title":"string <code>Race[N]</code>","text":"Returns the Nth long race name of the listed races on an item. Items suitable for all races will effectively have all 15 races listed.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Races","title":"int <code>Races</code>","text":"The number of races that can use the item. Items suitable for ALL races will return 15.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Range","title":"int <code>Range</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#RecommendedLevel","title":"int <code>RecommendedLevel</code>","text":"Returns the Recommended Level of an item. Items with no recommended level will return 0.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#RefCount","title":"int <code>RefCount</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#RequiredLevel","title":"int <code>RequiredLevel</code>","text":"Returns the Required Level of an item. Items with no required level will return 0.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Scroll","title":"itemspell <code>Scroll</code>","text":"Scroll effect, if any.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#SellPrice","title":"int <code>SellPrice</code>","text":"Price to sell this item at this merchant","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Shielding","title":"int <code>Shielding</code>","text":"Shielding","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Size","title":"int <code>Size</code>","text":"Item size:  1 SMALL  2 MEDIUM  3 LARGE  4 GIANT","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#SizeCapacity","title":"int <code>SizeCapacity</code>","text":"<p>If item is a container, size of items it can hold.</p> <p>| Value | Meaning | | 1 | SMALL | | 2 | MEDIUM | | 3 | LARGE | | 4 | GIANT |</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Skill","title":"<code>Skill</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#SkillModMax","title":"int <code>SkillModMax</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#SkillModValue","title":"int <code>SkillModValue</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#SlotsUsedByItem","title":"int <code>SlotsUsedByItem</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Spell","title":"spell <code>Spell</code>","text":"Spell effect","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#SpellDamage","title":"int <code>SpellDamage</code>","text":"Spell damage","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#SpellShield","title":"int <code>SpellShield</code>","text":"SpellShield","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#STA","title":"int <code>STA</code>","text":"STA value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Stack","title":"int <code>Stack</code>","text":"Number of items in the stack","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Stackable","title":"bool <code>Stackable</code>","text":"Stackable?","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#StackCount","title":"int <code>StackCount</code>","text":"The total number of the stackable item in your inventory","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Stacks","title":"int <code>Stacks</code>","text":"Number of stacks of the item in your inventory","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#StackSize","title":"int <code>StackSize</code>","text":"Maximum number if items that can be in the stack","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#STR","title":"int <code>STR</code>","text":"STR value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#StrikeThrough","title":"int <code>StrikeThrough</code>","text":"StrikeThrough","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#StunResist","title":"int <code>StunResist</code>","text":"Stun resist","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Summoned","title":"<code>Summoned</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#svCold","title":"int <code>svCold</code>","text":"svCold value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#svCorruption","title":"int <code>svCorruption</code>","text":"svCorruption value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#svDisease","title":"int <code>svDisease</code>","text":"svDisease value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#svFire","title":"int <code>svFire</code>","text":"svFire value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#svMagic","title":"int <code>svMagic</code>","text":"svMagic value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#svPoison","title":"int <code>svPoison</code>","text":"svPoison value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Timer","title":"ticks <code>Timer</code>","text":"Returns the number of ticks remaining on an item recast timer","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#TimerReady","title":"int <code>TimerReady</code>","text":"Returns the number of seconds remaining on an item recast timer","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Tradeskills","title":"bool <code>Tradeskills</code>","text":"Tradeskills?","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Tribute","title":"int <code>Tribute</code>","text":"Tribute value of the item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Type","title":"string <code>Type</code>","text":"Type","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Value","title":"int <code>Value</code>","text":"Item value in coppers","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Weight","title":"int <code>Weight</code>","text":"Item weight","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#WeightReduction","title":"<code>WeightReduction</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#WIS","title":"int <code>WIS</code>","text":"WIS value on item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#Worn","title":"itemspell <code>Worn</code>","text":"Passive worn effect, if any.","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#WornSlot[N]","title":"invslot <code>WornSlot[N]</code>","text":"The Nth invslot this item can be worn in (fingers/ears count as 2 slots)","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#WornSlot[name]","title":"bool <code>WornSlot[name]</code>","text":"Can item be worn in invslot with this name? (worn slots only)","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#WornSlots","title":"int <code>WornSlots</code>","text":"The number of invslots this item can be worn in (fingers/ears count as 2 slots)","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#string-to-string","title":"string <code>(To String)</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#methods","title":"Methods","text":"Name Action Inspect Opens the item display window for this item","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#spell-effect-types","title":"Spell Effect Types","text":"<p>EffectType will return one of the following values:</p> <code>Click Inventory</code> <p>Item has a right-click effect and can be used from the inventory.</p> <code>Click Unknown</code> <p>Item has an unknown right-click effect restriction.</p> <code>Click Worn</code> <p>Item has a right-click effect and must be equipped to use it.</p> <code>Combat</code> <p>Item has a combat proc effect.</p> <code>Spell Scroll</code> <p>Item is a scribable spell scroll, and the effect is the spell that will be scribed.</p> <code>Worn</code> <p>Item has an effect that is persistent while worn (focus effect).</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-item/#displayitem-index","title":"DisplayItem Index","text":"<p>Warning</p> <p>This section needs to be moved to the MQ2ItemDisplay article</p> <p>${DisplayItem} now takes an index as an option parameter index can be 0-5 you can still just do ${DsiplayItem} and it will just pick whatever you inspected last.</p> <p>Example: /echo ${DisplayItem[5]}</p> <ul> <li>Info = 1,</li> <li>WindowTitle = 2,</li> <li>AdvancedLore = 3,</li> <li>MadeBy = 4,</li> <li>Information = 5,</li> <li>DisplayIndex = 6</li> </ul> <p>NOTE: There is a difference between .Info and .Information .Info contains for example: .Info can return text like; this item is placable in yards, guild yards blah blah , This item can be used in tradeskills .Information can return text like Item Information: Placing this augment into blah blah, this armor can only be used in blah blah</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-itemspell/","title":"<code>itemspell</code> Type","text":"<p>Represents a spell effect on an item.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-itemspell/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-itemspell/#CastTime","title":"int <code>CastTime</code>","text":"Spell cast time.","tags":["datatype"]},{"location":"reference/data-types/datatype-itemspell/#EffectiveCasterLevel","title":"int <code>EffectiveCasterLevel</code>","text":"Effective level that is used to cast the spell.","tags":["datatype"]},{"location":"reference/data-types/datatype-itemspell/#EffectType","title":"int <code>EffectType</code>","text":"The type of item spell effect.","tags":["datatype"]},{"location":"reference/data-types/datatype-itemspell/#MaxCharges","title":"int <code>MaxCharges</code>","text":"The maximum number of charges supported by this spell.","tags":["datatype"]},{"location":"reference/data-types/datatype-itemspell/#OtherID","title":"int <code>OtherID</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-itemspell/#OtherName","title":"string <code>OtherName</code>","text":"Synonym of OverrideName","tags":["datatype"]},{"location":"reference/data-types/datatype-itemspell/#OverrideDescription","title":"string <code>OverrideDescription</code>","text":"Overrides the normal spell description string, if set.","tags":["datatype"]},{"location":"reference/data-types/datatype-itemspell/#OverrideName","title":"string <code>OverrideName</code>","text":"Overrides the normal spell name string, if set.","tags":["datatype"]},{"location":"reference/data-types/datatype-itemspell/#ProcRate","title":"int <code>ProcRate</code>","text":"Combat effect proc rate.","tags":["datatype"]},{"location":"reference/data-types/datatype-itemspell/#RecastType","title":"int <code>RecastType</code>","text":"Recast type of the spell.","tags":["datatype"]},{"location":"reference/data-types/datatype-itemspell/#RequiredLevel","title":"int <code>RequiredLevel</code>","text":"Level required for the spell to be usable.","tags":["datatype"]},{"location":"reference/data-types/datatype-itemspell/#Spell","title":"spell <code>Spell</code>","text":"The spell.","tags":["datatype"]},{"location":"reference/data-types/datatype-itemspell/#SpellID","title":"int <code>SpellID</code>","text":"ID of the Spell.","tags":["datatype"]},{"location":"reference/data-types/datatype-itemspell/#TimerID","title":"int <code>TimerID</code>","text":"Timer ID of the spell.","tags":["datatype"]},{"location":"reference/data-types/datatype-keyring/","title":"<code>keyring</code>","text":"<p>This datatype represents information about a keyring (a.k.a. a collection of mounts, illusions, etc)</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-keyring/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-keyring/#Count","title":"int <code>Count</code>","text":"The number of items in this keyring","tags":["datatype"]},{"location":"reference/data-types/datatype-keyring/#Stat","title":"keyringitem <code>Stat</code>","text":"The keyring item assigned as the stat item","tags":["datatype"]},{"location":"reference/data-types/datatype-keyring/#examples","title":"Examples","text":"<p>Example</p> <p>If Jungle Raptor Saddle is set as your Stat Mount:</p> <pre><code>/echo ${Mount.Stat}\n</code></pre> <p>Outputs: Jungle Raptor Saddle</p> <p>If you have 3 items in your Mounts keyring:</p> <pre><code>/echo ${Mount.Count}\n</code></pre> <p>Outputs: 3</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-keyringitem/","title":"<code>keyringitem</code>","text":"<p>This datatype deals strictly with information items on a keyring.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-keyringitem/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-keyringitem/#Index","title":"int <code>Index</code>","text":"Where on the keyring list","tags":["datatype"]},{"location":"reference/data-types/datatype-keyringitem/#Item","title":"item <code>Item</code>","text":"The item on the keyring","tags":["datatype"]},{"location":"reference/data-types/datatype-keyringitem/#Name","title":"string <code>Name</code>","text":"name of the keyring item","tags":["datatype"]},{"location":"reference/data-types/datatype-keyringitem/#examples","title":"Examples","text":"<p>Examples</p> <pre><code>/echo ${Mount[1].Name}\n</code></pre> <p>Outputs: Whirligig Flyer Control Device</p> <pre><code>/echo ${Mount[2].Name}\n</code></pre> <p>Outputs: Abyssal Steed</p> <pre><code>/echo ${Mount[Abyssal Steed].Index}\n</code></pre> <p>Outputs: 2</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-macro/","title":"<code>macro</code>","text":"<p>The Macro DataType deals with the macro currently running, and nothing else.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-macro/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-macro/#CurCommand","title":"string <code>CurCommand</code>","text":"list the current line number, macro name, and code of the macro being processed","tags":["datatype"]},{"location":"reference/data-types/datatype-macro/#CurLine","title":"int <code>CurLine</code>","text":"The current line number of the macro being processed","tags":["datatype"]},{"location":"reference/data-types/datatype-macro/#CurSub","title":"string <code>CurSub</code>","text":"The current subroutine","tags":["datatype"]},{"location":"reference/data-types/datatype-macro/#isOuterVariable","title":"bool <code>isOuterVariable</code>","text":"true if the provided parameter is a defined outer variable","tags":["datatype"]},{"location":"reference/data-types/datatype-macro/#isTLO","title":"bool <code>isTLO</code>","text":"true if the provided parameter an existing TLO","tags":["datatype"]},{"location":"reference/data-types/datatype-macro/#MemUse","title":"int <code>MemUse</code>","text":"How much memory the macro is using","tags":["datatype"]},{"location":"reference/data-types/datatype-macro/#Name","title":"string <code>Name</code>","text":"The name of the macro currently running","tags":["datatype"]},{"location":"reference/data-types/datatype-macro/#Params","title":"int <code>Params</code>","text":"The number of parameters that were passed to the current subroutine","tags":["datatype"]},{"location":"reference/data-types/datatype-macro/#Paused","title":"bool <code>Paused</code>","text":"NULL if no macro running, FALSE if mqpause is off, TRUE if mqpause is on","tags":["datatype"]},{"location":"reference/data-types/datatype-macro/#Return","title":"string <code>Return</code>","text":"The value that was returned by the last completed subroutine","tags":["datatype"]},{"location":"reference/data-types/datatype-macro/#RunTime","title":"int64 <code>RunTime</code>","text":"How long the macro has been running (in seconds)","tags":["datatype"]},{"location":"reference/data-types/datatype-macro/#StackSize","title":"int <code>StackSize</code>","text":"StackSize?","tags":["datatype"]},{"location":"reference/data-types/datatype-macro/#Variable","title":"varies <code>Variable</code>","text":"returns the value given the name of Macro variable. The type of this member depends on the type of the variable being accessed.","tags":["datatype"]},{"location":"reference/data-types/datatype-macro/#methods","title":"Methods","text":"Method Name Action Undeclared List all undeclared variables","tags":["datatype"]},{"location":"reference/data-types/datatype-macroquest/","title":"<code>macroquest</code>","text":"<p>Data types related to the current MacroQuest2 session.  These also inherit from the EverQuest Type.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-macroquest/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-macroquest/#Anonymize","title":"bool <code>Anonymize</code>","text":"Anonymize character data","tags":["datatype"]},{"location":"reference/data-types/datatype-macroquest/#Build","title":"int <code>Build</code>","text":"<p>The build (client target) for MacroQuest</p> Value Meaning 1 Live 2 Test 3 Beta 4 Emu","tags":["datatype"]},{"location":"reference/data-types/datatype-macroquest/#BuildName","title":"string <code>BuildName</code>","text":"<p>The build (client target) name for MacroQuest:</p> <ul> <li>\"Live\"</li> <li>\"Test\"</li> <li>\"Beta\"</li> <li>\"Emu\"</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-macroquest/#BuildDate","title":"string <code>BuildDate</code>","text":"Date that MacroQuest was built","tags":["datatype"]},{"location":"reference/data-types/datatype-macroquest/#Error","title":"string <code>Error</code>","text":"Last normal error message","tags":["datatype"]},{"location":"reference/data-types/datatype-macroquest/#InternalName","title":"string <code>InternalName</code>","text":"The internal name from MacroQuest(\"Next\")","tags":["datatype"]},{"location":"reference/data-types/datatype-macroquest/#MQ2DataError","title":"string <code>MQ2DataError</code>","text":"Last Macro parsing error message","tags":["datatype"]},{"location":"reference/data-types/datatype-macroquest/#Parser","title":"int <code>Parser</code>","text":"Which parser engine is currently active","tags":["datatype"]},{"location":"reference/data-types/datatype-macroquest/#Path[Option]","title":"string <code>Path[Option]</code>","text":"<p>Retrieves the path to the specified location. If no path is provided, the root path of MacroQuest (where the MacroQuest.exe lives) is returned.</p> <p>Important</p> <p>Be sure to use this member to access these paths, and do not hard code paths. These locations in MacroQuest are configurable and may not be in the default locations!</p> Option Result root Returns the path to the root directory. config Returns path to the config directory crashdumps Returns the path to where crash dumps are stored logs Returns the path to the logs directory mqini Returns the path to MacroQuest.ini macros Returns the path to the macros directory plugins Returns the path to the plugins directory resources Returns the path to the resources directory <p>If no path is provided, the root path is returned.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-macroquest/#SyntaxError","title":"string <code>SyntaxError</code>","text":"Last syntax error message","tags":["datatype"]},{"location":"reference/data-types/datatype-macroquest/#Version","title":"string <code>Version</code>","text":"The full version of MacroQuest","tags":["datatype"]},{"location":"reference/data-types/datatype-macroquest/#string-to-string","title":"string <code>To String</code>","text":"None","tags":["datatype"]},{"location":"reference/data-types/datatype-macroquest/#example","title":"Example","text":"<p>Get the path to the config directory.</p> <pre><code>/echo ${MacroQuest.Path[config]}\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-math/","title":"<code>math</code>","text":"<p>This DataType performs various mathematical calculations. In the following members, n is any formula that consists of valid Operators.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-math/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-math/#Abs[n]","title":"float <code>Abs[n]</code>","text":"The absolute value of the result of n","tags":["datatype"]},{"location":"reference/data-types/datatype-math/#Acos[n]","title":"float <code>Acos[n]</code>","text":"Arccosine of n (in degrees)","tags":["datatype"]},{"location":"reference/data-types/datatype-math/#Asin[n]","title":"float <code>Asin[n]</code>","text":"Arcsine of n (in degrees)","tags":["datatype"]},{"location":"reference/data-types/datatype-math/#Atan[n]","title":"float <code>Atan[n]</code>","text":"Arctangent of n (in degrees)","tags":["datatype"]},{"location":"reference/data-types/datatype-math/#Calc[n]","title":"float <code>Calc[n]</code>","text":"Performs a mathematical calculation n","tags":["datatype"]},{"location":"reference/data-types/datatype-math/#Clamp[n,","title":"int <code>Clamp[n, min, max]</code>","text":"Clamps the value n such that min _&lt;= _n &lt;= max","tags":["datatype"]},{"location":"reference/data-types/datatype-math/#Cos[n]","title":"float <code>Cos[n]</code>","text":"Cosine of n (in degrees)","tags":["datatype"]},{"location":"reference/data-types/datatype-math/#Dec[hex]","title":"int <code>Dec[hex]</code>","text":"Decimal value of a hexidecimal string","tags":["datatype"]},{"location":"reference/data-types/datatype-math/#Distance[y,x,z:y,x,z]","title":"float <code>Distance[y,x,z:y,x,z]</code>","text":"<ul><li>Calculates the distance between two points on the map</li><li>1, 2, or 3 dimensions may be provided</li><li>Defaults to your character's current location</li></ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-math/#Hex[n]","title":"string <code>Hex[n]</code>","text":"Returns hexidecimal value of int n","tags":["datatype"]},{"location":"reference/data-types/datatype-math/#Not[n]","title":"int <code>Not[n]</code>","text":"Bitwise complement of n","tags":["datatype"]},{"location":"reference/data-types/datatype-math/#Rand[n]","title":"int <code>Rand[n]</code>","text":"Random integer. Rand[5] range 0 to 4. Rand[100,200] range 100 to 199","tags":["datatype"]},{"location":"reference/data-types/datatype-math/#Sin[n]","title":"float <code>Sin[n]</code>","text":"Sine of n (in degrees)","tags":["datatype"]},{"location":"reference/data-types/datatype-math/#Sqrt[n]","title":"float <code>Sqrt[n]</code>","text":"Square root of n","tags":["datatype"]},{"location":"reference/data-types/datatype-math/#Tan[n]","title":"float <code>Tan[n]</code>","text":"Tangent of n (in degrees)","tags":["datatype"]},{"location":"reference/data-types/datatype-mercenary/","title":"<code>mercenary</code>","text":"<p>This is the type used for mercenaries.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-mercenary/#members","title":"Members","text":"<p>This type inherits members from spawn.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-mercenary/#AAPoints","title":"int <code>AAPoints</code>","text":"AA Points spent on mercenary abilities","tags":["datatype"]},{"location":"reference/data-types/datatype-mercenary/#Index","title":"string <code>Index</code>","text":"Index","tags":["datatype"]},{"location":"reference/data-types/datatype-mercenary/#Name","title":"string <code>Name</code>","text":"Name of the mercenary","tags":["datatype"]},{"location":"reference/data-types/datatype-mercenary/#Stance","title":"string <code>Stance</code>","text":"Current stance of the mercenary","tags":["datatype"]},{"location":"reference/data-types/datatype-mercenary/#State","title":"string <code>State</code>","text":"<p>Current state of the mercenary:</p> <ul> <li>\"DEAD\"</li> <li>\"SUSPENDED\"</li> <li>\"ACTIVE\"</li> <li>\"UNKNOWN\"</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-mercenary/#StateID","title":"int <code>StateID</code>","text":"Current state ID of the mercenary as a number.","tags":["datatype"]},{"location":"reference/data-types/datatype-mercenary/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-mercenary/#examples","title":"Examples","text":"<p>Example</p> <p>Check on if you have an active mercenary, mercenary is a cleric, and if it's stance is NOT reactive.... then change it TO reactive.</p> <pre><code>/if (${Mercenary.State.Equal[ACTIVE]} &amp;&amp; ${Mercenary.Class.Name.Equal[Cleric]} &amp;&amp; ${Mercenary.Stance.NotEqual[REACTIVE]}) {\n    /stance reactive\n}\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-merchant/","title":"<code>merchant</code>","text":"<p>This contains information related to the active merchant.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-merchant/#members","title":"Members","text":"<p>This type inherits members from spawn if a merchant is active.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-merchant/#Full","title":"bool <code>Full</code>","text":"Returns True if the merchant's inventory is full.","tags":["datatype"]},{"location":"reference/data-types/datatype-merchant/#Item[#]","title":"item <code>Item[#]</code>","text":"Item number # on the merchant's list.","tags":["datatype"]},{"location":"reference/data-types/datatype-merchant/#Item[name]","title":"item <code>Item[name]</code>","text":"Find an item by partial name on the merchant's list. Prefix with \"=\" for an exact match.","tags":["datatype"]},{"location":"reference/data-types/datatype-merchant/#Items","title":"int <code>Items</code>","text":"Number of items on the merchant.","tags":["datatype"]},{"location":"reference/data-types/datatype-merchant/#ItemsReceived","title":"bool <code>ItemsReceived</code>","text":"True if the merchant's item list has been populated.","tags":["datatype"]},{"location":"reference/data-types/datatype-merchant/#Markup","title":"float <code>Markup</code>","text":"<p>The number used to calculate the buy and sell value for an item. (This is what is changed by charisma and faction). This value is capped at 1.05.</p> <ul> <li>Amount you buy item for = Item Value * Markup</li> <li>Amount you sell item for = Item Value * (1/Markup)</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-merchant/#Open","title":"bool <code>Open</code>","text":"Returns True if the merchant window is open.","tags":["datatype"]},{"location":"reference/data-types/datatype-merchant/#SelectedItem","title":"item <code>SelectedItem</code>","text":"The currently selected item in the merchant window. Items can be selected by using /selectitem or the <code>SelectItem</code> method","tags":["datatype"]},{"location":"reference/data-types/datatype-merchant/#string-to-string","title":"string <code>(To String)</code>","text":"Same as Open","tags":["datatype"]},{"location":"reference/data-types/datatype-merchant/#methods","title":"Methods","text":"Name Action Buy[#] Buys # of whatever is selected with Merchant.SelectItem[xxx] CloseWindow Will close the merchant window OpenWindow Will open the merchant closest to you, or if you have a merchant target SelectItem[name] Select item by partial name match, case insensitive. Prefix name with <code>=</code> for EXACT match Sell[count] Sell count of selected item. See examples","tags":["datatype"]},{"location":"reference/data-types/datatype-merchant/#examples","title":"Examples","text":"<p>Using Sell:</p> <pre><code>/selectitem \"Diamond\"\n</code></pre> <p>Will select a \"Diamond\" you can also do \"=Diamond\" to match EXACT name. Then you can the following command to sell 100 of it:</p> <pre><code>/invoke ${Merchant.Sell[100]}\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/","title":"<code>pet</code>","text":"<p>Pet object</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/#members","title":"Members","text":"<p>This type inherits members from spawn.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/#Buff[buffname]","title":"int <code>Buff[buffname]</code>","text":"Returns the slot number for buffname","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/#Buff[slot]","title":"string <code>Buff[slot]</code>","text":"Prints name of the buff at the given slot","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/#BuffDuration[buffname]","title":"int <code>BuffDuration[buffname]</code>","text":"Buff time remaining for pet buff buffname in miliseconds","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/#BuffDuration[slot]","title":"int <code>BuffDuration[slot]</code>","text":"Buff time remaining for pet buff in slot slot in miliseconds","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/#Combat","title":"bool <code>Combat</code>","text":"Combat state","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/#FindBuff","title":"buff <code>FindBuff</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/#Focus","title":"bool <code>Focus</code>","text":"Focus state","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/#GHold","title":"bool <code>GHold</code>","text":"GHold state","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/#Hold","title":"bool <code>Hold</code>","text":"Hold state","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/#Name","title":"string <code>Name</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/#ReGroup","title":"bool <code>ReGroup</code>","text":"ReGroup state","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/#Stance","title":"string <code>Stance</code>","text":"Returns the pet's current stance, (e.g. FOLLOW, GUARD)","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/#Stop","title":"bool <code>Stop</code>","text":"Stop state","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/#Target","title":"spawn <code>Target</code>","text":"Returns the pet's current target.","tags":["datatype"]},{"location":"reference/data-types/datatype-pet/#Taunt","title":"bool <code>Taunt</code>","text":"Taunt state","tags":["datatype"]},{"location":"reference/data-types/datatype-plugin/","title":"<code>plugin</code>","text":"<p>Data for the specified plugin</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-plugin/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-plugin/#IsLoaded","title":"bool <code>IsLoaded</code>","text":"Returns true if the plugin is loaded","tags":["datatype"]},{"location":"reference/data-types/datatype-plugin/#Name","title":"string <code>Name</code>","text":"Name of the plugin","tags":["datatype"]},{"location":"reference/data-types/datatype-plugin/#Version","title":"float <code>Version</code>","text":"Version number of the plugin","tags":["datatype"]},{"location":"reference/data-types/datatype-plugin/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-race/","title":"<code>race</code>","text":"<p>Contains information on the specified race</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-race/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-race/#ID","title":"int <code>ID</code>","text":"The ID of the race","tags":["datatype"]},{"location":"reference/data-types/datatype-race/#Name","title":"string <code>Name</code>","text":"The name of the race","tags":["datatype"]},{"location":"reference/data-types/datatype-race/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/","title":"<code>raid</code>","text":"<p>Contains data on the current raid</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/#AverageLevel","title":"float <code>AverageLevel</code>","text":"Average level of raid members (more accurate than in the window)","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/#Invited","title":"bool <code>Invited</code>","text":"Have I been invited to the raid?","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/#Leader","title":"raidmember <code>Leader</code>","text":"Raid leader","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/#Locked","title":"bool <code>Locked</code>","text":"Returns TRUE if the raid is locked","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/#Looter[#]","title":"string <code>Looter[#]</code>","text":"Specified looter name by number","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/#Looters","title":"int <code>Looters</code>","text":"Number of specified looters","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/#LootType","title":"int <code>LootType</code>","text":"<p>Method of looter assignment</p> Value Meaning 1 Leader 2 Leader &amp; Group Leader 3 Leader &amp; Assignments","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/#MainAssist","title":"raidmember <code>MainAssist</code>","text":"Raid main assist","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/#MarkNpc","title":"raidmember <code>MarkNpc</code>","text":"Raid NPC marker","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/#MasterLooter","title":"raidmember <code>MasterLooter</code>","text":"Raid Master Looter","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/#Member[N]","title":"raidmember <code>Member[N]</code>","text":"Raid member by number N","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/#Member[name]","title":"raidmember <code>Member[name]</code>","text":"Raid member by name.","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/#Members","title":"int <code>Members</code>","text":"Total number of raid members","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/#Target","title":"raidmember <code>Target</code>","text":"Raid target (clicked in raid window)","tags":["datatype"]},{"location":"reference/data-types/datatype-raid/#TotalLevels","title":"int <code>TotalLevels</code>","text":"Sum of all raid member's levels","tags":["datatype"]},{"location":"reference/data-types/datatype-raidmember/","title":"<code>raidmember</code>","text":"<p>Data related to the specified raid member</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-raidmember/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-raidmember/#Class","title":"class <code>Class</code>","text":"Raid member's class (works without being in zone)","tags":["datatype"]},{"location":"reference/data-types/datatype-raidmember/#Group","title":"int <code>Group</code>","text":"Current group number (or 0)","tags":["datatype"]},{"location":"reference/data-types/datatype-raidmember/#GroupLeader","title":"bool <code>GroupLeader</code>","text":"Returns TRUE if the member is a group leader","tags":["datatype"]},{"location":"reference/data-types/datatype-raidmember/#Level","title":"int <code>Level</code>","text":"Raid member's level (works without being in zone)","tags":["datatype"]},{"location":"reference/data-types/datatype-raidmember/#Looter","title":"bool <code>Looter</code>","text":"Allowed to loot with current loot rules and looters?","tags":["datatype"]},{"location":"reference/data-types/datatype-raidmember/#Name","title":"string <code>Name</code>","text":"Raid member's name","tags":["datatype"]},{"location":"reference/data-types/datatype-raidmember/#RaidLeader","title":"bool <code>RaidLeader</code>","text":"Returns TRUE if the member is the raid leader","tags":["datatype"]},{"location":"reference/data-types/datatype-raidmember/#Spawn","title":"spawn <code>Spawn</code>","text":"Spawn object for this player if available (must be in zone)","tags":["datatype"]},{"location":"reference/data-types/datatype-raidmember/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-range/","title":"<code>range</code>","text":"<p>This DataType performs a simple test on n using the following members.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-range/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-range/#Between[#1,#2:N]","title":"bool <code>Between[#1,#2:N]</code>","text":"<p>True if N is between the range of #1 and #2, inclusive.</p> Example <p>Is 50 between 33 and 66?</p> <pre><code>| Prints TRUE\n/echo ${Range.Between[33,66:50]}\n</code></pre> <p>Is 25 between 33 and 66?</p> <pre><code>| Prints FALSE\n/echo ${Range.Between[33,66:25]}\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-range/#Inside[#1,#2:N]","title":"bool <code>Inside[#1,#2:N]</code>","text":"<p>True if N is within the range of #1 and #2, exclusive.</p> Example <p>Is 50 Inside 33 and 66?</p> <pre><code>| Prints TRUE\n/echo ${Range.Inside[33,66:50]}\n</code></pre> <p>Is 33 inside 33 and 66?</p> <pre><code>| Prints FALSE\n${Range.Inside[33,66:33]}\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-skill/","title":"<code>skill</code>","text":"<p>Data related to a particular skill</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-skill/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-skill/#Activated","title":"bool <code>Activated</code>","text":"Returns TRUE if the skill is an activatable skill (ie, an Ability)","tags":["datatype"]},{"location":"reference/data-types/datatype-skill/#AltTimer","title":"int <code>AltTimer</code>","text":"<p>Originally intended to tell whether a skill shares a timer with another skill, this is misnamed.  It returns the category of the skill:</p> Value Meaning 0 Non Combat 1 Combat 2 Special","tags":["datatype"]},{"location":"reference/data-types/datatype-skill/#Auto","title":"bool <code>Auto</code>","text":"Returns TRUE if the skill has /autoskill on, FALSE if it does not.","tags":["datatype"]},{"location":"reference/data-types/datatype-skill/#ID","title":"int <code>ID</code>","text":"Skill number","tags":["datatype"]},{"location":"reference/data-types/datatype-skill/#MinLevel","title":"int <code>MinLevel</code>","text":"Minimum level for your class","tags":["datatype"]},{"location":"reference/data-types/datatype-skill/#Name","title":"string <code>Name</code>","text":"Name of the skill","tags":["datatype"]},{"location":"reference/data-types/datatype-skill/#ReuseTime","title":"int <code>ReuseTime</code>","text":"Reuse timer (what number format? ticks, seconds, deciseconds?)","tags":["datatype"]},{"location":"reference/data-types/datatype-skill/#SkillCap","title":"int <code>SkillCap</code>","text":"Skill cap based on your current level and class.","tags":["datatype"]},{"location":"reference/data-types/datatype-skill/#StartingSkill","title":"int <code>StartingSkill</code>","text":"Base skill level for your class","tags":["datatype"]},{"location":"reference/data-types/datatype-skill/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-social/","title":"<code>social</code>","text":"<p>Data related to an Everquest social macro.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-social/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-social/#Cmd[opt:","title":"string <code>Cmd[opt: lineNo]</code>","text":"Command lines of social. Provide <code>lineNo</code> (line number) to retrieve individual lines. If line number is omitted, then the full list of commands will be returned as a single string with multiple lines.","tags":["datatype"]},{"location":"reference/data-types/datatype-social/#Color","title":"int <code>Color</code>","text":"Retrieves the social button's RGB color as an integer.","tags":["datatype"]},{"location":"reference/data-types/datatype-social/#Name","title":"string <code>Name</code>","text":"Name of the social.","tags":["datatype"]},{"location":"reference/data-types/datatype-social/#example","title":"Example","text":"<p>Example</p> <p>Retrieve the name of the third social on the first page</p> MQScriptLua <pre><code>/echo ${Social[3].Name}\n</code></pre> <pre><code>print(mq.TLO.Social(3).Name())\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/","title":"<code>spawn</code>","text":"<p>Represents an in-game spawn.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#AARank","title":"int <code>AARank</code>","text":"AA rank number","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#AATitle","title":"string <code>AATitle</code>","text":"Synonym for Title (deprecated)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#ActorDef","title":"string <code>ActorDef</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#AFK","title":"bool <code>AFK</code>","text":"AFK?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Aggressive","title":"bool <code>Aggressive</code>","text":"returns TRUE or FALSE if a mob is aggressive or not","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Animation","title":"int <code>Animation</code>","text":"Current animation ID. See Animations for a list of animations.","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Anonymous","title":"bool <code>Anonymous</code>","text":"Anonymous","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Assist","title":"bool <code>Assist</code>","text":"Current Raid or Group assist target?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#AssistName","title":"string <code>AssistName</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Binding","title":"bool <code>Binding</code>","text":"Binding wounds?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Blind","title":"int <code>Blind</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Body","title":"body <code>Body</code>","text":"Body type","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#BodyWet","title":"bool <code>BodyWet</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#bShowHelm","title":"bool <code>bShowHelm</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Buff","title":"cachedbuff <code>Buff</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#BuffCount","title":"int <code>BuffCount</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#BuffDuration","title":"timestamp <code>BuffDuration</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#BuffsPopulated","title":"bool <code>BuffsPopulated</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Buyer","title":"bool <code>Buyer</code>","text":"Is a buyer? (ie. Buyer in the bazaar)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#CachedBuff","title":"cachedbuff <code>CachedBuff</code>","text":"Caches buff information cast on others","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#CachedBuffCount","title":"int <code>CachedBuffCount</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#CanSplashLand","title":"bool <code>CanSplashLand</code>","text":"<p>TRUE/FALSE on if a splash spell can land...</p><p></p><p>Note: This check is ONLY for line of sight to the targetindicator (red/green circle)</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Casting","title":"spell <code>Casting</code>","text":"Spell, if currently casting (only accurate on yourself, not NPCs or other group members)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#CeilingHeightAtCurrLocation","title":"float <code>CeilingHeightAtCurrLocation</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Class","title":"class <code>Class</code>","text":"Class","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#CleanName","title":"string <code>CleanName</code>","text":"The \"cleaned up\" name","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#CombatSkillTicks","title":"int <code>CombatSkillTicks</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#ConColor","title":"string <code>ConColor</code>","text":"<p>Returns consider color</p> <ul> <li>GREY</li> <li>GREEN</li> <li>LIGHT BLUE</li> <li>BLUE</li> <li>WHITE</li> <li>YELLOW</li> <li>RED</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#ContractorID","title":"int <code>ContractorID</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#CorpseDragCount","title":"int <code>CorpseDragCount</code>","text":"Number of corpses being dragged","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#CurrentEndurance","title":"int <code>CurrentEndurance</code>","text":"Current Endurance points (only updates when target/group)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#CurrentHPs","title":"int64 <code>CurrentHPs</code>","text":"Current hit points","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#CurrentMana","title":"int <code>CurrentMana</code>","text":"Current Mana points (only updates when target/group)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#D","title":"float <code>D</code>","text":"Shortcut for -Z (makes Downward positive)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Dead","title":"bool <code>Dead</code>","text":"Dead?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Deity","title":"deity <code>Deity</code>","text":"Deity","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#DisplayName","title":"string <code>DisplayName</code>","text":"Name displayed in game (same as EQ's %T)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Distance","title":"float <code>Distance</code>","text":"Distance from player in (x,y)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Distance3D","title":"float <code>Distance3D</code>","text":"Distance from player in (x,y,z) in 3D","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#DistanceN","title":"float <code>DistanceN</code>","text":"Distance from player in Y plane (North/South)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#DistancePredict","title":"float <code>DistancePredict</code>","text":"Estimated distance in (x,y), taking into account the spawn's movement speed but not the player's","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#DistanceU","title":"float <code>DistanceU</code>","text":"Distance from player in Z plane (Up/Down)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#DistanceW","title":"float <code>DistanceW</code>","text":"Distance from player in X plane (East/West)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#DistanceX","title":"float <code>DistanceX</code>","text":"Distance from player in X plane","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#DistanceY","title":"float <code>DistanceY</code>","text":"Distance from player in Y plane","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#DistanceZ","title":"float <code>DistanceZ</code>","text":"Distance from player in Z plane","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Ducking","title":"bool <code>Ducking</code>","text":"Ducking?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#E","title":"float <code>E</code>","text":"Shortcut for -X (makes Eastward positive)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#EQLoc","title":"string <code>EQLoc</code>","text":"Location using EQ format","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Equipment","title":"int <code>Equipment</code>","text":"returns a inttype, it takes numbers 0-8 or names: head chest arms wrists hands legs feet primary offhand","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#FeetWet","title":"bool <code>FeetWet</code>","text":"Feet wet/swimming?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Feigning","title":"bool <code>Feigning</code>","text":"Feigning?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#FindBuff","title":"cachedbuff <code>FindBuff</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Fleeing","title":"bool <code>Fleeing</code>","text":"Is your target moving away from you?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#FloorZ","title":"float <code>FloorZ</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Following","title":"spawn <code>Following</code>","text":"The spawn a player is following using /follow on - also returns your pet's target via ${Me.Pet.Following}","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Gender","title":"string <code>Gender</code>","text":"Gender","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#GM","title":"bool <code>GM</code>","text":"GM or Guide?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#GMRank","title":"int <code>GMRank</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#GroupLeader","title":"bool <code>GroupLeader</code>","text":"Group leader?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Guild","title":"string <code>Guild</code>","text":"Guild name","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#GuildStatus","title":"string <code>GuildStatus</code>","text":"Guild status (Leader, Officer, Member) NOTE GuildStatus is no longer present in BETA/TEST/LIVE versions and only available in UF and ROF EMU builds.","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Heading","title":"heading <code>Heading</code>","text":"Heading in this direction","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#HeadingTo","title":"heading <code>HeadingTo</code>","text":"Heading player must travel in to reach this spawn","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#HeadingToLoc[y,","title":"heading <code>HeadingToLoc[y, x]</code>","text":"Heading to the coordinates y,x from the spawn","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#HeadWet","title":"bool <code>HeadWet</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Height","title":"float <code>Height</code>","text":"Height","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Holding","title":"bool <code>Holding</code>","text":"Is the spawn holding an item?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#HoldingAnimation","title":"int <code>HoldingAnimation</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Hovering","title":"bool <code>Hovering</code>","text":"Hovering?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#ID","title":"int <code>ID</code>","text":"Spawn ID","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#InPvPArea","title":"int <code>InPvPArea</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Invis[ANY|0]","title":"bool <code>Invis[ANY|0]</code>","text":"<p>Returns whether invis is in effect against specific types of creatures.</p> <p>Options are:</p> <ul> <li>ANY or 0 - ${Me.Invis[ANY]} or ${Me.Invis[0]} or ${Me.Invis}</li> <li>NORMAL or 1 - ${Me.Invis[NORMAL]} or just ${Me.Invis[1]}</li> <li>UNDEAD or 2 - ${Me.Invis[UNDEAD]} or just ${Me.Invis[2]}</li> <li>ANIMAL or 3 - ${Me.Invis[ANIMAL]} or just ${Me.Invis[3]}</li> <li>SOS or 4 - ${Me.Invis[SOS]} or just ${Me.Invis[4]} returns true IF you are a ROG AND in fact hidden AND have a skill of at least 100 in HIDE AND have the AA for SoS</li></ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#IsSummoned","title":"bool <code>IsSummoned</code>","text":"Is this a summoned being?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#IsTouchingSwitch","title":"bool <code>IsTouchingSwitch</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Level","title":"int <code>Level</code>","text":"Level","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Levitating","title":"bool <code>Levitating</code>","text":"Levitating?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#LFG","title":"bool <code>LFG</code>","text":"LFG?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Light","title":"string <code>Light</code>","text":"Name of the light class this spawn has","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#LineOfSight","title":"bool <code>LineOfSight</code>","text":"Returns TRUE if spawn is in LoS","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Linkdead","title":"bool <code>Linkdead</code>","text":"Linkdead?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Loc","title":"string <code>Loc</code>","text":"Loc of the spawn","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#LocYX","title":"string <code>LocYX</code>","text":"LocYX of the spawn","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#LocYXZ","title":"string <code>LocYXZ</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Look","title":"float <code>Look</code>","text":"Looking this angle","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Mark","title":"int <code>Mark</code>","text":"Current Raid or Group marked npc mark number (raid first)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Master","title":"spawn <code>Master</code>","text":"Master, if it is charmed or a pet","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#MaxEndurance","title":"int <code>MaxEndurance</code>","text":"Maximum Endurance points (only updates when target/group)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#MaxHPs","title":"int64 <code>MaxHPs</code>","text":"Maximum hit points","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#MaxMana","title":"int <code>MaxMana</code>","text":"Maximum Mana points (only updates when target/group)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#MaxRange","title":"float <code>MaxRange</code>","text":"The max distance from this spawn for it to hit you","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#MaxRangeTo","title":"float <code>MaxRangeTo</code>","text":"The Max distance from this spawn for you to hit it","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#MercID","title":"int <code>MercID</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Mount","title":"spawn <code>Mount</code>","text":"Mount","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Moving","title":"bool <code>Moving</code>","text":"Moving?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#MQLoc","title":"string <code>MQLoc</code>","text":"Location using MQ format","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#MyBuff","title":"cachedbuff <code>MyBuff</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#MyBuffCount","title":"int <code>MyBuffCount</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#MyBuffDuration","title":"timestamp <code>MyBuffDuration</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#N","title":"float <code>N</code>","text":"Synonym for Y","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Name","title":"string <code>Name</code>","text":"Name","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Named","title":"bool <code>Named</code>","text":"Is this a \"named\" spawn (ie. does it's name not start with an \"a\" or an \"an\")","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#NearestSpawn[search]","title":"spawn <code>NearestSpawn[search]</code>","text":"Find the nearest spawn matching this Spawn Search, to this spawn (most efficient on yourself)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#NearestSpawn[#,","title":"spawn <code>NearestSpawn[#, search]</code>","text":"Find the #th nearest spawn matching this Spawn Search, to this spawn (most efficient on yourself)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Next","title":"spawn <code>Next</code>","text":"Next spawn in the list","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Owner","title":"spawn <code>Owner</code>","text":"Owner, if mercenary","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#PctEndurance","title":"int <code>PctEndurance</code>","text":"Current endurance as a percent","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#PctHPs","title":"int64 <code>PctHPs</code>","text":"Current hitpoins as a percent","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#PctMana","title":"int <code>PctMana</code>","text":"Current mana as a percent","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Pet","title":"spawn <code>Pet</code>","text":"Returns this spawn's pet, if one exists.","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#PlayerState","title":"int <code>PlayerState</code>","text":"<p>returns a mask as an int of which each bit has the following meaning:</p> Value Meaning 0 Idle 1 Open 2 WeaponSheathed 4 Aggressive 8 ForcedAggressive 16 InstrumentEquipped 32 Stunned 64 PrimaryWeaponEquipped 128 SecondaryWeaponEquipped","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Prev","title":"spawn <code>Prev</code>","text":"Previous spawn in the list","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Primary","title":"int <code>Primary</code>","text":"Item ID of anything that may be in the Primary slot","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Race","title":"race <code>Race</code>","text":"Race","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Roleplaying","title":"bool <code>Roleplaying</code>","text":"Roleplaying?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#S","title":"float <code>S</code>","text":"Shortcut for -Y (makes Southward positive)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Secondary","title":"int <code>Secondary</code>","text":"Item ID of anything that may be in the Secondary slot","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#SeeInvis","title":"int <code>SeeInvis</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Sitting","title":"bool <code>Sitting</code>","text":"Sitting?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Sneaking","title":"bool <code>Sneaking</code>","text":"Sneaking?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#SpawnStatus","title":"int <code>SpawnStatus</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Speed","title":"float <code>Speed</code>","text":"Speed moving","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Standing","title":"bool <code>Standing</code>","text":"Standing?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#StandState","title":"int <code>StandState</code>","text":"StandState","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#State","title":"string <code>State</code>","text":"<p>Return current animation state:</p> <ul> <li>\"STAND\"</li> <li>\"SIT\"</li> <li>\"DUCK\"</li> <li>\"BIND\"</li> <li>\"FEIGN\"</li> <li>\"DEAD\"</li> <li>\"STUN\"</li> <li>\"HOVER\"</li> <li>\"MOUNT\"</li> <li>\"UNKNOWN\"</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Stuck","title":"bool <code>Stuck</code>","text":"Stuck?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Stunned","title":"bool <code>Stunned</code>","text":"Stunned?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Suffix","title":"string <code>Suffix</code>","text":"Suffix attached to name, eg. of","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Surname","title":"string <code>Surname</code>","text":"Last name","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Targetable","title":"bool <code>Targetable</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#TargetOfTarget","title":"spawn <code>TargetOfTarget</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#TemporaryPet","title":"bool <code>TemporaryPet</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#TimeBeenDead","title":"timestamp <code>TimeBeenDead</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Title","title":"string <code>Title</code>","text":"Prefix/Title before name","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Trader","title":"bool <code>Trader</code>","text":"Trader?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Type","title":"string <code>Type</code>","text":"<p>The Type of Spawn.</p> <ul> <li>\"PC\"</li> <li>\"NPC\"</li> <li>\"Untargetable\"</li> <li>\"Mount\"</li> <li>\"Pet\"</li> <li>\"Corpse\"</li> <li>\"Chest\"</li> <li>\"Trigger\"</li> <li>\"Trap\"</li> <li>\"Timer\"</li> <li>\"Item\"</li> <li>\"Mercenary\"</li> <li>\"Aura\"</li> <li>\"Object\"</li> <li>\"Banner\"</li> <li>\"Campfire\"</li> <li>\"Flyer\"</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#U","title":"float <code>U</code>","text":"Synonym for Z","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Underwater","title":"bool <code>Underwater</code>","text":"Underwater?","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#W","title":"float <code>W</code>","text":"Synonym for X","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#X","title":"float <code>X</code>","text":"X coordinate","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Y","title":"float <code>Y</code>","text":"Y coordinate","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#Z","title":"float <code>Z</code>","text":"Z coordinate","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#N","title":"float <code>N</code>","text":"X, the Northward-positive coordinate","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#W","title":"float <code>W</code>","text":"Y, the Westward-positive coordinate","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#U","title":"float <code>U</code>","text":"Z, the Upward-positive coordinate","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#E","title":"float <code>E</code>","text":"Shortcut for -X (makes Eastward positive)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#S","title":"float <code>S</code>","text":"Shortcut for -Y (makes Southward positive)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#D","title":"float <code>D</code>","text":"Shortcut for -Z (makes Downward positive)","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#methods","title":"Methods","text":"Name Action DoAssist assists the spawn DoFace Faces target DoTarget Targets the spawn LeftClick left clicks the spawn RightClick Right clicks the spawn","tags":["datatype"]},{"location":"reference/data-types/datatype-spawn/#examples","title":"Examples","text":"Example Output <code>${Pet.Equipment[primary].ID}</code> ID number of the pet's primary weapon <code>${Group.Member[mymagesname].Pet.Equipment[primary].ID}</code> ID number of the group member's pet's primary weapon","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/","title":"<code>spell</code>","text":"<p>This is the type used for spell information.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#ActorTagId","title":"int <code>ActorTagId</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#AERange","title":"float <code>AERange</code>","text":"AE range (group spells use this for their range)","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Attrib","title":"int <code>Attrib</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#AutoCast","title":"int <code>AutoCast</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Base","title":"int64 <code>Base</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Base2","title":"int64 <code>Base2</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#BaseEffectsFocusCap","title":"int <code>BaseEffectsFocusCap</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#BaseName","title":"string <code>BaseName</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Beneficial","title":"bool <code>Beneficial</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#BookIcon","title":"int <code>BookIcon</code>","text":"Numeric ID of the Icon used to represent the spell.","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Calc","title":"int <code>Calc</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#CalcIndex","title":"int <code>CalcIndex</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#CanMGB","title":"bool <code>CanMGB</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#CastByMe","title":"string <code>CastByMe</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#CastByOther","title":"string <code>CastByOther</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#CastOnAnother","title":"string <code>CastOnAnother</code>","text":"Message when cast on others","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#CastOnYou","title":"string <code>CastOnYou</code>","text":"Message when cast on yourself","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#CastTime","title":"timestamp <code>CastTime</code>","text":"Cast time (unadjusted)","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Category","title":"string <code>Category</code>","text":"Name of the category the spell belongs to (e.g. \"HP Buffs\")","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#CategoryID","title":"int <code>CategoryID</code>","text":"Numeric ID of the category this spell belongs to","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#CounterNumber","title":"int64 <code>CounterNumber</code>","text":"The number of counters that the spell adds","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#CounterType","title":"string <code>CounterType</code>","text":"The resist counter. Will be one of \"Disease\", \"Poison\", \"Curse\" or \"Corruption\"","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Deletable","title":"bool <code>Deletable</code>","text":"Whether a spell can be deleted from the spell book","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Description","title":"string <code>Description</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Dispellable","title":"bool <code>Dispellable</code>","text":"Whether a spell can be dispelled","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Duration","title":"ticks <code>Duration</code>","text":"Duration of the spell (if any)","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#DurationValue1","title":"ticks <code>DurationValue1</code>","text":"Duration of the spell (if any)","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#DurationWindow","title":"int <code>DurationWindow</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#EnduranceCost","title":"int <code>EnduranceCost</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#EQSpellDuration","title":"ticks <code>EQSpellDuration</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Extra","title":"string <code>Extra</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#FizzleTime","title":"timestamp <code>FizzleTime</code>","text":"Time to recover after fizzle","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#GemIcon","title":"int <code>GemIcon</code>","text":"Icon number of the spell. Example ${Spell[blah].GemIcon}","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#HasSPA[#]","title":"bool <code>HasSPA[#]</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#HastePct","title":"int <code>HastePct</code>","text":"Percentage of haste, example of use ${Me.Hasted.HastePct} or ${Spell[Speed of Milyex].HastePct}","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#ID","title":"int <code>ID</code>","text":"Spell ID","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#IllusionOkWhenMounted","title":"bool <code>IllusionOkWhenMounted</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#IsActiveAA","title":"bool <code>IsActiveAA</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#IsSkill","title":"bool <code>IsSkill</code>","text":"is this spell a skill?","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#IsSwarmSpell","title":"bool <code>IsSwarmSpell</code>","text":"Is this spell a Swarm spell?","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Level","title":"int <code>Level</code>","text":"Level","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Link[text]","title":"string <code>Link[text]</code>","text":"Generate a clickable spell link. text is optional and overrides the text of the link.","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Location","title":"int <code>Location</code>","text":"Appears to be max distance","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Mana","title":"int <code>Mana</code>","text":"Mana cost (unadjusted)","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Max","title":"int64 <code>Max</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#MaxLevel","title":"int64 <code>MaxLevel</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#MinCasterLevel","title":"int <code>MinCasterLevel</code>","text":"Minimum level required by any class to cast this spell.","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#MyCastTime","title":"timestamp <code>MyCastTime</code>","text":"Adjusted cast time","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#MyDuration","title":"ticks <code>MyDuration</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#MyRange","title":"float <code>MyRange</code>","text":"Adjusted spell range, including focus effects, etc.","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Name","title":"string <code>Name</code>","text":"Spell Name","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#NoExpendReagentID","title":"int <code>NoExpendReagentID</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#NumEffects","title":"int <code>NumEffects</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#PushBack","title":"float <code>PushBack</code>","text":"Push back amount","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Range","title":"float <code>Range</code>","text":"Maximum range to target (use AERange for AE and group spells)","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Rank","title":"int <code>Rank</code>","text":"Returns either 1, 2 or 3 for spells and 4-30 for clickables and potions.","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#RankName","title":"string <code>RankName</code>","text":"Returns the spell/combat ability name rank character has.","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#ReagentCount","title":"int <code>ReagentCount</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#ReagentID","title":"int <code>ReagentID</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#RecastTime","title":"float <code>RecastTime</code>","text":"Time to recast after successful cast","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#RecastTimerID","title":"int <code>RecastTimerID</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#RecoveryTime","title":"timestamp <code>RecoveryTime</code>","text":"Same as FizzleTime","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#ResistAdj","title":"int <code>ResistAdj</code>","text":"Resist adjustment","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#ResistType","title":"string <code>ResistType</code>","text":"<p>The resist type of the spell. Will be one of the following:</p> <ul> <li>Chromatic</li> <li>Corruption</li> <li>Cold</li> <li>Disease</li> <li>Fire</li> <li>Magic</li> <li>Poison</li> <li>Unresistable</li> <li>Prismatic</li> <li>Unknown</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Restrictions","title":"string <code>Restrictions</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Skill","title":"string <code>Skill</code>","text":"<p>The skil used by the spell. Will be one of the following:</p> <ul> <li>Abjuration</li> <li>Alteration</li> <li>Conjuration</li> <li>Divination</li> <li>Evocation</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#SlowPct","title":"int <code>SlowPct</code>","text":"Percentage of slow, example of use ${Target.Slowed.SlowPct} or ${Spell[Slowing Helix].SlowPct}","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#SpellGroup","title":"int <code>SpellGroup</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#SpellIcon","title":"int <code>SpellIcon</code>","text":"Numeric ID of the Icon used to represent the spell.","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#SpellType","title":"string <code>SpellType</code>","text":"<p>The type of spell. Will be one of the following:</p> <ul> <li>Beneficial(Group)</li> <li>Beneficial</li> <li>Detrimental</li> <li>Unknown</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Stacks[duration]","title":"bool <code>Stacks[duration]</code>","text":"Does the selected spell stack with your current buffs (duration is in ticks)","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#StacksPet[duration]","title":"bool <code>StacksPet[duration]</code>","text":"Does the selected spell stack with your pet's current buffs (duration is in ticks)","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#StacksSpawn","title":"bool <code>StacksSpawn</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#StacksTarget","title":"bool <code>StacksTarget</code>","text":"Does the selected spell stack with your target's current buffs","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#StacksWith[name]","title":"bool <code>StacksWith[name]</code>","text":"alias for .WillStack - see entry for more details","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#StacksWithDiscs","title":"bool <code>StacksWithDiscs</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Subcategory","title":"string <code>Subcategory</code>","text":"Name of the subcategory this spell belongs to (e.g. \"Shielding\")","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#SubcategoryID","title":"int <code>SubcategoryID</code>","text":"Numeric Id of the subcategory this spell belongs to.","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#SubSpellGroup","title":"int <code>SubSpellGroup</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#TargetType","title":"string <code>TargetType</code>","text":"<p>The targeting method of the spell. Will be one of the following:</p> <ul> <li>AE PC v1</li> <li>AE PC v2</li> <li>AE Summoned</li> <li>AE Undead</li> <li>Animal</li> <li>Beam</li> <li>Caster PB NPC</li> <li>Caster PB PC</li> <li>Chest</li> <li>Corpse</li> <li>Directional AE</li> <li>Free Target</li> <li>Group v1</li> <li>Group v2</li> <li>Hatelist</li> <li>Hatelist2</li> <li>LifeTap</li> <li>Line of Sight</li> <li>No Pets</li> <li>None</li> <li>PB AE</li> <li>Pet</li> <li>Pet Owner</li> <li>Pet2</li> <li>Plant</li> <li>Self</li> <li>Single</li> <li>Single Friendly (or Target's Target)</li> <li>Single in Group</li> <li>Special Muramites</li> <li>Summoned</li> <li>Target of Target</li> <li>Target_AE_No_Players_Pets</li> <li>Targeted AE</li> <li>Targeted AE Tap</li> <li>Uber Dragons</li> <li>Uber Giants</li> <li>Undead</li> <li>Unknown</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#TimeOfDay","title":"int <code>TimeOfDay</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#Trigger","title":"spell <code>Trigger</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#WearOff","title":"string <code>WearOff</code>","text":"The \"wear off\" message","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#WillLand","title":"int <code>WillLand</code>","text":"This is like stacks but without the duration check.  It's a clean: \"Will this spell land.\"  Returns the slot it would land in.","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#WillLandPet","title":"int <code>WillLandPet</code>","text":"Same as WillLand, but for your pet.","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#WillStack[name]","title":"bool <code>WillStack[name]</code>","text":"Does the selected spell stack with the specific SPELL name DOES NOT work with AAs.","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#string-to-string","title":"string <code>(To String)</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#methods","title":"Methods","text":"Name Action Inspect Opens the spell display window for this spell","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#conversions","title":"Conversions","text":"<p>Spell variables can be assigned the following types with /vardata:</p> <ul> <li>int: Assigns the spell by spell id</li> <li>string: Assigns the spell by spell name</li> <li>spell: Copies a spell stored in another var</li> </ul> <p>Spell variables can also be assigned an id or name with /varset. These conversions are equivalent to the Spell TLO.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-spell/#spell-ranks","title":"Spell Ranks","text":"<p>Spell Example:</p> <pre><code>&gt; /echo I have the ${Spell[Certitude].RankName} version of Certitude.\nI have the Certitude Rk. II version of Ceritude.\n</code></pre> <p>Combat Ability Example: <pre><code>&gt; /echo My version of Rest is: ${Spell[Rest].RankName}\nMy version of Rest is: Rest Rk. II\n</code></pre></p> <p>To cast a spell with the proper rank, use the following:</p> <pre><code>/cast \"${Spell[Vinespur].RankName}\"\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-string/","title":"<code>string</code>","text":"<p>A string is an array of characters. In MacroQuest there is no single character datatype, so any variable or expression that contains text is considered a string.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#Arg[#,s]","title":"string <code>Arg[#,s]</code>","text":"Returns the #th argument of the string separated by s. The separator s must be a single character (defaults to space).See Difference between Arg and Token.","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#Compare[text]","title":"int <code>Compare[text]</code>","text":"Determines how the initial string and the second string, text, compare to each other:<ul><li>If both are the same, Compare will return 0.</li><li>If the string is alphabetically before text, Compare will return -1.</li><li>If text is alphabetically after string, Compare will return 1.</li></ul>Compare is case-insensitive","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#CompareCS[text]","title":"int <code>CompareCS[text]</code>","text":"The same as Compare, except that it is case-sensitive","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#Count[c]","title":"int <code>Count[c]</code>","text":"Returns how many times a single character c occurs in the string","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#Equal[text]","title":"bool <code>Equal[text]</code>","text":"If the initial string and the second string text are exactly the same, returns TRUE.Equal is case-insensitive","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#EqualCS[text]","title":"bool <code>EqualCS[text]</code>","text":"The same as Equal, except that it is case-sensitive","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#Find[text]","title":"int <code>Find[text]</code>","text":"This tries to find the second string text within the original string:<ul><li>If it is successful, it returns the first position in the string where text begins.</li><li>It returns NULL if text is not found.</li></ul>Find is case-insensitive","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#Left[#]","title":"string <code>Left[#]</code>","text":"Returns the first # characters of the string. A negative # will return the whole string except for the last # characters","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#Length","title":"int <code>Length</code>","text":"Returns the length of the string as an integer","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#Lower","title":"string <code>Lower</code>","text":"Returns the string in all lower-case","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#Mid[p,n]","title":"string <code>Mid[p,n]</code>","text":"Returns a segment of the string, starting at position p and running n characters.","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#NotEqual[text]","title":"bool <code>NotEqual[text]</code>","text":"If the initial string and the second string text are exactly the same, returns FALSE. NotEqual is case-insensitive","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#NotEqualCS[text]","title":"bool <code>NotEqualCS[text]</code>","text":"The same as NotEqual, except that it is case-sensitive.","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#Replace[ReplaceThis,WithThis]","title":"string <code>Replace[ReplaceThis,WithThis]</code>","text":"Replaces ReplaceThis with WithThis.","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#Right[#]","title":"string <code>Right[#]</code>","text":"Returns the last # characters of the string. A negative # will return the whole string except for the first # characters","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#StripLinks","title":"string <code>StripLinks</code>","text":"Returns the plain text version of a string, stripping out the links","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#Token[#,s]","title":"string <code>Token[#,s]</code>","text":"Returns the #th token of the string separated by s. The separator s must be a single character (defaults to space).See Difference between Arg and Token.","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#Upper","title":"string <code>Upper</code>","text":"Returns the string in all upper-case","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#string-to-string","title":"string <code>(To String)</code>","text":"Returns the string","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#usage","title":"Usage","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#simple-examples","title":"Simple Examples","text":"<pre><code>/declare TestString abcdebc\n/echo ${TestString.Find[bc]}         | Will return 2\n/echo ${TestString.Left[2]}          | Will return \"ab\"\n/echo ${TestString.Left[-2]}         | Will return \"abcde\"\n/echo ${TestString.Mid[2,3]}         | Will return \"bcd\"\n/echo ${TestString.Right[2]}         | Will return \"bc\"\n/echo ${TestString.Right[-2]}        | Will return \"cdebc\"\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#difference-between-arg-and-token","title":"Difference between Arg and Token","text":"<p>Arg[#,s] and Token[#,s] are very similar. The only difference between them is Token will include null values, while Arg will skip them. For example:</p> <pre><code>/declare TestString ABC,,DEF\n\n| Will return \"DEF\" because it is the second non-null string separated by a comma:\n/echo ${TestString.Arg[2,,]}\n\n| Will return \"NULL\" because the second token, the null string, is not ignored:\n/echo ${TestString.Token[2,,]}\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-string/#compare-strings-to-strings","title":"Compare strings to strings","text":"<p>Warning</p> <p>There is a temptation by some novice macro writers to put the string inside quotes within brackets. Don't!</p> <pre><code>#Event SpellWornOff  \"Your #1# spell has worn off of #2#.\"\n\nSub Event_SpellWornOff(string Line, string SpellName, string OnWho)\n   | You can put all kinds of logic here, on what to do when certain\n   | buffs or debuffs wear off.\n   | In this example, we'll just check to see if the spell that wore\n   | off is a particular spell multiple words seperated by spaces.\n   |\n   | Note: No quotes inside the brackets, and pay attention\n   | to where the curly brackets are in the /if compare statement.\n   /echo SpellWornOff: ${SpellName} wore off ${OnWho}\n   /if (${SpellName.Equal[Enveloping Roots]}) /echo Yikes, Root wore off ... run!\n/return\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/","title":"<code>switch</code>","text":"<p>Data related to switches (levers, buttons, etc) in the zone</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#DefaultHeading","title":"heading <code>DefaultHeading</code>","text":"Heading of \"closed\" switch","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#DefaultX","title":"float <code>DefaultX</code>","text":"X coordinate of \"closed\" switch","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#DefaultY","title":"float <code>DefaultY</code>","text":"Y coordinate of \"closed\" switch","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#DefaultZ","title":"float <code>DefaultZ</code>","text":"Z coordinate of \"closed\" switch","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#Distance","title":"float <code>Distance</code>","text":"Distance from player to switch in (x,y)","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#Distance3D","title":"float <code>Distance3D</code>","text":"Distance from player to switch in (x,y,z)","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#Heading","title":"heading <code>Heading</code>","text":"Switch is facing this heading","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#HeadingTo","title":"heading <code>HeadingTo</code>","text":"Direction player must move to meet this switch","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#ID","title":"int <code>ID</code>","text":"Switch ID","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#IsTargeted","title":"bool <code>IsTargeted</code>","text":"Returns TRUE if the switch is targeted","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#LineOfSight","title":"bool <code>LineOfSight</code>","text":"Returns TRUE if the switch is in LoS","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#Name","title":"string <code>Name</code>","text":"Name","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#Open","title":"bool <code>Open</code>","text":"True if the switch is in the \"open\" state (State == 1)","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#State","title":"int <code>State</code>","text":"The \"state\" of the switch.","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#X","title":"float <code>X</code>","text":"X coordinate","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#Y","title":"float <code>Y</code>","text":"Y coordinate","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#Z","title":"float <code>Z</code>","text":"Z coordinate","tags":["datatype"]},{"location":"reference/data-types/datatype-switch/#ToString","title":"string <code>ToString</code>","text":"Same as ID","tags":["datatype"]},{"location":"reference/data-types/datatype-target/","title":"<code>target</code>","text":"<p>This data type represents information specific to your current target. It contains additional members for querying buff information.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#inheritance","title":"Inheritance","text":"<p>This type inherits members from spawn.</p> <pre><code>classDiagram\n  spawn &lt;|-- target\n  direction RL\n  class spawn {\n  }\n  class target {\n  }</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Aego","title":"cachedbuff <code>Aego</code>","text":"Returns the name of the Aego spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#AggroHolder","title":"spawn <code>AggroHolder</code>","text":"Returns the target's current target.","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Beneficial","title":"cachedbuff <code>Beneficial</code>","text":"Returns the name of the Beneficial spell if the Target has one. This will skip \"player\" casted buffs, but will show NPC Casted buffs and some AA buffs.","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Brells","title":"cachedbuff <code>Brells</code>","text":"Returns the name of the Brells spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Charmed","title":"cachedbuff <code>Charmed</code>","text":"Returns the name of the Charmed spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Clarity","title":"cachedbuff <code>Clarity</code>","text":"Returns the name of the Clarity spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Corrupted","title":"cachedbuff <code>Corrupted</code>","text":"Returns the name of any the Corruption spell if Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Cursed","title":"cachedbuff <code>Cursed</code>","text":"Returns the name of the Curse spell if Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Crippled","title":"cachedbuff <code>Crippled</code>","text":"Returns the name of the Cripple spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Diseased","title":"cachedbuff <code>Diseased</code>","text":"Returns the name of a Disease spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Dotted","title":"cachedbuff <code>Dotted</code>","text":"Returns the name of a DOT spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#DSed","title":"cachedbuff <code>DSed</code>","text":"Returns the name of the Damage Shield spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Feared","title":"cachedbuff <code>Feared</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Focus","title":"cachedbuff <code>Focus</code>","text":"Returns the name of the Focus spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Growth","title":"cachedbuff <code>Growth</code>","text":"Returns the name of the Growth spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Hasted","title":"cachedbuff <code>Hasted</code>","text":"Returns the name of the Haste spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#HybridHP","title":"cachedbuff <code>HybridHP</code>","text":"Returns the name of the Hybrid HP spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Invulnerable","title":"cachedbuff <code>Invulnerable</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Maloed","title":"cachedbuff <code>Maloed</code>","text":"Returns the name of the Malo spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#MaxMeleeTo","title":"float <code>MaxMeleeTo</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Mezzed","title":"cachedbuff <code>Mezzed</code>","text":"Returns the name of the Mez spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#PctAggro","title":"int <code>PctAggro</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Poisoned","title":"cachedbuff <code>Poisoned</code>","text":"Returns the name of a Poison spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Pred","title":"cachedbuff <code>Pred</code>","text":"Returns the name of the Predator spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Regen","title":"cachedbuff <code>Regen</code>","text":"Returns the name of the Regen spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#RevDSed","title":"cachedbuff <code>RevDSed</code>","text":"Returns the name of the Reverse Damage Shield spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Rooted","title":"cachedbuff <code>Rooted</code>","text":"Returns the name of the Rooted spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#SE","title":"cachedbuff <code>SE</code>","text":"Returns the name of the Spiritual Enlightenment spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#SecondaryAggroPlayer","title":"spawn <code>SecondaryAggroPlayer</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#SecondaryPctAggro","title":"int <code>SecondaryPctAggro</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Shining","title":"cachedbuff <code>Shining</code>","text":"Returns the name of the Shining spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Silenced","title":"cachedbuff <code>Silenced</code>","text":"???","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Skin","title":"cachedbuff <code>Skin</code>","text":"Returns the name of the Skin spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Slowed","title":"cachedbuff <code>Slowed</code>","text":"Returns the name of the Slow spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Snared","title":"cachedbuff <code>Snared</code>","text":"Returns the name of the Snare spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Strength","title":"cachedbuff <code>Strength</code>","text":"Returns the name of the Strength spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#SV","title":"cachedbuff <code>SV</code>","text":"Returns the name of the Spiritual Vitality spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Symbol","title":"cachedbuff <code>Symbol</code>","text":"Returns the name of the Symbol spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#Tashed","title":"cachedbuff <code>Tashed</code>","text":"Returns the name of the Tash spell if the Target has one","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#string-to-string","title":"string <code>(To String)</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-target/#examples","title":"Examples","text":"<pre><code>| The Delay will end when the pet is targeted...AND target buffs are\n| populated, or 5 seconds, whichever is shorter.\n/target pet\n/delay 5s ${Target.ID}==${Pet.ID} &amp;&amp; ${Target.BuffsPopulated}==TRUE\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-task/","title":"<code>task</code>","text":"<p>This is the type for your current task.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#ID","title":"int <code>ID</code>","text":"Returns an int of the task ID","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#Index","title":"string <code>Index</code>","text":"Returns the tasks' place on the tasklist","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#Leader","title":"string <code>Leader</code>","text":"Returns task leader's name","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#Member[#]","title":"taskmember <code>Member[#]</code>","text":"Returns specified member in task by index","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#Member[name]","title":"taskmember <code>Member[name]</code>","text":"Returns specified member in task by name","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#Members","title":"int <code>Members</code>","text":"Returns number of members in task","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#Objective[#]","title":"taskobjective <code>Objective[#]</code>","text":"Returns the specified objective","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#Step","title":"string <code>Step</code>","text":"Returns description of current step in the task","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#Timer","title":"timestamp <code>Timer</code>","text":"Returns amount of time before task expires","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#Title","title":"string <code>Title</code>","text":"Returns name of the shared task","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#Type","title":"string <code>Type</code>","text":"<p>Returns a string that can be one of the following:</p> <ul> <li>Unknown</li> <li>None</li> <li>Deliver</li> <li>Kill</li> <li>Loot</li> <li>Hail</li> <li>Explore</li> <li>Tradeskill</li> <li>Fishing</li> <li>Foraging</li> <li>Cast</li> <li>UseSkill</li> <li>DZSwitch</li> <li>DestroyObject</li> <li>Collect</li> <li>Dialogue</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#WindowIndex","title":"int <code>WindowIndex</code>","text":"Returns the Quest Window List Index. (if the window actually has the list filled)","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#methods","title":"Methods","text":"Name Action Select[name] Select the given task name in the UI","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#usage","title":"Usage","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#indexing-tasks","title":"Indexing Tasks","text":"<p>Task TLO can be accessed by index to make iteration possible.</p> <pre><code>/echo ${Task[2].Title}\n</code></pre> <p>Don't use <code>${Task[1].ID}</code> and expect it to be whatever is the first list item. Always refer to tasks by their name.</p> <p>Note</p> <p>This index is not the same index as the one you see in the quest window list.</p> <p>Tasks are accessed in memory order, not in the order they are displayed in the UI. If you want the UI order, you'll need to use the Window TLO.</p> <pre><code>/echo ${Task[3].WindowIndex}\n</code></pre> <pre><code>/echo ${Task[Into The Muck].WindowIndex}\n</code></pre> <pre><code>/echo ${Task[hatch].Type}\n</code></pre> <p>Output: Shared (Can be Shared or Quest in this context)</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#selection","title":"Selection","text":"<p>The Task TLO also has a <code>Select</code> Method:</p> <p><code>Select</code> can select list items and combobox items. It returns TRUE if a selection was made and FALSE if not.</p> <pre><code>/if (${Task[hatch].Select}) {\n    /echo I just Selected a task that has the name \"hatch\" in it...\n} else {\n    /echo I did not find a task that has the word \"hatch\" in it, so nothing was selected.\n}\n\n/echo The task with \"hatch\" in is name is called: ${Task[hatch]}\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-task/#examples","title":"Examples","text":"<p>Example</p> <p>Output: The task with \"hatch\" in is name is called: Hatching a Plan</p> <pre><code>/echo ${Task[hatch]} is listed as number ${Task[hatch].Index} in the tasklist.\n</code></pre> <p>Example</p> <p>Output: Hatching a Plan is listed as number 1 in the tasklist.</p> <pre><code>/echo The ${Task[hatch]} first objective is to ${Task[hatch].Objective[1].Instruction}\n</code></pre> <p>Example</p> <p>Output: The Hatching a Plan first objective is to find where the eggs are being incubated</p> <pre><code>/echo The ${Task[hatch]} first objective status is ${Task[hatch].Objective[1].Status}\n</code></pre> <p>Example</p> <p>Output: The Hatching a Plan first objective status is 0/1</p> <pre><code>/echo The ${Task[hatch]} first objective should be completed in ${Task[hatch].Objective[1].Zone}\n</code></pre> <p>Example</p> <p>Output: The Hatching a Plan first objective should be completed in Hatchery Wing</p> <pre><code>/echo I should be working on ${Task[hatch].Step} in ${Task[hatch].Step.Zone}\n</code></pre>","tags":["datatype"]},{"location":"reference/data-types/datatype-taskmember/","title":"<code>taskmember</code>","text":"<p>Describes a member in your current task</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-taskmember/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-taskmember/#Index","title":"int <code>Index</code>","text":"Returns task index for member (i.e., 1-6)","tags":["datatype"]},{"location":"reference/data-types/datatype-taskmember/#Leader","title":"bool <code>Leader</code>","text":"Returns true if member is leader","tags":["datatype"]},{"location":"reference/data-types/datatype-taskmember/#Name","title":"string <code>Name</code>","text":"Returns name of the mamber","tags":["datatype"]},{"location":"reference/data-types/datatype-taskobjective/","title":"<code>taskobjective</code>","text":"<p>This is the type for your current task objective.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-taskobjective/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-taskobjective/#CurrentCount","title":"int <code>CurrentCount</code>","text":"Returns the current count of the .Type needed to complete a objective","tags":["datatype"]},{"location":"reference/data-types/datatype-taskobjective/#DZSwitchID","title":"int <code>DZSwitchID</code>","text":"Returns an int of the switch used in a objective.","tags":["datatype"]},{"location":"reference/data-types/datatype-taskobjective/#Index","title":"string <code>Index</code>","text":"Returns the objective's place on the objectivelist","tags":["datatype"]},{"location":"reference/data-types/datatype-taskobjective/#Instruction","title":"string <code>Instruction</code>","text":"Returns a tasks' Objectives","tags":["datatype"]},{"location":"reference/data-types/datatype-taskobjective/#Optional","title":"bool <code>Optional</code>","text":"Returns true or false if a objective is optional","tags":["datatype"]},{"location":"reference/data-types/datatype-taskobjective/#RequiredCount","title":"int <code>RequiredCount</code>","text":"Returns the required count of the .Type needed to complete a objective","tags":["datatype"]},{"location":"reference/data-types/datatype-taskobjective/#RequiredItem","title":"string <code>RequiredItem</code>","text":"Returns a string of the required item to complete a objective.","tags":["datatype"]},{"location":"reference/data-types/datatype-taskobjective/#RequiredSkill","title":"string <code>RequiredSkill</code>","text":"Returns a string of the required skill to complete a objective.","tags":["datatype"]},{"location":"reference/data-types/datatype-taskobjective/#RequiredSpell","title":"string <code>RequiredSpell</code>","text":"Returns a string of the required spell to complete a objective.","tags":["datatype"]},{"location":"reference/data-types/datatype-taskobjective/#Status","title":"string <code>Status</code>","text":"Returns the status of the objective in the format amount done Vs total IE 0/3","tags":["datatype"]},{"location":"reference/data-types/datatype-taskobjective/#Type","title":"string <code>Type</code>","text":"<p>Returns a string that can be one of the following:&lt;</p> <ul> <li>Unknown</li> <li>None</li> <li>Deliver</li> <li>Kill</li> <li>Loot</li> <li>Hail</li> <li>Explore</li> <li>Tradeskill</li> <li>Fishing</li> <li>Foraging</li> <li>Cast</li> <li>UseSkill</li> <li>DZSwitch</li> <li>DestroyObject</li> <li>Collect</li> <li>Dialogue</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-taskobjective/#Zone","title":"string <code>Zone</code>","text":"Returns the zone the objective is to be performed in","tags":["datatype"]},{"location":"reference/data-types/datatype-ticks/","title":"<code>ticks</code> Type","text":"<p>Represents a count of \"ticks\". Ticks are units of 6 seconds that are used to represent certain measurements of time in EverQuest.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-ticks/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-ticks/#Hours","title":"int <code>Hours</code>","text":"The number of hours in HH:MM:SS (0-23)","tags":["datatype"]},{"location":"reference/data-types/datatype-ticks/#Minutes","title":"int <code>Minutes</code>","text":"The number of minutes in HH:MM:SS (1-59)","tags":["datatype"]},{"location":"reference/data-types/datatype-ticks/#Seconds","title":"int <code>Seconds</code>","text":"The number of seconds in HH:MM:SS (1-59)","tags":["datatype"]},{"location":"reference/data-types/datatype-ticks/#TotalMinutes","title":"int <code>TotalMinutes</code>","text":"The total number of minutes","tags":["datatype"]},{"location":"reference/data-types/datatype-ticks/#TotalSeconds","title":"int <code>TotalSeconds</code>","text":"The total number of seconds","tags":["datatype"]},{"location":"reference/data-types/datatype-ticks/#Ticks","title":"int <code>Ticks</code>","text":"The value in ticks","tags":["datatype"]},{"location":"reference/data-types/datatype-ticks/#Time","title":"string <code>Time</code>","text":"Time in the form MM:SS","tags":["datatype"]},{"location":"reference/data-types/datatype-ticks/#TimeHMS","title":"string <code>TimeHMS</code>","text":"Time in the form HH:MM:SS (if there are no hours, the form will be MM:SS)","tags":["datatype"]},{"location":"reference/data-types/datatype-ticks/#string-to-string","title":"string <code>To String</code>","text":"Same as Ticks","tags":["datatype"]},{"location":"reference/data-types/datatype-time/","title":"<code>time</code> Type","text":"<p>Represents a unit of clock time.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#Date","title":"string <code>Date</code>","text":"Date in the format MM/DD/YYYY","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#Day","title":"int <code>Day</code>","text":"Day of the month","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#DayOfWeek","title":"int <code>DayOfWeek</code>","text":"Day of the week (1=sunday to 7=saturday)","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#Hour","title":"int <code>Hour</code>","text":"Hour (0-23)","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#Hour12","title":"int <code>Hour12</code>","text":"Hour (0-11)","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#Millisecond","title":"int <code>Millisecond</code>","text":"Millisecond (0-999)","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#MillisecondsSinceEpoch","title":"int64 <code>MillisecondsSinceEpoch</code>","text":"Number of milliseconds since the epoch (January 1, 1970)","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#MillisecondsSinceMidnight","title":"int <code>MillisecondsSinceMidnight</code>","text":"Number of milliseconds since midnight","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#Minute","title":"int <code>Minute</code>","text":"Minute (0-59)","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#Month","title":"int <code>Month</code>","text":"Month of the year (1-12)","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#Night","title":"bool <code>Night</code>","text":"Gives true if the current hour is considered \"night\" in EQ (7:00pm-6:59am)","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#Second","title":"int <code>Second</code>","text":"Second (0-59)","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#SecondsSinceMidnight","title":"int <code>SecondsSinceMidnight</code>","text":"Number of seconds since midnight","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#Time12","title":"string <code>Time12</code>","text":"Time in 12-hour format (HH:MM:SS)","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#Time24","title":"string <code>Time24</code>","text":"Time in 24-hour format (HH:MM:SS)","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#Year","title":"int <code>Year</code>","text":"Year","tags":["datatype"]},{"location":"reference/data-types/datatype-time/#string-to-string","title":"string <code>(To String)</code>","text":"Same as Time24","tags":["datatype"]},{"location":"reference/data-types/datatype-timer/","title":"<code>timer</code>","text":"<p>A timer data type is set in tenths of one second and counts down to zero; starting immediately after being set.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-timer/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-timer/#OriginalValue","title":"int <code>OriginalValue</code>","text":"Original value of the timer","tags":["datatype"]},{"location":"reference/data-types/datatype-timer/#Value","title":"int <code>Value</code>","text":"Current value of the timer","tags":["datatype"]},{"location":"reference/data-types/datatype-timer/#string-to-string","title":"string <code>To String</code>","text":"Same as Value","tags":["datatype"]},{"location":"reference/data-types/datatype-timer/#methods","title":"Methods","text":"Name Action Expire Set the timer to 0 Reset Reset the timer to the original value Set[value] Set the timer to the given value","tags":["datatype"]},{"location":"reference/data-types/datatype-timer/#usage","title":"Usage","text":"<p>Consider the following timer:</p> <pre><code>/declare BuffTimer timer local\n/varset BuffTimer 360\n</code></pre> <p>BuffTimer will be equal to 0 in:</p> <ul> <li>360 tenths of 1 second</li> <li>36 seconds</li> <li>6 ticks (a tick is 6 seconds)</li> </ul> <p>Timers may also be set with an \"s\" (seconds) or an \"m\" (minutes) appended to the value. For example:</p> <pre><code>/varset BuffTimer 360s\n</code></pre> <p>This would set the timer to 3600 (360 * 10) tenths of 1 second</p> <pre><code>/varset BuffTimer 360m\n</code></pre> <p>This would set the timer to 216000 (360 * 60 * 10) tenths of 1 second</p> <pre><code>sub main\n    /declare myTimer timer local 100\n    /while ( ${myTimer} ) {\n        /echo ${myTimer}\n        /delay 10\n    }\n/return\n</code></pre> <p>This would loop while myTimer is above 0</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-timestamp/","title":"<code>timestamp</code>","text":"<p>A timestamp represented in milliseconds.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-timestamp/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-timestamp/#Days","title":"int <code>Days</code>","text":"Number of days remaining in the timestamp (3d 2h 23m will return 3)","tags":["datatype"]},{"location":"reference/data-types/datatype-timestamp/#Float","title":"float <code>Float</code>","text":"timestamp represented in remaining seconds (1hr 23 min 53 seconds will return 5033.00)","tags":["datatype"]},{"location":"reference/data-types/datatype-timestamp/#Hours","title":"int64 <code>Hours</code>","text":"Number of hours remaining in the timestamp (1hr 23min 53 seconds will return 1)","tags":["datatype"]},{"location":"reference/data-types/datatype-timestamp/#Minutes","title":"int64 <code>Minutes</code>","text":"Number of Minutes remaining in the timestamp (1hr 23min 53 seconds will return 23)","tags":["datatype"]},{"location":"reference/data-types/datatype-timestamp/#Raw","title":"int64 <code>Raw</code>","text":"Remaining time value represented in milliseconds","tags":["datatype"]},{"location":"reference/data-types/datatype-timestamp/#Seconds","title":"int64 <code>Seconds</code>","text":"Number of Seconds remaining in the timestamp (1hr 23min 53 seconds will return 53)","tags":["datatype"]},{"location":"reference/data-types/datatype-timestamp/#Ticks","title":"int64 <code>Ticks</code>","text":"Remaining time value represented in ticks","tags":["datatype"]},{"location":"reference/data-types/datatype-timestamp/#Time","title":"string <code>Time</code>","text":"Remaining time value formatted in M:S","tags":["datatype"]},{"location":"reference/data-types/datatype-timestamp/#TimeDHM","title":"string <code>TimeDHM</code>","text":"Remaining time value formatted in D:H:M (Days:Hours:Minutes)","tags":["datatype"]},{"location":"reference/data-types/datatype-timestamp/#TimeHMS","title":"string <code>TimeHMS</code>","text":"Remaining time value formatted in H:M:S","tags":["datatype"]},{"location":"reference/data-types/datatype-timestamp/#TotalMinutes","title":"int64 <code>TotalMinutes</code>","text":"Total number of remaining minutes in the timestamp (1hr 23min 53 seconds will return 83)","tags":["datatype"]},{"location":"reference/data-types/datatype-timestamp/#TotalSeconds","title":"int64 <code>TotalSeconds</code>","text":"Total number of remaining minutes in the timestamp (1hr 23min 53 seconds will return 5033)","tags":["datatype"]},{"location":"reference/data-types/datatype-timestamp/#string-to-string","title":"string <code>(To String)</code>","text":"Same as Raw","tags":["datatype"]},{"location":"reference/data-types/datatype-timestamp/#changelog","title":"Changelog","text":"<ul> <li>July 9<sup>th</sup>, 2021: Added Days, TimeDHM</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-tradeskilldepot/","title":"<code>tradeskilldepot</code>","text":"<p>This contains information related to a tradeskill depot.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-tradeskilldepot/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-tradeskilldepot/#Capacity","title":"int <code>Capacity</code>","text":"Returns the total capacity of the tradeskill depot.","tags":["datatype"]},{"location":"reference/data-types/datatype-tradeskilldepot/#Count","title":"int <code>Count</code>","text":"Returns the number of item stacks in the tradeskill depot.","tags":["datatype"]},{"location":"reference/data-types/datatype-tradeskilldepot/#Enabled","title":"bool <code>Enabled</code>","text":"Returns whether the tradeskill depot is enabled or not. It requires the Night of Shadows expansion.","tags":["datatype"]},{"location":"reference/data-types/datatype-tradeskilldepot/#FindItem[#]","title":"item <code>FindItem[#]</code>","text":"Find an item with the given item ID in the tradeskill depot.","tags":["datatype"]},{"location":"reference/data-types/datatype-tradeskilldepot/#FindItem[name]","title":"item <code>FindItem[name]</code>","text":"Find an item by partial name in the tradeskill depot. Prefix with \"=\" for an exact match.","tags":["datatype"]},{"location":"reference/data-types/datatype-tradeskilldepot/#FindItemCount[#]","title":"int <code>FindItemCount[#]</code>","text":"Find the number of items with the given item ID in the tradeskill depot.","tags":["datatype"]},{"location":"reference/data-types/datatype-tradeskilldepot/#FindItemCount[name]","title":"int <code>FindItemCount[name]</code>","text":"Find the number of items by partial name in the tradeskill depot. Prefix with \"=\" for an exact match.","tags":["datatype"]},{"location":"reference/data-types/datatype-tradeskilldepot/#ItemsReceived","title":"bool <code>ItemsReceived</code>","text":"Returns whether the tradeskill depot has been populated with items. The window must be opened at least once for the depot to be populated with items.","tags":["datatype"]},{"location":"reference/data-types/datatype-tradeskilldepot/#SelectedItem","title":"item <code>SelectedItem</code>","text":"Returns the currently selected item in the tradeskill depot window.","tags":["datatype"]},{"location":"reference/data-types/datatype-tradeskilldepot/#methods","title":"Methods","text":"Name Action DepositItem Deposit the item on cursor into the tradeskill depot. SelectItem[name] Select an item with the given name WithdrawItem Withdraw the selected item from the tradeskill depot. Will create a quantity window if there is more than one item in the stack. WithdrawItem[name] Withdraw the given item name from the tradeskill depot. Will create a quantity window if there is more than one item in the stack. WithdrawStack Withdraw a full stack of the selected item from the tradeskill depot. WithdrawStack[name] Withdraw a full stack of the given item name from the tradeskill depot.","tags":["datatype"]},{"location":"reference/data-types/datatype-type/","title":"<code>type</code>","text":"<p>Contains information about data types</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-type/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-type/#InheritedType","title":"int <code>InheritedType</code>","text":"<p>Type of inherited type, if applicable.</p> <p>Ex: character inherits from spawn, so its inherited type will be spawn.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-type/#Name","title":"string <code>Name</code>","text":"Type name","tags":["datatype"]},{"location":"reference/data-types/datatype-type/#Member[N]","title":"string <code>Member[N]</code>","text":"Member name based on an internal ID number (based on 1 through N, not all values will be used)","tags":["datatype"]},{"location":"reference/data-types/datatype-type/#Member[name]","title":"int <code>Member[name]</code>","text":"Member internal ID number based on name (will be a number from 1 to N)","tags":["datatype"]},{"location":"reference/data-types/datatype-type/#string-to-string","title":"string <code>(To String)</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/data-types/datatype-window/","title":"<code>window</code>","text":"<p>This contains data related to the specified in-game window</p> <p>Windows come in many forms, but all are represented with the generic window type. In some of the descriptions, a bold window type may be specified, which defines the behavior for that type of window.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#BGColor","title":"argb <code>BGColor</code>","text":"Background color of the window.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Checked","title":"bool <code>Checked</code>","text":"Returns <code>TRUE</code> if the button has been checked.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Child[name]","title":"window <code>Child[name]</code>","text":"<p>Find a child window with the provided name.</p> <p>Parameters:</p> <ul> <li><code>name</code>: Name of a child window</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Children","title":"bool <code>Children</code>","text":"Returns <code>TRUE</code> if the window has children.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#CurrentTab","title":"window <code>CurrentTab</code>","text":"<p>Applies to: <code>TabBox</code></p> <p>Returns the <code>Page</code> window associated with the currently selected tab.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#CurrentTabIndex","title":"int <code>CurrentTabIndex</code>","text":"<p>Applies to: <code>TabBox</code></p> <p>Returns the index of the currently selected tab.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Enabled","title":"bool <code>Enabled</code>","text":"Returns <code>TRUE</code> if the window is enabled.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#FirstChild","title":"window <code>FirstChild</code>","text":"Returns the first child window in the window hierarchy.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#GetCurSel","title":"int <code>GetCurSel</code>","text":"<p>Deprecation Notice</p> <p>This member is deprecated and discouraged from continued use. Please use SelectedIndex instead.</p> <p>Applies to: <code>Combobox</code>, <code>Listbox</code>, <code>TreeView</code></p> <p>Index of the currently selected/higlighted item.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Height","title":"int <code>Height</code>","text":"Height of the window in pixels.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Highlighted","title":"bool <code>Highlighted</code>","text":"Returns <code>TRUE</code> if the window is the currently focused window.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#HisTradeReady","title":"bool <code>HisTradeReady</code>","text":"<p>Returns the following data from the trade window, regardless of what the current window object is:</p> <p>Has the other person clicked the Trade button?</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#HotButton","title":"hotbuttonwindow <code>HotButton</code>","text":"<p>Applies to: <code>HotButton</code></p> <p>Returns the HotButton associated with this window object.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#HScrollMax","title":"int <code>HScrollMax</code>","text":"Horizontal scrollbar maximum position.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#HScrollPct","title":"int <code>HScrollPct</code>","text":"Horizontal scroll bar current position as a percentage of the maximum position as a value from 0 to 100.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#HScrollPos","title":"int <code>HScrollPos</code>","text":"Horizontal scroll bar current position.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#InvSlot","title":"invslotwindow <code>InvSlot</code>","text":"<p>Applies to: <code>InvSlot</code></p> <p>Returns the InvSlot associated with this window object.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Items","title":"int <code>Items</code>","text":"<p>Applies to: <code>Combobox</code>, <code>Listbox</code>, <code>TreeView</code></p> <p>Number of items in the list.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#List[Row,Col]","title":"string <code>List[Row,Col]</code>","text":"<p>Applies to: <code>Combobox</code>, <code>Listbox</code>, <code>TreeView</code></p> <p>Get text for an item in the list by the specified row and column. If the column is not provided then the first column is used.</p> <p>Parameters:</p> <ul> <li><code>Row</code>: Row index of the item in the list.</li> <li><code>Col</code>: [optional] Column index of the item in the list.</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#List[Text,Col]","title":"int <code>List[Text,Col]</code>","text":"<p>Applies to: <code>Combobox</code>, <code>Listbox</code>, <code>TreeView</code></p> <p>Search a list for an item by text. Returns the index of the first element that matches the given text string.</p> <p>Parameters:</p> <ul> <li><code>Text</code>: Text to search for. Partial match is performed. Prefix with <code>=</code> to perform an exact match.</li> <li><code>Col</code>: [optional] Column index of the item in the item in the list. If not provided, the first column is searched.</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Minimized","title":"bool <code>Minimized</code>","text":"Returns <code>TRUE</code> if the window is minimized.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#MouseOver","title":"bool <code>MouseOver</code>","text":"Returns <code>TRUE</code> if the mouse is currently over the window.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#MyTradeReady","title":"bool <code>MyTradeReady</code>","text":"<p>Returns the following data from the trade window, regardless of what the current window object is:</p> <p>Have I clicked the Trade button?</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Name","title":"string <code>Name</code>","text":"<p>Name of the window.</p> <p>Note: this value may be affected by custom ui.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Next","title":"window <code>Next</code>","text":"Next sibling window in the window hierarchy.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Open","title":"bool <code>Open</code>","text":"Returns <code>TRUE</code> if the window is open.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Parent","title":"window <code>Parent</code>","text":"Returns the parent of this window, or <code>NULL</code> if this is a top level window.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#ScreenID","title":"string <code>ScreenID</code>","text":"<p>ScreenID of the window piece.</p> <p>Note: This is not custom ui dependent, it must be the same on all UIs.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#SelectedIndex","title":"int <code>SelectedIndex</code>","text":"<p>Applies to: <code>Combobox</code>, <code>Listbox</code>, <code>TreeView</code></p> <p>Index of the currently selected/higlighted item.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Siblings","title":"bool <code>Siblings</code>","text":"Returns <code>TRUE</code> if the window has siblings.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Size","title":"string <code>Size</code>","text":"Returns the size of the window in the form of <code>width,height</code>.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Style","title":"int <code>Style</code>","text":"Returns an integer representing the window style bit flags.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#TabCount","title":"int <code>TabCount</code>","text":"<p>Applies to: <code>TabBox</code></p> <p>The number of tabs present in the TabBox.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Tab[Index]","title":"window <code>Tab[Index]</code>","text":"<p>Applies to: <code>TabBox</code></p> <p>Looks up the <code>Page</code> window that matches the provided tab index in the TabBox.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Tab[Text]","title":"window <code>Tab[Text]</code>","text":"<p>Applies to: <code>TabBox</code></p> <p>Looks up the <code>Page</code> window that matches the provided tab text in the TabBox.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Text","title":"string <code>Text</code>","text":"<p>The text of the window. The actual value varies by type of window:</p> <ul> <li><code>STMLbox</code>: Returns the contents of the STML.</li> <li><code>Page</code>: Returns the name of the page's Tab.</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Tooltip","title":"string <code>Tooltip</code>","text":"The tooltip text for the window. This value comes from the window's TooltipReference.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Type","title":"string <code>Type</code>","text":"<p>The window's type. The type will determine the behavior of some of the other members.</p> <p>Can be one of:</p> <ul> <li><code>Screen</code></li> <li><code>Listbox</code></li> <li><code>Gauge</code></li> <li><code>SpellGem</code></li> <li><code>InvSlot</code></li> <li><code>Editbox</code></li> <li><code>Slider</code></li> <li><code>Label</code></li> <li><code>STMLbox</code></li> <li><code>TreeView</code></li> <li><code>Combobox</code></li> <li><code>Page</code></li> <li><code>TabBox</code></li> <li><code>LayoutBox</code></li> <li><code>HorizontalLayoutBox</code></li> <li><code>VerticalLayoutBox</code></li> <li><code>FinderBox</code></li> <li><code>TileLayoutBox</code></li> <li><code>Screen</code></li> <li><code>HotButton</code></li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#VScrollMax","title":"int <code>VScrollMax</code>","text":"Vertical scrollbar maximum position.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#VScrollPct","title":"int <code>VScrollPct</code>","text":"Vertical scroll bar current position as a percentage of the maximum position as a value from 0 to 100.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#VScrollPos","title":"int <code>VScrollPos</code>","text":"Vertical scroll bar current position.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Width","title":"int <code>Width</code>","text":"Width of the window in pixels.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Value","title":"float <code>Value</code>","text":"<p>:</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#X","title":"int <code>X</code>","text":"The X coordinate of the window's position, in pixels.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Y","title":"int <code>Y</code>","text":"The Y coordinate of the window's position, in pixels.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#string-to-string","title":"string To String","text":"<code>TRUE</code> if the window is open, <code>FALSE</code> if not, matching Open","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#methods","title":"Methods","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#DoClose","title":"<code>DoClose</code>","text":"Close the window. Has the effect of hiding the window if it closed.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#DoOpen","title":"<code>DoOpen</code>","text":"Open the window. Has the effect of showing the window if it is hidden.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#LeftMouseDown","title":"<code>LeftMouseDown</code>","text":"<p>Send a <code>leftmousedown</code> event to the window.</p> <p>Has the same effect as using the /notify command on the window.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#LeftMouseHeld","title":"<code>LeftMouseHeld</code>","text":"<p>Send a <code>leftmouseheld</code> event to the window.</p> <p>Has the same effect as using the /notify command on the window.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#LeftMouseHeldUp","title":"<code>LeftMouseHeldUp</code>","text":"<p>Send a <code>leftmouseheldup</code> event to the window.</p> <p>Has the same effect as using the /notify command on the window.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#LeftMouseUp","title":"<code>LeftMouseUp</code>","text":"<p>Send a <code>leftmouseup</code> event to the window.</p> <p>Has the same effect as using the /notify command on the window.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Move[X,Y,Width,Height]","title":"<code>Move[X,Y,Width,Height]</code>","text":"Move or resize the window.","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#RightMouseDown","title":"<code>RightMouseDown</code>","text":"<p>Send a <code>rightmousedown</code> event to the window.</p> <p>Has the same effect as using the /notify command on the window.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#RightMouseHeld","title":"<code>RightMouseHeld</code>","text":"<p>Send a <code>rightmouseheld</code> event to the window.</p> <p>Has the same effect as using the /notify command on the window.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#RightMouseHeldUp","title":"<code>RightMouseHeldUp</code>","text":"<p>Send a <code>rightmouseheldup</code> event to the window.</p> <p>Has the same effect as using the /notify command on the window.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#RightMouseUp","title":"<code>RightMouseUp</code>","text":"<p>Send a <code>rightmouseup</code> event to the window.</p> <p>Has the same effect as using the /notify command on the window.</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#Select[Index]","title":"<code>Select[Index]</code>","text":"<p>Applies to: <code>Combobox</code>, <code>Listbox</code>, <code>TreeView</code></p> <p>Selects the specified item in the list.</p> <p>Parameters:</p> <ul> <li><code>Index</code>: The number index of the item to select</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#SetAlpha[Alpha]","title":"<code>SetAlpha[Alpha]</code>","text":"<p>Set the alpha value for the window.</p> <p>Parameters:</p> <ul> <li><code>Alpha</code>: The alpha value, a number between 0 and 255.</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#SetBGColor[Color]","title":"<code>SetBGColor[Color]</code>","text":"<p>Set the background color.</p> <p>Parameters:</p> <ul> <li><code>Color</code>: A hex string in the form \"AARRGGBB\"</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#SetCurrentTab[Index]","title":"<code>SetCurrentTab[Index]</code>","text":"<p>Applies to: <code>TabBox</code>.</p> <p>Changes the current tab of the tab box.</p> <p>Parameters:</p> <ul> <li><code>Index</code>: Either the text or the index of the tab to select. If text is provided, it is case insensitive.</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#SetFadeAlpha[Alpha]","title":"<code>SetFadeAlpha[Alpha]</code>","text":"<p>Set the faded alpha value for the window.</p> <p>Parameters:</p> <ul> <li><code>Alpha</code>: The alpha value, a number between 0 and 255.</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#SetText[Text]","title":"<code>SetText[Text]</code>","text":"<p>Applies to: <code>EditBox</code></p> <p>Changes the current text value of the edit box.</p> <p>Parameters:</p> <ul> <li><code>Text</code>: The text to set to the edit box.</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-window/#usage","title":"Usage","text":"<p><code>/invoke ${Window[MerchantWnd].DoOpen}</code></p> <p>Expected Result: the Merchant window window appears</p> <p><code>/echo ${Window[MerchantWnd].Open}</code></p> <p>Returns TRUE if a Merchant window is open</p> <p><code>/echo ${Window[windowname]}</code></p> <p>Returns TRUE if the WindowName exists, but doesn't have to be opened.</p> <p><code>/echo ${Window[MerchantWnd].Minimized}</code></p> <p>Returns TRUE if the Window is opened and minimized</p> <p><code>/echo ${Window[MerchantWnd/ItemList].List[=Water Flask,2]}</code></p> <p>Returns the index (int) of Water Flask in the merchant's item list. \",2\" means scan the second column, since that's where the item names are.</p> <p><code>${Window[TradeskillWnd/RecipeList].List[=Inky Shadow Silk]}</code></p> <p>Find an item in the tradeskill item list box by the exact name Inky Shadow Silk</p> <p><code>${Window[TradeskillWnd/RecipeList].List[1]}</code></p> <p>Get the first-column text for the 1<sup>st</sup> item in the tradeskill item list box</p> <p><code>${Window[tradewnd].HisTradeReady}</code></p> <p>Return TRUE if the other person has clicked the Trade button in the Trade Window</p> <p><code>${Window[tradewnd].MyTradeReady}</code></p> <p>Return TRUE if I have clicked the Trade button in the Trade Window (TradeWnd)</p> <p><code>${Window[RewardSelectionWnd/RewardPageTabWindow].Tab[Brew for the Day].Child[RewardSelectionOptionList].List[2]}</code></p> <p>Returns the name of the 2<sup>nd</sup> option in the list of rewards for the tab titled \"Brew for the Day\"</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-worldlocation/","title":"<code>worldlocation</code>","text":"<p>Provides access to world locations such as a character's bound location</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-worldlocation/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-worldlocation/#Heading","title":"heading <code>Heading</code>","text":"At the point of binding, what direction was the character facing","tags":["datatype"]},{"location":"reference/data-types/datatype-worldlocation/#ID","title":"int <code>ID</code>","text":"The zone ID","tags":["datatype"]},{"location":"reference/data-types/datatype-worldlocation/#X","title":"[float][float] <code>X</code>","text":"The X coordinate","tags":["datatype"]},{"location":"reference/data-types/datatype-worldlocation/#Y","title":"[float][float] <code>Y</code>","text":"The Y coordinate","tags":["datatype"]},{"location":"reference/data-types/datatype-worldlocation/#Z","title":"[float][float] <code>Z</code>","text":"The Z coordinate","tags":["datatype"]},{"location":"reference/data-types/datatype-worldlocation/#Zone","title":"zone <code>Zone</code>","text":"Access to the zone data","tags":["datatype"]},{"location":"reference/data-types/datatype-xtarget/","title":"<code>xtarget</code>","text":"<p>Contains the data related to your extended target list</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-xtarget/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-xtarget/#ID","title":"int <code>ID</code>","text":"ID of specified XTarget","tags":["datatype"]},{"location":"reference/data-types/datatype-xtarget/#Name","title":"string <code>Name</code>","text":"Name of specified XTarget","tags":["datatype"]},{"location":"reference/data-types/datatype-xtarget/#PctAggro","title":"int <code>PctAggro</code>","text":"PctAggro of specified XTarget","tags":["datatype"]},{"location":"reference/data-types/datatype-xtarget/#TargetType","title":"string <code>TargetType</code>","text":"<p>Extended target type. Will return one of the following:</p> <ul> <li>Empty Target</li> <li>Auto Hater</li> <li>Specific PC</li> <li>Specific NPC</li> <li>Target's Target</li> <li>Group Tank</li> <li>Group Tank's Target</li> <li>Group Assist</li> <li>Group Assist Target</li> <li>Group Puller</li> <li>Group Puller Target</li> <li>Group Mark 1</li> <li>Group Mark 2</li> <li>Group Mark 3</li> <li>Raid Assist 1</li> <li>Raid Assist 2</li> <li>Raid Assist 3</li> <li>Raid Assist 1 Target</li> <li>Raid Assist 2 Target</li> <li>Raid Assist 3 Target</li> <li>Raid Mark 1</li> <li>Raid Mark 2</li> <li>Raid Mark 3</li> <li>Pet Target</li> <li>Mercenary Target</li> </ul>","tags":["datatype"]},{"location":"reference/data-types/datatype-xtarget/#string-to-string","title":"string <code>To String</code>","text":"Number of current extended targets","tags":["datatype"]},{"location":"reference/data-types/datatype-zone/","title":"<code>zone</code>","text":"<p>Contains information related to the specified zone</p>","tags":["datatype"]},{"location":"reference/data-types/datatype-zone/#members","title":"Members","text":"","tags":["datatype"]},{"location":"reference/data-types/datatype-zone/#ID","title":"int <code>ID</code>","text":"ID of the zone","tags":["datatype"]},{"location":"reference/data-types/datatype-zone/#Name","title":"string <code>Name</code>","text":"Full zone name","tags":["datatype"]},{"location":"reference/data-types/datatype-zone/#ShortName","title":"string <code>ShortName</code>","text":"Short zone name","tags":["datatype"]},{"location":"reference/data-types/datatype-zone/#ZoneFlags","title":"int64 <code>ZoneFlags</code>","text":"Flags for this zone","tags":["datatype"]},{"location":"reference/data-types/datatype-zone/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["datatype"]},{"location":"reference/general/animations/","title":"Animations","text":"<p>This is not a complete list. Note that the animation ID #'s above 100 or so are for the newer models like the Drakkin.</p> <p>A distance of 500 seems to be the cutoff for animation ID's to be sent to the client, but not all of them are sent at that distance. For example you may get the standing and turning ID's, but not the casting ones. As you move closer to the spawn, the update of ID's becomes more consistent. Between a distance of 400 - 450 they seem to become consistent. If you need to rely on ID updates for a script, I would play it safe and stick with 400.</p> <p>Animation ID's do not rely on line of sight.</p> 1 kick 5 melee 6 melee2 11 roundhouse 15 drowning 16 dead 17 walking 18 running 19 jumprun 20 jumpinplace 21 falling 24 ducking 25 tread_water 26 stand_animated2 27 casting1 28 emote_cry 29 emote_wave 30 emote_rude 32 stand2 33 sitting 34 turning 36 bind_wound 37 swimming 43 casting2 44 casting3 45 kick2 46 tigerclaw 47 eaglestrike 48 emote_nod 51 emote_clap 53 emote_blush 54 emote_snicker 55 emote_cough 56 emote_duck 57 emote_stare 58 emote_dance 59 emote_veto 60 emote_glare 61 emote_peer 62 emote_grovel 63 emote_laugh 64 emote_point 65 emote_shrug 67 emote_salute 68 emote_shiver 69 emote_tap 70 emote_bow 71 stand1 72 stand_animated1 74 mounted 80 melee3 82 melee4 104 walking2 105 reverse 106 running2 107 turn_right 108 turn_left 109 bind_wound2 110 stand3 111 stand_animated3 112 melee4 118 sitting2 121 sit_animation 122 ducking2 123 jumprun2 124 jumpinplace2 125 crawl 127 tread_water2 128 swimming2 134 castin4 135 casting5 144 youarehit 145 drowning2 146 dead2 151 falling2 152 emote_bow2 154 emote_wave2 155 salute2 156 emote_clap2 158 emote_point2 159 emote_snicker2 160 emote_shrug2 162 emote_cry2 163 emote_rude2 165 emote_grovel2 166 emote_blush2 167 emote_cough2 168 emote_duck2 172 emote_shiver2 174 emote_tap2 177 emote_glare2 180 emote_stare2 254 zonein"},{"location":"reference/general/body-types/","title":"Body Types","text":"<p>Body types are used in various commands, TLOs and Data Types. Each one is beautiful.</p> ID Body Type Description 0 Object Catapults, tents, practice dummies, etc 1 Humanoid 2 Lycanthrope 3 Undead 4 Giant 5 Construct Includes confused mutations in LDON, chests as of 9-19-2006 6 Extraplanar 7 Magical 8 Undead Pet 9 Bane Giant 10 Dain 11 Untargetable 12 Vampyre 13 Atenha Ra 14 Greater Akheva 15 Khati Sha 16 Seru 17 Greig 18 Draz Nurakk 19 Zek 20 Luggald 21 Animal 22 Insect 23 Monster 24 Elemental 25 Plant 26 Dragon 27 Elemental 28 Summoned Creature 29 Puff Dragon 30 Bane Dragon 31 Familiar 32 Proc Pet NoCorpseNpc 33 Cursed 5 as of 9-19-2006 34 Muramite 35-62 UNKNOWN BODYTYPE 63 Swarm Pet 64 Monster Summoning 65 Trap 66 Timer 67 Trigger 68-99 UNKNOWN BODYTYPE 100 Untargetable Property Utility 101 Property Trap 102 Property Companion 103 Property Suicide"},{"location":"reference/general/containers-list/","title":"Containers List","text":"<p>This is a list of all tradeskill containers.</p> <ul> <li>Alchemy</li> <li>Baking</li> <li>Blacksmithing</li> <li>Brewing</li> <li>Firing</li> <li>Fishing</li> <li>Fletching</li> <li>Fletching WoodElf</li> <li>Jewelry Making</li> <li>Make Poison</li> <li>Medicine</li> <li>Quest</li> <li>Merchant</li> <li>Mixing</li> <li>Pottery</li> <li>Regular</li> <li>Research ???</li> <li>Research ENC</li> <li>Research MAG</li> <li>Research NEC</li> <li>Research WIZ</li> <li>Research Practice</li> <li>Tailoring</li> <li>Tailoring Halfling</li> <li>Tinkering</li> </ul>"},{"location":"reference/general/languages/","title":"Languages","text":"<p>List of languages.</p> Language ID Language Name 1 Common Tongue 2 Barbarian 3 Erudian 4 Elvish 5 Dark Elvish 6 Dwarvish 7 Troll 8 Ogre 9 Gnomish 10 Halfling 11 Thieves Cant 12 Old Erudian 13 Elder Elvish 14 Froglok 15 Goblin 16 Gnoll 17 Combine Tongue 18 Elder Teir'Dal 19 Lizardman 20 Orcish 21 Faerie 22 Dragon 23 Elder Dragon 24 Dark Speech 25 Vah Shir 26 Alaran 27 Hadal"},{"location":"reference/general/list-of-spawn-heights/","title":"List of spawn heights","text":"<ul> <li>Ogre 9.00</li> <li>Troll 8.00</li> <li>Barbarian 7.00</li> <li>Vah Shir 7.00</li> <li>Iksar 6.50</li> <li>Erudite 6.00</li> <li>High Elf 6.00</li> <li>Human 6.00</li> <li>Skeleton 6.00</li> <li>Half Elf 5.50</li> <li>Dark Elf 5.00</li> <li>Wood Elf 5.00</li> <li>Dwarf 4.00</li> <li>Halfling 3.50</li> <li>Gnome 3.00</li> </ul>"},{"location":"reference/general/skills-list/","title":"Skills List","text":"<p>The list of skills that can be used with the /skills command.</p> <ul> <li>1H Blunt</li> <li>1H Slashing</li> <li>2H Blunt</li> <li>2H Slashing</li> <li>Abjuration</li> <li>Alchemy</li> <li>Alcohol Tolerance</li> <li>Alteration</li> <li>Apply Poison</li> <li>Archery</li> <li>Backstab</li> <li>Baking</li> <li>Bash</li> <li>Begging</li> <li>Berserking</li> <li>Bind Wound</li> <li>Blacksmithing</li> <li>Block</li> <li>Brass Instruments</li> <li>Brewing</li> <li>Channeling</li> <li>Conjuration</li> <li>Defense</li> <li>Disarm</li> <li>Disarm Traps</li> <li>Divination</li> <li>Dodge</li> <li>Double Attack</li> <li>Dragon Punch</li> <li>Duel Wield</li> <li>Eagle Strike</li> <li>Evocation</li> <li>Feign Death</li> <li>Fishing</li> <li>Fletching</li> <li>Flying Kick</li> <li>Forage</li> <li>Frenzy</li> <li>Hand To Hand</li> <li>Hide</li> <li>Intimidation</li> <li>Jewelry Making</li> <li>Kick</li> <li>Make Poison</li> <li>Meditate</li> <li>Mend</li> <li>Offense</li> <li>Parry</li> <li>Percussion Instruments</li> <li>Pick Lock</li> <li>Pick Pockets</li> <li>Piercing</li> <li>Pottery</li> <li>Research</li> <li>Riposte</li> <li>Round Kick</li> <li>Safe Fall</li> <li>Sense Heading</li> <li>Sense Traps</li> <li>Sing</li> <li>Slam</li> <li>Sneak</li> <li>Specialize Abjure</li> <li>Specialize Alteration</li> <li>Specialize Conjuration</li> <li>Specialize Divination</li> <li>Specialize Evocation</li> <li>Stringed Instruments</li> <li>Tailoring</li> <li>Taunt</li> <li>Throwing</li> <li>Tiger Claw</li> <li>Tinkering</li> <li>Tracking</li> <li>Wind Instruments</li> </ul>"},{"location":"reference/general/slot-names/","title":"Slot Names","text":""},{"location":"reference/general/slot-names/#itemslot-itemslot2","title":"ItemSlot &amp; ItemSlot2","text":"<p>These are not top level objects they are only members of DataType:item</p>"},{"location":"reference/general/slot-names/#itemslot-diagram","title":"ItemSlot Diagram","text":"<p>You SHOULD use .ItemSlot and .ItemSlot2 instead of .InvSlot</p> <p>The reason for this is that they work without having to open the bags.</p> <p>Example:</p> <p>Picking up an item from pack 10 first slot in that pack:</p> <pre><code>/itemnotify in pack${Math.Calc[${Me.Inventory[32].Item[1].ItemSlot}-22].Int} ${Math.Calc[${Me.Inventory[32].Item[1].ItemSlot2} + 1].Int} leftmouseup\n</code></pre> <p>Why not just /itemnotify in ${Me.Inventory[32].Item.ItemSlot} ${Me.Inventory.Item[1].ItemSlot2} you may ask...</p> <p>well, we didn't have .ItemSlot and .ItemSlot2 until recently, so /itemnotify works with the old pack system that starts at slot 1 not 0</p> <p>I can't change it to use real slotnumbers because then it will break a lot of old macros. So use the above calculation.</p> <p>-eqmule</p> <pre><code>ItemSlot Inventory\n+----+----+\n| 23 | 24 |\n+----+----+\n| 25 | 26 |\n+----+----+\n| 27 | 28 |\n+----+----+\n| 29 | 30 |\n+----+----+\n| 31 | 32 |\n+----+----+\n</code></pre> <p>.ItemSlot2 is a \"sub\" slot, example if .ItemSlot is 23 (a container like a Backpack for example) and your item is inside that container this will return what slot INSIDE that container it\u2019s in... complicated? Not really.</p> <p>Picking up an item from pack 10 first slot in that pack: /itemnotify in pack\\({Math.Calc[\\){Me.Inventory.Item.ItemSlot}-22].Int} \\({Math.Calc\\[\\){Me.Inventory.Item.ItemSlot2} + 1].Int} leftmouseup</p> <p>Or say you want an Iron Ration, which is in bag 1 in slot 8 Doing /echo ${FindItem[=Iron Ration].ItemSlot} will return 23</p> <p>Doing /echo ${FindItem[=Iron Ration].ItemSlot2} will return 7 (slots start at 0 so this is in fact correct)</p> <p>For the above example, you would be using this:</p> <pre><code>/itemnotify in pack${Math.Calc[${Me.Inventory[23].ItemSlot}-22].Int} ${Math.Calc[${Me.Inventory[23].Item[7].ItemSlot2} + 1].Int} leftmouseup\n</code></pre> <p>and programatically:</p> <pre><code>/itemnotify in pack${Math.Calc[${Me.Inventory[${FindItem[=Iron Ration].ItemSlot}].ItemSlot}-22].Int}\n</code></pre> <p>Line above, then a space, and the following(I couldn't do a single line due to lack of linewrap):</p> <pre><code>${Math.Calc[${Me.Inventory[${FindItem[=Iron Ration].ItemSlot}].Item[${FindItem[=Iron Ration].ItemSlot2}].ItemSlot2} + 1].Int} leftmouseup\n</code></pre>"},{"location":"reference/general/slot-names/#invslot","title":"InvSlot","text":""},{"location":"reference/general/slot-names/#inventory-diagram","title":"Inventory Diagram","text":"<pre><code>InvSlot Inventory\n+----+----+\n| 24 | 25 |\n+----+----+\n| 26 | 27 |\n+----+----+\n| 28 | 29 |\n+----+----+\n| 30 | 31 |\n+----+----+\n| 32 | 33 |\n+----+----+\n</code></pre>"},{"location":"reference/general/slot-names/#equipment-slots","title":"Equipment Slots","text":"0 charm 1 leftear 2 head 3 face 4 rightear 5 neck 6 shoulder 7 arms 8 back 9 leftwrist 10 rightwrist 11 ranged 12 hands 13 mainhand 14 offhand 15 leftfinger 16 rightfinger 17 chest 18 legs 19 feet 20 waist 21 powersource 22 ammo"},{"location":"reference/general/slot-names/#inventory-slots","title":"Inventory Slots","text":"23 pack1 24 pack2 25 pack3 26 pack4 27 pack5 28 pack6 29 pack7 30 pack8 31 pack9 32 pack10"},{"location":"reference/general/slot-names/#bank-slots","title":"Bank Slots","text":"2000 bank1 2001 bank2 2002 bank3 2003 bank4 2004 bank5 2005 bank6 2006 bank7 2007 bank8 2008 bank9 2009 bank10 2010 bank11 2011 bank12 2012 bank13 2013 bank14 2014 bank15 2015 bank16 2016 bank17 2017 bank18 2018 bank19 2019 bank20 2020 bank21 2021 bank22 2022 bank23 2023 bank24 2500 sharedbank1 2501 sharedbank2"},{"location":"reference/general/slot-names/#trade-slots","title":"Trade Slots","text":"3000 trade1 3001 trade2 3002 trade3 3003 trade4 3004 trade5 3005 trade6 3006 trade7 3007 trade8 3008 trade9"},{"location":"reference/general/slot-names/#enviroment-slots","title":"Enviroment Slots","text":"4000 enviro1 4001 enviro2 4002 enviro3 4003 enviro4 4004 enviro5 4005 enviro6 4006 enviro7 4007 enviro8 4008 enviro9"},{"location":"reference/general/slot-names/#loot-slots","title":"Loot Slots","text":"5000 loot1 5001 loot2 5002 loot3 5003 loot4 5004 loot5 5005 loot6 5006 loot7 5007 loot8 5008 loot9 5009 loot10 5010 loot11 5011 loot12 5012 loot13 5013 loot14 5014 loot15 5015 loot16 5016 loot17 5017 loot18 5018 loot19 5019 loot20 5020 loot21 5021 loot22 5022 loot23 5023 loot24 5024 loot25 5025 loot26 5026 loot27 5027 loot28 5028 loot29 5029 loot30 5030 loot31"},{"location":"reference/general/slot-names/#merchant-slots","title":"Merchant Slots","text":"6000 merchant1 6001 merchant2 6002 merchant3 6003 merchant4 6004 merchant5 6005 merchant6 6006 merchant7 6007 merchant8 6008 merchant9 6009 merchant10 6010 merchant11 6011 merchant12 6012 merchant13 6013 merchant14 6014 merchant15 6015 merchant16 6016 merchant17 6017 merchant18 6018 merchant19 6019 merchant20 6020 merchant21 6021 merchant22 6022 merchant23 6023 merchant24 6024 merchant25 6025 merchant26 6026 merchant27 6027 merchant28 6028 merchant29 6029 merchant30 6030 merchant31 6031 merchant32 6032 merchant33 6033 merchant34 6034 merchant35 6035 merchant36 6036 merchant37 6037 merchant38 6038 merchant39 6039 merchant40 6040 merchant41 6041 merchant42 6042 merchant43 6043 merchant44 6044 merchant45 6045 merchant46 6046 merchant47 6047 merchant48 6048 merchant49 6049 merchant50 6050 merchant51 6051 merchant52 6052 merchant53 6053 merchant54 6054 merchant55 6055 merchant56 6056 merchant57 6057 merchant58 6058 merchant59 6059 merchant60 6060 merchant61 6061 merchant62 6062 merchant63 6063 merchant64 6064 merchant65 6065 merchant66 6066 merchant67 6067 merchant68 6068 merchant69 6069 merchant70 6070 merchant71 6071 merchant72 6072 merchant73 6073 merchant74 6074 merchant75 6075 merchant76 6076 merchant77 6077 merchant78 6078 merchant79 6079 merchant80"},{"location":"reference/general/slot-names/#bazaar-slots","title":"Bazaar Slots","text":"7000 bazaar1 7001 bazaar2 7002 bazaar3 7003 bazaar4 7004 bazaar5 7005 bazaar6 7006 bazaar7 7007 bazaar8 7008 bazaar9 7009 bazaar10 7010 bazaar11 7011 bazaar12 7012 bazaar13 7013 bazaar14 7014 bazaar15 7015 bazaar16 7016 bazaar17 7017 bazaar18 7018 bazaar19 7019 bazaar20 7020 bazaar21 7021 bazaar22 7022 bazaar23 7023 bazaar24 7024 bazaar25 7025 bazaar26 7026 bazaar27 7027 bazaar28 7028 bazaar29 7029 bazaar30 7030 bazaar31 7031 bazaar32 7032 bazaar33 7033 bazaar34 7034 bazaar35 7035 bazaar36 7036 bazaar37 7037 bazaar38 7038 bazaar39 7039 bazaar40 7040 bazaar41 7041 bazaar42 7042 bazaar43 7043 bazaar44 7044 bazaar45 7045 bazaar46 7046 bazaar47 7047 bazaar48 7048 bazaar49 7049 bazaar50 7050 bazaar51 7051 bazaar52 7052 bazaar53 7053 bazaar54 7054 bazaar55 7055 bazaar56 7056 bazaar57 7057 bazaar58 7058 bazaar59 7059 bazaar60 7060 bazaar61 7061 bazaar62 7062 bazaar63 7063 bazaar64 7064 bazaar65 7065 bazaar66 7066 bazaar67 7067 bazaar68 7068 bazaar69 7069 bazaar70 7070 bazaar71 7071 bazaar72 7072 bazaar73 7073 bazaar74 7074 bazaar75 7075 bazaar76 7076 bazaar77 7077 bazaar78 7078 bazaar79 7079 bazaar80"},{"location":"reference/general/slot-names/#inspect-slots","title":"Inspect Slots","text":"8000 inspect1 8001 inspect2 8002 inspect3 8003 inspect4 8004 inspect5 8005 inspect6 8006 inspect7 8007 inspect8 8008 inspect9 8009 inspect10 8010 inspect11 8011 inspect12 8012 inspect13 8013 inspect14 8014 inspect15 8015 inspect16 8016 inspect17 8017 inspect18 8018 inspect19 8019 inspect20 8020 inspect21 8021 inspect22 8022 inspect23 8023 inspect24 8024 inspect25 8025 inspect26 8026 inspect27 8027 inspect28 8028 inspect29 8029 inspect30 8030 inspect31"},{"location":"reference/general/spa-list/","title":"SPA List","text":"<p>Spell Affects (yea they have bad engrish) Spell Effects Source Info (Updated 2018-12)</p> <pre><code>AFFECTNUMBER - AFFECTNAME\n0 - HP\n1 - AC\n2 - Attack Power\n3 - Movement Rate\n4 - STR\n5 - DEX\n6 - AGI\n7 - STA\n8 - INT\n9 - WIS\n10 - CHA\n11 - Melee Speed\n12 - Invisibility\n13 - See Invis\n14 - Enduring Breath\n15 - Mana\n16 - NPC-Frenzy\n17 - NPC-Awareness\n18 - NPC Aggro\n19 - NPC Faction\n20 - Blindness\n21 - Stun\n22 - Charm\n23 - Fear\n24 - Fatigue\n25 - Bind Affinity\n26 - Gate\n27 - Dispel Magic\n28 - Invis Vs Undead\n29 - Invis Vs Animals\n30 - NPC-ReactRange\n31 - Enthrall (Mez)\n32 - Create Item\n33 - Spawn NPC\n34 - Confuse\n35 - Disease\n36 - Poison\n37 - DetectHostile\n38 - DetectMagic\n39 - NoTwincast\n40 - Invulnerability\n41 - Banish\n42 - Shadow Step\n43 - Berserk\n44 - Lycanthropy\n45 - Vampirism\n46 - Resist Fire\n47 - Resist Cold\n48 - Resist Poison\n49 - Resist Disease\n50 - Resist Magic\n51 - Detect (Switch) Traps\n52 - Detect Undead\n53 - Detect Summoned\n54 - Detect Animals\n55 - Stoneskin\n56 - True North\n57 - Levitation\n58 - Change Form\n59 - Damage Attackers (DS)\n60 - TransferItem\n61 - Identify\n62 - Item ID\n63 - NPC-WipeHatelist\n64 - Spin Stun\n65 - Infravision\n66 - Ultravision\n67 - NPC-POV\n68 - Reclaim Energy\n69 - Max HP\n70 - CorpseBomb\n71 - Create Undead\n72 - PreserveCorpse\n73 - TargetsView\n74 - FeignDeath\n75 - Ventriloquism\n76 - Sentinel\n77 - LocateCorpse\n78 - SpellShield\n79 - InstantHP\n80 - Enchant:Light\n81 - Resurrect\n82 - Summon Target\n83 - Portal\n84 - Hp-NPC-ONLY\n85 - Contact Ability (Melee Proc)\n86 - NPC-Help-Radius\n87 - Telescope\n88 - Combat Portal\n89 - Height\n90 - IgnorePet\n91 - SummonCorpse\n92 - Hate (On Spell Land)\n93 - WeatherControl\n94 - Fragile\n95 - Sacrifice\n96 - Silence\n97 - Max Mana\n98 - Bard Haste\n99 - Root\n100 - HP Duration Only\n101 - Complete Heal (Residual Buff)\n102 - Pet No Fear\n103 - Summon Pet\n104 - Translocate\n105 - Anti-Gate (NPC Only)\n106 - BeastLordPet\n107 - Alter Pet Level\n108 - Familiar\n109 - CreateItemInBag\n110 - Removed (Archery RNG Acc%)\n111 - Resistances\n112 - Adjust Casting Skill (Fizzles)\n113 - SummonMount\n114 - Modify Hate\n115 - Cornucopia\n116 - Curse\n117 - HitMagic\n118 - Amplification\n119 - BardHaste2\n120 - HealMod\n121 - IronMaiden\n122 - ReduceSkill\n123 - Immunity\n124 - Fc_Damage_%\n125 - Fc_HealMod\n126 - Fc_ResistMod\n127 - Fc_CastTimeMod1\n128 - Fc_DurationMod\n129 - Fc_RangeMod\n130 - Fc_HateMod\n131 - Fc_ReagentMod\n132 - Fc_ManaMod\n133 - Fc_StunTimeMod\n134 - Ff_LevelMax\n135 - Ff_ResistType\n136 - Ff_TargetType\n137 - Ff_WhichSPA\n138 - Ff_Beneficial\n139 - Ff_WhichSpellID\n140 - Ff_DurationMin\n141 - Ff_InstantOnly\n142 - Ff_LevelMin\n143 - Ff_CastTimeMin\n144 - Ff_CastTimeMax\n145 - Portal NPC Warder Banish\n146 - Portal Locations\n147 - Percent Heal\n148 - StackingBlocker\n149 - StripVirtualSlot\n150 - Divine Intervention/Death Pact\n151 - PocketPet\n152 - PetSwarm\n153 - Damage Balance\n154 - Cancel Negative\n155 - PoP Resurrect\n156 - Mirror Form\n157 - Feedback\n158 - Reflect\n159 - Mod all Stats\n160 - Inebriation | Sobriety\n161 - Spell Guard\n162 - Melee Guard\n163 - Absorb Hit\n164 - Object - Sense Trap\n165 - Object - Disarm Trap\n166 - Object - Picklock\n167 - Fc_Pet\n168 - Defensive\n169 - Critical Melee (PC Only)\n170 - Spell Crit Damage\n171 - Crippling Blow\n172 - Evasion\n173 - Riposte\n174 - Dodge\n175 - Parry\n176 - Dual Wield\n177 - Double Attack\n178 - Melee Resource Drain\n179 - Puretone\n180 - Sanctification\n181 - Fearless\n182 - Hundred Hands\n183 - UNUSED - Skill Increase Chance\n184 - Accuracy %\n185 - Skill Damage Mod 1\n186 - Min Damage Done Mod\n187 - Mana Balance\n188 - Block\n189 - Endurance\n190 - Max Endurance\n191 - Amnesia\n192 - Hate (Duration Only)\n193 - Skill Attack\n194 - Fade\n195 - Stun Resist (Melee+Spell)\n196 - Deprecated (strikethrough)\n197 - Skill Damage Taken Incoming\n198 - Instant Endurance\n199 - Taunt\n200 - Weapon Proc Chance\n201 - Ranged Proc\n202 - IllusionOther\n203 - MassBuff\n204 - Group Fear Immunity\n205 - AE Rampage Instant (PC Only)\n206 - AE Taunt\n207 - Flesh to Bone\n208 - Purge Poison\n209 - Cancel Beneficial\n210 - Shield Caster\n211 - AE Melee (PC Only)\n212 - Fc_FrenziedDevastation\n213 - Pet % HP\n214 - HP Max Percent\n215 - Pet Avoidance %\n216 - Melee Accuracy Amt\n217 - Headshot\n218 - Pet Crit Melee Chance (Owner)\n219 - Slay Undead\n220 - Skill Min_Damage Amt 1\n221 - ReduceWeight\n222 - BlockBehind\n223 - Double Riposte\n224 - AddRiposte\n225 - Give Double Attack\n226 - 2hbash\n227 - ReduceSkillTimer\n228 - ReduceFallDmg\n229 - CastThroughStun\n230 - Increase Shield Distance\n231 - StunBashChance\n232 - Divine Save\n233 - Metabolism\n234 - Poison Mastery\n235 - FocusChannelling\n236 - Free Pet\n237 - PetAffinity\n238 - Permanent Illusion\n239 - Stonewall\n240 - String Unbreakable\n241 - Improve Reclaim Energy\n242 - IncreaseChanceMemwipe\n243 - NoBreakCharmChance\n244 - RootBreakChance\n245 - Trap Circumvention\n246 - Lung Capacity\n247 - IncreaseSkillCap\n248 - ExtraSpecialization\n249 - Offhand Weapon MinDamage Bonus\n250 - Increase ContactAbility Chance\n251 - EndlessQuiver\n252 - Backstab FullDamage From Front\n253 - Chaotic Stab\n254 - NoSpell\n255 - Shielding Duration Mod\n256 - Shroud of Stealth\n257 - DEPRECATED - GivePetHold\n258 - Triple Backstab\n259 - ACLimitMod\n260 - AddInstrumentMod\n261 - SongModCap\n262 - StatsCap\n263 - TradeskillMasteries\n264 - ReduceAATimer\n265 - NoFizzle\n266 - AddExtraAttack% (2h)\n267 - AddPetCommands\n268 - AlcFailRate\n269 - Bandage Max HP Limit %\n270 - Bard Song Beneficial Radius %\n271 - BaseRunMod\n272 - Bard Song Level\n273 - Critical DoT\n274 - CriticalHeal\n275 - Critical Mend %\n276 - DualWieldAmt\n277 - ExtraDIChance\n278 - FinishingBlow\n279 - FlurryChance (PC Only)\n280 - Pet Flurry Chance (Owner)\n281 - GivePetFeign\n282 - Increase Bandage Heal %\n283 - SpecialAttackChain\n284 - LoHSetHeal\n285 - Allow Hide/Evade While Moving\n286 - Fc_Damage_Amt\n287 - Fc_DurationMod (static)\n288 - Add Proc Hit (AA)\n289 - Doom Duration\n290 - Increase Movement Cap\n291 - Purify\n292 - Strikethrough\n293 - StunResist2 (Melee)\n294 - Spell Crit Chance\n295 - ReduceTimerSpecial\n296 - Fc_Spell_Damage_%_Incoming\n297 - Fc_Spell_Damage_Amt_Incoming\n298 - Height (Small)\n299 - Wake the Dead 1 (Corpse Class)\n300 - Doppelganger\n301 - Increase Range Damage\n302 - Fc_Damage_%_Crit\n303 - Fc_Damage_Amt_Crit\n304 - Secondary Riposte Mod\n305 - Mitigate Damage Shield Offhand\n306 - Wake the Dead 2 (File Class)\n307 - Appraisal\n308 - Zone Suspend Minion\n309 - Teleport Caster's Bindpoint\n310 - Fc_ReuseTimer\n311 - Ff_CombatSkill\n312 - Observer\n313 - Forage Master\n314 - Improved Invis\n315 - Improved Invis Undead\n316 - Improved Invis Animals\n317 - Worn Regen Cap\n318 - Worn Mana Regen Cap\n319 - Critical HP Regen\n320 - Shield Block Chance\n321 - Reduce Target Hate\n322 - Gate Starting City\n323 - Defensive Proc\n324 - HP for Mana\n325 - No Break AE Sneak\n326 - Spell Slots\n327 - Buff Slots\n328 - Negative HP Limit\n329 - Mana Absorb % Damage\n330 - Critical Melee Damage Mod\n331 - Alchemy Item Recovery\n332 - Summon to Corpse\n333 - Doom Rune Consumed\n334 - HP No Move\n335 - Fc_Immunity_Focus\n336 - Illusionary Target\n337 - Increase Exp %\n338 - Expedient Recovery\n339 - Fc_CastProc\n340 - Chance Spell\n341 - Worn Attack Cap\n342 - No Panic\n343 - Spell Interrupt\n344 - Item Channeling\n345 - Assassinate Max Level / Chance\n346 - Headshot Max\n347 - Double Ranged Attack\n348 - Ff_Mana_Min\n349 - Increase Damage With Shield\n350 - Manaburn\n351 - Spawn Interactive Object\n352 - Increase Trap Count\n353 - Increase SOI Count\n354 - Deactivate All Traps\n355 - Learn Trap\n356 - Change Trigger Type\n357 - Fc_Mute\n358 - Instant Mana\n359 - Passive Sense Trap\n360 - Proc On Kill Shot\n361 - Proc On Death\n362 - Potion Belt\n363 - Bandolier\n364 - AddTripleAttackChance\n365 - Proc On Spell Kill Shot\n366 - Group Shielding\n367 - Modify Body Type\n368 - Modify Faction\n369 - Corruption\n370 - ResistCorruption\n371 - Slow\n372 - Grant Foraging\n373 - Doom Always\n374 - Trigger Spell\n375 - Critical DoT Damage Mod %\n376 - Fling\n377 - Removed (Doom Entity)\n378 - Resist Other SPA\n379 - Directional Shadowstep\n380 - Knockback Explosive (PC Only)\n381 - Fling Target to Caster\n382 - Suppression\n383 - Fc_CastProcNormalized\n384 - Fling Caster to Target\n385 - Ff_WhichSpellGroup\n386 - Doom Dispeller\n387 - Doom Dispelled\n388 - Summon All Corpses\n389 - Fc_Timer_Refresh\n390 - Fc_Timer_Lockout\n391 - Ff_Mana_Max\n392 - Fc_Heal_Amt\n393 - Fc_Heal_%_Incoming\n394 - Fc_Heal_Amt_Incoming\n395 - Fc_Heal_%_Crit\n396 - Fc_Heal_Amt_Crit\n397 - Pet Add AC\n398 - Fc_Swarm_Pet_Duration\n399 - Fc_Twincast\n400 - Healburn\n401 - Mana Ignite\n402 - Endurance Ignite\n403 - Ff_SpellClass\n404 - Ff_SpellSubclass\n405 - Staff Block Chance\n406 - Doom Limit Use\n407 - Doom Focus Used\n408 - Limit HP\n409 - Limit Mana\n410 - Limit Endurance\n411 - Ff_ClassPlayer\n412 - Ff_Race\n413 - Fc_BaseEffects\n414 - Ff_CastingSkill\n415 - Ff_ItemClass\n416 - AC_2\n417 - Mana_2\n418 - Skill Min_Damage Amt 2\n419 - Contact Ability 2 (Melee Proc)\n420 - Fc_Limit_Use\n421 - Fc_Limit_Use_Amt\n422 - Ff_Limit_Use_Min\n423 - Ff_Limit_Use_Type\n424 - Gravitate\n425 - Fly\n426 - AddExtTargetSlots\n427 - Skill Proc (Attempt)\n428 - Proc Skill Modifier\n429 - Skill Proc (Success)\n430 - PostEffect\n431 - PostEffectData\n432 - ExpandMaxActiveTrophyBenefits\n433 - Normalized Skill Min_Dmg Amt 1\n434 - Normalized Skill Min_Dmg Amt 2\n435 - Fragile Defense\n436 - Toggle Freeze Buff Timers\n437 - Teleport to Anchor\n438 - Translocate to Anchor\n439 - Assassinate Chance / DMG\n440 - FinishingBlowMax\n441 - Distance Removal\n442 - Doom Req Bearer\n443 - Doom Req Caster\n444 - Improved Taunt\n445 - Add Merc Slot\n446 - A_Stacker\n447 - B_Stacker\n448 - C_Stacker\n449 - D_Stacker\n450 - DoT Guard\n451 - Melee Threshold Guard\n452 - Spell Threshold Guard\n453 - Doom Melee Threshold\n454 - Doom Spell Threshold\n455 - Add Hate % (On Land)\n456 - Add Hate Over Time %\n457 - Resource Tap\n458 - Faction Mod %\n459 - Skill Damage Mod 2\n460 - Ff_Override_NotFocusable\n461 - Fc_Damage_%_Crit 2\n462 - Fc_Damage_Amt 2\n463 - Shield Target\n464 - PC Pet Rampage\n465 - PC Pet AE Rampage\n466 - PC Pet Flurry Chance\n467 - DS Mitigation Amount\n468 - DS Mitigation Percentage\n469 - Chance Best in Spell Group\n470 - Trigger Best in Spell Group\n471 - Double Melee Round (PC Only)\n472 - Buy AA Rank\n473 - Double Backstab From Front\n474 - Pet Crit Melee Damage% (Owner)\n475 - Trigger Spell Non-Item\n476 - Weapon Stance\n477 - Hatelist To Top Index\n478 - Hatelist To Tail Index\n479 - Ff_Value_Min\n480 - Ff_Value_Max\n481 - Fc_Cast_Spell_On_Land\n482 - Skill Base Damage Mod\n483 - Fc_Spell_Damage_%_IncomingPC\n484 - Fc_Spell_Damage_Amt_IncomingPC\n485 - Ff_CasterClass\n486 - Ff_Same_Caster\n487 - Extend Tradeskill Cap\n488 - Defender Melee Force % (PC)\n489 - Worn Endurance Regen Cap\n490 - Ff_ReuseTimeMin\n491 - Ff_ReuseTimeMax\n492 - Ff_Endurance_Min\n493 - Ff_Endurance_Max\n494 - Pet Add Atk\n495 - Ff_DurationMax\n496 - Critical Melee Damage Mod Max\n497 - Ff_FocusCastProcNoBypass\n498 - AddExtraAttack% (1h-Primary)\n499 - AddExtraAttack% (1h-Secondary)\n500 - Fc_CastTimeMod2\n501 - Fc_CastTimeAmt\n502 - Fearstun\n503 - Melee Damage Position Mod\n504 - Melee Damage Position Amt\n505 - Damage Taken Position Mod\n506 - Damage Taken Position Amt\n507 - Fc_Amplify_Mod\n508 - Fc_Amplify_Amt\n509 - Health Transfer\n510 - Fc_ResistIncoming\n511 - Ff_FocusTimerMin\n512 - Proc Timer Modifier\n513 - Mana Max Percent\n514 - Endurance Max Percent\n515 - AC Avoidance Max Percent\n516 - AC Mitigation Max Percent\n517 - Attack Offense Max Percent\n518 - Attack Accuracy Max Percent\n519 - Luck Amount\n520 - Luck Percent\n</code></pre>"},{"location":"reference/general/spawn-search/","title":"Spawn Search","text":"<p>All Top-Level Objects, Data Types and Commands that support searching for spawns can take the following options:</p> Parameter Description Anything Else Anything not matched below is considered a name = Exact name # Any number is considered the minimum level alert # Spawns on your alert list # any All types aura Auras banker NPC bankers banner Banners body bodytype Spawns with the specified bodytype campfire Campfires chest Chests class classname Spawns with this class name (long name) corpse Corpses dps Returns Wizards, Rangers, Berserkers and Rogues fellowship Characters in your fellowship flyer Flying monsters gm GMs and Guides who have chosen to be visible group Group members guild Returns spawns in your own guild guildname name Returns spawns with the specified guild name, if blank, returns players with any guild name. healer Returns Druids, Clerics and Shaman id # Spawn with ID # knight Returns Paladins and Shadow Knights lfg All spawns Looking For Group light lightsource Spawns with the specified lightsource loc #x #y [#z] Spawn at the specified loc, z is optional (defaults to your Z). Must be used with radius los Spawns in Line of Sight mercenary Mercenaries merchant NPC Merchants mount Mounts named \"Named\" spawns (spawns whose names start with a #, or whose name does not start with \"a\" or \"an\") nearalert # Spawns near alert list # next Next spawn matching the search criteria (when using /mqtarget) noalert # Spawns not on alert list # nogroup Characters that aren't in your group noguild Spawns with no guild tag nopcnear # Spawns with no players within specified radius (defaults to 200) nopet Not a pet notid # Spawns not matching ID # notnearalert # Spawns not near alert list # npc Non-Player Characters npccorpse Non-Player Characters Corpses npcpet Pets Owned by Non-Player Characters object Objects pc Player Characters (default) pccorpse Player corpses pcpet Pets Owned by Player Characters pet Pets playerstate # Spawns that match the PlayerState int prev Previous spawn matching the search criteria (when using /mqtarget) race racename Spawns with the race racename radius # Within the radius # raid Characters who are in your raid range low# high# Within the level range low# and high# slower Returns Shamans, Enchanters, Beastlords, and Bards tank Returns Paladins, Shadow Knights and Warriors targetable Spawns that can be targeted timer Timer spawns trader Characters who are in trader mode trap Traps tribute Tribute Masters trigger Triggers untargetable Untargettable spawns xtarhater Spawn on my xtarget list that hates me zradius # Spawns within the specified Z-Axis radius"},{"location":"reference/general/spawn-search/#see-also","title":"See also","text":"<ul> <li>Spawn (Top-Level Object)</li> <li>spawn (DataType)</li> <li>/who</li> <li>/alert</li> <li>/mqtarget</li> <li>NearestSpawn (Top-Level Object)</li> </ul>"},{"location":"reference/macro-directives/","title":"Macro Directives","text":""},{"location":"reference/macro-directives/#definition","title":"Definition","text":"<p>Macro directives are instructions to the macro engine that are not run during the macro. These directives will be run before the Main sub is run, and are traditionally located at the beginning of the macro file.</p> <p>Click on the list below to see more in-depth descriptions.</p> <ul> <li>bind</li> <li>chat</li> <li>define</li> <li>event</li> <li>include</li> <li>include_optional</li> <li>turbo</li> <li>warning</li> </ul>"},{"location":"reference/macro-directives/#example","title":"example","text":"<pre><code>#warning\n\n#include Ninjadvloot.inc\n#include Spell_Routines.inc\n#include Defense.inc\n\n#turbo 80\n\n#CHAT BC\n#CHAT RAIDSAY\n#CHAT GROUPSAY\n\n#Event AddCombatSong    \"[MQ2] AddCombatSong #1#\"\n#Event Experience       \"#*#You gain party experience#*#\"\n#Event AddAlertCommon   \"[MQ2] AddAlertCommon #1#\"\n#Event WornOff          \"#*#Your #1# spell has worn off of #2#.\"\n</code></pre>"},{"location":"reference/macro-directives/chat/","title":"#chat","text":""},{"location":"reference/macro-directives/chat/#description","title":"Description","text":"<p>#chat channel</p> <p>This is a special type of #event which watches the specified channel. Content from the channel is accessed by creating a Sub Event_Chat.</p>"},{"location":"reference/macro-directives/chat/#use","title":"Use","text":"<p>Valid channels are: tell, group, raid, ooc, say, shout, guild, auc, chat (chat represents channels)</p> <p>Only one channel may be used on the #chat line, however multiple lines may be added.</p>"},{"location":"reference/macro-directives/chat/#example","title":"Example","text":"<pre><code>#chat guild\n#chat group\n\nSub Event_Chat(Channel,Sender,Text)\n  /echo ${Sender} told me ${Text} in ${Channel}\n/return\n</code></pre> <p>This would trigger Event_Chat for both guild and group chat.</p> <pre><code>/if (${Text.Find[send me to]} &amp;&amp; ${Select[${Me.Class.ShortName},DRU,WIZ]}) {\n  /call SendUs ${Text.Arg[4]} ${Sender}\n  /return\n}\n</code></pre> <p>This would watch for the key phrase \"send me to\" and then call the subroutine SendUs with the keyword following the phrase.</p> <p>Ex \"/g send me to pok\" would man the keyword was pok, and the subroutine would cast the appropriate spell to send you to Plane of Knowledge.</p> <pre><code>/if (${Text.Find[open door]} || ${Text.Find[click door]}) {\n  /doortarget\n  /delay 1s\n  /face door\n  /if (${DoorTarget.Distance}&gt;20) {\n    /click left door\n  }\n}\n</code></pre> <p>In this instance the macro would watch for the key phrase \"open door\" or \"click door\" and, provide the door was with in twenty feet, click on the door.</p> <p>Also see here for information on #events and the #chat special event.</p>"},{"location":"reference/macro-directives/define/","title":"#define","text":""},{"location":"reference/macro-directives/define/#description","title":"Description","text":"<p>#define can be used in place of some common variables, but variables are a lot more flexible (eg. they can be changed within the macro) and are preferred. One good use of #define would be to enable or disable debugging information within a macro.</p>"},{"location":"reference/macro-directives/define/#use","title":"Use","text":"<ul> <li>#define replaceme replacement</li> </ul> <p>Replaces all occurrences of replaceme with replacement throughout the macro. Example:</p> <p><code>#define Me charactername</code></p> <p>When the macro executes, all occurrences of \"Me\" will be replaced by \"charactername\". You can't use variables with</p>"},{"location":"reference/macro-directives/define/#define-since-they-execute-before-sub-main","title":"define (since they execute before Sub Main).","text":""},{"location":"reference/macro-directives/define/#example","title":"Example","text":"<pre><code>#define DEBUG /echo\nSub Main\n  /declare spell string local Complete Healing\n  DEBUG I am casting ${spell}\n  /call Cast \"${spell}\" gem1\n/return\n</code></pre> <p>In this situation, DEBUG would be replaced by /echo before the macro started, thereby giving you some information on which spell you were casting.</p> <p>Changing the #define line to this:</p> <pre><code>#define DEBUG /squelch /echo\n</code></pre> <p>Would effectively disable the debugging, since there would be no output to the screen.</p> <p>Also useful for color coding your echoes. For example:</p> <pre><code>#define DEBUG \"/echo \\aw[\\arDEBUG\\aw]\\ax\"\nSub Main\n  /declare spell string local Complete Healing\n  DEBUG I am casting ${spell}\n  /call Cast \"${spell}\" gem1\n/return\n</code></pre> <p>Would allow your debug message to show up with a color coded prefix denoting that this message is from the debug side, and not a standard echo. In this case echoing out:</p> <pre><code>[DEBUG] I am casting Yaulp\n</code></pre> <p>Where the brackets are white, the word debug is red, and the text is your default color.</p>"},{"location":"reference/macro-directives/event/","title":"#event","text":""},{"location":"reference/macro-directives/event/#description","title":"Description","text":"<p>event is used to specify strings to be triggered after you do /doevents</p>"},{"location":"reference/macro-directives/event/#tutorial","title":"Tutorial","text":"<p>http://www.macroquest2.com/phpBB3/viewtopic.php?f=47&amp;t=20199</p>"},{"location":"reference/macro-directives/event/#tutorial-macro","title":"Tutorial Macro","text":"<pre><code>#event stuff \"Ant Bat Cat Dog Emu\"\n#event stuff \"Ant #*# Cat\"\n#event stuff \"|${Me.Name}| is cool\"\n\nsub main\n   /echo starting ${Macro.Name}\n   :loop\n      /delay 1s\n      /doevents\n   /goto :loop\n/return\n\nsub event_stuff(Line, word1, word2, word3, word4)\n   /echo ${word1}, ${word2}\n/return\n</code></pre>"},{"location":"reference/macro-directives/event/#triggering-your-sub-event_stuff","title":"Triggering your sub event_stuff","text":"<p>This code will watch EQ chat for an exact message of \"Ant Bat Cat Dog Emu\" when /doevents is called it will trigger the sub event_stuff.</p> <p>/doevents will process all your events since the last time it was done If the event happened 5 times since the last /doevents then it will execute your sub 5 times</p> <p>It needs to be exact, nothing in front or behind of your string. If you received a tell it would not trigger as there are ' '.</p>"},{"location":"reference/macro-directives/event/#multiple-events-calling-same-sub","title":"Multiple events calling same sub","text":"<p>You can have multiple triggers if you use the same event_name with different strings it will trigger. Because everything in the example is #event stuff it will trigger the sub each time it sees it</p>"},{"location":"reference/macro-directives/event/#using-wildcard","title":"Using wildcard","text":"<p>You can use wildcards via #*#</p> <p><code>#event stuff \"Ant #*# Cat\"</code></p> <p>This would trigger with /echo Ant Bird Cat</p> <p>/echo Ant Bird Cat Dog Would not trigger because there is no wildcard after Cat</p> <p><code>#event stuff \"Ant #*# Cat #*#\"</code></p> <p>This would trigger for /echo Ant Bird Cat and /echo Ant Bird Cat Dog</p>"},{"location":"reference/macro-directives/event/#using-parsed-datatypes","title":"Using parsed datatypes","text":"<p>In the string for event_name you can use datatypes with |${DataType}|</p> <p><code>#event stuff \"|${Me.Name}| is cool\"</code></p> <p>Assuming your in game name is LamahHerder... This would call sub event_stuff if /echo LamahHerder is cool</p>"},{"location":"reference/macro-directives/event/#passing-a-variable","title":"Passing a variable","text":"<p>In the string for event_name you can use #int# to pass a variable to the event_name sub</p> <pre><code>#event stuff \"Quick #1# this #2#\"\n\nsub event_stuff(Line, word1, word2, word3, word4)\n   /echo ${word1}, ${word2}\n/return\n</code></pre> <p>For /echo Quick burn this ${Target}</p> <p>This would have ${word1}=burn and ${word2}=Your Target as a local string variable in sub event_stuff</p>"},{"location":"reference/macro-directives/event/#example-macro-with-known-hit-messages","title":"Example Macro with Known Hit Messages","text":"<ul> <li>http://www.macroquest2.com/phpBB3/viewtopic.php?f=47&amp;t=20198&amp;p=173345#p173345</li> </ul> <pre><code>| hitsmode Normal\n#Event hitSuccess         \"You backstab #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You bash #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You bite #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You claw #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You crush #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You frenzy on #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You gore #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You hit #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You kick #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You maul #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You pierce #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You punch #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You rend #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You shoot #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You slash #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You slice #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You smash #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You stab #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You sting #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You strike #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"You sweep #1# for #2# #*# of damage.\"\n\n| hitsmode Abbreviated\n#Event hitSuccess         \"backstab #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"bash #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"bite #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"claw #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"crush #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"frenzy on #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"gore #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"hit #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"kick #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"maul #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"pierce #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"punch #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"rend #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"shoot #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"slash #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"slice #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"smash #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"stab #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"sting #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"strike #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"sweep #1# for #2# #*# of damage.\"\n\n| Spells and Procs\n#Event hitSuccess         \"#1# has taken #2# damage from your #3#.\"\n#Event hitSuccess         \"#1# was hit by non-melee for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me}| hit #1# for #2# #*# of non-melee damage.\"\n\n| Pet hit's\n#Event hitSuccess         \"|${Me.Pet.CleanName}| backstabs #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| bashes #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| bites #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| claws #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| crushes #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| frenzies on #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| gores #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| hit #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| hits #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| kicks #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| mauls #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| pierces #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| punches #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| rends #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| shoots #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| slashes #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| slices #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| smashes #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| stabs #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| stings #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| strikes #1# for #2# #*# of damage.\"\n#Event hitSuccess         \"|${Me.Pet.CleanName}| sweeps #1# for #2# #*# of damage.\"\n\nSub Main\n    /echo This Macro loops and triggers an event with an /echo when you hit something!\n\n    :loop\n        /doevents\n        /delay 10\n    /goto :loop\n\n/return\n\nSub Event_hitSuccess(Line, hitTarget, hitDMG, hitType)\n    /echo [${hitTarget}] - [${hitDMG}] - [${hitType}]\n    /doevents flush\n    /delay 10\n/return\n</code></pre>"},{"location":"reference/macro-directives/include/","title":"#include","text":""},{"location":"reference/macro-directives/include/#description","title":"Description","text":"<p>#include filename</p> <p>This allows you to include the contents of another file (called a \"snippet\") within your macro, as though the contents were part of the calling macro. You can access the Subroutines of the included file using /call, just as though they were a part of the original macro.</p>"},{"location":"reference/macro-directives/include/#use","title":"Use","text":"<p>Traditionally the filename extension .inc is used to indicate that it is an include file, but you may use any extension name that you like. When you are including a file, you must make sure you type the name correctly. Include files are case-insensitive (eg. spells.inc = spellS.inc).</p>"},{"location":"reference/macro-directives/include/#example","title":"Example","text":"<pre><code>#include spell_routines.inc\nSub Main\n  /call Cast \"Complete Healing\" gem1\n/return\n</code></pre>"},{"location":"reference/macro-directives/include_optional/","title":"#include_optional","text":""},{"location":"reference/macro-directives/include_optional/#description","title":"Description","text":"<p>#include_optional filename</p> <p>This allows you to optionally include the contents of another file (called a \"snippet\") within your macro. It functions identically to include except that if the file does not exist, it will continue without error.</p>"},{"location":"reference/macro-directives/include_optional/#example","title":"Example","text":"<pre><code>#include_optional spell_routines.inc\nSub Main\n  /call Cast \"Complete Healing\" gem1\n/return\n</code></pre>"},{"location":"reference/macro-directives/macro-bind/","title":"#bind","text":""},{"location":"reference/macro-directives/macro-bind/#description","title":"Description","text":"<p>#bind Creates an ingame slash command that can be used to call the related sub routine while the macro is running Instead of sending yourself a keyword to trigger a #event you can just type /saymana and it will execute the function called \"Sub Bind_SayMana\"</p>"},{"location":"reference/macro-directives/macro-bind/#use","title":"Use","text":"<ul> <li>#bind_noparse UpdateSomething /updatesomething</li> <li>#bind SayMana /saymana</li> <li>bind gives a user a command they can use</li> <li>bind_noparse gives a user a command they can use that doesn't get parsed.</li> </ul>"},{"location":"reference/macro-directives/macro-bind/#triggers-on","title":"Triggers On","text":"<p>Binds only get triggered / parsed on certain things, such as /invoke /varset /echo /call Sub. To trick binds to be called often you can substitute your /doevents as a function like</p> <pre><code>#bind TargetClosestNPC /near\n\nSub Main\n   /call Do_Events\n/return\n\nSub Do_Events\n   /doevents\n/return\n\nSub Bind_TargetClosestNPC\n    /echo Targeting the closest NPC becuase you typed /near\n    /target ${NearestSpawn[npc]}\n/return\n</code></pre>"},{"location":"reference/macro-directives/macro-bind/#example","title":"Example","text":"<pre><code>#bind MyMana /MyMana\n\nSub Main\n /declare CurMan int outer 0\n\n :loop\n   /varset CurMan ${Me.CurrentMana}\n   /doevents\n   /delay 5\n /goto :loop\n/return\n\nSub Bind_MyMana\n  /call MyMana\n/return\n\nSub MyMana\n  /echo My Mana is ${CurMan}\n/return\n</code></pre>"},{"location":"reference/macro-directives/turbo/","title":"#turbo","text":""},{"location":"reference/macro-directives/turbo/#description","title":"Description","text":"<p>#turbo ###</p> <p>This will prevent bad macros from locking up the client by allowing you to limit the number of commands per iteration.</p>"},{"location":"reference/macro-directives/turbo/#use","title":"Use","text":"<p>The default is 10, while the maximum value is 120.</p> <p>A value of 1 will essentially disable #turbo.</p> <p>#turbo is active with the default of 10 in all macros even if you do not use #turbo in your macro. Setting #turbo to 0 will set the value to 20.</p>"},{"location":"reference/macro-directives/turbo/#example","title":"Example","text":"<pre><code>#turbo 120\n</code></pre>"},{"location":"reference/macro-directives/warning/","title":"<code>#warning</code>","text":"<p>Add it at the top of your macro, and you will get warnings if there are undeclared variables used in it.</p> <p>With <code>#warning</code> added to your macro, the macro will be issue a warning when it run in to an undefined, and pause. The warning will list the macro line number and line language, so you can go in a fix the macro.</p> <p>A common source of problems is using a variable that might not exist in an <code>if</code> statement to check if it has a value.</p> <p>Instead, you can determine if a variable is defined by using the Defined TLO.</p> <p>For example, the following is how you would check if a variable exists before being used.</p> <pre><code>/if (${Defined[SomeVariable]} {\n    /if (${SomeVariable})  {\n        /echo SomeVariable exists.\n    }\n}\n</code></pre>"},{"location":"reference/top-level-objects/","title":"Top-Level Objects","text":"<p>A \"Top-Level Object\" is any kind of object that you can start with when trying to find a property.</p> <p>TLOs are called Top-Level Objects because nothing comes before them. A TLO is not a member of any object, it is itself an accessor to objects.</p> <p>Note</p> <p>A TLO provides access to instances of datatypes.</p> <p>See Also: DataType Reference</p> <p>The data that a TLO gives you may depend on the parameters that are provided. Most TLOs don't take any parameters (like Me). However, some TLOs return different data dependent on what is provided to them. This is explained in the documentation by using the term Forms. A TLO with multiple Forms may return different datatypes depending on what is passed in.</p>"},{"location":"reference/top-level-objects/#examples","title":"Examples","text":""},{"location":"reference/top-level-objects/#me","title":"Me","text":"<p>Me is a Top Level Object that returns a character. Me has access to the members of the character datatype, but Me is not the character datatype. You will notice that the character datatype inherits the spawn datatype, which means the TLO Me will have access to both the character and spawn members.</p>"},{"location":"reference/top-level-objects/#int","title":"Int","text":"<p>The datatype named int and the Top Level Object named Int are not the same thing. </p> <p>The TLO is used to parse integer strings. the int datatype represents a numeric value.</p>"},{"location":"reference/top-level-objects/#see-also","title":"See Also","text":"<p>A Beginners Guide to TLOs and MQ2DataVars may be useful for understanding how TLOs work.</p>"},{"location":"reference/top-level-objects/#tlo-list","title":"TLO List","text":"<p>See sidebar for full list.</p>"},{"location":"reference/top-level-objects/tlo-achievement/","title":"<code>Achievement</code>","text":"<p>Provides access to achievements.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#Achievement[#|Name]","title":"achievement <code>Achievement[#|Name]</code>","text":"Look up an achievement by name or by id.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#Achievement","title":"achievementmgr <code>Achievement</code>","text":"Access the achievement manager which provides access to information about achievements","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#associated-datatypes","title":"Associated DataTypes","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#achievementmgr","title":"<code>achievementmgr</code>","text":"<p>Provides access achievements, achievement categories, and other information surrounding the achievement system.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#Achievement[#|Name]","title":"achievement <code>Achievement[#|Name]</code>","text":"Find an achievement by its ID or by its name.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#AchievementByIndex[#]","title":"achievement <code>AchievementByIndex[#]</code>","text":"Find an achievement by its index.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#AchievementCount","title":"int <code>AchievementCount</code>","text":"The number of achievements in the manager.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#Category[#|Name]","title":"achievementcat <code>Category[#|Name]</code>","text":"Find an achievement category by its id or by its name.Note: If searching by name, only top-level categories are returned from the achievement manager.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#CategoryByIndex[#]","title":"achievementcat <code>CategoryByIndex[#]</code>","text":"Find an achievement category by its index.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#CategoryCount","title":"int <code>CategoryCount</code>","text":"The number of achievement categories in the manager.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#Points","title":"int <code>Points</code>","text":"The total number of accumulated achievement points.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#CompletedAchievement","title":"int <code>CompletedAchievement</code>","text":"The number of completed achievements.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#TotalAchievement","title":"int <code>TotalAchievement</code>","text":"The number of available achievements.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#Ready","title":"bool <code>Ready</code>","text":"Indicates that the manager has loaded all achievement data and is ready to be used.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#usage","title":"Usage","text":"<p>Warning</p> <p>Looking up achievements by name may not always return the correct achievement if multiple exist with the same name. Achievement IDs should be preferred over names as they don't change and are unique.</p> Note About Achievement Indices <p>Achievements and categories can be looked up by index. This is significantly faster than looking up by id or name. However, these indices are not stable and will change from patch to patch, but they will not change during the session.</p> <p>If an achievement is being utilized in a script many times, it may be more performant to look up an achievement's index (with its .Index member) and then use that in subsequent queries.</p> <p>See Achievement Examples for some examples of using indices for looking up achievements.</p> <p>Achievement[ # ]` and Achievement.Achievement[ # ] are equivalent and are provided for consistency. The primary way to access achievement information should be via id. Achievement IDs are unique and do not change.</p> <p>To look up an achievement's ID, you can look up an achievement by name, or you can use the Achievements Inspector.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-achievement/#usage-examples","title":"Usage Examples","text":"MQScriptLua <pre><code>| Look up an achievement by name, and then print its ID.\n/echo ${Achievement[Master of Claws of Veeshan].ID}\n\n| print the completed status of achievement\n| \"Wayfarers Brotherhood Adventurer's Stone (Various 20+)\"\n/echo ${Achievement[500980300].Completed}\n</code></pre> <pre><code>-- Look up an achievement by name, and then print its ID.\nprint(mq.TLO.Achievement(\"Master of Claws of Veeshan\").ID())\n\n-- print the completed status of achievement\n-- \"Wayfarers Brotherhood Adventurer's Stone (Various 20+)\"\nprint(mq.TLO.Achievement(500980300).Completed())\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/","title":"<code>AdvLoot</code>","text":"<p>The AdvLoot TLO grants access to items in the Advanced Loot window.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#members","title":"Members","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#Filter[ItemID]","title":"itemfilterdata <code>Filter[ItemID]</code>","text":"Inspect the loot filter for a given ItemID.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#LootInProgress","title":"bool <code>LootInProgress</code>","text":"True/False if looting from AdvLoot is in progress","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#PCount","title":"int <code>PCount</code>","text":"item count from the Personal list","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#PList[Index]","title":"advlootitem <code>PList[Index]</code>","text":"Inspect the item at the specified index in the personal loot list.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#PWantCount","title":"int <code>PWantCount</code>","text":"Want count from the Personal list (AN + AG + ND + GD)","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#SCount","title":"int <code>SCount</code>","text":"Item count from the Shared list","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#SList[Index]","title":"advlootitem <code>SList[Index]</code>","text":"Inspect the item at the specified index in the shared loot list.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#SWantCount","title":"int <code>SWantCount</code>","text":"Want count from the Shared list (AN + AG + ND + GD)","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#datatype-advlootitem","title":"datatype <code>advlootitem</code>","text":"<p>Represents a discrete item being looted in an AdvLoot window.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#AlwaysGreed","title":"bool <code>AlwaysGreed</code>","text":"The Always Greed (AG) state of the item.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#AlwaysNeed","title":"bool <code>AlwaysNeed</code>","text":"The Always Need (AN) state of the item.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#AutoRoll","title":"bool <code>AutoRoll</code>","text":"The Auto Roll state (dice icon) of the item.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#Corpse","title":"spawn <code>Corpse</code>","text":"The spawn representing the corpse that is being looted, if available.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#FreeGrab","title":"bool <code>FreeGrab</code>","text":"Indicates that the item is free grab.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#Greed","title":"bool <code>Greed</code>","text":"The Greed (GD) state of the item.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#IconID","title":"int <code>IconID</code>","text":"The ID of the icon for the item.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#ID","title":"int64 <code>ID</code>","text":"The ID of the item.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#Index","title":"int <code>Index</code>","text":"The positional index of the item.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#Name","title":"string <code>Name</code>","text":"The name of the item.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#Need","title":"bool <code>Need</code>","text":"The Need (ND) state of the item.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#Never","title":"bool <code>Never</code>","text":"The Never (NV) state of the item.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#No","title":"bool <code>No</code>","text":"The No state of the item.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#NoDrop","title":"bool <code>NoDrop</code>","text":"Indicates if the item is NO DROP.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#StackSize","title":"int <code>StackSize</code>","text":"The size of the stack of items being looted.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#string-to-string","title":"string <code>To String</code>","text":"Same as Name","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#datatype-itemfilterdata","title":"datatype <code>itemfilterdata</code>","text":"<p>A collection of settings that together describe the loot filter for an item.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#AutoRoll","title":"bool <code>AutoRoll</code>","text":"The Auto Roll state (dice icon).","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#Greed","title":"bool <code>Greed</code>","text":"The Greed (GD) state.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#IconID","title":"int <code>IconID</code>","text":"The ID of the icon.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#ID","title":"int <code>ID</code>","text":"The ID of the item.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#Name","title":"string <code>Name</code>","text":"The Name of the item.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#Need","title":"bool <code>Need</code>","text":"The Need (ND) state.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#Never","title":"bool <code>Never</code>","text":"The Never (NV) state.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#Types","title":"int <code>Types</code>","text":"Bit field representing all the loot filter flags for this item.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#string-to-string_1","title":"string <code>To String</code>","text":"Same as Name","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-advloot/#usage","title":"Usage","text":"MQScriptLua <pre><code>| Echo the name of the first item in the personal loot list\n/echo ${AdvLoot.PList[1].Name}\n\n| Echo the number of items in the personal loot list.\n/echo There are ${AdvLoot.PCount} items in the personal loot list\n\n| Echo the stack size of the first item in the personal loot list.\n/echo The item in index 1 has a StackSize of ${AdvLoot.PList[1].StackSize}\n\n| If the first item in the shared loot list is marked as Need, then echo.\n/if (${AdvLoot.SList[1].Need}==TRUE) /echo I need that item!\n\n| Echo the NO DROP status of the first item in the personal loot list: TRUE or FALSE.\n/echo ${AdvLoot.PList[1].NoDrop}\n\n| Wait 10 seconds, or until AdvLoot is no longer in the process of looting.\n/delay 10s !${AdvLoot.LootInProgress}\n\n| Give the first item in the shared loot list to myself.\n/if (!${AdvLoot.LootInProgress}) {\n    /echo Its safe to loot!\n    /if (${AdvLoot.SCount}&gt;=1) {\n        /echo I am going to give 1 ${AdvLoot.SList[1].Name} to myself\n        /advloot shared 1 giveto ${Me.Name} 1\n    }\n} else {\n    /echo Do something else, loot is already in progress...\n}\n</code></pre> <pre><code>-- Print the name of the first item in the personal loot list\nprint(mq.TLO.AdvLoot.PList(1).Name())\n\n-- Print the number of items in the personal loot list\nprint('There are ', mq.TLO.AdvLoot.PCount(), ' items in the personal loot list')\n\n-- Print the stack size of the first item in the personal loot list.\nprint('The item in index 1 has a StackSize of ', mq.TLO.AdvLoot.PList(1).StackSize()))\n\n-- If the first item in the shared loot list is marked as Need, then print a message.\nif mq.TLO.AdvLoot.SList(1).Need() then\n    print('I need that item!')\nend\n\n-- Print the NO DROP status of the first item in the personal loot list.\nprint(mq.TLO.AdvLoot.PList(1).NoDrop())\n\n-- Wait 10 seconds, or until AdvLoot is no longer in the process of looting.\nmq.delay('10s', function() return not mq.TLO.AdvLoot.LootInProgress() end)\n\n-- Give the first item in the shared loot list to myself.\nif not mq.TLO.AdvLoot.LootInProgress() then\n    print('Its safe to loot!')\n    if mq.TLO.AdvLoot.SCount() &gt;= 1 then\n        print('I am going to give 1 ', mq.TLO.AdvLoot.SList(1).Name(), ' to myself')\n        mq.cmdf('/advloot shared 1 giveto %s 1', mq.TLO.Me.Name())\n    end\nelse\n    print('Do something else, loot is already in progress...')\nend\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/","title":"<code>Alert</code>","text":"<p>Provides access to spawn search filter criteria in alerts. Alerts are created using /alert.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#Alert[ID]","title":"alert <code>Alert[ID]</code>","text":"Retrieve information for the alert category by its id <p>| string | Alert | Returns pipe <code>|</code> separated list of alert ids |</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#datatype-alert","title":"datatype <code>alert</code>","text":"<p>Provides access to the values of an alert.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#List[Index]","title":"alertlist <code>List[Index]</code>","text":"Get the item from the list at the specified index","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#Size","title":"int <code>Size</code>","text":"Get the number of alerts","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#string-to-string","title":"string <code>To String</code>","text":"Returns Size as a string.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#datatype-alertlist","title":"datatype <code>alertlist</code>","text":"<p>Provides access to the properties of a spawn search associated with an alert. For a spawn to be entered into an alert it must match all the criteria specified by the alert list.</p> <p>See Also: Spawn Search.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#AlertList","title":"int <code>AlertList</code>","text":"Any spawn on the associated alert list","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bAlert","title":"bool <code>bAlert</code>","text":"Indicates usage of alert filter","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bAura","title":"bool <code>bAura</code>","text":"Any aur.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bBanker","title":"bool <code>bBanker</code>","text":"Any banker","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bBanner","title":"bool <code>bBanner</code>","text":"Any banner","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bCampfire","title":"bool <code>bCampfire</code>","text":"Any campfire","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bDps","title":"bool <code>bDps</code>","text":"Any player that is a DPS class","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bExactName","title":"bool <code>bExactName</code>","text":"Name match requiries an exact match","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bFellowship","title":"bool <code>bFellowship</code>","text":"Any member of the fellowship","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bGM","title":"bool <code>bGM</code>","text":"Any player flagged as a GM","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bGroup","title":"bool <code>bGroup</code>","text":"Any member of the group","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bHealer","title":"bool <code>bHealer</code>","text":"Any player that is a healer class","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bKnight","title":"bool <code>bKnight</code>","text":"Any player that is a knight","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bKnownLocation","title":"bool <code>bKnownLocation</code>","text":"Indicates usage of a loc filter","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bLFG","title":"bool <code>bLFG</code>","text":"Any player that is flagged as LFG","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bLight","title":"bool <code>bLight</code>","text":"Indicates usage of a light filter","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bLoS","title":"bool <code>bLoS</code>","text":"Any spawn in line of sight","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bMerchant","title":"bool <code>bMerchant</code>","text":"Any merchant","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bNamed","title":"bool <code>bNamed</code>","text":"Any \"named\" NPC","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bNearAlert","title":"bool <code>bNearAlert</code>","text":"Indicates usage of nearalert filter","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bNoAlert","title":"bool <code>bNoAlert</code>","text":"Indicates usage of noalert filter","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bNoGroup","title":"bool <code>bNoGroup</code>","text":"Exclude any player that is in the group","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bNoGuild","title":"bool <code>bNoGuild</code>","text":"Exclude any player that is in the guild","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bNoPet","title":"bool <code>bNoPet</code>","text":"Exclude any spawn that is a pet","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bNotNearAlert","title":"bool <code>bNotNearAlert</code>","text":"Indicates usage of notnearalert filter","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#BodyType","title":"string <code>BodyType</code>","text":"Any spawn with given body type","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bRaid","title":"bool <code>bRaid</code>","text":"Any member of the raid","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bSlower","title":"bool <code>bSlower</code>","text":"Any player that is a slower","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bSpawnID","title":"bool <code>bSpawnID</code>","text":"Indicates usage of the id filter","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bTank","title":"bool <code>bTank</code>","text":"Any player that is a tank class","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bTargetable","title":"bool <code>bTargetable</code>","text":"Any spawn that is targetable","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bTargNext","title":"bool <code>bTargNext</code>","text":"Indicates usage of the next filter","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bTargPrev","title":"bool <code>bTargPrev</code>","text":"Indicates usage of the prev filter","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bTrader","title":"bool <code>bTrader</code>","text":"Any player that is a trader","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#bTributeMaster","title":"bool <code>bTributeMaster</code>","text":"Any NPC that is a tribute master","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#Class","title":"string <code>Class</code>","text":"Any spawn that is the given class","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#FRadius","title":"double <code>FRadius</code>","text":"Any spawn that is given distance from the given loc filter","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#FromSpawnID","title":"int <code>FromSpawnID</code>","text":"Search starts at given spawn id","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#GuildID","title":"int64 <code>GuildID</code>","text":"Any member of the guild with the given id","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#Light","title":"string <code>Light</code>","text":"Any spawn that is equipped with the given light source","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#MaxLevel","title":"int <code>MaxLevel</code>","text":"Any spawn that is at this level or lower","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#MinLevel","title":"int <code>MinLevel</code>","text":"Any spawn that is at this level or greater","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#Name","title":"string <code>Name</code>","text":"Any spawn with the given name","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#NearAlertList","title":"int <code>NearAlertList</code>","text":"Any spawn near the given alert list","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#NoAlertList","title":"int <code>NoAlertList</code>","text":"Excludes any spawn in the given alert list","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#NotID","title":"int <code>NotID</code>","text":"Excludes any spawn with the given id","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#NotNearAlertList","title":"int <code>NotNearAlertList</code>","text":"Excludes any spawn near the given alert list","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#PlayerState","title":"int <code>PlayerState</code>","text":"Any spawn with the given state","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#Race","title":"string <code>Race</code>","text":"Any spawn with the given race","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#Radius","title":"float <code>Radius</code>","text":"Excludes the spawn if any player is within this distance (nopcnear filter)","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#SortBy","title":"int <code>SortBy</code>","text":"Indicates the sort order of the filter","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#Spawn","title":"spawn <code>Spawn</code>","text":"If an ID or Name is part of the filter, attempts to return a spawn with the matching ID or Name","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#SpawnID","title":"int <code>SpawnID</code>","text":"Any spawn with the given Spawn ID","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#SpawnType","title":"int <code>SpawnType</code>","text":"Any spawn with the given type","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#xLoc","title":"float <code>xLoc</code>","text":"<code>x</code> component of the loc filter","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#yLoc","title":"float <code>yLoc</code>","text":"<code>y</code> component of the loc filter","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#ZRadius","title":"double <code>ZRadius</code>","text":"<code>z</code> distance component of the loc filter","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alert/#usage","title":"Usage","text":"MQScriptLua <pre><code>| Add an alert entry for Fippy to Alert list 1\n/alert add 1 Fippy\n\n| Will output 'Fippy'\n/echo ${Alert[1].List[0].Name}\n\n| Add an alert entry using our Spawn ID\n/alert add 1 id ${Me.ID}\n\n| Will output your Spawn ID\n/echo ${Alert[1].List[1].SpawnID}\n\n| Will output the number of alerts in list 1\n/echo ${Alert[1].Size}\n</code></pre> <pre><code>-- Add an alert entry for Fippy to Alert list 1\nmq.cmd('/alert add 1 Fippy')\n\n-- Will output 'Fippy'\nprint(mq.TLO.Alert(1).List(0).Name())\n\n-- Add an alert entry using our Spawn ID\nmq.cmdf('/alert add 1 id %d', mq.TLO.Me.ID())\n\n-- Will output our Spawn ID\nprint(mq.TLO.Alert(1).List(1).SpawnID())\n\n-- Will output the number of alerts in list 1\nprint(mq.TLO.Alert(1).Size())\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alias/","title":"<code>Alias</code>","text":"<p>Provides a way to query whether a given alias exists. See /alias.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alias/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alias/#Alias[Name]","title":"bool <code>Alias[Name]</code>","text":"Returns bool indicating if named aliase exists","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-alias/#usage","title":"Usage","text":"MQScriptLua <pre><code>| prints TRUE if the /yes alias exists\n/echo ${Alias[/yes]}\n</code></pre> <pre><code>-- prints true if the /yes alias exists\nprint(mq.TLO.Alias('/yes')())\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-altability/","title":"<code>AltAbility</code>","text":"<p>Danger</p> <p>This AltAbility TLO is for accessing the full database of alternate abilities.</p> <p>If you want to access alternate abilities associated with your character, use <code>Me.AltAbility</code> instead.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-altability/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-altability/#AltAbility[Number]","title":"altability <code>AltAbility[Number]</code>","text":"Look up an AltAbility by its altability id.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-altability/#AltAbility[Name]","title":"altability <code>AltAbility[Name]</code>","text":"Look up an AltAbility by its name.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-altability/#usage","title":"Usage","text":"MQScriptLua <pre><code>| Prints the pre-requisite AA ability needed to train Combat Stability\n/echo ${AltAbility[Combat Stability].RequiresAbility}\n</code></pre> <pre><code>-- Prints the pre-requisite AA ability needed to train Combat Stability\nprint(mq.TLO.AltAbility('Combat Stability').RequiresAbility())\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-bool/","title":"<code>Bool</code>","text":"<p>Creates a bool object from a string. The resulting value is a bool depending on whether the given string is falsey or not.</p> <p>\"Falsey\" is defined as any of the following values:</p> <ul> <li>Empty String</li> <li>FALSE</li> <li>NULL</li> <li>The string \"0\"</li> </ul> <p>If the string is one of these values, the resulting bool is <code>false</code>. Otherwise, it is <code>true</code>.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-bool/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-bool/#Bool[Text]","title":"bool <code>Bool[Text]</code>","text":"Converts the given Text to a bool based on the rules presented above.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-bool/#usage","title":"Usage","text":"MQScriptLua <pre><code>/declare MyVar bool\n/varset MyVar ${Bool[This is true]}\n\n| prints TRUE\n/echo ${MyVar}\n\n/varset MyVar ${Bool[NULL]}\n\n| prints FALSE\n/echo ${MyVar}\n</code></pre> <pre><code>local myVar\n\n-- prints true\nmyVar = mq.TLO.Bool('This is true')()\nprint(myVar)\n\n-- prints false\nmyVar = mq.TLO.Bool('NULL')()\nprint(myVar)\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-corpse/","title":"<code>Corpse</code>","text":"<p>Access to objects of type corpse, which is the currently active corpse (ie. the one you are looting).</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-corpse/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-corpse/#Corpse","title":"corpse <code>Corpse</code>","text":"Corpse you are looting.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-corpse/#usage","title":"Usage","text":"<pre><code>/if (${Corpse.Open}) {\n    /echo Corpse is open, proceeding with looting\n}\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-cursor/","title":"<code>Cursor</code>","text":"<p>Creates an object which references the item on your cursor.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-cursor/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-cursor/#Cursor","title":"item <code>Cursor</code>","text":"Access the item on the cursor","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-cursor/#usage","title":"Usage","text":"<p>Example</p> <p>If something is on your cursor, auto-inventory it.</p> <pre><code>/if (${Cursor.ID}) /autoinventory\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-defined/","title":"<code>Defined</code>","text":"<p>Determines whether a variable, array, or timer with this name exists. The variable, array or timer must not be enclosed with ${}.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-defined/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-defined/#Defined[Name]","title":"bool <code>Defined[Name]</code>","text":"Returns true if the given variable name is defined.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-defined/#usage","title":"Usage","text":"<pre><code>/if (${Defined[varname]}) {\n    /echo ${varname}\n}\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-displayitem/","title":"<code>DisplayItem</code>","text":"<p>This TLO gives you access to all the information in the Item Display window.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-displayitem/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-displayitem/#DisplayItem","title":"item <code>DisplayItem</code>","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-doortarget/","title":"<code>DoorTarget</code>","text":"<p>Object used to return information on your doortarget.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-doortarget/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-doortarget/#DoorTarget","title":"switch <code>DoorTarget</code>","text":"Returns the currently targeted door/switch","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-doortarget/#usage","title":"Usage","text":"<pre><code>/echo ${DoorTarget.ID}\n</code></pre> <p>Returns the ID of your door target.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-dynamiczone/","title":"<code>DynamicZone</code>","text":"<p>Provides access to properties of the current dynamic (instanced) zone.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-dynamiczone/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-dynamiczone/#DynamicZone","title":"dynamiczone <code>DynamicZone</code>","text":"Gives access to the information about the current dynamic zone.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-dynamiczone/#usage","title":"Usage","text":"<p>Example</p> <p>Echo the name of the dynamic zone</p> <pre><code>/echo ${DynamicZone.Name}\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-everquest/","title":"<code>EverQuest</code>","text":"<p>Provides access to general information about the game and its state.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-everquest/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-everquest/#everquest","title":"everquest <code>everquest</code>","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-everquest/#usage","title":"Usage","text":"<p>See EverQuest for examples.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-familiar/","title":"<code>Familiar</code>","text":"<p>Used to get information about items on your familiars keyring.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-familiar/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-familiar/#Familiar","title":"keyring <code>Familiar</code>","text":"Access to the familiar keyring.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-familiar/#Familiar[N]","title":"keyringitem <code>Familiar[N]</code>","text":"Retrieves the item in your familiar keyring by index.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-familiar/#Familiar[Name]","title":"keyringitem <code>Familiar[Name]</code>","text":"Retrieve the item in your familiar keyring by name. A <code>=</code> can be prepended for an exact match.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-familiar/#examples","title":"Examples","text":"<p>See Also: keyring and keyringitem</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-finditem/","title":"<code>FindItem</code>","text":"<p>A TLO used to find an item on your character, corpse, or a merchant by partial or exact name match. See examples below.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-finditem/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-finditem/#FindItem[name|id]","title":"item <code>FindItem[name|id]</code>","text":"<p>Search for an item using the given item id, or partial name match. Will search character inventory and any items stored in key rings (illusion, mount, etc).</p> Example <p>Looks for an item with the name swirling in it, and prints the ID.</p> MQScriptLua <pre><code>/echo ${FindItem[swirling].ID}\n</code></pre> <pre><code>print(mq.TLO.FindItem(\"swirling\").ID())\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-finditem/#item-finditemname","title":"item <code>FindItem[=name]</code>","text":"<p>Search for an item using exact name match (case insensitive). Will search character inventory and any items stored in key rings (illusion, mount, etc).</p> Example <p>Looks for the Cleric Epic (by exact match) and prints its ID.</p> MQScriptLua <pre><code>/echo ${FindItem[=Water Sprinkler of Nem Ankh].ID}\n</code></pre> <pre><code>print(mq.TLO.FindItem(\"=Water Sprinkler of Nem Ankh\").ID())\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-finditembank/","title":"<code>FindItemBank</code>","text":"<p>A TLO used to find an item in your bank by partial or exact name match. See examples below.</p> <p>Of note: The FindItemBank with ItemSlot REQUIRES that bank item containers be open to function correctly. Due to potential exploits the command will not work if the bank containers are closed. This is in contrast to FindItem functionality with character containers, where ItemSlot was designed to allow inventory management without opening containers.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-finditembank/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-finditembank/#FindItemBank[name|id]","title":"item <code>FindItemBank[name|id]</code>","text":"<p>Search for an item in your bank using the given item id, or partial name match.</p> Example <p>Looks for an item in your bank with the name swirling in it, and prints the ID.</p> MQScriptLua <pre><code>/echo ${FindItemBank[swirling].ID}\n</code></pre> <pre><code>print(mq.TLO.FindItemBank(\"swirling\").ID())\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-finditembank/#item-finditembankname","title":"item <code>FindItemBank[=name]</code>","text":"<p>Search for an item in your bank using exact name match (case insensitive).</p> Example <p>Looks for the Cleric Epic (by exact match) in your bank and prints its ID.</p> MQScriptLua <pre><code>/echo ${FindItemBank[=Water Sprinkler of Nem Ankh].ID}\n</code></pre> <pre><code>print(mq.TLO.FindItemBank(\"=Water Sprinkler of Nem Ankh\").ID())\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-finditembankcount/","title":"<code>FindItemBankCount</code>","text":"<p>A TLO used to find a count of items in your bank by partial or exact name match. See examples below.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-finditembankcount/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-finditembankcount/#FindItemBankCount[name|id]","title":"int <code>FindItemBankCount[name|id]</code>","text":"<p>Counts the items in your bank using the given item id, or partial name match.</p> Example <p>Echos the number of items in your bank with the name swirling in it.</p> MQScriptLua <pre><code>/echo ${FindItemBankCount[swirling]}\n</code></pre> <pre><code>print(mq.TLO.FindItemBankCount(\"swirling\"))\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-finditembankcount/#int-finditembankcountname","title":"int <code>FindItemBankCount[=name]</code>","text":"<p>Counts the items in your bank using exact name match (case insensitive).</p> Example <p>Echoes the number of Swirling Shadows you have in your bank.</p> MQScriptLua <pre><code>/echo ${FindItemBankCount[=Swirling Shadows]}\n</code></pre> <pre><code>print(mq.TLO.FindItemBankCount(\"=Swirling Shadows\"))\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-finditemcount/","title":"<code>FindItemCount</code>","text":"<p>A TLO used to find a count of items on your character, corpse, or a merchant by partial or exact name match. See examples below.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-finditemcount/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-finditemcount/#FindItemCount[name|id]","title":"int <code>FindItemCount[name|id]</code>","text":"<p>Counts the items using the given item id, or partial name match. Will search character inventory and any items stored in key rings (illusion, mount, etc).</p> Example <p>Echos the number of items in your inventory with the name swirling in it.</p> MQScriptLua <pre><code>/echo ${FindItemCount[swirling]}\n</code></pre> <pre><code>print(mq.TLO.FindItemCount(\"swirling\"))\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-finditemcount/#int-finditemcountname","title":"int <code>FindItemCount[=name]</code>","text":"<p>Counts the items using exact name match (case insensitive). Will search character inventory and any items stored in key rings (illusion, mount, etc).</p> Example <p>Echoes the number of Water Flasks you have in your inventory.</p> MQScriptLua <pre><code>/echo ${FindItemCount[=Water Flask]}\n</code></pre> <pre><code>print(mq.TLO.FindItemCount(\"=Water Flask\"))\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-float/","title":"<code>Float</code>","text":"<p>Creates a float object from n.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-float/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-float/#Float[n]","title":"float <code>Float[n]</code>","text":"Returns a float with value n.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-float/#usage","title":"Usage","text":"<pre><code>/echo ${Float[12.345].Deci}\n</code></pre> <p>Creates a float object of 12.345 and truncates the decimal to one decimal place.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-framelimiter/","title":"<code>FrameLimiter</code>","text":"<p>The FrameLimiter TLO provides access to the frame limiter feature.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-framelimiter/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-framelimiter/#FrameLimiter","title":"framelimiter <code>FrameLimiter</code>","text":"The frame limiter object","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-framelimiter/#datatype-framelimiter","title":"datatype <code>framelimiter</code>","text":"<p>Represents the state of the frame limiter</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-framelimiter/#BackgroundFPS","title":"float <code>BackgroundFPS</code>","text":"Value of the target background fps setting.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-framelimiter/#ClearScreen","title":"bool <code>ClearScreen</code>","text":"Value of the clear screen when not rendering setting.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-framelimiter/#CPU","title":"float <code>CPU</code>","text":"Current CPU usage as %","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-framelimiter/#Enabled","title":"bool <code>Enabled</code>","text":"TRUE if the frame limiter feature is currently active.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-framelimiter/#ForegroundFPS","title":"float <code>ForegroundFPS</code>","text":"Value of the target foreground fps setting.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-framelimiter/#MinSimulationFPS","title":"float <code>MinSimulationFPS</code>","text":"Value of the minimum simualtion rate setting.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-framelimiter/#RenderFPS","title":"float <code>RenderFPS</code>","text":"Current graphics scene frame rate (visible fps).","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-framelimiter/#SaveByChar","title":"bool <code>SaveByChar</code>","text":"TRUE if settings for the frame limiter are being saved by character.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-framelimiter/#SimulationFPS","title":"float <code>SimulationFPS</code>","text":"Current simulation frame rate (game updates per second).","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-framelimiter/#Status","title":"string <code>Status</code>","text":"Either \"Foreground\" or \"Background\".","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-framelimiter/#usage","title":"Usage","text":"<p>Indicates that the frame limiter is enabled:</p> <pre><code>/echo ${FrameLimiter.Enabled}\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-friends/","title":"<code>Friends</code>","text":"<p>Grants access to your friends dlist.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-friends/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-friends/#Friends","title":"friends <code>Friends</code>","text":"Access friends data","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-friends/#datatype-friends","title":"datatype <code>friends</code>","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-friends/#Friend[name]","title":"bool <code>Friend[name]</code>","text":"Returns TRUE if name is on your friend list","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-friends/#Friend[#]","title":"string <code>Friend[#]</code>","text":"Returns the name of friend list member #","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-friends/#string-to-string","title":"string <code>To String</code>","text":"Number of friends on your friends list","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-friends/#usage","title":"Usage","text":"<p>Example</p> MQScriptLua <pre><code>| Echo the number of friends that you have\n/echo ${Friends}\n\n| Echo the name of your first friend\n/echo ${Friends.Friend[1]}\n</code></pre> <pre><code>-- Echo the number of friends that you have\nprint(mq.TLO.Friends())\n\n-- Echo the name of your firsrt friend\nprint(mq.TLO.Friends.Friend(1)())\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-gametime/","title":"<code>GameTime</code>","text":"<p>A time object indicating EQ Game Time.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-gametime/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-gametime/#GameTime","title":"time <code>GameTime</code>","text":"Access the current in-game time","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-gametime/#usage","title":"Usage","text":"<pre><code>/echo ${GameTime.Date}\n</code></pre> <p>Echos todays in-game date to the chat window.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-ground/","title":"<code>Ground</code>","text":"<p>Object which references the ground spawn item you have targeted.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-ground/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-ground/#Ground","title":"ground <code>Ground</code>","text":"Access currently targeted ground item.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-ground/#usage","title":"Usage","text":"<pre><code>/echo ${Ground.Distance}\n</code></pre> <p>Echos the distance to the ground item you have targeted.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-grounditemcount/","title":"<code>GroundItemCount</code>","text":"<p>Access to all Groundspawn item count information.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-grounditemcount/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-grounditemcount/#GroundItemCount","title":"int <code>GroundItemCount</code>","text":"Retrieve the count of items on the ground","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-grounditemcount/#usage","title":"Usage","text":"<pre><code>/echo There are ${GroundItemCount[apple]} Apples on the ground\n</code></pre> <p>Output: There are 5 Apples on the ground</p> <pre><code>/echo There are ${GroundItemCount} items on the ground in this zone.\n</code></pre> <p>Output: There are 12 items on the ground in this zone.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-group/","title":"<code>Group</code>","text":"<p>Access to all group-related information.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-group/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-group/#Group","title":"group <code>Group</code>","text":"Retrieve information about your group","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-group/#usage","title":"Usage","text":"<pre><code>/echo ${Group.Leader.ID}\n</code></pre> <p>Echo Groupleader ID, if any.</p> <pre><code>/echo ${Group.Member[0]}\n</code></pre> <p>Echos your own name</p> <pre><code>`/echo ${Group.Member[1]}\n</code></pre> <p>Echos the next person on the list, after yourself.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-heading/","title":"<code>Heading</code>","text":"<p>Object that refers to the directional heading to of a location or direction.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-heading/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-heading/#Heading[#]","title":"heading <code>Heading[#]</code>","text":"Creates a heading object using degrees (clockwise)","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-heading/#Heading[y,x]","title":"heading <code>Heading[y,x]</code>","text":"Creates a heading object using the heading to this y,x location","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-heading/#Heading[N,W]","title":"heading <code>Heading[N,W]</code>","text":"Same as above, just an alternate method","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-heading/#usage","title":"Usage","text":"<pre><code>/echo ${Heading[15].ShortName}\n</code></pre> <p>Echos the shortname of the heading of 15 degrees.</p> <pre><code>/echo ${Heading[-342,700].ShortName}\n</code></pre> <p>Echos the shortname heading to the location -342,700</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-if/","title":"<code>If</code>","text":"<p>Warning</p> <p>The <code>If</code> TLO is used to provide inline condition expressions for macros. It is not intended for use with Lua.</p> <p>Executes an inline condiition, similar to a ternary expression in other languages.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-if/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-if/#If","title":"string <code>If[conditions,whentrue,whenfalse]</code>","text":"<p>Performs Math.Calc on <code>conditions</code>, gives <code>whentrue</code> if non-zero, gives <code>whenfalse</code> if zero.</p> <p>Example</p> <p>If I am sitting, stand up. Otherwise, echo \"I am not sitting down\"</p> <pre><code>/docommand ${If[${Me.Sitting},/stand,/echo I am not sitting down]}\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-if/#if_alternate","title":"string <code>If[conditions~whentrue~whenfalse]</code>","text":"Alternate syntax, behaves the same as above but uses the ~ character as a separator instead of a comma.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-illusion/","title":"<code>Illusion</code>","text":"<p>Used to get information about items on your illusions keyring.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-illusion/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-illusion/#Illusion","title":"keyring <code>Illusion</code>","text":"Access to the illusion keyring.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-illusion/#Illusion[N]","title":"keyringitem <code>Illusion[N]</code>","text":"Retrieves the item in your illusion keyring by index.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-illusion/#Illusion[Name]","title":"keyringitem <code>Illusion[Name]</code>","text":"Retrieve the item in your illusion keyring by name. A <code>=</code> can be prepended for an exact match.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-illusion/#usage","title":"Usage","text":"<p>See Also: DataType:keyring and DataType:keyringitem</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-ini/","title":"<code>Ini</code>","text":"<p>Reads value(s) from an ini file located in a relative or absolute path.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-ini/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-ini/#Ini[filename,section,key,default]","title":"string <code>Ini[filename,section,key,default]</code>","text":"<p>The section, key, and default do not need to be given. If section or key are not given, multiple values are read.</p> <p>Section and key may be set to -1 to skip them and give a new value.</p> <p>If the ini is located in a directory other than the root Macros directory is located, you can use a DOS-style filepath (relative or absolute) to locate the ini. If the macro accessing the ini is in the same non-root directory, you will still to provide the (relative or absolute) filepath.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-ini/#Ini","title":"ini <code>Ini</code>","text":"When passed with no parameters to Ini[] the more robust form of the Ini TLO is used.  See below and the reference to the Key datatype for further usage.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-ini/#usage","title":"Usage","text":"<p>If sample.ini contains:</p> <pre><code>[SectionOne]\nkey1=foo\nkey2=bar\n[SectionTwo]\nkey3=foobar\n</code></pre> <pre><code>/echo ${Ini[sample.ini,SectionOne,key1]}\n</code></pre> <p>foo</p> <pre><code>/echo ${Ini[sample.ini,SectionOne]}\n</code></pre> <p>key1|key2||</p> <pre><code>/echo ${Ini[..\\sample.ini]}\n</code></pre> <p>SectionOne|SectionTwo||</p> <p>If sample.ini is in \\Macros\\iniTest folder:</p> <pre><code>/echo ${Ini[sample.ini]}\n</code></pre> <p>NULL</p> <pre><code>/echo ${Ini[iniTest\\sample.ini]}\n</code></pre> <p>SectionOne|SectionTwo||</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-ini/#ini-robust-usage","title":"<code>Ini</code> (Robust Usage)","text":"<p>The above form of Ini usage is usable or most tasks, but a more robust usage exists.  In the more robust form <code>${Ini}</code> returns  an IniType instead of a string.  This allows for dealing with duplicate keys as well as looping through a section by index.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-ini/#examples","title":"Examples","text":"<p>If sample.ini contains:</p> <pre><code>[SectionOne]\nkey1=foo\nkey=bar\nkey=foobar\n</code></pre> <pre><code>&gt; /echo ${Ini.File[sample].Section.Count}\n1\n&gt; /echo ${Ini.File[sample].Section[SectionOne].Key.Count}\n3\n&gt; /echo ${Ini.File[sample].Section[SectionOne].Key[key].Count}\n2\n&gt; /echo ${Ini.File[sample].Section[SectionOne].Key[key1].Value}\nfoo\n&gt; /echo ${Ini.File[sample].Section[SectionOne].Key[key].ValueAtIndex[2]}\nfoobar\n&gt; /echo ${Ini.File[sample].Section[SectionOne].Key.ValueAtIndex[2]}\nbar\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-int/","title":"<code>Int</code>","text":"<p>Object that creates an integer from n.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-int/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-int/#Int","title":"int <code>Int</code>","text":"Parses whatever value for n is provided and converts it into an int.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-int/#usage","title":"Usage","text":"<pre><code>/echo ${Int[123].Hex}\n</code></pre> <p>Echos the result of the conversion of 123 to an int in hexadecimal.</p> <pre><code>/echo ${Int[textstringhere]}\n</code></pre> <p>Echos a zero - useful if passing a string to a macro or subroutine that could be a text string or a number and you want to do different actions depending on what you recieve</p> <pre><code>/echo ${Int[123]}\n</code></pre> <p>Echos 123</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-inventory/","title":"<code>Inventory</code>","text":"<p>This is a hierarchical container for things relating to inventory (Bank, etc).  It is not currently fully implemented and will be added onto.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-inventory/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-inventory/#Inventory","title":"inventory <code>Inventory</code>","text":"Your inventory.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-inventory/#usage","title":"Usage","text":"<p>See the datatype link for examples</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-invslot/","title":"<code>InvSlot</code>","text":"<p>Object used to get information on a specific inventory slot.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-invslot/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-invslot/#InvSlot[N]","title":"invslot <code>InvSlot[N]</code>","text":"Inventory slot by index N.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-invslot/#InvSlot[SlotName]","title":"invslot <code>InvSlot[SlotName]</code>","text":"Inventory slot matching <code>SlotName</code>.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-invslot/#usage","title":"Usage","text":"<p>See the datatype link for examples</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-itemtarget/","title":"<code>ItemTarget</code>","text":"<p>Gives access to the ground item that is previously targeted using /itemtarget.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-itemtarget/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-itemtarget/#ItemTarget","title":"ground <code>ItemTarget</code>","text":"Returns the current ground item target.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-lastspawn/","title":"<code>LastSpawn</code>","text":"<p>Information about the spawns that have occurred since you entered the zone. When you enter a zone you dont know the spawn order of anything already there, just anything that spawns while you are in the zone.</p> <p>The useful thing about <code>${LastSpawn[-1]}</code> is just being able to get the first spawn in the list which you might use in conjunction with other spawn members to go through the entire spawn list in a loop.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-lastspawn/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-lastspawn/#LastSpawn[N]","title":"spawn <code>LastSpawn[N]</code>","text":"The nth latest spawn (chronological order)","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-lastspawn/#LastSpawn[-N]","title":"spawn <code>LastSpawn[-N]</code>","text":"The nth oldest spawn (chronological order)","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-lastspawn/#usage","title":"Usage","text":"<pre><code>/echo ${LastSpawn[10].ID}\n</code></pre> <p>Echos the spawnID of the 10<sup>th</sup> mob to spawn in the zone</p> <pre><code>/echo ${LastSpawn[-10]}\n</code></pre> <p>Echos the name of the 10<sup>th</sup> to last spawn in the zone</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-lineofsight/","title":"<code>LineOfSight</code>","text":"<p>Object that is used to check if there is Line of Sight betwen two locations.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-lineofsight/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-lineofsight/#LineOfSight[y,x,z:y,x,z]","title":"bool <code>LineOfSight[y,x,z:y,x,z]</code>","text":"Check for line-of-sight between the two specified coordinates.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-lineofsight/#usage","title":"Usage","text":"<pre><code>/echo ${LineOfSight[20,40,-20:100,-300,70]}\n</code></pre> <p>Returns TRUE if Line of Sight is clear between the two locations</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-macro/","title":"<code>Macro</code>","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-macro/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-macro/#Macro","title":"macro <code>Macro</code>","text":"<p>Returns an object related to the macro that is currently running.</p> <p>Example</p> <pre><code>/echo This macro has been running for: ${Macro.RunTime} seconds\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-macroquest/","title":"<code>MacroQuest</code>","text":"<p>Creates an object related to MacroQuest information.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-macroquest/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-macroquest/#MacroQuest","title":"macroquest <code>MacroQuest</code>","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-macroquest/#usage","title":"Usage","text":"<pre><code>/echo ${MacroQuest.LastTell}\n</code></pre> <p>Returns the name of the last person that sent you a tell.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-math/","title":"Math","text":"<p>Creates a Math object which gives allows access to the math type members.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-math/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-math/#Math","title":"math <code>Math</code>","text":"Returns the math object which is used to perform math operations.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-math/#usage","title":"Usage","text":"<pre><code>/echo ${Math.Calc[3-1]}\n</code></pre> <p>Echoes 2.00</p> <pre><code>/echo ${Math.Calc[49%6+25]}\n</code></pre> <p>Echoes the result of 49 modulo 6 + 25, or 1 + 25</p> <pre><code>/echo ${Math.Sqrt[49]}\n</code></pre> <p>Echoes the square root of 49</p> <pre><code>/echo ${Math.Rand[500]}\n</code></pre> <p>Echoes a random number between 1 and 500</p> <p>Math.Rand now takes an optional min argument so you can get a random number between 2 variables.</p> <pre><code>/echo ${Math.Rand[5,10]}\n</code></pre> <p>this would return a randum number between 5 and 10.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-me/","title":"<code>Me</code>","text":"<p>Character object which allows you to get properties of you as a character.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-me/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-me/#Me","title":"character <code>Me</code>","text":"<p>Returns the character object which provides access to information about your own character.</p> <p>${Me} is a character object, so has access to all the properties of the character type. The character type also has access to the properties of the spawn type.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-me/#usage","title":"Usage","text":"<pre><code>/echo Current Mana: ${Me.PctMana}%\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-mercenary/","title":"<code>Mercenary</code>","text":"<p>Object used to get information about your mercenary.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-mercenary/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-mercenary/#Mercenary","title":"mercenary <code>Mercenary</code>","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-mercenary/#usage","title":"Usage","text":"<pre><code>/echo ${Mercenary.Stance}\n</code></pre> <p>Displays the current stance of the mercenary based on the type (Passive, Balanced, Aggressive, etc.)</p> <pre><code>/echo ${Mercenary.State}\n</code></pre> <p>Displays whether the mercenary is suspended or not.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-merchant/","title":"<code>Merchant</code>","text":"<p>Object that interacts with the currently active merchant.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-merchant/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-merchant/#Merchant","title":"merchant <code>Merchant</code>","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-merchant/#usage","title":"Usage","text":"<pre><code>/echo ${Merchant.Name}\n</code></pre> <p>Echos the name of the currently open merchant.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-mount/","title":"<code>Mount</code>","text":"<p>Used to get information about items on your Mount keyring.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-mount/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-mount/#Mount","title":"keyring <code>Mount</code>","text":"Access to the Mount keyring.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-mount/#Mount[N]","title":"keyringitem <code>Mount[N]</code>","text":"Retrieves the item in your mount keyring by index.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-mount/#Mount[Name]","title":"keyringitem <code>Mount[Name]</code>","text":"Retrieve the item in your mount keyring by name. A <code>=</code> can be prepended for an exact match.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-nearestspawn/","title":"<code>NearestSpawn</code>","text":"<p>Object that is used in finding spawns nearest to you.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-nearestspawn/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-nearestspawn/#NearestSpawn[N]","title":"spawn <code>NearestSpawn[N]</code>","text":"The Nth nearest spawn","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-nearestspawn/#NearestSpawn[Search]","title":"spawn <code>NearestSpawn[Search]</code>","text":"The nearest spawn matching this search string (see Spawn Search).","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-nearestspawn/#NearestSpawn[N,Search]","title":"spawn <code>NearestSpawn[N,Search]</code>","text":"The Nth nearest spawn matching this search string (see Spawn Search).","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-nearestspawn/#usage","title":"Usage","text":"<pre><code>/echo ${NearestSpawn[npc radius 100 \"orc pawn\"]}\n</code></pre> <p>Finds the npc containing orc pawn in its name that is within 100 of you.</p> <pre><code>/echo ${NearestSpawn[2]}\n</code></pre> <p>Finds the closest spawn to you (<code>${NearestSpawn[1]}</code> will always match yourself).</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-pet/","title":"<code>Pet</code>","text":"<p>Pet object which allows you to get properties of your pet.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-pet/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-pet/#Pet","title":"pet <code>Pet</code>","text":"Provides access to your current Pet. The pet type extends from spawn, and as such  has access to the properties of the spawn type as well.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-pet/#usage","title":"Usage","text":"<pre><code>/echo My Pet's Stance is currently set to: ${Pet.Stance}\n</code></pre> <pre><code>/echo My Pet's Name: ${Pet.CleanName}%\n</code></pre> <pre><code>/echo My Pet's Target has gone Berserk! ${Pet.Target.IsBerserk}\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-plugin/","title":"<code>Plugin</code>","text":"<p>Object that has access to members that provide information on a plugin.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-plugin/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-plugin/#Plugin[Name]","title":"plugin <code>Plugin[Name]</code>","text":"Finds plugin by name, uses full name match, case insensitive.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-plugin/#Plugin[N]","title":"plugin <code>Plugin[N]</code>","text":"Plugin by index, starting with 1 and stopping whenever the list runs out of plugins.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-plugin/#usage","title":"Usage","text":"<p>To see if a plugin is loaded:</p> MQScriptLua <pre><code>/if (${Plugin[MQ2MoveUtils].IsLoaded}) {\n    /echo MQ2MoveUtils plugin is loaded!\n}\n</code></pre> <pre><code>if mq.TLO.Plugin('MQ2MoveUtils').IsLoaded() then\n    print('MQ2MoveUtils plugin is loaded!')\nend\n</code></pre> <p>To load a plugin if needed:</p> MQScript <pre><code>/if (!${Plugin[MQ2MoveUtils].IsLoaded}) {\n    /plugin MQ2MoveUtils noauto\n    /if (!${Plugin[MQ2MoveUtils].IsLoaded}) {\n        /echo To Use this macro you need to have MQ2MoveUtils Loaded\n        /endmacro\n    }\n}\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-raid/","title":"<code>Raid</code>","text":"<p>Object that has access to members that provide information on your raid.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-raid/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-raid/#Raid","title":"raid <code>Raid</code>","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-raid/#usage","title":"Usage","text":"<pre><code>/echo ${Raid.Members}\n</code></pre> <p>Echos the number of members in your raid</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-range/","title":"<code>Range</code>","text":"<p>Test if n is inside a range of 2 numbers or between 2 numbers</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-range/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-range/#Range","title":"range <code>Range</code>","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-select/","title":"<code>Select</code>","text":"<p>Object used to determine if a match was made to argument in the given set of values.</p> <p>Warning</p> <p>Values must be single words.  Quoted strings do not work, as the parser will drop the quotes and uses spaces as a delimiter.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-select/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-select/#Select[argument,value1[,value2,...]]","title":"int <code>Select[argument,value1[,value2,...]]</code>","text":"<p>Example</p> <p>Given:</p> <pre><code>/declare thing string outer foo\n</code></pre> <p>The following are true:</p> <pre><code>| Outputs: 1\n/echo ${Select[${thing},foo,bar,baz]}\n\n| Outputs: 2\n/echo ${Select[${thing},bin,foo,baz]}\n\n| Outputs: 3\n/echo ${Select[${thing},bin,baz,foo]}\n\n| Outputs: 0\n/echo ${Select[${thing},bin,bar,baz]}\n</code></pre> <p>Example</p> <pre><code>/if (${Select[${Target.Class.ShortName},CLR,DRU,SHM]} &gt; 0) {\n    /echo Target is a healer\n}\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-selecteditem/","title":"<code>SelectedItem</code>","text":"<p>Used to return information on the object that is selected in your own inventory while using a merchant.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-selecteditem/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-selecteditem/#SelectedItem","title":"item <code>SelectedItem</code>","text":"<p>Example</p> MQScriptLua <pre><code>/if (!${SelectedItem.ID}) {\n    /echo Nothing in your inventory is selected\n} else {\n    /echo Size of the item: ${SelectedItem.Size}\n\n    /if (${SelectedItem.Charges} &lt; 1) {\n        /echo the selected item is out of charges\n    }\n\n    /if (${SelectedItem.Name.Equal[rusty dagger]}) {\n        /echo the selected item is a rusty dagger\n    }\n}\n</code></pre> <pre><code>if mq.TLO.SelectedItem() == nil then\n    print('Nothing in your inventory is selected')\nelse\n    print('Size of the item: ', mq.TLO.SelectedItem.Size())\n\n    if mq.TLO.SelectedItem.Charges() &lt; 1 then\n        print('The selected item is out of charges')\n    end\n\n    if mq.TLO.SelectedItem.Name.Equal('rusty dagger')() then\n        print('The selected item is a rusty dagger')\n    end\nend\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-skill/","title":"<code>Skill</code>","text":"<p>Object used to get information on your character's skills.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-skill/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-skill/#Skill[name]","title":"skill <code>Skill[name]</code>","text":"Retrieve skill by name","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-skill/#Skill[N]","title":"skill <code>Skill[N]</code>","text":"Retrieve skill by number","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-skill/#usage","title":"Usage","text":"<pre><code>/echo ${Skill[1].ReuseTime}\n</code></pre> <p>Displays the reuse time of skill 1</p> <pre><code>/echo ${Skill[backstab].ID}\n</code></pre> <p>Displays the skill number of the backstab skill</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-social/","title":"<code>Social</code>","text":"<p>Access data about socials (in-game macro buttons)</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-social/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-social/#Social[Index]","title":"[social][social] <code>Social[Index]</code>","text":"<p>Look up a social by its button index.</p> <p>Each page as 12 socials, so index 13 would be the first social on the page 2. There are a total of 120 socials.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-social/#usage","title":"Usage","text":"<p>Example</p> <p>Retrieve the name of the third social on the first page</p> MQScriptLua <pre><code>/echo ${Social[3].Name}\n</code></pre> <pre><code>print(mq.TLO.Social(3).Name())\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-spawn/","title":"<code>Spawn</code>","text":"<p>Object used to get information on a specific spawn. Uses the filters under Spawn Search.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-spawn/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-spawn/#Spawn[N]","title":"spawn <code>Spawn[N]</code>","text":"Spawn matching ID N.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-spawn/#Spawn[SearchString]","title":"spawn <code>Spawn[SearchString]</code>","text":"Any spawns matching <code>SearchString</code>. See Spawn Search.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-spawn/#usage","title":"Usage","text":"<pre><code>/echo ${Spawn[1000]}\n</code></pre> <p>Displays the name of the spawn with id number 1000.</p> <pre><code>/target ${Spawn[npc radius 500 trakanon]}\n</code></pre> <p>Targets the npc with the name Trakanon only if within a radius of 500.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-spawncount/","title":"<code>SpawnCount</code>","text":"<p>Object used to count spawns based on a set of queries. Uses the filters under Spawn Search.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-spawncount/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-spawncount/#SpawnCount","title":"int <code>SpawnCount</code>","text":"Total number of spawns in current zone","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-spawncount/#SpawnCount[SearchString]","title":"int <code>SpawnCount[SearchString]</code>","text":"Total number of spawns in current zone matching the <code>SearchString</code>. See Spawn Search.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-spawncount/#usage","title":"Usage","text":"<pre><code>/echo ${SpawnCount}\n</code></pre> <p>Displays the count of all spawns.</p> <pre><code>/echo ${SpawnCount[range 45 50]}\n</code></pre> <p>Displays the count of all spawns in the level range of 45 to 50.</p> <pre><code>/echo ${SpawnCount[npc radius 100]}\n</code></pre> <p>Displays count of all NPCs within a radius of 100.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-spell/","title":"<code>Spell</code>","text":"<p>Object used to return information on a spell by name or by ID.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-spell/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-spell/#Spell","title":"spell <code>Spell</code>","text":"Find spell by ID","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-spell/#Spell[Name]","title":"spell <code>Spell[Name]</code>","text":"Find spell by name","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-spell/#usage","title":"Usage","text":"<pre><code>/echo ${Spell[Splurt].ID}\n</code></pre> <p>Will return 1620</p> <pre><code>/echo ${Spell[1620].Duration}\n</code></pre> <p>Will return 16 (ie. 16 ticks)</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-switch/","title":"<code>Switch</code>","text":"<p>Object used when you want to find information on targetted doors or switches such as the portals in PoK.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-switch/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-switch/#Switch","title":"switch <code>Switch</code>","text":"Returns the currently targeted switch","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-switch/#Switch[ID]","title":"switch <code>Switch[ID]</code>","text":"Returns a switch matching the provided numeric ID","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-switch/#Switch[Search]","title":"switch <code>Switch[Search]</code>","text":"<p>Based on the value of <code>Search</code>, return a switch:</p> <ul> <li><code>target</code>: Return the currently targeted switch</li> <li><code>nearest</code>: Return the nearest switch.</li> <li>Otherwise, return switch by searching by name</li> </ul>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-switch/#usage","title":"Usage","text":"<p><pre><code>${Switch[foo]}\n</code></pre> Access switch \"foo\"</p> <p><pre><code>${Switch[foo].Heading}\n</code></pre> Access \"foo\" switch datatype members</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-switch/#actions-on-current-doortarget","title":"Actions on current /doortarget","text":"<pre><code>/echo ${Switch.Heading}\n/echo ${Switch.Open}\n</code></pre> <p>Access the current doortarget switch datatype members directly Returns TRUE or FALSE</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-target/","title":"<code>Target</code>","text":"<p>Object used to get information about your current target.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-target/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-target/#Target","title":"target <code>Target</code>","text":"Returns the spawn object for the current target. <p>Note</p> <p>These examples are not specific to target but work on any spawn type.</p> <p>Note</p> <p>To display the target's unique name as sent by EQ use <code>${Target}</code> or <code>${Target.Name}</code></p> <p>This will return <code>a_commander01</code> on a living mob or <code>a_commander's_corpse0</code> on a dead mob.</p> <p>To display the target's clean name (also similar to %t on living mobs) use <code>${Target.CleanName}</code> or <code>${Target.DisplayName}</code></p> <p>This will return <code>a commander</code> on a living mob or <code>a commander's corpse</code> on a dead mob.</p> <p>To display the name as used by '%t' on a corpse use the <code>${Target.DisplayName}</code></p> <p>This will return <code>a commander</code> when the corpse is targetted.</p> <p>Example</p> <p>To display the spell ID of the snare debuff use ${Target.Snared.ID}</p> <pre><code>/echo ${Target.Snared.ID}\n</code></pre> <p>Example of using new Slowed target datatype</p> <pre><code>/echo ${Target.Slowed.Name} will fade in ${Target.Slowed.Duration.TotalSeconds}s\n</code></pre> <p>returns \"Tepid Deeds will fade in 114s\"</p> <p>Example of using new Mezzed target datatype</p> <pre><code>/echo ${Target} will break mezz in ${Target.Mezzed.Duration.TotalSeconds}s`\n</code></pre> <p>returns \"a_pyre_beetle48 will break mezz in 66s\"</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-task/","title":"<code>Task</code>","text":"<p>Object used to return information on a current Task.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-task/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-task/#Task","title":"task <code>Task</code>","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-task/#usage","title":"Usage","text":"<pre><code>/echo ${Task[1].Title}\n</code></pre> <p>Will return the name of the first task, or the current shared task if one exists.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-time/","title":"<code>Time</code>","text":"<p>Object used to return information on real time, not game time.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-time/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-time/#Time","title":"time <code>Time</code>","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-time/#usage","title":"Usage","text":"<pre><code>/echo ${Time.DayOfWeek}\n</code></pre> <p>Returns the day of the week</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-tradeskilldepot/","title":"<code>TradeskillDepot</code>","text":"<p>Object that interacts with the personal tradeskill depot, introduced in the Night of Shadows expansion.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-tradeskilldepot/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-tradeskilldepot/#TradeskillDepot","title":"tradeskilldepot <code>TradeskillDepot</code>","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-tradeskilldepot/#examples","title":"Examples","text":"<pre><code>/echo ${TradeskillDepot.SelectedItem}\n</code></pre> <p>Echos the name of the currently selected item in the tradeskill depot window.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-type/","title":"<code>Type</code>","text":"<p>Used to get information on data types.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-type/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-type/#Type[Name]","title":"type <code>Type[Name]</code>","text":"Retrieve metadata about the type with given <code>Name</code>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-type/#usage","title":"Usage","text":"<p>Determines if a member of a type exists:</p> <pre><code>/echo ${Type[spawn].Member[ID]}\n</code></pre> <p>Enumerate members of a type using a loop:</p> <pre><code>/for n 1 to 100\n    /echo ${Type[spawn].Member[${n}]}\n/next n\n</code></pre>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-window/","title":"<code>Window</code>","text":"<p>Used to find information on a particular UI window.</p> <p>You can display a list of window names using the /windows command or by using the window inspector.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-window/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-window/#Window[Name]","title":"window <code>Window[Name]</code>","text":"Retrieve window by searching for the first window matching <code>Name</code>.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-zone/","title":"<code>Zone</code>","text":"<p>Used to find information about a particular zone.</p>","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-zone/#forms","title":"Forms","text":"","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-zone/#Zone","title":"currentzone <code>Zone</code>","text":"Retrieves the current zone information","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-zone/#Zone[N]","title":"zone <code>Zone[N]</code>","text":"Retrieves information about a zone by zone ID. If this zone is the current zone, then this will return currentzone.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-zone/#Zone[ShortName]","title":"zone <code>Zone[ShortName]</code>","text":"Retrieves information about a zone by short name. If this zone is the current zone, then this will return currentzone.","tags":["tlo"]},{"location":"reference/top-level-objects/tlo-zone/#usage","title":"Usage","text":"<pre><code>/echo ${Zone.Type}\n</code></pre> <p>Returns an integer representing the zone you are currently in.</p> <pre><code>/echo ${Zone.Indoor}\n</code></pre> <p>Returns TRUE if you're indoors, FALSE if not.</p> <pre><code>/echo ${Zone[zonename].ID}\n</code></pre> <p>Returns the ID of zonename, even if you aren't in the zone.</p> <pre><code>/echo ${Zone[zoneid].ShortName}\n</code></pre> <p>Returns the short name of the zone with ID zoneid.</p>","tags":["tlo"]}]}